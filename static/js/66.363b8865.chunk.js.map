{"version":3,"file":"static/js/66.363b8865.chunk.js","mappings":"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","sources":["src/components/LinkPreview.tsx","src/services/notebook.ts","src/hooks/useContentList.ts","src/components/ContentList.tsx","src/components/DndSortableList.tsx","src/components/DynamicTextInput.tsx","src/components/Cell/common.ts","src/components/Cell/index.tsx","src/screens/main/NoteSection.tsx","src/hooks/useNotebookContext.tsx","src/components/ContentGroupList.tsx","src/screens/main/HomeScreen.tsx","src/screens/index.ts","src/screens/main/NoteScreen.tsx","src/hooks/useContent.ts","src/screens/main/ContentListScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking, TouchableOpacity } from \"react-native\"\r\nimport { View, Text } from \"@blacktokki/core\";\r\nimport { Link } from \"../types\"\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nexport const toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <View style={{borderRadius:6, marginVertical:10, marginHorizontal:8}}>\r\n            <TouchableOpacity\r\n                onPress={()=>Linking.openURL(link.url)}\r\n                onLongPress={()=>{}}\r\n                style={{width:'100%', flexDirection:'row'}}\r\n            >\r\n                {link.imageUrl?<Image source={{uri:link.imageUrl}} resizeMode=\"cover\" style={{ borderRadius:6, width:'100%', maxWidth:isMobile?120:160, maxHeight:isMobile?120:160, borderWidth:1}}/>:undefined}\r\n                <View style={{flex:1, marginHorizontal:20, overflow:'hidden', minHeight:isMobile?90:120}}>\r\n                    <Text style={{fontSize:18}} numberOfLines={1}>{link.title}</Text>\r\n                    <Text style={{fontSize:14}} numberOfLines={7} ellipsizeMode='head'>{link.description}</Text>\r\n                    <Text style={{fontSize:12}} numberOfLines={1}>{link.url}</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n}","import { toUrls } from '../components/LinkPreview';\r\nimport { Content, PostContent, CellType, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const postCells = async (contents:{created:(PostContent & {type:CellType})[], deleted:{parentId:number}}) => {\r\n    await axios.post(`/api/v1/content/bulk`, contents)\r\n}\r\n\r\nexport const executeCells = async (cells:({type: CellType |'OUTPUT'} & ({query:string} | {id:number}))[]) => { // TBA\r\n    return (await axios.post(`/api/v1/cell/`, cells)).data\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getContentList, patchContent, postCells, postContent } from \"../services/notebook\";\r\nimport { Content } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useContentList(parentId?:number, type?: Content['type']){\r\n  const { data } = useQuery([\"ContentList\", parentId, type] , async()=> (parentId!==undefined || type!==undefined)?await getContentList(parentId, type):undefined)\r\n  return data\r\n}\r\n\r\n\r\nexport function useContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postContent, {\r\n    onSuccess: async()=>{\r\n      await queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const update = useMutation(patchContent, {\r\n    onSuccess: async () => {\r\n      await Promise.all([\r\n        queryClient.invalidateQueries(\"ContentList\"),\r\n        queryClient.invalidateQueries(\"Content\")\r\n      ])\r\n    }\r\n  })\r\n  const _delete = useMutation(deleteContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const updateCells = useMutation(postCells, {\r\n    onSuccess: () =>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n  }, [])\r\n\r\n  return {create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutateAsync, updateCells:updateCells.mutateAsync}\r\n}","import * as React from 'react';\r\nimport { Content } from '../types';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Text, useResizeContext } from '@blacktokki/core';\r\nimport { ScrollView, TouchableOpacity, View } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\nimport useContentList from '../hooks/useContentList';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\nconst _cardPadding = (isLandscape:boolean) => isLandscape?20:4\r\nconst _cardMaxWidth = (isLandscape:boolean) => isLandscape?230:190\r\n\r\n\r\nconst CardPage = React.memo(({data}: {data:Content[]})=>{\r\n  const window  = useResizeContext()\r\n  const cardMaxWidth = _cardMaxWidth(window===\"landscape\")\r\n  const fSize = window==='landscape'?2:0\r\n\r\n  return [...data.sort((a, b)=>a.updated < b.updated?1:-1), null, null]?.map((item, index)=>{\r\n    if (item === null){\r\n      return <View key={index} style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n    }\r\n    const content = item.description\r\n    const onPress = ()=>navigate('NoteScreen', {id:item.id})\r\n    return <TouchableOpacity key={index} style={{flexBasis:window==='landscape'?'33%':'50%', padding:_cardPadding(window==='landscape'), paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n        <Card onPress={onPress} style={{aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}}>\r\n          <Card.Content>\r\n          <Text style={{fontSize:12+fSize, opacity: 0.4}}>{content}</Text>\r\n          </Card.Content>\r\n        </Card>\r\n        <View style={{flexDirection:'row', marginTop:10, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n          <Text style={{fontSize:14+fSize}}>{item.title}</Text>\r\n          <Text style={{fontSize:12+fSize, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n            \r\n        </View>\r\n    </TouchableOpacity>\r\n  })\r\n})\r\n\r\nconst ContentList = ({ parentContent } : { parentContent:Content }) => {\r\n  const data = useContentList(parentContent.id)\r\n  const window  = useResizeContext()\r\n  return data && (\r\n    <ScrollView \r\n      style={{ height:0}} \r\n      contentContainerStyle={{flexDirection:'row', justifyContent:'center'}}\r\n    >\r\n      <View style={{backgroundColor:'transparent', flexBasis:'100%', maxWidth:(_cardMaxWidth(window==='landscape') + 5)  * (window==='landscape'?5:3), flexWrap:'wrap', flexDirection:'row', paddingRight:_cardPadding(window==='landscape'), justifyContent:window==='landscape'?undefined:'center'}}>\r\n        <CardPage data={data}/>\r\n      </View>\r\n      {/* {window === 'landscape' && <View style={{backgroundColor:'transparent', flexBasis:'0%', flexGrow:1, maxWidth:240}}></View>} */}\r\n    </ScrollView>)\r\n};\r\n\r\nexport default ContentList;","import React, { useEffect, useState } from 'react';\r\nimport { Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\n// @ts-ignore\r\nimport { MaterialIcons as Icon } from 'react-native-vector-icons';\r\nimport { RenderItem, SortableListProps } from './SortableListBase';\r\n\r\n// Import platform-specific components\r\nlet DraggableFlatList: any;\r\nlet ScaleDecorator: any;\r\n\r\n// For web, import specific versions of dnd-kit components\r\n// @dnd-kit/core@3.0.3, @dnd-kit/sortable@3.0.1, @dnd-kit/utilities@2.0.0\r\nlet DndCore: any;\r\nlet DndSortable: any;\r\nlet DndUtilities: any;\r\n\r\n// Handle platform-specific imports\r\nif (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n  // For native platforms, import react-native-draggable-flatlist\r\n  const DraggableImport = {} as any; // require('react-native-draggable-flatlist');\r\n  DraggableFlatList = DraggableImport.default;\r\n  ScaleDecorator = DraggableImport.ScaleDecorator;\r\n} else {\r\n  // For web, import dnd-kit with specific versions\r\n  DndCore = require('@dnd-kit/core');\r\n  DndSortable = require('@dnd-kit/sortable');\r\n  DndUtilities = require('@dnd-kit/utilities');\r\n}\r\n\r\n// Web environment Draggable Cell Item using dnd-kit\r\nconst DraggableCellItem = <T, >({ \r\n  item, \r\n  code,\r\n  renderCellContent,\r\n}: { \r\n  item: T, \r\n  code: string,\r\n  renderCellContent: RenderItem<T>,\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = DndSortable.useSortable({ id:code });\r\n\r\n  const style = {\r\n    transform: DndUtilities.CSS.Transform.toString(transform ? {\r\n      x: transform.x,\r\n      y: transform.y,\r\n      scaleX: 1,\r\n      scaleY: 1\r\n    } : null),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    position: 'relative' as const,\r\n    flex: 1,\r\n    zIndex: isDragging ? 1 : 0\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n    >\r\n      <div \r\n        {...attributes}\r\n        {...listeners}\r\n        style={{ \r\n          cursor: 'move', \r\n          width: 40, \r\n          position: 'absolute', \r\n          height: '100%', \r\n          zIndex: 10,\r\n          left: 0,\r\n          top: 0\r\n        }}\r\n      />\r\n      {renderCellContent({item})}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Web Sortable List using dnd-kit\r\nconst SortableCellsList = <T, >({ \r\n  items, \r\n  onSortEnd, \r\n  renderCellContent,\r\n  getId\r\n}: { \r\n  items: T[], \r\n  onSortEnd: (items: T[]) => void, \r\n  renderCellContent: RenderItem<T>,\r\n  getId:(item:T)=>string,\r\n}) => {\r\n  const [codes, setCodes] = useState(items.map(v=>''+ getId(v)))\r\n  useEffect(()=>{\r\n    if (items.length !== codes.length || items.filter((v, i)=>!codes[i].startsWith(getId(v))).length>0){\r\n      setCodes((codes)=>{\r\n        return items.map((v, i)=>i<codes.length && codes[i].startsWith(getId(v))?codes[i]:''+getId(v)).slice(0, items.length)\r\n      })\r\n    }\r\n  }, [items])\r\n  const sensors = DndCore.useSensors(\r\n    DndCore.useSensor(DndCore.PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    DndCore.useSensor(DndCore.KeyboardSensor, {\r\n      coordinateGetter: DndSortable.sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const handleDragEnd = (event: any) => {\r\n    const { active, over } = event;\r\n    \r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = codes.findIndex((item) => item === active.id);\r\n      const newIndex = codes.findIndex((item) => item === over.id);\r\n      const idx = DndSortable.arrayMove(Array.from(Array(items.length).keys()), oldIndex, newIndex)\r\n      setCodes((codes)=>{\r\n        return DndSortable.arrayMove(codes, oldIndex, newIndex).map((v:string, i:number)=>i>idx[i]?'@'+v:v) \r\n      })\r\n      onSortEnd(DndSortable.arrayMove(items, oldIndex, newIndex));\r\n    }\r\n  };\r\n  return (\r\n    <DndCore.DndContext\r\n      sensors={sensors}\r\n      collisionDetection={DndCore.closestCenter}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <DndSortable.SortableContext\r\n        items={codes}\r\n        strategy={DndSortable.verticalListSortingStrategy}\r\n      >\r\n        <View style={commonStyles.cellsList}>\r\n          {items.map((item, i) => {\r\n            const code = codes[i]\r\n            return <DraggableCellItem\r\n              key={code || '' + getId(item)}\r\n              code={code}\r\n              item={item}\r\n              renderCellContent={renderCellContent}\r\n            />\r\n})}\r\n        </View>\r\n      </DndSortable.SortableContext>\r\n    </DndCore.DndContext>\r\n  );\r\n};\r\n\r\n// Choose the appropriate list component based on platform\r\nconst SortableList = <T, >({data, setData:setItems, getId, renderItem:renderContent}:SortableListProps<T>) => {\r\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n    return (\r\n      <DraggableFlatList\r\n        data={data}\r\n        onDragEnd={({ data }: { data: T[] }) => setItems(data)}\r\n        keyExtractor={(item: any) => item.id.toString()}\r\n        renderItem={({ item, drag, isActive }: any) => {\r\n          return (\r\n            <ScaleDecorator>\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <TouchableOpacity\r\n                  onLongPress={drag} \r\n                  style={{ \r\n                    width: 40,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n                </TouchableOpacity>\r\n                <View style={{ flex: 1 }}>\r\n                  {renderContent(item)}\r\n                </View>\r\n              </View>\r\n            </ScaleDecorator>\r\n          );\r\n        }}\r\n        contentContainerStyle={commonStyles.cellsList}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <SortableCellsList\r\n        items={data}\r\n        getId={getId}\r\n        onSortEnd={setItems}\r\n        renderCellContent={renderContent}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst commonStyles = StyleSheet.create({\r\n  cellsList: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 5,\r\n  }\r\n});\r\n\r\nexport default SortableList;\r\n","import React, { useState } from \"react\";\r\nimport { TextInput } from \"react-native\";\r\n\r\n// 동적 높이 TextInput 컴포넌트\r\nexport default ({\r\n    value,\r\n    onChangeText,\r\n    style,\r\n    placeholder,\r\n    autoCapitalize = 'none',\r\n    autoCorrect = false,\r\n    minHeight = 40,\r\n    maxHeight = 200,\r\n  }: {\r\n    value: string;\r\n    onChangeText: (text: string) => void;\r\n    style?: any;\r\n    placeholder?: string;\r\n    autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters';\r\n    autoCorrect?: boolean;\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n  }) => {\r\n    const [height, setHeight] = useState(minHeight);\r\n  \r\n    const handleContentSizeChange = (event: any) => {\r\n      const contentHeight = event.nativeEvent.contentSize.height;\r\n      \r\n      // 높이를 minHeight와 maxHeight 사이로 제한\r\n      const newHeight = Math.max(\r\n        minHeight, \r\n        Math.min(contentHeight, maxHeight)\r\n      );\r\n  \r\n      setHeight(newHeight);\r\n    };\r\n  \r\n    return (\r\n      <TextInput\r\n        multiline\r\n        value={value}\r\n        onChangeText={onChangeText}\r\n        onContentSizeChange={handleContentSizeChange}\r\n        style={[\r\n          style, \r\n          { \r\n            height: height,\r\n            textAlignVertical: 'top',\r\n          }\r\n        ]}\r\n        scrollEnabled={height >= maxHeight}\r\n        placeholder={placeholder}\r\n        autoCapitalize={autoCapitalize}\r\n        autoCorrect={autoCorrect}\r\n      />\r\n    );\r\n  };","import { StyleSheet } from \"react-native\";\r\nimport { CellType } from \"../../types\";\r\n\r\n// Cell execution status\r\nexport enum ExecutionStatus {\r\n    IDLE = 'idle',\r\n    RUNNING = 'running',\r\n    COMPLETED = 'completed',\r\n    ERROR = 'error',\r\n}\r\n  \r\n// Structure for a cell\r\nexport interface CellItem {\r\n  id: string;\r\n  type: CellType;\r\n  content: string;\r\n  output: string;\r\n  executionCount: number | null;\r\n  status: ExecutionStatus;\r\n}\r\n\r\nexport const typeDetail = {\r\n    'EDITOR':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'',\r\n      iconName: \"edit\",\r\n      iconSize: 18,\r\n      light:'goldenrod',\r\n      dark: 'darkgoldenrod'\r\n    },\r\n    'LINK': {\r\n      executable:true,\r\n      init:(cells:CellItem[])=>'https://',\r\n      iconName: 'link',\r\n      iconSize: 20,\r\n      light: '#4CAF50',\r\n      dark: '#2E7D32'// 어두운 녹색\r\n    },\r\n    'MARKDOWN':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'# Welcome to Jupyter Notebook in React Native\\n\\nThis is a basic implementation of Jupyter Notebook using React Native and TypeScript.',\r\n      iconName: 'text-fields',\r\n      iconSize: 20,\r\n      light: '#2196F3',\r\n      dark: '#1565C0'// 어두운 블루\r\n    }\r\n}\r\n\r\nexport const createUseStyle = <T extends StyleSheet.NamedStyles<T>, >(styles:(theme:'light'|'dark')=>(T | StyleSheet.NamedStyles<T>)) => {\r\n    const _styles = (theme:'light'|'dark') => StyleSheet.create(styles(theme))\r\n    const lightStyles = _styles('light')\r\n    const darkStyles = _styles('dark')\r\n    return (theme:'light'|'dark')=>theme==='dark'?darkStyles:lightStyles\r\n}\r\n","// App.tsx\r\nimport React, { MutableRefObject } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  TouchableOpacity,\r\n  Platform, \r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport Markdown from 'react-native-markdown-display';\r\nimport { Editor, EditorViewer } from '@blacktokki/editor';\r\nimport { Link } from '../../types';\r\nimport LinkPreview from '../LinkPreview';\r\nimport DynamicTextInput from '../DynamicTextInput';\r\nimport { CellItem, ExecutionStatus, createUseStyle, typeDetail} from './common';\r\n\r\nexport { ExecutionStatus, typeDetail } from './common';\r\nexport type { CellItem } from './common';\r\nexport default React.memo(({theme, item, isSelected, heightRef, setCells, executeCell, setSelectedCellId}:{theme:'light'|'dark', item:CellItem, isSelected:boolean, heightRef:MutableRefObject<Record<string, number>>, setCells:(func:(cells:CellItem[])=>CellItem[])=>void, executeCell:(id:string)=>void, setSelectedCellId:(id:string)=>void})=>{\r\n  const styles = useStyles(theme)\r\n  const markdownStyles = useMarkdownStyles(theme)\r\n  // Update cell content\r\n  const updateCellContent = (id: string, content: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, content } : cell\r\n      )\r\n    );\r\n  };\r\n  // Delete a cell\r\n  const deleteCell = (id: string) => {\r\n    setCells(prevCells => prevCells.filter(cell => cell.id !== id));\r\n  };\r\n  return (\r\n    <View style={[\r\n      styles.cellContainer,\r\n      item.type==='EDITOR' && {minHeight: heightRef.current[item.id]},\r\n      isSelected && styles.selectedCell,\r\n      // isDragging && styles.draggingCell\r\n    ]}\r\n    onLayout={e=>{heightRef.current[item.id]=e.nativeEvent.layout.height}}\r\n    >\r\n      {/* Cell sidebar with execution count and drag handle */}\r\n      <View style={styles.cellHandle}>\r\n        {typeDetail[item.type].executable && (\r\n          <View style={styles.executionCount}>\r\n            <Text style={styles.executionCountText}>\r\n              {item.executionCount ? `[${item.executionCount}]` : '[ ]'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n        <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n      </View>\r\n      \r\n      <View style={styles.cellContent}>\r\n        {/* Cell toolbar */}\r\n        {<View style={styles.cellToolbar}>\r\n        <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => setSelectedCellId(item.id)}\r\n          >\r\n            <Icon\r\n              name={typeDetail[item.type].iconName} \r\n              size={typeDetail[item.type].iconSize} \r\n              color=\"#2196F3\" \r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => executeCell(item.id)}\r\n            disabled={!typeDetail[item.type].executable}\r\n          >\r\n            <Icon \r\n              name=\"play-arrow\" \r\n              size={20} \r\n              color={typeDetail[item.type].executable ? \"#4CAF50\" : \"#ccc\"} \r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => deleteCell(item.id)}\r\n          >\r\n            <Icon name=\"delete\" size={20} color=\"#F44336\" />\r\n          </TouchableOpacity>\r\n        </View>}\r\n        \r\n        {/* Cell input area */}\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={() => setSelectedCellId(item.id)}\r\n          style={styles.cellInputContainer}\r\n        >\r\n          {/* EDITOR CELL */}\r\n          {<View style={{display:item.type === 'EDITOR'?'flex':'none'}}>\r\n            <EditorViewer theme={theme} value={item.content} autoResize active={!isSelected} onPress={()=>setSelectedCellId(item.id)}/>\r\n            <Editor       theme={theme} value={item.content} autoResize active={isSelected} setValue={item.type === 'EDITOR'?(text) => updateCellContent(item.id, text):()=>{}}/>\r\n          </View>}\r\n          {/* LINK CELL */}\r\n          {item.type === 'LINK' && <DynamicTextInput\r\n              style={styles.codeInput}\r\n              value={item.content}\r\n              onChangeText={(text) => updateCellContent(item.id, text)}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n          }\r\n          {/* MARKDOWN CELL */}\r\n          {item.type === \"MARKDOWN\" && (\r\n          isSelected ? (\r\n            <DynamicTextInput\r\n              style={styles.markdownInput}\r\n              value={item.content}\r\n              onChangeText={(text) => updateCellContent(item.id, text)}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n            ) : (\r\n              <Markdown style={markdownStyles}>\r\n                {item.content}\r\n              </Markdown>\r\n            )\r\n          )}\r\n        </TouchableOpacity>\r\n        {/* Output area for code cells */}\r\n        {item.status === ExecutionStatus.COMPLETED  ? <>\r\n            {typeDetail[item.type].executable && (JSON.parse(item.output) as Link[]).map((link, i)=><LinkPreview key={i} link={link} isMobile={false} />)}\r\n          </>:\r\n          item.status === ExecutionStatus.ERROR && <View style={[styles.outputContainer, styles.errorOutput]}>\r\n            <Text style={styles.outputText}>{item.output}</Text>\r\n          </View>}\r\n      </View>\r\n    </View>\r\n  );\r\n})\r\n\r\nconst Colors = {\r\n    light:{\r\n      background: '#f8f8f8',\r\n      text: '#111',\r\n      codeText: '#333',\r\n      codeBackground: '#f8f8f8',\r\n      outerBackground: '#fff',\r\n      border: '#e0e0e0',\r\n      selectedBorder: '#3F51B5',\r\n      error:  'rgba(244, 67, 54, 0.1)',\r\n      markdownHead: '#2C3E50',\r\n      markdownCode: '#f5f5f5',\r\n    },\r\n    dark:{\r\n      background:'#1E1E1E',  // 어두운 헤더 배경\r\n      text: '#E0E0E0',  // 연한 회색 텍스트\r\n      codeText: '#B0B0B0',// 회색 텍스트\r\n      codeBackground: '#2A2A2A',  // 어두운 출력 배경\r\n      outerBackground: '#121212', // 다크 모드 배경색\r\n      border: '3A3A3A',  // 어두운 구분선\r\n      selectedBorder: '#4A90E2', // 밝은 블루 선택 강조\r\n      error:  'rgba(244, 67, 54, 0.2)', // 오류 출력 배경 (반투명 레드)\r\n      markdownHead: '#A0B9D0',\r\n      markdownCode: '#1E1E1E',\r\n    }\r\n}\r\n\r\nconst useStyles = createUseStyle((theme)=>({\r\n    header: {\r\n      backgroundColor: Colors[theme].background,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      padding: 15,\r\n      ...(Platform.OS !== 'web' && { elevation: 4 }),\r\n    },\r\n    title: {\r\n      color: Colors[theme].text,\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n    },\r\n    headerButtonText: {\r\n      color: Colors[theme].codeText,\r\n      marginLeft: 5,\r\n      fontWeight: '500',\r\n    },\r\n    cellContainer: {\r\n      flexDirection: 'row',\r\n      borderTopLeftRadius: 6,\r\n      borderBottomLeftRadius: 6,\r\n      backgroundColor: Colors[theme].background,\r\n      overflow: 'hidden',\r\n      borderColor: Colors[theme].border,\r\n      padding:1,\r\n    },\r\n    selectedCell: {\r\n      borderColor: Colors[theme].selectedBorder,\r\n      borderWidth: 2,\r\n      padding:0,\r\n    },\r\n    draggingCell: {\r\n      opacity: 0.7,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    cellHandle: {\r\n      width: 40,\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      alignItems: 'center',\r\n      paddingTop: 15,\r\n    },\r\n    cellContent: {\r\n      flex: 1,\r\n      borderWidth: 1,\r\n      margin: 10,\r\n      marginVertical: 5,\r\n      borderColor: Colors[theme].border,\r\n    },\r\n    cellToolbar: {\r\n      flexDirection: 'row',\r\n      padding: 5,\r\n      paddingVertical: 0,\r\n      borderBottomColor: Colors[theme].border,\r\n    },\r\n    codeInput: {\r\n      fontFamily: 'monospace',\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    markdownInput: {\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    outputContainer: {\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      padding: 10,\r\n      borderTopWidth: 1,\r\n      borderTopColor: Colors[theme].border,\r\n    },\r\n    errorOutput: {\r\n      backgroundColor: Colors[theme].error,\r\n    },\r\n    outputText: {\r\n      fontFamily: 'monospace',\r\n      color: Colors[theme].codeText,\r\n    },\r\n    // common styles\r\n    headerButtons: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingHorizontal: 12,\r\n      paddingVertical: 6,\r\n      borderRadius: 4,\r\n    },\r\n    executionCount: {\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n    },\r\n    toolbarButton: {\r\n      padding: 5,\r\n      marginRight: 10,\r\n    },\r\n    cellInputContainer: {\r\n      //padding: 10,\r\n      padding:0,\r\n      paddingHorizontal:5,\r\n    },\r\n    executionCountText: {\r\n      color: '#888',\r\n      fontSize: 12,\r\n    },\r\n}))\r\n\r\nconst useMarkdownStyles = createUseStyle((theme)=>({\r\n    body: {\r\n      fontSize: 14,\r\n      color: Colors[theme].codeText,\r\n    },\r\n    heading1: {\r\n      fontSize: 24,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    heading2: {\r\n      fontSize: 20,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    code_inline: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 2,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n    code_block: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 10,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n}))","// App.tsx\r\nimport React, { useState, useCallback, MutableRefObject, useEffect, useRef, useMemo } from 'react';\r\nimport { \r\n  SafeAreaView, \r\n  StyleSheet, \r\n  View, \r\n  Text, \r\n  TouchableOpacity, \r\n  StyleProp,\r\n  ViewStyle,\r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { CellType } from '../../types';\r\nimport { previewScrap } from '../../services/notebook';\r\nimport SortableList from '../../components/DndSortableList';\r\nimport Cell, { CellItem, ExecutionStatus, typeDetail } from '../../components/Cell';\r\n\r\nconst execute = (type:CellType, query: string): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (type==='LINK'){\r\n        resolve(previewScrap({query}).then(v=>JSON.stringify(v)))\r\n      }\r\n      else if(type==='MARKDOWN'){\r\n        console.log(\"TEMP\")\r\n      }\r\n      else {\r\n        resolve(\"\")\r\n      }\r\n    } catch (error) {\r\n      reject(`Error: ${error}`);\r\n    }\r\n  });\r\n};\r\n\r\nconst App = (props: {cells:CellItem[], setCells:(data:CellItem[])=>void, cellRef:MutableRefObject<{executeAllCells:()=>Promise<void>}|undefined>}) => {\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const cells = props.cells\r\n  const setCells = (func:(c:CellItem[])=>CellItem[])=>props.setCells(func(cells))\r\n\r\n  const [selectedCellId, setSelectedCellId] = useState<string | null>(null);\r\n  const heightRef = useRef<Record<string, number>>({})\r\n  const nextExecutionCount = useMemo(()=>{\r\n    const counts = props.cells.map(v=>v.executionCount).filter(v=>v!==null)\r\n    return counts.length>0?counts.sort((a,b)=>b-a)[0]+1:1\r\n  }, [props.cells])\r\n  useEffect(()=>{\r\n    props.cellRef.current = {\r\n      executeAllCells: async () => {\r\n        for (const cell of cells) {\r\n          if (typeDetail[cell.type].executable) {\r\n            await executeCell(cell.id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [cells])\r\n  \r\n  // Add a new cell\r\n  const addCell = (type: CellType) => {\r\n    const newCell: CellItem = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      content: typeDetail[type].init(cells),\r\n      output: '',\r\n      executionCount: null,\r\n      status: ExecutionStatus.IDLE,\r\n    };\r\n    \r\n    setCells(prevCells => [...prevCells, newCell]);\r\n  };\r\n  \r\n  // Execute code in a cell\r\n  const executeCell = async (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id \r\n          ? { ...cell, status: ExecutionStatus.RUNNING } \r\n          : cell\r\n      )\r\n    );\r\n    \r\n    const cell = cells.find(c => c.id === id);\r\n    if (!cell || typeDetail[cell.type].executable === false) return;\r\n    \r\n    try {\r\n      const result = await execute(cell.type, cell.content);\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: result, \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.COMPLETED\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    } catch (error) {\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: String(error), \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.ERROR\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Render a single cell (shared between platform implementations)\r\n  const renderCellContent = useCallback(({item}:{item: CellItem}) => {\r\n    return <Cell\r\n      theme={theme}\r\n      item={item}\r\n      isSelected={selectedCellId === item.id}\r\n      heightRef={heightRef}\r\n      setCells={setCells} \r\n      executeCell={executeCell} \r\n      setSelectedCellId={setSelectedCellId}\r\n    />\r\n  }, [selectedCellId, cells]);\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <SortableList data={cells} setData={props.setCells} getId={v=>v.id} renderItem={renderCellContent}/>\r\n      \r\n      <View style={styles.addCellContainer}>\r\n        {Object.entries(typeDetail).map(([k, v], i)=>{\r\n          const buttonStyle:StyleProp<ViewStyle> = {\r\n            backgroundColor: v[theme]\r\n          }\r\n          return <TouchableOpacity\r\n          key={i}\r\n          style={[styles.addCellButton, buttonStyle]}\r\n          onPress={() => addCell(k as CellType)}\r\n        >\r\n          <Icon name={v.iconName} size={v.iconSize} color=\"#fff\" />\r\n          <Text style={styles.addCellButtonText}>{lang(k)}</Text>\r\n        </TouchableOpacity>\r\n        })}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  addCellContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 15,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#888',\r\n    zIndex: -1\r\n  },\r\n  addCellButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 4,\r\n    marginHorizontal: 5,\r\n  },\r\n  addCellButtonText: {\r\n    color: '#fff',\r\n    marginLeft: 5,\r\n    fontWeight: '500',\r\n  },\r\n})\r\n\r\n\r\nexport default App;","import { useAuthContext } from \"@blacktokki/account\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\ntype Opened = Record<string, {created:boolean}>\r\n\r\nconst NotebookContext = createContext<{\r\n  opened: Opened; setOpened: (func:(newOpened:Opened)=>void, created:boolean) => void;\r\n}>(\r\n  { opened: {}, setOpened:()=>{} }\r\n);\r\n\r\nexport const NotebookProvider = (props: { children: React.ReactNode; }) => {\r\n  const [complete, setComplete] = useState(false);\r\n  const [opened, setOpened] = useState<Opened>({});\r\n  const { auth } = useAuthContext()\r\n  const loadOpened = async () =>{\r\n    const v = await AsyncStorage.getItem('opened')\r\n    return (v?JSON.parse(v):{}) as Record<string, number[]>\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOpened().then((v) => {\r\n      if (auth.user){\r\n        const ids:number[] = v[`${auth.user.id}`] || []\r\n        setOpened(Object.fromEntries(ids.map(v=>[`${v}`, {created:false}])));\r\n        setComplete(true);\r\n      }\r\n    });\r\n  }, [auth]);\r\n  const _setOpened = useCallback((func:(newOpened:Opened)=>void, created:boolean)=>{\r\n    const newOpened = {...opened}\r\n    func(newOpened)\r\n    if(created){\r\n      setOpened(newOpened)\r\n    }\r\n    else if(auth.user?.id){\r\n      loadOpened().then(v=>{\r\n        if (auth.user){\r\n          v[`${auth.user.id}`] = Object.keys(newOpened).filter(v => !newOpened[v].created).map(v=>parseInt(v, 10));\r\n          AsyncStorage.setItem('opened', JSON.stringify(v)).then(()=>{\r\n            setOpened(newOpened)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }, [opened])\r\n\r\n  return complete ? (\r\n    <NotebookContext.Provider value={{ opened, setOpened:_setOpened }}>\r\n      {props.children}\r\n    </NotebookContext.Provider>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport const useOpenedContext = () => {\r\n  const { opened, setOpened } = useContext(NotebookContext);\r\n  const openedIds = Object.entries(opened).map(([k, v])=>(v.created?{created:true, parentId:parseInt(k, 10)}:{created:false, id:parseInt(k, 10)}))\r\n  const addOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      newOpenIds[`${id}`] = {created}\r\n    }, created)\r\n  }\r\n\r\n  const deleteOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      delete newOpenIds[`${id}`]\r\n    }, created)\r\n  }\r\n  \r\n  return {\r\n    openedIds,\r\n    addOpenedIds:addOpened, \r\n    deleteOpenedIds:deleteOpened\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\nimport {useOpenedContext} from '../hooks/useNotebookContext';\r\n\r\nconst ContentGroupList = ( props : {type:'NOTEV2'|'PAGE'}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useContentList(undefined, 'NOTEV2');\r\n  const pages = useContentList(undefined, props.type==='PAGE'?'PAGE':undefined);\r\n  const { openedIds } = useOpenedContext()\r\n  const data = props.type === 'NOTEV2'? notes:openedIds.map((v)=>v.created?{\r\n    parentId:v.parentId,\r\n    title:lang(\"New Page\") + `(${notes?.find(v2=>v2.id===v.parentId)?.title})`\r\n  }:{\r\n    id:v.id,\r\n    title:pages?.find(v2=>v2.id===v.id)?.title\r\n  })\r\n  const window = useResizeContext()\r\n  const itemPadding = window==='landscape'?5:8\r\n  return (\r\n    <List.Section>\r\n      <View style={{flexDirection:'row'}}>\r\n        <List.Subheader style={{flex:1}} selectable={false}>{props.type==='NOTEV2'?lang(\"Notes\"):lang(\"Open Editors\")}</List.Subheader>\r\n        {props.type==='NOTEV2' && <TouchableRipple style={{position:'absolute', right:0}} onPress={()=>navigate('ContentListScreen', {type:'NOTEV2'})}><List.Icon icon='plus' style={{margin:itemPadding}}/></TouchableRipple>}\r\n      </View>\r\n        {data && data.map(v=>\r\n          <List.Item key={v.id || v.parentId} left={(_props)=><List.Icon {..._props} icon={props.type==='NOTEV2'?\"notebook\":\"file-document\"} />} title={v.title} onPress={()=>navigate(props.type==='NOTEV2'?'ContentListScreen':'NoteScreen', v.id!==undefined?{id:v.id}:{parentId:v.parentId})} style={{padding:itemPadding }} />\r\n        )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupList;","import React, {} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupList from '../../components/ContentGroupList';\r\nimport { List } from 'react-native-paper';\r\n\r\nconst ContentTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'NOTEV2'} />\r\n      <ContentGroupList type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Contents'), component:ContentTabView, icon:<List.Icon icon={'table-of-contents'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  return <HomeSection tabViews={tabViews} title={lang('home')}>\r\n    <View style={{flexGrow:1, width:'80%', marginTop:72}}>\r\n      <Text style={{fontSize:32, color}}>feedynote</Text>\r\n      <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n      {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n      <View style={{height:24}}/>\r\n      <ConfigSections/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import ContentListScreen from \"./main/ContentListScreen\";\r\nimport NoteScreen from \"./main/NoteScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n      title:'home',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NoteScreen: {\r\n      path: 'notes',\r\n      title: 'notes',\r\n      component: NoteScreen\r\n    },\r\n    ContentListScreen: {\r\n      path: 'contents',\r\n      title: 'contents',\r\n      component: ContentListScreen\r\n    }\r\n  };\r\n  ","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView,  useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useMemo,useRef,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport useContent from '../../hooks/useContent';\r\nimport NoteSection from './NoteSection';\r\nimport { CellType } from '../../types';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport { useOpenedContext } from '../../hooks/useNotebookContext';\r\nimport { CellItem } from '../../components/Cell';\r\n\r\nconst useIsSaved = (init:CellItem[]|undefined, cells:CellItem[]|undefined)=>{\r\n  const original = useMemo(()=>JSON.stringify(init?.map(v=>({...v, id:undefined}))), [init])\r\n  const isSaved = useMemo(()=>cells===undefined || original===JSON.stringify(cells?.map(v=>({...v, id:undefined}))), [original, cells])\r\n  return isSaved\r\n}\r\n\r\nexport default function NoteScreen({ navigation, route }: StackScreenProps<any, 'Editor'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId!==undefined?parseInt(route?.params?.parentId):undefined\r\n  } as { created:true, parentId:number } | { created:false, id:number }\r\n  const cellRef: Parameters<typeof NoteSection>[0]['cellRef'] = useRef()\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n  const { openedIds, addOpenedIds, deleteOpenedIds } = useOpenedContext()\r\n\r\n  const content = useContent(params.created?undefined:params.id)\r\n  const contents = useContentList(params.created?undefined:params.id)\r\n  const init = useMemo(()=>{\r\n    return (params.created?[]:contents)?.map(v=>({id: `${v.id}`, type:v.type as CellType, content:v.title, output:v.description || '', executionCount:v.option.EXECUTION_COUNT?parseInt(v.option.EXECUTION_COUNT, 10):null, status:(v.option.EXECUTION_STATUS || 'idle') as any}))\r\n  }, [contents])\r\n  const [unsaved, setUnsaved] = useState<Record<number, CellItem[]>>({})\r\n  const unsavedKey = params.created?params.parentId:params.id\r\n  const cells = unsaved[unsavedKey] as (CellItem[] | undefined)\r\n  const contentMutation = useContentMutation()\r\n  const [title, setTitle] = useState<string>()\r\n  const [editPage, setEditPage] = useState(false)\r\n  const isSaved = useIsSaved(init, cells)\r\n  const onSaveTitle = () => {\r\n        if (!auth.user){\r\n          return;\r\n      }\r\n      let promise\r\n      const description = cells?cells.map((v, i)=>{\r\n        let str = toRaw(v.content).replaceAll(/\\r\\n/g, '');\r\n        if(str.length > 32){\r\n          str = str.substring(0, 32 - 2) + '...';\r\n        }\r\n        return str\r\n      }).join('\\r\\n'):''\r\n      if (params.created){\r\n          promise = contentMutation.create({userId:auth.user.id, parentId:params.parentId, type:'PAGE', order: 0, title:title || '', description, option:{}}).then((v)=>{\r\n            navigate(\"NoteScreen\", {id:v});\r\n            return v\r\n          })\r\n      }\r\n      else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, title:title || content.title, description}}).then(()=>params.id)\r\n      }\r\n      return promise\r\n  }\r\n\r\n  const onSave = ()=>{\r\n    const promise = onSaveTitle()\r\n    promise?.then((parentId)=>{\r\n      const userId = auth.user?.id\r\n      const created = userId && cells ? cells.map((v, i)=>({\r\n        userId, parentId, type:v.type, order:i, description:v.output, title:v.content, option:{EXECUTION_COUNT:v.executionCount!==null?`${v.executionCount}`:undefined, EXECUTION_STATUS: v.status} })):[]\r\n      return contentMutation.updateCells({created, deleted:{parentId}})\r\n    })\r\n  }\r\n\r\n  useLayoutEffect(()=>{\r\n      if(params.created){\r\n        setEditPage(false)\r\n        setTitle(lang(\"New Page\"))\r\n        addOpenedIds(params.parentId, true)\r\n      }\r\n      else if (content){\r\n        setEditPage(false)\r\n        setTitle(content.title)\r\n        addOpenedIds(content.id, false)\r\n      }\r\n    }, [content])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created || content){\r\n        navigation.setOptions({\r\n            title:isSaved?title:`${title}*`,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {!isSaved && <CommonButton title={'💾'} onPress={onSave} style={{paddingTop:8, marginRight:10}}/>}\r\n              <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>setEditPage(true)}/>\r\n              <CommonButton title={'❌'} onPress={exit} style={{paddingTop:8, marginRight:10}}/>\r\n            </View>,\r\n            headerShown: !editPage\r\n          });\r\n      }\r\n  }, [navigation, content, contents, title, editPage, isSaved]);\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else {\r\n      let nextId:any = undefined;\r\n      if(openedIds.length > 0){\r\n        const values = [...openedIds.values()]\r\n        const i = values.findIndex(v=>params.created?v.parentId===params.parentId:v.id===content?.id)\r\n        nextId = values[i>=0?(i===values.length-1?i-1:i+1):(values.length-1)]\r\n      }\r\n      if (nextId!==undefined){\r\n        navigation.navigate('NoteScreen', nextId.created?{parentId:nextId.parentId}:{id:nextId.id})\r\n      }\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n    }\r\n  }\r\n  const exit = ()=> {\r\n    deleteOpenedIds(unsavedKey, params.created)\r\n    back()\r\n  }\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\"}}>\r\n     <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n     {editPage ? <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSaveTitle} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={()=>setEditPage(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>exit())}/>}\r\n      </>:\r\n      init !==undefined && <NoteSection cells={cells || init} setCells={(data)=>{const u = {...unsaved};u[unsavedKey]=data;setUnsaved(u)}} cellRef={cellRef}/>}\r\n    </ScrollView>\r\n  </ThemedView>\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { getContentOne } from \"../services/notebook\";\r\n\r\nexport default function useContent(id?:number){\r\n  const { data } = useQuery([\"Content\", id] , async()=> (id?await getContentOne(id):undefined))\r\n  return data\r\n}","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView,  View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport ContentList from '../../components/ContentList';\r\n\r\nexport default function ContentListScreen({ navigation, route }: StackScreenProps<any, 'ContentList'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id:  route?.params?.id===\"*\"?\"*\":parseInt(route?.params?.id),\r\n    type: route?.params?.type\r\n  } as { created:true, type:'NOTEV2' } | { created:false, id:number| \"*\" }\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const rootlist = useContentList(0);\r\n  const list = rootlist\r\n  const contentMutation = useContentMutation()\r\n  const content = params.created?undefined:list?.find(v=>v.id===params.id)\r\n  const [title, setTitle] = useState<string>()\r\n  const [editable, setEditable] = useState(false)\r\n  const type = params.created?params.type:content?.type\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else{\r\n      navigation.navigate('HomeScreen', {tab:1})\r\n    }\r\n  }\r\n  const onSave = ()=>{\r\n    if (!auth.user || (title===undefined) || (content?.title === title) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    if (params.created){\r\n        const typedList = list?.filter(v=>v.type == params.type)\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:0, type, order: (typedList?.length || 0) + 1, title, option:{}}).then(v=>{\r\n            navigate(\"ContentListScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, title}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'NOTEV2': lang('New Note'),\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}  \r\n  useLayoutEffect(()=>{\r\n    if(params.created){\r\n      setEditable(false)\r\n      setTitle(defaultTitle[params.type])\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setTitle(content.title)\r\n    }\r\n  }, [content, type])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else {\r\n        navigation.setOptions({\r\n            title: content?.title || lang(\"All Timelines\"),\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content?.type==='NOTEV2' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('NoteScreen', {parentId:content.id})}/>}\r\n              {(content && !params.created) && <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>}\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, type, editable]);\r\n\r\n  const editableExact = (params.created || editable)\r\n\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\", backgroundColor:'transparent'}}>\r\n    {editableExact?\r\n      <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={params.created?back:()=>setEditable(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>}\r\n      </>:\r\n      <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n        {content && <ContentList parentContent={content}/>}\r\n      </ScrollView>}\r\n    </ThemedView>\r\n}\r\n","import React from 'react';\r\nimport ContentGroupList from '../components/ContentGroupList';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <ScrollView style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('HomeScreen')} />\r\n        <ContentGroupList type={'PAGE'} />\r\n        <ContentGroupList type={'NOTEV2'} />\r\n    </ScrollView>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { NotebookProvider } from '../hooks/useNotebookContext';\r\n\r\nconst getConfig = async () => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'feedynote',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'feedynote'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'HomeScreen',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <></>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig().then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n        <NotebookProvider>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n        </NotebookProvider>\r\n    </PaperProvider>\r\n}"],"names":["re","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref","link","isMobile","_jsx","View","style","borderRadius","marginVertical","marginHorizontal","children","_jsxs","TouchableOpacity","onPress","Linking","openURL","url","onLongPress","width","flexDirection","imageUrl","Image","source","uri","resizeMode","maxWidth","maxHeight","borderWidth","undefined","flex","overflow","minHeight","Text","fontSize","numberOfLines","title","ellipsizeMode","axios","axiosCreate","getContentOne","_asyncToGenerator","id","get","data","_x","apply","arguments","getContentList","_ref2","parentId","type","parentIdParam","typeParam","value","_x2","_x3","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","deleteContent","_ref6","delete","_x6","postCells","_ref7","contents","_x7","previewScrap","_ref8","cells","_ref9","preview","query","_x9","useContentList","useQuery","useContentMutation","queryClient","useQueryClient","create","useMutation","onSuccess","_onSuccess","invalidateQueries","update","_onSuccess2","Promise","all","_delete","updateCells","useEffect","mutateAsync","updatedOffset","Date","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","slice","date","_cardPadding","isLandscape","_cardMaxWidth","CardPage","React","window","useResizeContext","cardMaxWidth","fSize","concat","_toConsumableArray","sort","a","b","item","flexBasis","content","navigate","padding","paddingRight","minWidth","Card","aspectRatio","Math","sqrt","Content","opacity","marginTop","justifyContent","alignItems","textAlign","parentContent","ScrollView","height","contentContainerStyle","backgroundColor","flexWrap","DraggableFlatList","ScaleDecorator","DndCore","DndSortable","DndUtilities","Platform","OS","DraggableImport","default","require","DraggableCellItem","code","renderCellContent","_DndSortable$useSorta","useSortable","attributes","listeners","setNodeRef","transform","transition","isDragging","CSS","Transform","toString","x","y","scaleX","scaleY","position","zIndex","ref","_objectSpread","cursor","left","top","SortableCellsList","items","onSortEnd","getId","_useState","useState","_useState2","_slicedToArray","codes","setCodes","startsWith","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","findIndex","newIndex","idx","arrayMove","Array","from","keys","SortableContext","strategy","verticalListSortingStrategy","commonStyles","cellsList","StyleSheet","paddingVertical","paddingHorizontal","setItems","setData","renderContent","renderItem","keyExtractor","drag","isActive","Icon","name","size","color","onChangeText","placeholder","_ref$autoCapitalize","autoCapitalize","_ref$autoCorrect","autoCorrect","_ref$minHeight","_ref$maxHeight","setHeight","TextInput","multiline","onContentSizeChange","contentHeight","nativeEvent","contentSize","newHeight","max","min","textAlignVertical","scrollEnabled","ExecutionStatus","typeDetail","executable","init","iconName","iconSize","light","dark","createUseStyle","styles","_styles","theme","lightStyles","darkStyles","isSelected","heightRef","setCells","executeCell","setSelectedCellId","useStyles","markdownStyles","useMarkdownStyles","updateCellContent","prevCells","cell","cellContainer","current","selectedCell","onLayout","e","layout","cellHandle","executionCount","executionCountText","cellContent","cellToolbar","toolbarButton","disabled","activeOpacity","cellInputContainer","display","EditorViewer","autoResize","Editor","setValue","text","DynamicTextInput","codeInput","markdownInput","Markdown","status","COMPLETED","_Fragment","JSON","parse","output","LinkPreview","ERROR","outputContainer","errorOutput","outputText","Colors","background","codeText","codeBackground","outerBackground","border","selectedBorder","error","markdownHead","markdownCode","header","elevation","fontWeight","headerButtonText","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","borderColor","draggingCell","paddingTop","margin","borderBottomColor","fontFamily","borderTopWidth","borderTopColor","headerButtons","marginBottom","marginRight","body","heading1","heading2","code_inline","code_block","container","addCellContainer","addCellButton","addCellButtonText","props","useColorScheme","lang","useLangContext","func","selectedCellId","useRef","nextExecutionCount","useMemo","counts","cellRef","executeAllCells","_executeAllCells","RUNNING","find","c","result","resolve","reject","then","stringify","console","log","String","useCallback","Cell","SafeAreaView","SortableList","Object","entries","k","buttonStyle","newCell","now","IDLE","addCell","NotebookContext","createContext","opened","setOpened","NotebookProvider","complete","setComplete","_useState3","_useState4","auth","useAuthContext","loadOpened","AsyncStorage","getItem","user","fromEntries","created","_setOpened","_auth$user","newOpened","parseInt","setItem","Provider","useOpenedContext","_useContext","useContext","openedIds","addOpenedIds","newOpenIds","deleteOpenedIds","notes","pages","_notes$find","_pages$find","v2","itemPadding","List","selectable","TouchableRipple","right","icon","_props","ContentTabView","ContentGroupList","ConfigTabView","ConfigSections","main","HomeScreen","component","navigation","route","tabViews","headerRight","HomeSection","flexGrow","path","NoteScreen","_route$params","_route$params2","_route$params3","_route$params4","params","_useOpenedContext","option","EXECUTION_COUNT","EXECUTION_STATUS","unsaved","setUnsaved","unsavedKey","contentMutation","setTitle","_useState5","_useState6","editPage","setEditPage","isSaved","original","useIsSaved","onSaveTitle","promise","toRaw","replaceAll","join","userId","order","onSave","deleted","useLayoutEffect","setOptions","CommonButton","exit","headerShown","canGoBack","goBack","nextId","values","tab","back","ThemedView","mode","textStyle","NoteSection","u","ContentListScreen","list","editable","setEditable","defaultTitle","onEdit","editableExact","_promise","typedList","ContentList","getConfig","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}