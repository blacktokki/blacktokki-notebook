{"version":3,"file":"static/js/66.493f899b.chunk.js","mappings":"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","sources":["src/components/LinkPreview.tsx","src/services/notebook.ts","src/hooks/useContentList.ts","src/components/ContentList.tsx","src/components/DndSortableList.tsx","src/components/DynamicTextInput.tsx","src/components/Cell/common.ts","src/components/Cell/index.tsx","src/screens/main/NoteSection.tsx","src/hooks/useNotebookContext.tsx","src/screens/main/NoteScreen.tsx","src/components/ContentGroupList.tsx","src/screens/main/HomeScreen.tsx","src/screens/index.ts","src/hooks/useContent.ts","src/screens/main/ContentListScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking, TouchableOpacity } from \"react-native\"\r\nimport { View, Text } from \"@blacktokki/core\";\r\nimport { Link } from \"../types\"\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nexport const toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <View style={{borderRadius:6, marginVertical:10, marginHorizontal:8}}>\r\n            <TouchableOpacity\r\n                onPress={()=>Linking.openURL(link.url)}\r\n                onLongPress={()=>{}}\r\n                style={{width:'100%', flexDirection:'row'}}\r\n            >\r\n                {link.imageUrl?<Image source={{uri:link.imageUrl}} resizeMode=\"cover\" style={{ borderRadius:6, width:'100%', maxWidth:isMobile?120:160, maxHeight:isMobile?120:160, borderWidth:1}}/>:undefined}\r\n                <View style={{flex:1, marginHorizontal:20, overflow:'hidden', minHeight:isMobile?90:120}}>\r\n                    <Text style={{fontSize:18}} numberOfLines={1}>{link.title}</Text>\r\n                    <Text style={{fontSize:14}} numberOfLines={7} ellipsizeMode='head'>{link.description}</Text>\r\n                    <Text style={{fontSize:12}} numberOfLines={1}>{link.url}</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n}","import { toUrls } from '../components/LinkPreview';\r\nimport { Content, PostContent, CellType, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const postCells = async (contents:{created:(PostContent & {type:CellType})[], deleted:{parentId:number}}) => {\r\n    await axios.post(`/api/v1/content/bulk`, contents)\r\n}\r\n\r\nexport const executeCells = async (cells:({type: CellType |'OUTPUT'} & ({query:string} | {id:number}))[]) => { // TBA\r\n    return (await axios.post(`/api/v1/cell/`, cells)).data\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getContentList, patchContent, postCells, postContent } from \"../services/notebook\";\r\nimport { Content } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useContentList(parentId?:number, type?: Content['type']){\r\n  const { data } = useQuery([\"ContentList\", parentId, type] , async()=> (parentId!==undefined || type!==undefined)?await getContentList(parentId, type):undefined)\r\n  return data\r\n}\r\n\r\n\r\nexport function useContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postContent, {\r\n    onSuccess: async()=>{\r\n      await queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const update = useMutation(patchContent, {\r\n    onSuccess: async () => {\r\n      await Promise.all([\r\n        queryClient.invalidateQueries(\"ContentList\"),\r\n        queryClient.invalidateQueries(\"Content\")\r\n      ])\r\n    }\r\n  })\r\n  const _delete = useMutation(deleteContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const updateCells = useMutation(postCells, {\r\n    onSuccess: () =>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n  }, [])\r\n\r\n  return {create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutateAsync, updateCells:updateCells.mutateAsync}\r\n}","import * as React from 'react';\r\nimport { Content } from '../types';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Text } from '@blacktokki/core';\r\nimport { ScrollView, TouchableOpacity, View } from 'react-native';\r\nimport useContentList from '../hooks/useContentList';\r\nimport { toRaw } from '@blacktokki/editor';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nconst ContentList = ({ parentContent } : { parentContent:Content }) => {\r\n  const data = useContentList(parentContent.id)\r\n  return data && (\r\n    <ScrollView style={{flex:1}}>\r\n      {data.map((item, index)=>{\r\n        return <TouchableOpacity\r\n          key={index}\r\n          style={{flexDirection:'row', justifyContent:'space-between', padding:10, borderBottomWidth:1, borderColor:'gray'}}\r\n          onPress={()=>navigate('NoteScreen', {id:item.id})}\r\n        >\r\n          <View style={{flexShrink:1}}>\r\n              <Text style={{fontSize:18}}>{item.title}</Text>\r\n              <Text style={{fontSize:16, opacity: 0.4}} numberOfLines={1} ellipsizeMode='head'>{toRaw(item.description||'')}</Text>\r\n          </View>\r\n          <View>\r\n              <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n              <Text style={{fontSize:14, textAlign:'right'}}></Text>\r\n          </View>\r\n        </TouchableOpacity>})}\r\n    </ScrollView>)\r\n};\r\n\r\nexport default ContentList;","import React, { useEffect, useState } from 'react';\r\nimport { Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\n// @ts-ignore\r\nimport { MaterialIcons as Icon } from 'react-native-vector-icons';\r\nimport { RenderItem, SortableListProps } from './SortableListBase';\r\nimport { useIsMobile } from '@blacktokki/core';\r\n// Import platform-specific components\r\nlet DraggableFlatList: any;\r\nlet ScaleDecorator: any;\r\n\r\n// For web, import specific versions of dnd-kit components\r\n// @dnd-kit/core@3.0.3, @dnd-kit/sortable@3.0.1, @dnd-kit/utilities@2.0.0\r\nlet DndCore: any;\r\nlet DndSortable: any;\r\nlet DndUtilities: any;\r\n\r\n// Handle platform-specific imports\r\nif (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n  // For native platforms, import react-native-draggable-flatlist\r\n  const DraggableImport = {} as any; // require('react-native-draggable-flatlist');\r\n  DraggableFlatList = DraggableImport.default;\r\n  ScaleDecorator = DraggableImport.ScaleDecorator;\r\n} else {\r\n  // For web, import dnd-kit with specific versions\r\n  DndCore = require('@dnd-kit/core');\r\n  DndSortable = require('@dnd-kit/sortable');\r\n  DndUtilities = require('@dnd-kit/utilities');\r\n}\r\n\r\n// Web environment Draggable Cell Item using dnd-kit\r\nconst DraggableCellItem = <T, >({ \r\n  item, \r\n  code,\r\n  renderCellContent,\r\n}: { \r\n  item: T, \r\n  code: string,\r\n  renderCellContent: RenderItem<T>,\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = DndSortable.useSortable({ id:code });\r\n\r\n  const style = {\r\n    transform: DndUtilities.CSS.Transform.toString(transform ? {\r\n      x: transform.x,\r\n      y: transform.y,\r\n      scaleX: 1,\r\n      scaleY: 1\r\n    } : null),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    position: 'relative' as const,\r\n    flex: 1,\r\n    zIndex: isDragging ? 1 : 0\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n    >\r\n      <div \r\n        {...attributes}\r\n        {...listeners}\r\n        style={{ \r\n          cursor: 'move', \r\n          width: 40, \r\n          position: 'absolute', \r\n          height: '100%', \r\n          zIndex: 10,\r\n          left: 0,\r\n          top: 0\r\n        }}\r\n      />\r\n      {renderCellContent({item})}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Web Sortable List using dnd-kit\r\nconst SortableCellsList = <T, >({ \r\n  items, \r\n  onSortEnd, \r\n  renderCellContent,\r\n  getId\r\n}: { \r\n  items: T[], \r\n  onSortEnd: (items: T[]) => void, \r\n  renderCellContent: RenderItem<T>,\r\n  getId:(item:T)=>string,\r\n}) => {\r\n  const [codes, setCodes] = useState(items.map(v=>''+ getId(v)))\r\n  const [tempCodes, setTempCodes] = useState<string[]>()\r\n  const isMobile = useIsMobile()\r\n  useEffect(()=>{\r\n    if (tempCodes){\r\n      setCodes(tempCodes)\r\n      setTempCodes(undefined)\r\n    }\r\n    else if (items.length !== codes.length || items.filter((v, i)=>!codes[i].endsWith(getId(v))).length>0){\r\n      setCodes((codes)=>{\r\n        return items.map((v, i)=>i<codes.length && codes[i].endsWith(getId(v))?codes[i]:Date.now().toString() + '@'+getId(v)).slice(0, items.length)\r\n      })\r\n    }\r\n  }, [items])\r\n  const sensors = DndCore.useSensors(\r\n    isMobile? DndCore.useSensor(DndCore.TouchSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      }\r\n    }): DndCore.useSensor(DndCore.PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    DndCore.useSensor(DndCore.KeyboardSensor, {\r\n      coordinateGetter: DndSortable.sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const handleDragEnd = (event: any) => {\r\n    const { active, over } = event;\r\n    \r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = codes.findIndex((item) => item === active.id);\r\n      const newIndex = codes.findIndex((item) => item === over.id);\r\n      const idx = DndSortable.arrayMove(Array.from(Array(items.length).keys()), oldIndex, newIndex)\r\n      setTempCodes(DndSortable.arrayMove(codes, oldIndex, newIndex).map((v:string, i:number)=>i>idx[i]?'@'+v:v))\r\n      onSortEnd(DndSortable.arrayMove(items, oldIndex, newIndex));\r\n    }\r\n  };\r\n  return (\r\n    <DndCore.DndContext\r\n      sensors={sensors}\r\n      collisionDetection={DndCore.closestCenter}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <DndSortable.SortableContext\r\n        items={tempCodes || codes}\r\n        strategy={DndSortable.verticalListSortingStrategy}\r\n      >\r\n        <View style={commonStyles.cellsList}>\r\n          {items.map((item, i) => {\r\n            const code = (tempCodes || codes)[i]\r\n            return <DraggableCellItem\r\n              key={code || '' + getId(item)}\r\n              code={code}\r\n              item={item}\r\n              renderCellContent={renderCellContent}\r\n            />\r\n})}\r\n        </View>\r\n      </DndSortable.SortableContext>\r\n    </DndCore.DndContext>\r\n  );\r\n};\r\n\r\n// Choose the appropriate list component based on platform\r\nconst SortableList = <T, >({data, setData:setItems, getId, renderItem:renderContent}:SortableListProps<T>) => {\r\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n    return (\r\n      <DraggableFlatList\r\n        data={data}\r\n        onDragEnd={({ data }: { data: T[] }) => setItems(data)}\r\n        keyExtractor={(item: any) => item.id.toString()}\r\n        renderItem={({ item, drag, isActive }: any) => {\r\n          return (\r\n            <ScaleDecorator>\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <TouchableOpacity\r\n                  onLongPress={drag} \r\n                  style={{ \r\n                    width: 40,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n                </TouchableOpacity>\r\n                <View style={{ flex: 1 }}>\r\n                  {renderContent(item)}\r\n                </View>\r\n              </View>\r\n            </ScaleDecorator>\r\n          );\r\n        }}\r\n        contentContainerStyle={commonStyles.cellsList}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <SortableCellsList\r\n        items={data}\r\n        getId={getId}\r\n        onSortEnd={setItems}\r\n        renderCellContent={renderContent}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst commonStyles = StyleSheet.create({\r\n  cellsList: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 5,\r\n  }\r\n});\r\n\r\nexport default SortableList;\r\n","import React, { useState } from \"react\";\r\nimport { TextInput } from \"react-native\";\r\n\r\n// 동적 높이 TextInput 컴포넌트\r\nexport default ({\r\n    value,\r\n    onChangeText,\r\n    style,\r\n    placeholder,\r\n    autoCapitalize = 'none',\r\n    autoCorrect = false,\r\n    minHeight = 40,\r\n  }: {\r\n    value: string;\r\n    onChangeText: (text: string) => void;\r\n    style?: any;\r\n    placeholder?: string;\r\n    autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters';\r\n    autoCorrect?: boolean;\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n  }) => {\r\n    const [height, setHeight] = useState(minHeight);\r\n  \r\n    const handleContentSizeChange = (event: any) => {\r\n      const contentHeight = event.nativeEvent.contentSize.height;\r\n      \r\n      // 높이를 minHeight와 maxHeight 사이로 제한\r\n      const newHeight = Math.max(\r\n        minHeight, \r\n        contentHeight\r\n      );\r\n  \r\n      setHeight(newHeight);\r\n    };\r\n  \r\n    return (\r\n      <TextInput\r\n        multiline\r\n        value={value}\r\n        onChangeText={onChangeText}\r\n        onContentSizeChange={handleContentSizeChange}\r\n        style={[\r\n          style, \r\n          { \r\n            height: height,\r\n            textAlignVertical: 'top',\r\n          }\r\n        ]}\r\n        placeholder={placeholder}\r\n        autoCapitalize={autoCapitalize}\r\n        autoCorrect={autoCorrect}\r\n      />\r\n    );\r\n  };","import { StyleSheet } from \"react-native\";\r\nimport { CellType } from \"../../types\";\r\n\r\n// Cell execution status\r\nexport enum ExecutionStatus {\r\n    IDLE = 'idle',\r\n    RUNNING = 'running',\r\n    COMPLETED = 'completed',\r\n    ERROR = 'error',\r\n}\r\n  \r\n// Structure for a cell\r\nexport interface CellItem {\r\n  id: string;\r\n  type: CellType;\r\n  content: string;\r\n  output: string;\r\n  executionCount: number | null;\r\n  status: ExecutionStatus;\r\n  inputVisible: boolean;\r\n  outputVisible: boolean;\r\n}\r\n\r\nexport const typeDetail = {\r\n    'EDITOR':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'',\r\n      iconName: \"edit\",\r\n      iconSize: 18,\r\n      light:'goldenrod',\r\n      dark: 'darkgoldenrod'\r\n    },\r\n    'LINK': {\r\n      executable:true,\r\n      init:(cells:CellItem[])=>'https://',\r\n      iconName: 'link',\r\n      iconSize: 20,\r\n      light: '#4CAF50',\r\n      dark: '#2E7D32'// 어두운 녹색\r\n    },\r\n    'MARKDOWN':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'# Welcome to Jupyter Notebook in React Native\\n\\nThis is a basic implementation of Jupyter Notebook using React Native and TypeScript.',\r\n      iconName: 'text-fields',\r\n      iconSize: 20,\r\n      light: '#2196F3',\r\n      dark: '#1565C0'// 어두운 블루\r\n    }\r\n}\r\n\r\nexport const createUseStyle = <T extends StyleSheet.NamedStyles<T>, >(styles:(theme:'light'|'dark')=>(T | StyleSheet.NamedStyles<T>)) => {\r\n    const _styles = (theme:'light'|'dark') => StyleSheet.create(styles(theme))\r\n    const lightStyles = _styles('light')\r\n    const darkStyles = _styles('dark')\r\n    return (theme:'light'|'dark')=>theme==='dark'?darkStyles:lightStyles\r\n}\r\n","// App.tsx\r\nimport React, { MutableRefObject } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  TouchableOpacity,\r\n  Platform, \r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport Markdown from 'react-native-markdown-display';\r\nimport { Editor, EditorViewer } from '@blacktokki/editor';\r\nimport { Link } from '../../types';\r\nimport LinkPreview from '../LinkPreview';\r\nimport DynamicTextInput from '../DynamicTextInput';\r\nimport { CellItem, ExecutionStatus, createUseStyle, typeDetail} from './common';\r\n\r\nexport { ExecutionStatus, typeDetail } from './common';\r\nexport type { CellItem } from './common';\r\nexport default React.memo(({theme, item, isSelected, heightRef, setCells, executeCell, setSelectedCellId}:{theme:'light'|'dark', item:CellItem, isSelected:boolean, heightRef:MutableRefObject<Record<string, number>>, setCells:(func:(cells:CellItem[])=>CellItem[])=>void, executeCell:(id:string)=>void, setSelectedCellId:(id:string|null)=>void})=>{\r\n  const styles = useStyles(theme)\r\n  const markdownStyles = useMarkdownStyles(theme)\r\n  // Update cell content\r\n  const updateCellContent = (id: string, content: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, content } : cell\r\n      )\r\n    );\r\n  };\r\n  // Delete a cell\r\n  const deleteCell = (id: string) => {\r\n    setCells(prevCells => prevCells.filter(cell => cell.id !== id));\r\n  };\r\n\r\n  // Toggle input visibility\r\n  const toggleInputVisibility = (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, inputVisible: !cell.inputVisible } : cell\r\n      )\r\n    );\r\n  };\r\n  \r\n  // Toggle output visibility\r\n  const toggleOutputVisibility = (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, outputVisible: !cell.outputVisible } : cell\r\n      )\r\n    );\r\n  };\r\n  const renderLinkOutput = ()=>{\r\n    const output = JSON.parse(item.output) as {query:string, links:Link[]}\r\n    return <>\r\n      {typeDetail[item.type].executable && output.links.map((link, i)=><View style={{opacity:output.query===item.content?1:0.25}}><LinkPreview key={i} link={link} isMobile={false} /></View>)}\r\n    </>\r\n  }\r\n\r\n  return (\r\n    <View style={[\r\n      styles.cellContainer,\r\n      item.inputVisible && item.type==='EDITOR' && {minHeight: heightRef.current[item.id]},\r\n      isSelected && styles.selectedCell,\r\n      // isDragging && styles.draggingCell\r\n    ]}\r\n    onLayout={e=>{heightRef.current[item.id]=e.nativeEvent.layout.height}}\r\n    >\r\n      {/* Cell sidebar with execution count and drag handle */}\r\n      <View style={[styles.cellHandle, {paddingTop: (item.inputVisible || (typeDetail[item.type].executable && item.outputVisible)) ?15:6}]}>\r\n        {(item.inputVisible || item.outputVisible) && typeDetail[item.type].executable && (\r\n          <View style={styles.executionCount}>\r\n            <Text style={styles.executionCountText}>\r\n              {item.executionCount ? `[${item.executionCount}]` : '[ ]'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n        <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n      </View>\r\n      \r\n      <View style={styles.cellContent}>\r\n        {/* Cell input area */}\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={() => setSelectedCellId(item.id)}\r\n          style={styles.cellInputContainer}\r\n        >\r\n          {/* New toggle button for input */}\r\n          <TouchableOpacity \r\n            style={styles.visibleToggleContainer}\r\n            onPress={() => toggleInputVisibility(item.id)}\r\n          >\r\n            <View style={styles.visibleToggle}/>\r\n          </TouchableOpacity>\r\n          <View style={{flex:1, paddingHorizontal:5}}>\r\n            {/* Cell toolbar */}\r\n            {item.inputVisible && <View style={styles.cellToolbar}>\r\n              <TouchableOpacity \r\n                style={styles.toolbarButton}\r\n                onPress={() => setSelectedCellId(isSelected?null:item.id)}\r\n              >\r\n                <Icon\r\n                  name={typeDetail[item.type].iconName} \r\n                  size={typeDetail[item.type].iconSize} \r\n                  color=\"#2196F3\" \r\n                />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={styles.toolbarButton}\r\n                onPress={() => executeCell(item.id)}\r\n                disabled={!typeDetail[item.type].executable}\r\n              >\r\n                <Icon \r\n                  name=\"play-arrow\" \r\n                  size={20} \r\n                  color={typeDetail[item.type].executable ? \"#4CAF50\" : \"#ccc\"} \r\n                />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={styles.toolbarButton}\r\n                onPress={() => deleteCell(item.id)}\r\n              >\r\n                <Icon name=\"delete\" size={20} color=\"#F44336\" />\r\n              </TouchableOpacity>\r\n            </View>}\r\n            {/* SUMMARY CELL */}\r\n            {!item.inputVisible && <TouchableOpacity style={styles.summaryButton} onPress={() => toggleInputVisibility(item.id)}>\r\n              <Text style={styles.summaryText}>● ● ●</Text>\r\n            </TouchableOpacity>}\r\n            {/* EDITOR CELL */}\r\n            {<View style={{display:item.inputVisible && item.type === 'EDITOR'?'flex':'none'}}>\r\n              <EditorViewer theme={theme} value={item.content} autoResize active={!isSelected} onPress={()=>setSelectedCellId(item.id)}/>\r\n              <Editor       theme={theme} value={item.content} autoResize active={isSelected} setValue={item.type === 'EDITOR'?(text) => updateCellContent(item.id, text):()=>{}}/>\r\n            </View>}\r\n            {/* LINK CELL */}\r\n            {item.inputVisible && item.type === 'LINK' && <DynamicTextInput\r\n                style={styles.codeInput}\r\n                value={item.content}\r\n                onChangeText={(text) => updateCellContent(item.id, text)}\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n              />\r\n            }\r\n            {/* MARKDOWN CELL */}\r\n            {item.inputVisible && item.type === \"MARKDOWN\" && (\r\n            isSelected ? (\r\n              <DynamicTextInput\r\n                style={styles.markdownInput}\r\n                value={item.content}\r\n                onChangeText={(text) => updateCellContent(item.id, text)}\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n              />\r\n              ) : (\r\n                <Markdown style={markdownStyles}>\r\n                  {item.content}\r\n                </Markdown>\r\n              )\r\n            )}\r\n          </View>\r\n        </TouchableOpacity>\r\n        {/* Output area for code cells */}\r\n        {<View style={{flexDirection:'row'}}> \r\n          {(item.status === ExecutionStatus.COMPLETED || item.status === ExecutionStatus.ERROR) && <TouchableOpacity \r\n            style={styles.visibleToggleContainer}\r\n            onPress={() => toggleOutputVisibility(item.id)}\r\n          >\r\n            <View style={styles.visibleToggle}/>\r\n          </TouchableOpacity>}\r\n          {!item.outputVisible ? (item.inputVisible && <TouchableOpacity style={styles.summaryButton} onPress={() => toggleOutputVisibility(item.id)}>\r\n            <Text style={styles.summaryText}>● ● ●</Text>\r\n          </TouchableOpacity>):\r\n          <View style={{flex:1}}>\r\n            {item.status === ExecutionStatus.COMPLETED  ? \r\n            renderLinkOutput():\r\n            item.status === ExecutionStatus.ERROR && <View style={[styles.outputContainer, styles.errorOutput]}>\r\n              <Text style={styles.outputText}>{item.output}</Text>\r\n            </View>}\r\n          </View>}\r\n        </View>}\r\n      </View>\r\n    </View>\r\n  );\r\n})\r\n\r\nconst Colors = {\r\n    light:{\r\n      background: '#f8f8f8',\r\n      text: '#111',\r\n      codeText: '#333',\r\n      codeBackground: '#f8f8f8',\r\n      outerBackground: '#fff',\r\n      border: '#e0e0e0',\r\n      selectedBorder: '#3F51B5',\r\n      error:  'rgba(244, 67, 54, 0.1)',\r\n      markdownHead: '#2C3E50',\r\n      markdownCode: '#f5f5f5',\r\n    },\r\n    dark:{\r\n      background:'#1E1E1E',  // 어두운 헤더 배경\r\n      text: '#E0E0E0',  // 연한 회색 텍스트\r\n      codeText: '#B0B0B0',// 회색 텍스트\r\n      codeBackground: '#2A2A2A',  // 어두운 출력 배경\r\n      outerBackground: '#121212', // 다크 모드 배경색\r\n      border: '#3A3A3A',  // 어두운 구분선\r\n      selectedBorder: '#4A90E2', // 밝은 블루 선택 강조\r\n      error:  'rgba(244, 67, 54, 0.2)', // 오류 출력 배경 (반투명 레드)\r\n      markdownHead: '#A0B9D0',\r\n      markdownCode: '#1E1E1E',\r\n    }\r\n}\r\n\r\nconst useStyles = createUseStyle((theme)=>({\r\n    header: {\r\n      backgroundColor: Colors[theme].background,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      padding: 15,\r\n      ...(Platform.OS !== 'web' && { elevation: 4 }),\r\n    },\r\n    title: {\r\n      color: Colors[theme].text,\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n    },\r\n    headerButtonText: {\r\n      color: Colors[theme].codeText,\r\n      marginLeft: 5,\r\n      fontWeight: '500',\r\n    },\r\n    cellContainer: {\r\n      flexDirection: 'row',\r\n      borderTopLeftRadius: 6,\r\n      borderBottomLeftRadius: 6,\r\n      backgroundColor: Colors[theme].background,\r\n      overflow: 'hidden',\r\n      borderColor: Colors[theme].border,\r\n      padding:1,\r\n    },\r\n    selectedCell: {\r\n      borderColor: Colors[theme].selectedBorder,\r\n      borderWidth: 2,\r\n      padding:0,\r\n    },\r\n    draggingCell: {\r\n      opacity: 0.7,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    cellHandle: {\r\n      width: 40,\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      alignItems: 'center',\r\n    },\r\n    cellContent: {\r\n      flex: 1,\r\n      borderWidth: 1,\r\n      margin: 10,\r\n      marginVertical: 5,\r\n      borderColor: Colors[theme].border,\r\n    },\r\n    cellToolbar: {\r\n      flexDirection: 'row',\r\n      padding: 0,\r\n      paddingVertical: 0,\r\n      borderBottomColor: Colors[theme].border,\r\n    },\r\n    codeInput: {\r\n      fontFamily: 'monospace',\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    markdownInput: {\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    outputContainer: {\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      padding: 10,\r\n      borderTopWidth: 1,\r\n      borderTopColor: Colors[theme].border,\r\n    },\r\n    errorOutput: {\r\n      backgroundColor: Colors[theme].error,\r\n    },\r\n    outputText: {\r\n      fontFamily: 'monospace',\r\n      color: Colors[theme].codeText,\r\n    },\r\n    // common styles\r\n    headerButtons: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingHorizontal: 12,\r\n      paddingVertical: 6,\r\n      borderRadius: 4,\r\n    },\r\n    executionCount: {\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n    },\r\n    toolbarButton: {\r\n      padding: 5,\r\n      paddingVertical:0,\r\n      marginRight: 10,\r\n    },\r\n    cellInputContainer: {\r\n      //padding: 10,\r\n      flexDirection:'row',\r\n      padding:0,\r\n      flex:1,\r\n      // paddingHorizontal:5,\r\n    },\r\n    executionCountText: {\r\n      color: '#888',\r\n      fontSize: 12,\r\n    },\r\n    visibleToggleContainer: {\r\n      width:12, \r\n      height:'100%', \r\n    },\r\n    visibleToggle: {\r\n      flex:1,\r\n      marginLeft:4,\r\n      marginVertical:4,\r\n      borderRadius:4,\r\n      backgroundColor: Colors[theme].border,\r\n    },\r\n    summaryButton: {\r\n      paddingTop:4, \r\n      width:'100%'\r\n    },\r\n    summaryText: {\r\n      minHeight: 16,\r\n      color: 'gray',\r\n      backgroundColor: Colors[theme].background,\r\n      fontSize:10\r\n    },\r\n}))\r\n\r\nconst useMarkdownStyles = createUseStyle((theme)=>({\r\n    body: {\r\n      fontSize: 14,\r\n      color: Colors[theme].codeText,\r\n    },\r\n    heading1: {\r\n      fontSize: 24,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    heading2: {\r\n      fontSize: 20,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    code_inline: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 2,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n    code_block: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 10,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n}))","// App.tsx\r\nimport React, { useState, useCallback, MutableRefObject, useEffect, useRef, useMemo } from 'react';\r\nimport { \r\n  SafeAreaView, \r\n  StyleSheet, \r\n  View, \r\n  Text, \r\n  TouchableOpacity, \r\n  StyleProp,\r\n  ViewStyle,\r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { CellType } from '../../types';\r\nimport { previewScrap } from '../../services/notebook';\r\nimport SortableList from '../../components/DndSortableList';\r\nimport Cell, { CellItem, ExecutionStatus, typeDetail } from '../../components/Cell';\r\n\r\nconst execute = (type:CellType, query: string): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (type==='LINK'){\r\n        resolve(previewScrap({query}).then(v=>JSON.stringify({query, links:v})))\r\n      }\r\n      else if(type==='MARKDOWN'){\r\n        console.log(\"TEMP\")\r\n      }\r\n      else {\r\n        resolve(\"\")\r\n      }\r\n    } catch (error) {\r\n      reject(`Error: ${error}`);\r\n    }\r\n  });\r\n};\r\n\r\ntype HashItem = {hash: string}\r\n\r\nexport const Hash = {\r\n  get:(item:CellItem) => {\r\n    return JSON.stringify({...item, hash:undefined, id:undefined});\r\n  },\r\n  equals: (old:HashItem[], _new:HashItem[]) =>{\r\n    return old.length === _new.length && _new.findIndex((v, i)=>v.hash !== old[i].hash)<0\r\n  }\r\n}\r\n\r\nexport type CellHistory = {past:string[][], present:string[], future:string[][], cells:Record<string, CellItem & HashItem>}\r\n\r\nconst App = (props: {cellsHistory:CellHistory, setHistory:(data:CellHistory)=>void, cellRef:MutableRefObject<{unselected:()=>void, executeAllCells:()=>Promise<void>}|undefined>}) => {\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const cellsHistory = props.cellsHistory\r\n  const cells = cellsHistory?.present.map(v=>cellsHistory.cells[v])\r\n  const _setCells = (_cells:(CellItem & HashItem)[]) => {\r\n    if (Hash.equals(cells, _cells)){\r\n      return;\r\n    }\r\n    const newCells = cellsHistory?.cells || {}\r\n    _cells.forEach(v=>{newCells[v.id] = v})\r\n    props.setHistory({\r\n      past: cellsHistory?[ ...cellsHistory.past, cellsHistory.present]:[],\r\n      present:_cells.map(v=>v.id),\r\n      future: [],\r\n      cells:newCells,\r\n    })\r\n  }\r\n  const undo = () =>{\r\n    if(cellsHistory && cellsHistory.past.length>0){\r\n      const previous = cellsHistory.past[cellsHistory.past.length - 1];\r\n      const newPast = cellsHistory.past.slice(0, cellsHistory.past.length - 1);\r\n      props.setHistory({\r\n        past: newPast,\r\n        present:previous,\r\n        future: [cellsHistory.present, ...cellsHistory.future],\r\n        cells:cellsHistory.cells,\r\n      })\r\n    }\r\n  }\r\n  const redo = () => {\r\n    if(cellsHistory && cellsHistory.future.length>0){\r\n      const next = cellsHistory.future[0];\r\n      const newFuture = cellsHistory.future.slice(1);\r\n      props.setHistory({\r\n        past: [...cellsHistory.past, cellsHistory.present],\r\n        present:next,\r\n        future: newFuture,\r\n        cells:cellsHistory.cells,\r\n      })\r\n    }\r\n  }\r\n  const setCells = (func:(c:CellItem[])=>CellItem[])=>_setCells(func(cells).map((v, i)=>v === cells[i]?v as (CellItem & HashItem):{...v, hash:Hash.get(v)}))\r\n\r\n  const [selectedCellId, setSelectedCellId] = useState<string | null>(null);\r\n  const heightRef = useRef<Record<string, number>>({})\r\n  const nextExecutionCount = useMemo(()=>{\r\n    const counts = cells.map(v=>v.executionCount).filter(v=>v!==null)\r\n    return counts.length>0?counts.sort((a,b)=>b-a)[0]+1:1\r\n  }, [cells])\r\n  useEffect(()=>{\r\n    props.cellRef.current = {\r\n      executeAllCells: async () => {\r\n        for (const cell of cells) {\r\n          if (typeDetail[cell.type].executable) {\r\n            await executeCell(cell.id);\r\n          }\r\n        }\r\n      },\r\n      unselected: () =>setSelectedCellId(null)\r\n    }\r\n  }, [cells])\r\n  \r\n  // Add a new cell\r\n  const addCell = (type: CellType) => {\r\n    const newCell: CellItem = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      content: typeDetail[type].init(cells),\r\n      output: '',\r\n      executionCount: null,\r\n      status: ExecutionStatus.IDLE,\r\n      inputVisible: true,\r\n      outputVisible: true\r\n    };\r\n    \r\n    setCells(prevCells => [...prevCells, newCell]);\r\n  };\r\n  \r\n  // Execute code in a cell\r\n  const executeCell = async (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id \r\n          ? { ...cell, status: ExecutionStatus.RUNNING } \r\n          : cell\r\n      )\r\n    );\r\n    \r\n    const cell = cells.find(c => c.id === id);\r\n    if (!cell || typeDetail[cell.type].executable === false) return;\r\n    \r\n    try {\r\n      const result = await execute(cell.type, cell.content);\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: result, \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.COMPLETED\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    } catch (error) {\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: String(error), \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.ERROR\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Render a single cell (shared between platform implementations)\r\n  const renderCellContent = useCallback(({item}:{item: CellItem}) => {\r\n    return <Cell\r\n      theme={theme}\r\n      item={item}\r\n      isSelected={selectedCellId === item.id}\r\n      heightRef={heightRef}\r\n      setCells={setCells} \r\n      executeCell={executeCell} \r\n      setSelectedCellId={setSelectedCellId}\r\n    />\r\n  }, [selectedCellId, cells]);\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <SortableList data={cells} setData={_setCells} getId={v=>v.id} renderItem={renderCellContent}/>\r\n      \r\n      <View style={styles.addCellContainer}>\r\n        <View style={styles.addCellRow}>\r\n          {Object.entries(typeDetail).map(([k, v], i)=>{\r\n            const buttonStyle:StyleProp<ViewStyle> = {\r\n              backgroundColor: v[theme]\r\n            }\r\n            return <TouchableOpacity\r\n            key={i}\r\n            style={[styles.addCellButton, buttonStyle]}\r\n            onPress={() => addCell(k as CellType)}\r\n          >\r\n            <Icon name={v.iconName} size={v.iconSize} color=\"#fff\" />\r\n            <Text style={styles.addCellButtonText}>{lang(k)}</Text>\r\n          </TouchableOpacity>\r\n          })}\r\n        </View>\r\n        <View style={styles.addCellRow}>\r\n          <TouchableOpacity\r\n            key={'undo'}\r\n            style={[styles.addCellButton, {backgroundColor:'gray'}]}\r\n            onPress={() => undo()}\r\n          >\r\n            <Icon name={'undo'} size={18} color=\"#fff\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            key={'redo'}\r\n            style={[styles.addCellButton, {backgroundColor:'gray'}]}\r\n            onPress={() => redo()}\r\n          >\r\n            <Icon name={'redo'} size={18} color=\"#fff\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  addCellContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    flexWrap:'wrap',\r\n    padding: 15,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#888',\r\n    zIndex: -1\r\n  },\r\n  addCellRow: {\r\n    flexDirection: 'row',\r\n  },\r\n  addCellButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 4,\r\n    margin: 5,\r\n  },\r\n  addCellButtonText: {\r\n    color: '#fff',\r\n    marginLeft: 5,\r\n    fontWeight: '500',\r\n  },\r\n})\r\n\r\n\r\nexport default App;","import { useAuthContext } from \"@blacktokki/account\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\ntype Opened = Record<string, {created:boolean}>\r\n\r\nconst NotebookContext = createContext<{\r\n  opened: Opened; setOpened: (func:(newOpened:Opened)=>void, created:boolean) => void;\r\n}>(\r\n  { opened: {}, setOpened:()=>{} }\r\n);\r\n\r\nexport const NotebookProvider = (props: { children: React.ReactNode; }) => {\r\n  const [complete, setComplete] = useState(false);\r\n  const [opened, setOpened] = useState<Opened>({});\r\n  const { auth } = useAuthContext()\r\n  const loadOpened = async () =>{\r\n    const v = await AsyncStorage.getItem('opened')\r\n    return (v?JSON.parse(v):{}) as Record<string, number[]>\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOpened().then((v) => {\r\n      if (auth){\r\n        if (auth.user){\r\n          const ids:number[] = v[`${auth.user.id}`] || []\r\n          setOpened(Object.fromEntries(ids.map(v=>[`${v}`, {created:false}])));\r\n        }\r\n        setComplete(true);\r\n      }\r\n    });\r\n  }, [auth]);\r\n  const _setOpened = useCallback((func:(newOpened:Opened)=>void, created:boolean)=>{\r\n    const newOpened = {...opened}\r\n    func(newOpened)\r\n    if(created){\r\n      setOpened(newOpened)\r\n    }\r\n    else if(auth.user?.id){\r\n      loadOpened().then(v=>{\r\n        if (auth.user){\r\n          v[`${auth.user.id}`] = Object.keys(newOpened).filter(v => !newOpened[v].created).map(v=>parseInt(v, 10));\r\n          AsyncStorage.setItem('opened', JSON.stringify(v)).then(()=>{\r\n            setOpened(newOpened)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }, [opened])\r\n\r\n  return complete ? (\r\n    <NotebookContext.Provider value={{ opened, setOpened:_setOpened }}>\r\n      {props.children}\r\n    </NotebookContext.Provider>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport const useOpenedContext = () => {\r\n  const { opened, setOpened } = useContext(NotebookContext);\r\n  const openedIds = Object.entries(opened).map(([k, v])=>(v.created?{created:true, parentId:parseInt(k, 10)}:{created:false, id:parseInt(k, 10)}))\r\n  const addOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      newOpenIds[`${id}`] = {created}\r\n    }, created)\r\n  }\r\n\r\n  const deleteOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      delete newOpenIds[`${id}`]\r\n    }, created)\r\n  }\r\n  \r\n  return {\r\n    openedIds,\r\n    addOpenedIds:addOpened, \r\n    deleteOpenedIds:deleteOpened\r\n  }\r\n};\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView,  useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useMemo,useRef,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport useContent from '../../hooks/useContent';\r\nimport NoteSection, { CellHistory, Hash } from './NoteSection';\r\nimport { CellType } from '../../types';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport { useOpenedContext } from '../../hooks/useNotebookContext';\r\n\r\n\r\nconst unsaved:Record<number, CellHistory> = {}\r\n\r\nexport default function NoteScreen({ navigation, route }: StackScreenProps<any, 'Editor'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId!==undefined?parseInt(route?.params?.parentId):undefined\r\n  } as { created:true, parentId:number } | { created:false, id:number }\r\n  const cellRef: Parameters<typeof NoteSection>[0]['cellRef'] = useRef()\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n  const { openedIds, addOpenedIds, deleteOpenedIds } = useOpenedContext()\r\n\r\n  const content = useContent(params.created?undefined:params.id)\r\n  const contents = useContentList(params.created?undefined:params.id)\r\n  const init = useMemo(()=>{\r\n    return (params.created?[]:contents)?.map(v=>({\r\n      id: `${v.id}`, \r\n      type:v.type as CellType, \r\n      content:v.title, \r\n      output:v.description || '', \r\n      executionCount:v.option.EXECUTION_COUNT?parseInt(v.option.EXECUTION_COUNT, 10):null, \r\n      status:(v.option.EXECUTION_STATUS || 'idle') as any, \r\n      inputVisible: v.option.INPUT_VISIBLE!==undefined?v.option.INPUT_VISIBLE:true,\r\n      outputVisible:v.option.OUTPUT_VISIBLE!==undefined?v.option.OUTPUT_VISIBLE:true})).map(v=>({...v, hash: Hash.get(v)}))\r\n  }, [contents])\r\n  const unsavedKey = params.created?params.parentId:params.id\r\n  const [cellsHistory, _setHistory] = useState<CellHistory | undefined>()\r\n  const setHistory = (history?:CellHistory)=>{\r\n    if (history){\r\n      unsaved[unsavedKey] = history\r\n    }\r\n    else{\r\n      delete unsaved[unsavedKey]\r\n    }\r\n    _setHistory(history)\r\n  }\r\n  const cells = cellsHistory?.present.map(v=>cellsHistory.cells[v])\r\n  const contentMutation = useContentMutation()\r\n  const [title, setTitle] = useState<string>()\r\n  const [editPage, setEditPage] = useState(false)\r\n  const isSaved = useMemo(()=>cells===undefined || init && Hash.equals(init, cells) || init===undefined, [init, cells])\r\n  const onSaveTitle = () => {\r\n        if (!auth.user){\r\n          return;\r\n      }\r\n      let promise\r\n      const description = cells?cells.map((v, i)=>{\r\n        let str = toRaw(v.content).replaceAll(/\\r\\n/g, '');\r\n        if(str.length > 64){\r\n          str = str.substring(0, 64 - 2) + '...';\r\n        }\r\n        return str\r\n      }).join('\\r\\n'):''\r\n      if (params.created){\r\n          promise = contentMutation.create({userId:auth.user.id, parentId:params.parentId, type:'PAGE', order: 0, title:title || '', description, option:{}}).then((v)=>{\r\n            navigate(\"NoteScreen\", {id:v});\r\n            return v\r\n          })\r\n      }\r\n      else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, title:title || content.title, description}}).then(()=>params.id)\r\n      }\r\n      return promise\r\n  }\r\n\r\n  const onSave = ()=>{\r\n    const promise = onSaveTitle()\r\n    promise?.then((parentId)=>{\r\n      const userId = auth.user?.id\r\n      const created = userId && cells ? cells.map((v, i)=>({\r\n        userId, \r\n        parentId, \r\n        type:v.type, \r\n        order:i, \r\n        description:v.output, \r\n        title:v.content, \r\n        option:{\r\n          EXECUTION_COUNT:v.executionCount!==null?`${v.executionCount}`:undefined, \r\n          EXECUTION_STATUS: v.status,\r\n          INPUT_VISIBLE:v.inputVisible,\r\n          OUTPUT_VISIBLE:v.outputVisible\r\n        }})):[]\r\n      return contentMutation.updateCells({created, deleted:{parentId}})\r\n    })\r\n  }\r\n\r\n  useLayoutEffect(()=>{\r\n    const history =  unsaved[unsavedKey]\r\n    if(init){\r\n      if(params.created){\r\n        setEditPage(false)\r\n        setTitle(lang(\"New Page\"))\r\n        addOpenedIds(params.parentId, true)\r\n        setHistory(history || {\r\n          past: [],\r\n          present: [],\r\n          future: [],\r\n          cells: {}\r\n        })\r\n      }\r\n      else if (content){\r\n        setEditPage(false)\r\n        setTitle(content.title)\r\n        addOpenedIds(content.id, false)\r\n        setHistory(history || {\r\n          past: [],\r\n          present: init.map(v=>v.id),\r\n          future: [],\r\n          cells: Object.fromEntries(init.map(v=>[v.id, v]))\r\n        })\r\n      }\r\n      cellRef.current?.unselected()\r\n    }\r\n  }, [init, content])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created || content){\r\n        navigation.setOptions({\r\n            title:isSaved?title:`${title}*`,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {!isSaved && <CommonButton title={'💾'} onPress={onSave} style={{paddingTop:8, marginRight:10}}/>}\r\n              <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>setEditPage(true)}/>\r\n              <CommonButton title={'❌'} onPress={exit} style={{paddingTop:8, marginRight:10}}/>\r\n            </View>,\r\n            headerShown: !editPage\r\n          });\r\n      }\r\n  }, [navigation, content, contents, title, editPage, cells]);\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else {\r\n      let nextId:any = undefined;\r\n      if(openedIds.length > 0){\r\n        const values = [...openedIds.values()]\r\n        const i = values.findIndex(v=>params.created?v.parentId===params.parentId:v.id===content?.id)\r\n        nextId = values[i>=0?(i===values.length-1?i-1:i+1):(values.length-1)]\r\n      }\r\n      if (nextId!==undefined){\r\n        navigation.navigate('NoteScreen', nextId.created?{parentId:nextId.parentId}:{id:nextId.id})\r\n      }\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n    }\r\n  }\r\n  const exit = ()=> {\r\n    deleteOpenedIds(unsavedKey, params.created)\r\n    setHistory(undefined)\r\n    back()\r\n  }\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\"}}>\r\n     <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n     {editPage ? <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSaveTitle} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={()=>setEditPage(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>exit())}/>}\r\n      </>:\r\n      cellsHistory !==undefined && cellsHistory === unsaved[unsavedKey] && <NoteSection cellsHistory={cellsHistory} setHistory={setHistory} cellRef={cellRef}/>}\r\n    </ScrollView>\r\n  </ThemedView>\r\n}\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport MaterialCommunityIcon from 'react-native-paper/src/components/MaterialCommunityIcon';\r\nimport { Colors, useColorScheme, useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\nimport {useOpenedContext} from '../hooks/useNotebookContext';\r\nimport { Content } from '../types';\r\nimport { I18nManager } from 'react-native';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentSubGroupList = (props:{note:Content}) => {\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const window = useResizeContext()\r\n  const data = useContentList(expanded?props.note.id:undefined);\r\n  const handlePress = () => setExpanded(!expanded);\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const Left = ({isExpanded}:{isExpanded:boolean}) => {\r\n    return <MaterialCommunityIcon\r\n        name={isExpanded ? 'chevron-down' : 'chevron-right'}\r\n        color={Colors[theme].text}\r\n        size={24}\r\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\r\n      />\r\n  }\r\n  return <View>\r\n      <List.Accordion\r\n        title={props.note.title}\r\n        expanded={expanded && data!==undefined}\r\n        style={{padding:itemPadding}}\r\n        onPress={()=>navigate('ContentListScreen', {id:props.note.id})}\r\n        left={(_props)=><List.Icon {..._props} icon={expanded?'chevron-down' : 'chevron-right'} />}\r\n        right={()=>undefined}\r\n      >\r\n        {data && data.slice(0, 10).map(v=><List.Item key={v.id} left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />} title={v.title} onPress={()=>navigate('NoteScreen', {id:v.id})} style={{padding:itemPadding}} />)}\r\n        {((data?.length || 0) > 10) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"file-document-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"ContentListScreen\", {id: props.note.id})} style={{padding:itemPadding}}  />}\r\n      </List.Accordion>\r\n      <TouchableRipple style={{position:'absolute', justifyContent:'center', paddingLeft: 8 + itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2 }} onPress={handlePress}>\r\n          <Left isExpanded={expanded}/>\r\n      </TouchableRipple>\r\n    </View>\r\n}\r\n\r\nexport const AddNoteButton = () => {\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  return <TouchableRipple style={{position:'absolute', right:0}} onPress={()=>navigate('ContentListScreen', {type:'NOTEV2'})}><List.Icon icon='plus' style={{margin:itemPadding}}></List.Icon></TouchableRipple>\r\n}\r\n\r\n\r\nconst ContentGroupList = ( props : {type:'PAGE'}| {type:'NOTEV2', extra:boolean}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useContentList(undefined, 'NOTEV2');\r\n  const pages = useContentList(undefined, props.type==='PAGE'?'PAGE':undefined);\r\n  const { openedIds } = useOpenedContext()\r\n  const data = props.type === 'NOTEV2'? notes:openedIds.map((v)=>v.created?{\r\n    parentId:v.parentId,\r\n    title:lang(\"New Page\") + `(${notes?.find(v2=>v2.id===v.parentId)?.title})`\r\n  }:{\r\n    id:v.id,\r\n    title:pages?.find(v2=>v2.id===v.id)?.title\r\n  })\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  return (\r\n    <List.Section>\r\n        {data && data.map(v=>\r\n          (props.type==='NOTEV2' && props.extra)?\r\n          <ContentSubGroupList key={v.id} note={v as Content}/>:\r\n          <List.Item key={v.id || v.parentId} left={(_props)=><List.Icon {..._props} icon={props.type==='NOTEV2'?\"notebook\":\"file-document-edit\"} />} title={v.title} onPress={()=>navigate(props.type==='NOTEV2'?'ContentListScreen':'NoteScreen', v.id!==undefined?{id:v.id}:{parentId:v.parentId})} style={{padding:itemPadding }} />\r\n        )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupList;","import React, {} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections, navigate } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupList, { AddNoteButton } from '../../components/ContentGroupList';\r\nimport { List } from 'react-native-paper';\r\n\r\n\r\nconst OpenedEditorsTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst NoteTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'NOTEV2'} extra={false}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Opened Editors'), component:OpenedEditorsTabView, icon:<List.Icon icon={'file-document-edit'}/>, headerRight:()=><></>},\r\n    {title: lang('Notes'), component:NoteTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><AddNoteButton/>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  return <HomeSection tabViews={tabViews} title={lang('home')}>\r\n    <View style={{flexGrow:1, width:'80%', marginTop:72}}>\r\n      <Text style={{fontSize:32, color}}>Blacktokki Notebook</Text>\r\n      <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n      {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n      <View style={{height:24}}/>\r\n      <ConfigSections/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import ContentListScreen from \"./main/ContentListScreen\";\r\nimport NoteScreen from \"./main/NoteScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n      title:'home',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NoteScreen: {\r\n      path: 'notes',\r\n      title: 'notes',\r\n      component: NoteScreen\r\n    },\r\n    ContentListScreen: {\r\n      path: 'contents',\r\n      title: 'contents',\r\n      component: ContentListScreen\r\n    }\r\n  };\r\n  ","import { useQuery } from \"react-query\";\r\nimport { getContentOne } from \"../services/notebook\";\r\n\r\nexport default function useContent(id?:number){\r\n  const { data } = useQuery([\"Content\", id] , async()=> (id?await getContentOne(id):undefined))\r\n  return data\r\n}","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView,  View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport ContentList from '../../components/ContentList';\r\n\r\nexport default function ContentListScreen({ navigation, route }: StackScreenProps<any, 'ContentList'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id:  route?.params?.id===\"*\"?\"*\":parseInt(route?.params?.id),\r\n    type: route?.params?.type\r\n  } as { created:true, type:'NOTEV2' } | { created:false, id:number| \"*\" }\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const rootlist = useContentList(0);\r\n  const list = rootlist\r\n  const contentMutation = useContentMutation()\r\n  const content = params.created?undefined:list?.find(v=>v.id===params.id)\r\n  const [title, setTitle] = useState<string>()\r\n  const [editable, setEditable] = useState(false)\r\n  const type = params.created?params.type:content?.type\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else{\r\n      navigation.navigate('HomeScreen', {tab:1})\r\n    }\r\n  }\r\n  const onSave = ()=>{\r\n    if (!auth.user || (title===undefined) || (content?.title === title) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    if (params.created){\r\n        const typedList = list?.filter(v=>v.type == params.type)\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:0, type, order: (typedList?.length || 0) + 1, title, option:{}}).then(v=>{\r\n            navigate(\"ContentListScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, title}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'NOTEV2': lang('New Note'),\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}  \r\n  useLayoutEffect(()=>{\r\n    if(params.created){\r\n      setEditable(false)\r\n      setTitle(defaultTitle[params.type])\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setTitle(content.title)\r\n    }\r\n  }, [content, type])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else {\r\n        navigation.setOptions({\r\n            title: content?.title || lang(\"All Timelines\"),\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content?.type==='NOTEV2' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('NoteScreen', {parentId:content.id})}/>}\r\n              {(content && !params.created) && <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>}\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, type, editable]);\r\n\r\n  const editableExact = (params.created || editable)\r\n\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\", backgroundColor:'transparent'}}>\r\n    {editableExact?\r\n      <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={params.created?back:()=>setEditable(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>}\r\n      </>:\r\n      <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n        {content && <ContentList parentContent={content}/>}\r\n      </ScrollView>}\r\n    </ThemedView>\r\n}\r\n","import React from 'react';\r\nimport ContentGroupList, { AddNoteButton } from '../components/ContentGroupList';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('HomeScreen')} />\r\n        <List.Subheader style={{}} selectable={false}>{lang(\"Open Editors\")}</List.Subheader>\r\n        <ScrollView style={{minHeight:'30%', maxHeight:'60%', flexShrink:1, flexGrow:0.1}}>\r\n            <ContentGroupList type={'PAGE'} />\r\n        </ScrollView>\r\n        <View style={{flexDirection:'row'}}>\r\n            <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>\r\n            <AddNoteButton/>\r\n        </View>\r\n        <ScrollView style={{minHeight:'30%', maxHeight:'60%', flexShrink:0.1, flexGrow:1}}>\r\n            <ContentGroupList type={'NOTEV2'} extra={true} />\r\n        </ScrollView>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { NotebookProvider } from '../hooks/useNotebookContext';\r\n\r\nconst getConfig = async () => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'HomeScreen',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <></>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig().then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n        <NotebookProvider>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n        </NotebookProvider>\r\n    </PaperProvider>\r\n}"],"names":["re","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref","link","isMobile","_jsx","View","style","borderRadius","marginVertical","marginHorizontal","children","_jsxs","TouchableOpacity","onPress","Linking","openURL","url","onLongPress","width","flexDirection","imageUrl","Image","source","uri","resizeMode","maxWidth","maxHeight","borderWidth","undefined","flex","overflow","minHeight","Text","fontSize","numberOfLines","title","ellipsizeMode","axios","axiosCreate","getContentOne","_asyncToGenerator","id","get","data","_x","apply","arguments","getContentList","_ref2","parentId","type","parentIdParam","typeParam","value","_x2","_x3","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","deleteContent","_ref6","delete","_x6","postCells","_ref7","contents","_x7","previewScrap","_ref8","cells","_ref9","preview","query","_x9","useContentList","useQuery","useContentMutation","queryClient","useQueryClient","create","useMutation","onSuccess","_onSuccess","invalidateQueries","update","_onSuccess2","Promise","all","_delete","updateCells","useEffect","mutateAsync","updatedOffset","Date","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","slice","date","parentContent","ScrollView","item","justifyContent","padding","borderBottomWidth","borderColor","navigate","flexShrink","opacity","toRaw","textAlign","DraggableFlatList","ScaleDecorator","DndCore","DndSortable","DndUtilities","Platform","OS","DraggableImport","default","require","DraggableCellItem","code","renderCellContent","_DndSortable$useSorta","useSortable","attributes","listeners","setNodeRef","transform","transition","isDragging","CSS","Transform","toString","x","y","scaleX","scaleY","position","zIndex","ref","_objectSpread","cursor","height","left","top","SortableCellsList","items","onSortEnd","getId","_useState","useState","_useState2","_slicedToArray","codes","setCodes","_useState3","_useState4","tempCodes","setTempCodes","useIsMobile","endsWith","now","sensors","useSensors","useSensor","TouchSensor","activationConstraint","distance","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","findIndex","newIndex","idx","arrayMove","Array","from","keys","SortableContext","strategy","verticalListSortingStrategy","commonStyles","cellsList","StyleSheet","paddingVertical","paddingHorizontal","setItems","setData","renderContent","renderItem","keyExtractor","drag","isActive","alignItems","Icon","name","size","color","contentContainerStyle","onChangeText","placeholder","_ref$autoCapitalize","autoCapitalize","_ref$autoCorrect","autoCorrect","_ref$minHeight","setHeight","TextInput","multiline","onContentSizeChange","contentHeight","nativeEvent","contentSize","newHeight","Math","max","textAlignVertical","ExecutionStatus","typeDetail","executable","init","iconName","iconSize","light","dark","createUseStyle","styles","_styles","theme","lightStyles","darkStyles","React","isSelected","heightRef","setCells","executeCell","setSelectedCellId","useStyles","markdownStyles","useMarkdownStyles","updateCellContent","content","prevCells","cell","toggleInputVisibility","inputVisible","toggleOutputVisibility","outputVisible","cellContainer","current","selectedCell","onLayout","e","layout","cellHandle","paddingTop","executionCount","executionCountText","cellContent","activeOpacity","cellInputContainer","visibleToggleContainer","visibleToggle","cellToolbar","toolbarButton","disabled","summaryButton","summaryText","display","EditorViewer","autoResize","Editor","setValue","text","DynamicTextInput","codeInput","markdownInput","Markdown","status","COMPLETED","ERROR","output","JSON","parse","_Fragment","links","LinkPreview","renderLinkOutput","outputContainer","errorOutput","outputText","Colors","background","codeText","codeBackground","outerBackground","border","selectedBorder","error","markdownHead","markdownCode","header","backgroundColor","elevation","fontWeight","headerButtonText","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","draggingCell","margin","borderBottomColor","fontFamily","borderTopWidth","borderTopColor","headerButtons","marginBottom","marginRight","body","heading1","marginTop","heading2","code_inline","code_block","Hash","stringify","hash","old","_new","container","addCellContainer","flexWrap","addCellRow","addCellButton","addCellButtonText","props","useColorScheme","lang","useLangContext","cellsHistory","present","_setCells","_cells","newCells","forEach","setHistory","past","concat","_toConsumableArray","future","func","selectedCellId","useRef","nextExecutionCount","useMemo","counts","sort","a","b","cellRef","executeAllCells","_executeAllCells","unselected","RUNNING","find","c","result","resolve","reject","then","console","log","String","useCallback","Cell","SafeAreaView","SortableList","Object","entries","k","buttonStyle","newCell","IDLE","addCell","previous","newPast","undo","next","newFuture","redo","NotebookContext","createContext","opened","setOpened","NotebookProvider","complete","setComplete","auth","useAuthContext","loadOpened","AsyncStorage","getItem","user","fromEntries","created","_setOpened","_auth$user","newOpened","parseInt","setItem","Provider","useOpenedContext","_useContext","useContext","openedIds","addOpenedIds","newOpenIds","deleteOpenedIds","unsaved","getItemPadding","isLandscape","ContentSubGroupList","_React$useState","_React$useState2","expanded","setExpanded","window","useResizeContext","note","itemPadding","List","_props","icon","right","TouchableRipple","paddingLeft","isExpanded","MaterialCommunityIcon","direction","I18nManager","getConstants","isRTL","AddNoteButton","notes","pages","_notes$find","_pages$find","v2","extra","OpenedEditorsTabView","ContentGroupList","NoteTabView","ConfigTabView","ConfigSections","main","HomeScreen","component","navigation","route","tabViews","headerRight","HomeSection","flexGrow","path","NoteScreen","_route$params","_route$params2","_route$params3","_route$params4","params","_useOpenedContext","option","EXECUTION_COUNT","EXECUTION_STATUS","INPUT_VISIBLE","OUTPUT_VISIBLE","unsavedKey","_setHistory","history","contentMutation","setTitle","_useState5","_useState6","editPage","setEditPage","isSaved","onSaveTitle","promise","replaceAll","join","userId","order","onSave","deleted","useLayoutEffect","_cellRef$current","setOptions","CommonButton","exit","headerShown","canGoBack","goBack","nextId","values","tab","back","ThemedView","mode","textStyle","NoteSection","ContentListScreen","list","editable","setEditable","defaultTitle","onEdit","editableExact","_promise","typedList","ContentList","selectable","getConfig","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}