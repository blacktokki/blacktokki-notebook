{"version":3,"file":"static/js/710.2b053676.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/hooks/useKeywordStorage.ts","src/components/SearchBar.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/RecentPageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/index.ts","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getNoteContents = async (): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList()).filter(v=>(v.type==='NOTE'|| v.type==='BOOKMARK'))\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      await (id?patchContent({id, updated:content}):postContent(content));\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: getNoteContents,\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const contents = await getNoteContents();\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        const contents = await getNoteContents();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        const contents = await getNoteContents();\r\n        return contents.find(v=>v.title === lastPage)\r\n      } \r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: async (data) => {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    \r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import { TouchableOpacity, View, FlatList, StyleSheet } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { createCommonStyles } from \"../styles\";\r\nimport { Text, useColorScheme } from \"@blacktokki/core\";\r\n\r\nexport interface NodeData {\r\n    path: string;\r\n    title: string;\r\n    level: number;\r\n    header: string;\r\n    description: string;\r\n  }\r\n  \r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n  \r\n    const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n  \r\n    const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n    const headerStack: { level: number; title: string }[] = [];\r\n  \r\n    let current: NodeData | null = null;\r\n    let cursor = doc.body.firstChild;\r\n  \r\n    const flushCurrent = () => {\r\n      if (current) {\r\n        result.push(current);\r\n        current = null;\r\n      }\r\n    };\r\n  \r\n    while (cursor) {\r\n      if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n        const el = cursor as HTMLElement;\r\n        if (headings.includes(el.tagName)) {\r\n          flushCurrent();\r\n  \r\n          const level = parseInt(el.tagName.substring(1));\r\n          const title = el.textContent?.trim() || \"\";\r\n  \r\n          // 헤더 스택 업데이트\r\n          while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n            headerStack.pop();\r\n          }\r\n          headerStack.push({ level, title });\r\n  \r\n          const path = headerStack.map(h => h.title).join(\" > \");\r\n  \r\n          current = {\r\n            path,\r\n            title,\r\n            level,\r\n            header: el.outerHTML,\r\n            description: \"\",\r\n          };\r\n        } else if (current) {\r\n          current.description += el.outerHTML;\r\n        } else {\r\n          // 헤더 밖의 내용 처리\r\n          result[0].description += el.outerHTML;\r\n        }\r\n      } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n        current.description += cursor.textContent || \"\";\r\n      }\r\n  \r\n      cursor = cursor.nextSibling;\r\n    }\r\n  \r\n    flushCurrent();\r\n    return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props:{root:string, path:string, onPress:(item:NodeData)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.onPress(item)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?[commonStyles.title, {marginBottom:5, marginTop:3}]:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n})","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords';\r\n\r\nexport type KeywordContent = {\r\n  type: \"_NOTELINK\",\r\n  name: string, \r\n  title: string,\r\n  section?: string\r\n} | {\r\n  type:  \"_KEYWORD\",\r\n  title: string\r\n}\r\n\r\nconst getKeywords = async (): Promise<KeywordContent[]> => {\r\ntry {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n} catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n}\r\n};\r\n    \r\nconst saveKeywords = async (keywords: KeywordContent[]): Promise<void> => {\r\ntry {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY, jsonValue);\r\n} catch (e) {\r\n    console.error('Error saving keywords', e);\r\n}\r\n};\r\n\r\nexport const useKeywords = () => {\r\n    return useQuery({\r\n        queryKey: ['keywords'],\r\n        queryFn: async () => {\r\n        return getKeywords()\r\n        },\r\n    });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (keyword:KeywordContent) => {\r\n      const keywords = await getKeywords();\r\n      const newKeywords = [...new Set([JSON.stringify(keyword), ...keywords.map(v=>JSON.stringify(v))])].map(v=>JSON.parse(v))\r\n      await saveKeywords(newKeywords)\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { parseHtmlToSections } from './HeaderSelectBar';\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\n\r\nlet _searchText = ''\r\n\r\ntype SearchContent = Content | KeywordContent\r\n\r\nfunction extractHtmlLinksWithQuery(text:string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map(a => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nexport function urlToNoteLink(url:string){\r\n  const newLocation = new URL(url);\r\n  if (location.origin  === newLocation.origin){\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get(\"title\")\r\n    const section = params.get(\"section\") || undefined\r\n    if (title){\r\n      return {title, section}\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFilteredPages = (pages:Content[], searchText:string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase()\r\n  const noteLinks = pages.flatMap(v=>extractHtmlLinksWithQuery(v.description || '').map((v2)=>{\r\n    const noteLink = urlToNoteLink(v2.url);\r\n    if(noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/){\r\n      return {type: \"_NOTELINK\" as \"_NOTELINK\", name:v2.text, ...noteLink}\r\n    }\r\n  }).filter(v=>v !==undefined))\r\n  return [\r\n    ...pages.filter(page =>page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter(v=>v.name.toLowerCase().startsWith(lowerCaseSearch))\r\n  ]\r\n}\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter(v=>v.description);\r\n  return randomPages && <TouchableOpacity\r\n    style={commonStyles.searchButton}\r\n    onPress={()=>{\r\n      const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n      const sections = parseHtmlToSections(page.description || '')\r\n      navigation.navigate('NotePage', { title:page.title, section: sections[Math.floor(Math.random() * sections.length)].title });\r\n    }}\r\n>\r\n  <Icon name={\"random\"} size={18} color=\"#FFFFFF\" />\r\n</TouchableOpacity>\r\n}\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void, useRandom?:boolean;}> = ({handlePress, useRandom=true}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput|null>()\r\n  const { data:keywords = []} = useKeywords()\r\n  const addKeyword = useAddKeyowrd()\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages:SearchContent[] = searchText.length > 0\r\n    ? getFilteredPages(pages, searchText).slice(0, 10)\r\n    : keywords.slice(0, 10)\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n      addKeyword.mutate({type:\"_KEYWORD\", title:searchText.trim()})\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?:string) => {\r\n    handlePress?handlePress(title):navigation.navigate('NotePage', { title, section });\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(()=>PanResponder.create({\r\n      onPanResponderStart: handleSearch,\r\n    }).panHandlers\r\n  ,[searchText])\r\n\r\n  const pagePressHandlers = useCallback((item:SearchContent)=>{\r\n    return PanResponder.create({\r\n      onPanResponderStart:() => {\r\n        if (item.type === \"_NOTELINK\" && item.section){\r\n          handlePagePress(item.title, item.section)\r\n          addKeyword.mutate(item)\r\n        }\r\n        else {\r\n          handlePagePress(item.title)\r\n          addKeyword.mutate({type:\"_KEYWORD\", title:item.title})\r\n        }\r\n      }\r\n    }).panHandlers\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={ref=>{inputRef.current = ref}}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={()=>setShowResults(true)}\r\n          onBlur={()=>setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton/>}\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <FlatList\r\n              data={filteredPages}\r\n              keyExtractor={(item:any) => JSON.stringify([item.title, item.name, item.section])}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.resultItem}\r\n                  {...pagePressHandlers(item)}\r\n                >\r\n                  <Text style={[commonStyles.text, styles.resultText]}>{item.type===\"_NOTELINK\"?item.name:item.title}</Text>\r\n                  {item.type ===\"_NOTELINK\" && <Text style={[commonStyles.text, styles.resultText, {fontSize:12}]}>{item.title}{item.section?(\" > \"+item.section):\"\"}</Text>}\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              {...searchHandlers}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport { getFilteredPages } from '../../components/SearchBar';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n        autoComplete={[{\r\n          trigger: '[',\r\n          getMatchedChars: (pattern) => {\r\n            return getFilteredPages(pages, pattern).map(v=>{\r\n              const text = v.type === '_NOTELINK' ? v.name : v.title;\r\n              const url = encodeURI(v.type === '_NOTELINK' && v.section ? `?title=${v.title}&section=${v.section}`:`?title=${v.title}`);\r\n              return {\r\n                text,\r\n                value:`<a href=${url}>${text}</a>`,\r\n              }})\r\n          }\r\n        }]}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'LAST'} | {type:'NOTE', noteCount:number}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?.filter(v=>v.description).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() ):pages.data)\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return (\r\n    <List.Section>\r\n        {data && (\r\n         props.type === 'LAST'\r\n         ?(lastPage && (data?.find(v=>v.id===lastPage.id) === undefined) && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n         />)\r\n         :props.type === 'NOTE'\r\n         ?<>{data.slice(0, props.noteCount).map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n          title={v.title} \r\n          onPress={()=>noteOnPress(v.title)}\r\n          onLongPress={()=>noteOnLongPress(v.title)}\r\n          style={{padding:itemPadding }} \r\n        />)}\r\n        {((data?.length || 0) > props.noteCount) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}  />}\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import React, { useEffect, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FlatList, ScrollView, StyleSheet, TextInput, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\n\r\n\r\nconst OpenedEditorsTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst NoteTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'NOTE'} noteCount={15}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Open Pages'), component:OpenedEditorsTabView, icon:<List.Icon icon={'file-document'}/>, headerRight:()=><></>},\r\n    {title: lang('Notes'), component:NoteTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%'}]}>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections/>\r\n      </View>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 16,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#3498DB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 48,\r\n    borderRadius: 4,\r\n    marginLeft: 8,\r\n  },\r\n  recentButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const [path,setPath] = useState('')\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const [preview, setPreview] = useState<boolean>()\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const moveDescription = moveParagraph.map(v=>v.header + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map(v=>(v.path===path && v.description===''?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title);\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    if (!isLoading){\r\n      const _path = paragraph.find(v=>v.title === section)?.path || ''\r\n      setPath(_path)\r\n      setNewPath(_path)\r\n    }\r\n  }, [section, isLoading])\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:window==='landscape'?'row':'column', zIndex:1}}>\r\n          <View style={{zIndex:1}}>\r\n            <Text style={commonStyles.text}>현재 노트 제목:</Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>{title}</Text>\r\n            <Text style={commonStyles.text}>현재 노트 문단:</Text>\r\n            { section!==undefined?\r\n              <Text style={[commonStyles.title, styles.columns]}>{section}</Text>:\r\n              <View style={styles.columns}>\r\n                <HeaderSelectBar path={path} onPress={(item)=>setPath(item.path)} root={page?.title || ''} data={paragraph}/>\r\n              </View>}\r\n            <Text style={commonStyles.text}>새 노트 제목:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false}/>\r\n            <Text style={commonStyles.text}>새 노트 문단:</Text>\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar path={newPath} onPress={(item)=>setNewPath(item.path)} root={newPage?.title || ''} data={newParagraph}/>\r\n            </View>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[commonStyles.button, styles.moveButton, {flex:0, flexDirection:'row', alignItems:'center', paddingTop:24, paddingBottom:16}]} \r\n              onPress={()=>setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>{title}{paragraphItem?.level!==0?( \"/\"+paragraphItem?.title):\"\"}</Text>\r\n              <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ▶  </Text>\r\n              <Text style={commonStyles.title}>{newTitle}{newParagraphItem?.level!==0?( \"/\"+(newParagraphItem?.title || \"?\")):\"\"}</Text>   \r\n            </TouchableOpacity>\r\n              {preview!==undefined && <View style={{display:preview?'flex':'none'}}>\r\n              <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  autoResize\r\n                />\r\n              </View>}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: { \r\n    marginTop: 8, \r\n    marginBottom: 16 \r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages, useRecentPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar } from '../../components/SearchBar';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  \r\n  const handlePagePress = (title: string) => {\r\n    navigation.navigate('NotePage', { title });\r\n  };\r\n  \r\n\r\n  return (<>\r\n    {window === 'portrait' && <SearchBar/>}\r\n    <View style={commonStyles.container}>      \r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : recentPages.length > 0 ? (\r\n        <FlatList\r\n          data={recentPages.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() )}\r\n          keyExtractor={(item) => item.title}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => handlePagePress(item.title)}\r\n            >\r\n              <Text style={commonStyles.title}>{item.title}</Text>\r\n              <Text style={commonStyles.smallText}>\r\n                최근 수정: {updatedFormat(item.updated)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>\r\n            최근 수정한 노트가 없습니다.\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar, urlToNoteLink } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nconst sectionDescription = (paragraph:NodeData[], section:string) => {\r\n  const path = paragraph.find(v=>v.title===section)?.path\r\n  return path?paragraph.filter(v=>v.path.startsWith(path)).map(v=>v.header + v.description).join(\"\"):\"\"\r\n}\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false)\r\n  \r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description||'');\r\n  const [description, setDescription] = useState<string>()\r\n  useEffect(()=>{\r\n    if(description === undefined) {\r\n      setDescription(section?sectionDescription(paragraph, section) :page?.description)\r\n    }\r\n    else {\r\n      return () => setDescription(undefined);\r\n    }\r\n  }, [page, section, description])\r\n\r\n\r\n  return (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <ScrollView style={[\r\n      commonStyles.container, \r\n      //@ts-ignore\r\n      {paddingRight:12, scrollbarGutter: 'stable'}]}>\r\n      <View style={commonStyles.header}>\r\n        <TouchableOpacity onPress={()=>navigation.navigate('NotePage', { title })}>\r\n          <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>\r\n            {title}{section?\" ▶ \"+section:\"\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        {!!page?.description && <View style={styles.actionButtons}>\r\n          <TouchableOpacity onPress={()=>toggleToc(!toc)} style={styles.actionButton}>\r\n            <Icon name=\"list\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n            <Icon name=\"exchange\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          {section\r\n          ?undefined\r\n          :<>\r\n            <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n              <Icon name=\"pencil\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n          </>}\r\n        </View>}\r\n      </View>\r\n      <View style={commonStyles.flex}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={!toc && description?[commonStyles.card, {flex:1, padding:0}]:{flex:1, position:'absolute'}}>\r\n            <EditorViewer\r\n              active\r\n              value={description || ''}\r\n              theme={theme}\r\n              onLink={(url)=>{\r\n                const noteLink = urlToNoteLink(url);\r\n                if(noteLink){\r\n                  navigation.navigate(\"NotePage\", noteLink)\r\n                }\r\n                else{\r\n                  window.open(url, '_blank');\r\n                }\r\n              }}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {toc? <HeaderSelectBar data={paragraph} path={section || ''} root={title} onPress={(item)=>navigation.navigate('NotePage', {title, section:item.title})}/>\r\n          :page?.description ? undefined : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n\r\n  };\r\n  ","import React from 'react';\r\nimport ContentGroupSection from '../screens/main/home/ContentGroupSection';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <ScrollView>\r\n            <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n            <ContentGroupSection type={'LAST'} />\r\n            <ContentGroupSection type={'PAGE'} />\r\n            <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>{/* 최근 변경 */}\r\n            <ContentGroupSection type={'NOTE'} noteCount={10}/>\r\n        </ScrollView>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst HeaderRight = ()=>{\r\n    const windowType = useResizeContext();\r\n    return windowType==='landscape'?<SearchBar/>:undefined\r\n}\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <HeaderRight/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","type","parentIdParam","undefined","typeParam","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getNoteContents","saveNoteContents","contents","content","find","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","_x","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","useNotePage","title","queryClient","useQueryClient","_queryFn","page","c","invalidateQueries","useLastPage","_queryFn3","useCreateOrUpdatePage","auth","useAuthContext","useMutation","mutationFn","_mutationFn","updatedContents","_objectSpread","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","useDeleteRecentPage","_mutationFn4","updatedRecentPages","_title","_x8","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","textContent","trim","pop","h","join","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","KEYWORDS_KEY","getKeywords","saveKeywords","keywords","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","section","getFilteredPages","pages","searchText","lowerCaseSearch","toLowerCase","noteLinks","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","noteLink","startsWith","RandomButton","navigation","useNavigation","_useNotePages$data","randomPages","Math","floor","random","sections","navigate","SearchBar","handlePress","_ref$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useKeywords","_useKeywords$data","addKeyword","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","filteredPages","slice","handleSearch","handlePagePress","mutate","searchHandlers","useMemo","PanResponder","onPanResponderStart","panHandlers","pagePressHandlers","useCallback","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","cancelButton","marginRight","saveButton","marginLeft","_notes$data","lang","useLangContext","notes","_queryFn2","recentTitles","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x7","useAddRecentPage","deleteRecentPage","sort","b","Date","getTime","window","useResizeContext","itemPadding","noteOnPress","clearTimeout","setTimeout","noteOnLongPress","_pages$data","List","_props","icon","onLongPress","titleStyle","fontStyle","_Fragment","noteCount","_pages$data2","TouchableRipple","margin","OpenedEditorsTabView","ScrollView","Colors","background","ContentGroupSection","NoteTabView","ConfigTabView","ConfigSections","recentButton","columns","moveButton","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","pageTitle","actionButtons","actionButton","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","NotePage","_route$params","useRoute","_window","toc","toggleToc","_useNotePage","isLoading","handleEdit","paragraph","setDescription","_paragraph$find","sectionDescription","paddingRight","scrollbarGutter","numberOfLines","ActivityIndicator","EditorViewer","active","onLink","open","autoResize","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","pattern","encodeURI","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","setPath","newParagraph","_useState5","_useState6","newPath","setNewPath","_useState7","_useState8","setPreview","moveMutation","_mutationFn2","oldTitle","Error","some","_x6","useMovePage","_useMemo","moveParagraph","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","_path","paragraphItem","newParagraphItem","moveDisabled","paddingTop","paddingBottom","display","RecentPages","_useNotePages","selectable","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","then","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}