{"version":3,"file":"static/js/279.a79ca4cf.chunk.js","mappings":"wXAIMA,EAAe,iCAcfC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,UAAG,UAAOC,GACzB,IACE,IAAMC,QAAkBC,EAAAA,QAAaC,QAAQP,EAAeI,GAC5D,OAAOC,EAAYG,KAAKC,MAAMJ,GAAa,EAC7C,CAAE,MAAOK,GAEP,OADAC,QAAQC,MAAM,yBAA0BF,GACjC,EACT,CACF,IAAC,gBARgBG,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KAUXC,EAAY,eAAAC,GAAAd,EAAAA,EAAAA,UAAG,UACnBC,EACAc,GAEA,IACE,IAAMb,EAAYG,KAAKW,UAAUD,SAC3BZ,EAAAA,QAAac,QAAQpB,EAAeI,EAAQC,EACpD,CAAE,MAAOK,GACPC,QAAQC,MAAM,wBAAyBF,EACzC,CACF,IAAC,gBAViBW,EAAAC,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAYLQ,EAAc,WAAO,IAADC,EACvBC,GAASC,EAAAA,EAAAA,kBAATD,KACFrB,EAASqB,EAAKE,QAAU,GAAK,GAAY,OAAZH,EAAGC,EAAKG,WAAI,EAATJ,EAAWK,KACjD,OAAOC,EAAAA,EAAAA,UAAS,CACdC,SAAU,CAAC,WAAY3B,GACvB4B,QAAQ,WAAD,IAAAC,GAAA9B,EAAAA,EAAAA,UAAE,YACP,aAAaF,EAAYG,EAC3B,IAFO,OAEN,WAFM,OAAA6B,EAAAnB,MAAA,KAAAC,UAAA,EAAC,IAIZ,EC7CMmB,GAAQC,EAAAA,EAAAA,aAAY,YAMbC,GAJa,eAAAlC,GAAAC,EAAAA,EAAAA,UAAG,UAAO0B,GAClC,aAAcK,EAAMG,IAAI,mBAAmBR,MAAOS,IACpD,GAF0B,IAIC,eAAArB,GAAAd,EAAAA,EAAAA,UAAG,UAAOoC,EAAmBC,GACtD,IAAMC,OAA6BC,IAAbH,EAAyB,aAAaA,IAAa,GACnEI,OAAsBD,IAAVF,EAAsB,UAAUA,EAAMI,KAAK,OAAS,GACtE,aAAcV,EAAMG,IAAI,qCAAqCI,IAAgBE,MAAcL,KACxFO,KACL,IAAC,gBAL0BxB,EAAAC,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,MAOd+B,EAAW,eAAAC,GAAA5C,EAAAA,EAAAA,UAAG,UAAO2C,GAChC,aAAeZ,EAAMc,KAAK,kBAAmBF,IAAcR,KAAiBT,EAC9E,IAAC,gBAFuBoB,GAAA,OAAAF,EAAAjC,MAAA,KAAAC,UAAA,KAIXmC,EAAY,eAAAC,GAAAhD,EAAAA,EAAAA,UAAG,UAAAiD,GAAkE,IAAzDvB,EAAEuB,EAAFvB,GAAIwB,EAAOD,EAAPC,cACjCnB,EAAMoB,MAAM,kBAAmB,CAAEC,IAAK,CAAC1B,GAAKwB,QAAAA,GACpD,IAAC,gBAFwBG,GAAA,OAAAL,EAAArC,MAAA,KAAAC,UAAA,KAQZ0C,GAJa,eAAAC,GAAAvD,EAAAA,EAAAA,UAAG,UAAO0B,SAC5BK,EAAMyB,OAAO,mBAAmB9B,IACxC,GAF0B,IAIH,eAAA+B,GAAAzD,EAAAA,EAAAA,UAAG,UAAO0D,GAC/B,aAAc3B,EAAMG,IAAI,sCAAsCwB,EAAQC,UAAUxB,IAClF,IAAC,gBAFsByB,GAAA,OAAAH,EAAA9C,MAAA,KAAAC,UAAA,M,2kBCtBvB,IAGIiD,EAHEC,EAAmB,gCACnBC,EAAmB,oCAInBC,EAAW,eAAAjE,GAAAC,EAAAA,EAAAA,UAAG,UAAOiE,EAAmBC,GAC5C,GAAID,EACF,aAAahC,OAAeM,EAAW,CAAC2B,IAE1C,GAAa,aAATA,EACF,MAAO,GAET,IACE,IAAMhE,QAAkBC,EAAAA,QAAaC,QAAQ0D,GAC7C,OAAO5D,EAAYG,KAAKC,MAAMJ,GAAa,EAC7C,CAAE,MAAOK,GAEP,OADAC,QAAQC,MAAM,8BAA+BF,GACtC,EACT,CACF,IAAC,gBAdgBG,EAAAQ,GAAA,OAAAnB,EAAAY,MAAA,KAAAC,UAAA,KAgBXuD,EAAgB,eAAArD,GAAAd,EAAAA,EAAAA,UAAG,UACvBiE,EACAG,EACA1C,GAEA,GAAIuC,EAAJ,CACE,IAAMI,EAAUD,EAASE,MAAK,SAACC,GAAC,OAAK7C,IAAQ6C,EAAsB7C,EAAE,IACrE,GAAI2C,EAAS,CACX,IAAMG,QAAiB9C,EACnBqB,EAAa,CAAErB,GAAAA,EAAIwB,QAASmB,IAAWI,MAAK,kBAAM/C,CAAE,IACpDiB,EAAY0B,GACVK,EAA+BC,EAAAA,EAAA,GAChCN,GAAO,IACVH,KAAM,WACNxC,QAAIa,EACJH,SAAUoC,UAEN7B,EAAY+B,EACpB,CAEF,MACA,IACE,IAAMxE,EAAYG,KAAKW,UAAUoD,SAC3BjE,EAAAA,QAAac,QAAQ6C,EAAkB5D,EAC/C,CAAE,MAAOK,GACPC,QAAQC,MAAM,6BAA8BF,EAC9C,CACF,IAAC,gBA3BqBY,EAAA2B,EAAAO,GAAA,OAAAvC,EAAAH,MAAA,KAAAC,UAAA,KA6BhBgE,EAAc,eAAAhC,GAAA5C,EAAAA,EAAAA,UAAG,YACrB,IACE,IAAME,QAAkBC,EAAAA,QAAaC,QAAQ2D,GAC7C,OAAO7D,EAAYG,KAAKC,MAAMJ,GAAa,EAC7C,CAAE,MAAOK,GAEP,OADAC,QAAQC,MAAM,6BAA8BF,GACrC,EACT,CACF,IAAC,kBARmB,OAAAqC,EAAAjC,MAAA,KAAAC,UAAA,KAUdiE,EAAe,eAAA5B,GAAAjD,EAAAA,EAAAA,UAAG,UAAO8E,GAC7B,IACE,IAAM5E,EAAYG,KAAKW,UAAU8D,SAC3B3E,EAAAA,QAAac,QAAQ8C,EAAkB7D,EAC/C,CAAE,MAAOK,GACPC,QAAQC,MAAM,4BAA6BF,EAC7C,CACF,IAAC,gBAPoBwE,GAAA,OAAA9B,EAAAtC,MAAA,KAAAC,UAAA,KASRoE,EAAe,WAC1B,IAAQ1D,GAASC,EAAAA,EAAAA,kBAATD,KACR,OAAOK,EAAAA,EAAAA,UAAS,CACdC,SAAU,CAAC,gBAAiBN,EAAKE,SACjCK,QAAQ,WAAD,IAAAC,GAAA9B,EAAAA,EAAAA,UAAE,yBAAkBgE,GAAa1C,EAAKE,QAAS,OAAO,IAAtD,OAAsD,WAAtD,OAAAM,EAAAnB,MAAA,KAAAC,UAAA,EAAC,IAEZ,EAEaqE,EAAmB,WAC9B,IAAQ3D,GAASC,EAAAA,EAAAA,kBAATD,KACR,OAAOK,EAAAA,EAAAA,UAAS,CACdC,SAAU,CAAC,oBAAqBN,EAAKE,SACrCK,QAAQ,WAAD,IAAAqD,GAAAlF,EAAAA,EAAAA,UAAE,yBAAkBgE,GAAa1C,EAAKE,QAAS,WAAW,IAA1D,OAA0D,WAA1D,OAAA0D,EAAAvE,MAAA,KAAAC,UAAA,EAAC,IAEZ,EAEauE,EAAc,SAACC,GAC1B,IAAMC,GAAcC,EAAAA,EAAAA,kBACpBC,EAA4CP,IAAcQ,EAAAD,EAAlDpD,KAAMiC,OAAQ,IAAAoB,EAAG,GAAEA,EAAEC,EAAUF,EAAVE,WAC7B,OAAO9D,EAAAA,EAAAA,UAAS,CACdC,SAAU,CAAC,cAAewD,GAC1BvD,QAAQ,WAAD,IAAA6D,GAAA1F,EAAAA,EAAAA,UAAE,YACP,IAAM2F,EAAOvB,EAASE,MAAK,SAACsB,GAAC,OAAKA,EAAER,QAAUA,CAAK,IAG/CO,SAE2CpD,WADnBqC,KACVN,MAAK,SAACC,GAAC,OAAKA,IAAMa,CAAK,MACrCvB,EAAWuB,QACLC,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,gBAGrD,OAAO+D,GAAQ,CAAEP,MAAAA,EAAOU,YAAa,GAAIpE,QAAIa,EAC/C,IAZO,OAYN,WAZM,OAAAmD,EAAA/E,MAAA,KAAAC,UAAA,EAAC,GAaRmF,SAAUN,GAEd,EAgBaO,EAAc,WACzB,IAAAC,EAA4CjB,IAAckB,EAAAD,EAAlD9D,KAAMiC,OAAQ,IAAA8B,EAAG,GAAEA,EAAET,EAAUQ,EAAVR,WAC7B,OAAO9D,EAAAA,EAAAA,UAAS,CACdC,SAAU,CAAC,YACXC,QAAQ,WAAD,IAAAsE,GAAAnG,EAAAA,EAAAA,UAAE,YACP,OAAOoE,EAASE,MAAK,SAACC,GAAC,OAAKA,EAAEa,QAAUvB,CAAQ,GAClD,IAFO,OAEN,WAFM,OAAAsC,EAAAxF,MAAA,KAAAC,UAAA,EAAC,GAGRmF,SAAUN,GAEd,EAEaW,EAAwB,WACnC,IAAMf,GAAcC,EAAAA,EAAAA,kBACZhE,GAASC,EAAAA,EAAAA,kBAATD,KACsC+E,EAAdrB,IAAxB7C,KAAMiC,OAAQ,IAAAiC,EAAG,GAAEA,EAC3B,OAAOC,EAAAA,EAAAA,aAAY,CACjBC,WAAW,WAAD,IAAAC,GAAAxG,EAAAA,EAAAA,UAAE,UAAAgD,GAA2E,IAGjFyD,EAHerB,EAAKpC,EAALoC,MAAOU,EAAW9C,EAAX8C,YACpBH,EAAOvB,EAASE,MAAK,SAACsB,GAAC,OAAKA,EAAER,QAAUA,CAAK,IAG7ClC,EAAU5B,EAAKE,SAAU,IAAIkF,MAAOC,mBAAgBpE,EAC1D,GAAIoD,EACFc,EAAkBrC,EAASwC,KAAI,SAAChB,EAAGiB,GAAC,OAClCjB,EAAElE,KAAOiE,EAAKjE,GAAEiD,EAAAA,EAAA,GAASiB,GAAC,IAAEE,YAAAA,EAAa5C,QAAAA,IAA4B0C,CAAC,QAEnE,CAAC,IAADvE,EACCyF,EAAU,CACd1B,MAAAA,EACAU,YAAAA,EACAiB,MAAO3B,EACP4B,QAAiB,OAAT3F,EAAAC,EAAKG,WAAI,EAATJ,EAAWK,KAAM,EACzBU,SAAU,EACV8B,KAAM,OACN+C,MAAO,EACP/D,QAAAA,EACAgE,OAAQ,CAAC,GAEXT,EAAe,GAAAU,QAAAC,EAAAA,EAAAA,SAAOhD,GAAQ,CAAE0C,GAClC,CAGA,aADM3C,GAAkB7C,EAAKE,QAASiF,EAAqB,MAAJd,OAAI,EAAJA,EAAMjE,IACtD,CAAE0D,MAAAA,EAAOU,YAAAA,EAClB,IA1BU,OA0BT,SA1BSlC,GAAA,OAAA4C,EAAA7F,MAAA,KAAAC,UAAA,EAAC,GA2BXyG,UAAU,WAAD,IAAAC,GAAAtH,EAAAA,EAAAA,UAAE,UAAOmC,SACVkD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,wBAC3CyD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,4BAC3CyD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,cAAeO,EAAKiD,eAC/DC,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,gBACnD,IALS,OAKR,SALQ2F,GAAA,OAAAD,EAAA3G,MAAA,KAAAC,UAAA,EAAC,IAOd,EA0Ea4G,EAAsB,WACjC,IAAMnC,GAAcC,EAAAA,EAAAA,kBAEpB,OAAOgB,EAAAA,EAAAA,aAAY,CACjBC,WAAW,WAAD,IAAAkB,GAAAzH,EAAAA,EAAAA,UAAE,UAAOoF,GAEjB,IACMsC,SADoB9C,KACa+C,QAAO,SAACC,GAAM,OAAKxC,IAAUwC,CAAM,IAI1E,OAHA/D,OAAWtB,QACLsC,EAAgB6C,GAEf,CAAEtC,MAAAA,EACX,IARU,OAQT,SARSyC,GAAA,OAAAJ,EAAA9G,MAAA,KAAAC,UAAA,EAAC,GASXyG,UAAW,SAAClF,GACVkD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,iBAC3CyD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,iBAC3CyD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,aAC7C,GAEJ,EC7QakG,EAAqB,SAACC,GACjC,OAAOC,EAAAA,QAAWC,OAAO,CACvBC,UAAW,CACTC,KAAM,EACNC,gBAA2B,SAAVL,EAAmB,UAAY,UAChDM,kBAAmB,GACnBC,gBAAiB,IAEnBC,KAAM,CACJH,gBAA2B,SAAVL,EAAmB,UAAY,UAChDS,aAAc,EACdC,QAAS,GACTC,aAAc,GACdC,YAAa,EACbC,YAAuB,SAAVb,EAAmB,UAAY,UAC5Cc,YAAuB,SAAVd,EAAmB,UAAY,UAC5Ce,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEb/D,MAAO,CACLgE,SAAU,GACVC,WAAY,OACZX,aAAc,EACdY,MAAiB,SAAVvB,EAAmB,UAAY,WAExCwB,KAAM,CACJH,SAAU,GACVE,MAAiB,SAAVvB,EAAmB,UAAY,UACtCyB,WAAY,IAEdC,OAAQ,CACNrB,gBAA2B,SAAVL,EAAmB,UAAY,UAChDS,aAAc,EACdC,QAAS,GACTiB,WAAY,SACZC,eAAgB,GAElBC,WAAY,CACVN,MAAO,UACPD,WAAY,MACZD,SAAU,IAEZS,aAAc,CACZzB,gBAAiB,UACjB0B,eAAgB,SAChBJ,WAAY,SACZX,MAAO,GACPC,OAAQ,GACRR,aAAc,EACduB,iBAAkB,GAEpBC,gBAAiB,CACfhB,OAAQ,EACRZ,gBAA2B,SAAVL,EAAmB,UAAY,WAElDhB,MAAO,CACLqB,gBAA2B,SAAVL,EAAmB,UAAY,UAChDY,YAAa,EACbC,YAAuB,SAAVb,EAAmB,UAAY,UAC5CS,aAAc,EACdC,QAAS,GACTa,MAAiB,SAAVvB,EAAmB,UAAY,UACtCW,aAAc,IAEhBuB,UAAW,CACTjB,OAAQ,EACRZ,gBAA2B,SAAVL,EAAmB,UAAY,UAChD4B,eAAgB,IAElBO,UAAW,CACTd,SAAU,GACVE,MAAiB,SAAVvB,EAAmB,UAAY,WAExCoC,OAAQ,CACNC,cAAe,MACfN,eAAgB,gBAChBJ,WAAY,SACZhB,aAAc,IAEhBP,KAAM,CACJA,KAAM,GAERkC,IAAK,CACHD,cAAe,MACfV,WAAY,UAEdY,cAAe,CACbR,eAAgB,SAChBJ,WAAY,WAGlB,E,WCjFO,SAASa,EAAoBC,GAmBlC,IAlBA,IACMC,GADS,IAAIC,WACAC,gBAAgBH,EAAM,aAEnCI,EAAqB,CAAC,CAAEC,KAAM,GAAIzF,MAAO,GAAI+E,OAAQ,GAAIW,MAAO,EAAGhF,YAAa,KAEhFiF,EAAqB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpDC,EAAkD,GAEpDC,EAA2B,KAC3BC,EAAST,EAAIU,KAAKC,WAEhBC,EAAe,WACfJ,IACFL,EAAOU,KAAKL,GACZA,EAAU,KAEd,EAEOC,GAAQ,CACb,GAAIA,EAAOK,WAAaC,KAAKC,aAAc,CACzC,IAAMC,EAAKR,EACX,GAAIH,EAASY,SAASD,EAAGE,SAAU,CAAC,IAADC,EACjCR,IAMA,IAJA,IAAMP,EAAQgB,SAASJ,EAAGE,QAAQG,UAAU,GAAI,IAC1C3G,GAAsB,OAAdyG,EAAAH,EAAGM,kBAAW,EAAdH,EAAgBI,SAAU,GAGjCjB,EAAYkB,OAAS,GAAKlB,EAAYA,EAAYkB,OAAS,GAAGpB,OAASA,GAC5EE,EAAYmB,MAEdnB,EAAYM,KAAK,CAAER,MAAAA,EAAO1F,MAAAA,IAE1B,IAAMyF,EAAOG,EAAYpE,KAAI,SAACwF,GAAC,OAAKA,EAAEhH,KAAK,IAAE3C,KAAK,OAElDwI,EAAU,CACRJ,KAAAA,EACAzF,MAAAA,EACA0F,MAAAA,EACAX,OAAQuB,EAAGW,UACXvG,YAAa,GAEjB,MAAWmF,EACTA,EAAQnF,aAAe4F,EAAGW,UAG1BzB,EAAO,GAAG9E,aAAe4F,EAAGW,SAEhC,MAAWnB,EAAOK,WAAaC,KAAKc,WAAarB,IAC/CA,EAAQnF,aAAeoF,EAAOc,aAAe,IAG/Cd,EAASA,EAAOqB,WAClB,CAGA,OADAlB,IACOT,CACT,CAEe,SAAS4B,EAAgBC,GAMtC,IAAM1E,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAiBxC,OACE6E,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CACHC,MAAO,CAACC,GAAOC,iBAA4B,SAAVjF,EAAmBgF,GAAOE,YAAcF,GAAOG,cAAcC,UAE9FP,EAAAA,EAAAA,KAACQ,EAAAA,QAAQ,CACPjL,KAAMsK,EAAMtK,KACZkL,aAAc,SAACC,GAAI,OAAKA,EAAKzC,IAAI,EACjC0C,WAAY,SAAFxN,GAAS,OAvBN,SAACuN,GAAc,OAChCE,EAAAA,EAAAA,MAACC,EAAAA,QAAgB,CAACX,MAAOC,GAAOW,WAAYC,QAAS,WAAF,OAAQlB,EAAMkB,QAAQL,EAAK,EAACH,SAAA,CAC7D,IAAfG,EAAKxC,QAAe8B,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAK,cAAcC,KAAM,GAAIxE,MAAM,aAC9DsD,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CACHjB,MAAO,CACLL,EAAM5B,OAASyC,EAAKzC,KAChB,CAAC8B,EAAavH,MAAO,CAAEsD,aAAc,EAAGsF,UAAW,IACnDrB,EAAapD,KACjBwD,GAAOkB,WACP,CAAEC,KAAmB,GAAbZ,EAAKxC,MAAa,KAC1BqC,SAEc,IAAfG,EAAKxC,MAAc2B,EAAM0B,KAAOb,EAAKlI,UAEvB,CASWmI,CAAPxN,EAAJuN,KAA2B,EAC1Cc,uBAAwB,WAAF,OAAQxB,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAOH,EAAa3C,iBAAmB,KAInF,CAEA,IAAM+C,GAAS/E,EAAAA,QAAWC,OAAO,CAC/BoG,WAAY,CACV5F,QAAS,GAEXiF,WAAY,CACVjF,QAAS,GACT2B,cAAe,OAEjB6D,WAAY,CACV7E,SAAU,IAEZkF,gBAAiB,CACflE,cAAe,MACfN,eAAgB,iBAElBkD,iBAAkB,CAChBrE,YAAa,EACbH,aAAc,GAEhB0E,aAAc,CACZ9E,gBAAiB,UACjBQ,YAAa,WAEfqE,YAAa,CACX7E,gBAAiB,UACjBQ,YAAa,a,+kBCpHjB,IAAI2F,GAAc,GAoBlB,SAASC,GAAcC,GACrB,IAAMC,EAAc,IAAIC,IAAIF,GAC5B,GAAIG,SAASC,SAAWH,EAAYG,OAAQ,CAC1C,IAAMC,EAAS,IAAIC,gBAAgBL,EAAYM,QACzC5J,EAAQ0J,EAAO5M,IAAI,SACnB+M,EAAUH,EAAO5M,IAAI,iBAAcK,EACzC,GAAI6C,EACF,MAAO,CAAEA,MAAAA,EAAO6J,QAAAA,EAEpB,CACF,CAEO,SAASC,GAAOT,EAAaU,GAClC,IAAMC,EAAWZ,GAAcC,GAC3BW,EACFD,EAAW7D,KAAK,WAAY8D,GAE5BC,OAAOC,KAAKb,EAAK,SAErB,CAEO,SAASc,GAAaC,GAC3B,OAAOA,EAAMC,SAAQ,SAAClL,GAAC,OAtCzB,SAAmCgF,GACjC,IAIMmG,GAJS,IAAIhF,WACAC,gBAAgBpB,EAAM,aAGvBoG,iBAAiB,KAQnC,OALgBC,MAAMC,KAAKH,GAAO9I,KAAI,SAACkJ,GAAC,IAAAC,EAAA,MAAM,CAC5CxG,MAAmB,OAAbwG,EAAAD,EAAE9D,kBAAW,EAAb+D,EAAe9D,SAAU6D,EAAEE,KACjCvB,IAAKqB,EAAEE,KACR,GAGH,CAyBIC,CAA0B1L,EAAEuB,aAAe,IACxCc,KAAI,SAACsJ,GACJ,IAAMd,EAAWZ,GAAc0B,EAAGzB,KAClC,GAAIW,GAAYc,EAAG3G,OAAS6F,EAAShK,MACnC,OAAAT,GAAAA,GAAA,CAAST,KAAM,YAA4B2J,KAAMqC,EAAG3G,MAAS6F,GAAQ,IAAEP,OAAQtK,EAAEa,OAErF,IACCuC,QAAO,SAACpD,GAAC,YAAWhC,IAANgC,CAAe,GAAC,GAErC,CAEO,IAAM4L,GAAmB,SAACX,EAAkBY,GACjD,IAAMC,EAAkBD,EAAWE,cAC7BC,EAAYhB,GAAaC,GAC/B,MAAM,GAANrI,QAAAC,EAAAA,EAAAA,SACKoI,EAAM7H,QAAO,SAAChC,GAAI,OAAKA,EAAKP,MAAMkL,cAAcE,WAAWH,EAAgB,MAACjJ,EAAAA,EAAAA,SAC5EmJ,EAAU5I,QAAO,SAACpD,GAAC,OAAKA,EAAEsJ,KAAKyC,cAAcE,WAAWH,EAAgB,KAE/E,EAEaI,GAAe,WAC1B,IAAM1I,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAClCoH,GAAauB,EAAAA,EAAAA,iBACwBlL,EAAdR,IAArB7C,KACFwO,QADa,IAAAnL,EAAG,GAAEA,GACEmC,QAAO,SAACpD,GAAC,OAAKA,EAAEuB,WAAW,IACrD,OACE6K,IACE/D,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfX,MAAOH,EAAa9C,aACpB8D,QAAS,WACP,IAAMhI,EAAOgL,EAAYC,KAAKC,MAAMD,KAAKE,SAAWH,EAAYzE,SAC1D6E,EAAWxG,EAAoB5E,EAAKG,aAAe,IACzDqJ,EAAW7D,KAAK,WAAY,CAC1BlG,MAAOO,EAAKP,MACZ6J,QAAS8B,EAASH,KAAKC,MAAMD,KAAKE,SAAWC,EAAS7E,SAAS9G,OAEnE,EAAE+H,UAEFP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAM,SAAUC,KAAM,GAAIxE,MAAM,aAI9C,EAEa0H,GAAc,SAAC1D,GAAyC,MACnE,GAAGA,EAAKlI,QAAQkI,EAAK2B,QAAU,WAAQ3B,EAAK2B,QAAU,IAAK,EAEhDgC,GAAa,SAAHlR,GAQhB,IAPLmR,EAAanR,EAAbmR,cACAC,EAAepR,EAAfoR,gBACAC,EAAUrR,EAAVqR,WAMMrJ,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAClCsJ,GAAoBC,EAAAA,EAAAA,cAAY,SAAChE,GACrC,OAAOiE,EAAAA,QAAatJ,OAAO,CACzBuJ,oBAAqB,WACD,cAAdlE,EAAKpJ,MAAwBoJ,EAAK2B,SACpCkC,EAAgB7D,EAAKlI,MAAOkI,EAAK2B,SACvB,MAAVmC,GAAAA,EAAa9D,KAEb6D,EAAgB7D,EAAKlI,OACX,MAAVgM,GAAAA,EAAa,CAAElN,KAAM,WAAYkB,MAAOkI,EAAKlI,QAEjD,IACCqM,WACL,GAAG,IAEH,OACE7E,EAAAA,EAAAA,KAACQ,EAAAA,QAAQ,CACPjL,KAAM+O,EACN7D,aAAc,SAACC,GAAS,OAAKjN,KAAKW,UAAU,CAACsM,EAAKlI,MAAOkI,EAAKO,KAAMP,EAAK2B,SAAS,EAClF1B,WAAY,SAAFzM,GAAA,IAAKwM,EAAIxM,EAAJwM,KAAI,OACjBE,EAAAA,EAAAA,MAACC,EAAAA,QAAgB9I,GAAAA,GAAA,CAACmI,MAAOC,GAAOW,YAAgB2D,EAAkB/D,IAAK,IAAAH,SAAA,EACrEP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAapD,KAAMwD,GAAOkB,YAAYd,SACnC,cAAdG,EAAKpJ,KAAuBoJ,EAAKO,KAAOP,EAAKlI,QAEjC,cAAdkI,EAAKpJ,OACJ0I,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAapD,KAAMwD,GAAOkB,WAAY,CAAE7E,SAAU,KAAM+D,SACnE6D,GAAY1D,QAGA,EAErBc,uBAAwB,WAAF,OAAQxB,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAACH,EAAa3C,kBAAoB,GAGnF,EAEa0H,GAGR,SAAH9O,GAA2C,IAArC+O,EAAW/O,EAAX+O,YAAWC,EAAAhP,EAAEiP,UAAAA,OAAS,IAAAD,GAAOA,EACnCE,GAAoCC,EAAAA,EAAAA,UAASxD,IAAYyD,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAlD1B,EAAU4B,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAsCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BjD,GAAauB,EAAAA,EAAAA,iBACb3I,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAClCwK,GAAWC,EAAAA,EAAAA,UAC4BC,EAAbrR,IAAxBe,KAAMpB,OAAQ,IAAA0R,EAAG,GAAEA,EACrBrB,ELtHqB,WAAO,IAADsB,EAC3BrN,GAAcC,EAAAA,EAAAA,kBACZhE,GAASC,EAAAA,EAAAA,kBAATD,KACFrB,EAASqB,EAAKE,QAAU,GAAK,GAAY,OAAZkR,EAAGpR,EAAKG,WAAI,EAATiR,EAAWhR,KAEjD,OAAO4E,EAAAA,EAAAA,aAAY,CACjBC,WAAW,WAAD,IAAAC,GAAAxG,EAAAA,EAAAA,UAAE,UAAO2S,GACjB,IAAM5R,QAAiBjB,EAAYG,GAC7B2S,GAAcxL,EAAAA,EAAAA,SACf,IAAIyL,IAAI,CAACxS,KAAKW,UAAU2R,IAAQxL,QAAAC,EAAAA,EAAAA,SAAKrG,EAAS6F,KAAI,SAACrC,GAAC,OAAKlE,KAAKW,UAAUuD,EAAE,QAC7EqC,KAAI,SAACrC,GAAC,OAAKlE,KAAKC,MAAMiE,EAAE,UACpB1D,EAAaZ,EAAQ2S,EAC7B,IANU,OAMT,SANS9P,GAAA,OAAA0D,EAAA7F,MAAA,KAAAC,UAAA,EAAC,GAOXyG,UAAU,WAAD,IAAAC,GAAAtH,EAAAA,EAAAA,UAAE,kBACHqF,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,WAAY3B,IAC/D,IAFS,OAER,WAFQ,OAAAqH,EAAA3G,MAAA,KAAAC,UAAA,EAAC,IAId,CKqGqBkS,GACwBC,EAAd/N,IAArB7C,KAAMqN,OAAK,IAAAuD,EAAG,GAAEA,EAClB7B,EACJd,EAAWlE,OAAS,EAChBiE,GAAiBX,EAAOY,GAAY4C,MAAM,EAAG,IAC7CjS,EAASiS,MAAM,EAAG,IAElBC,EAAe,WACf7C,EAAWnE,SACbkF,EAAgBf,EAAWnE,QAC3BmF,EAAW8B,OAAO,CAAEhP,KAAM,WAAYkB,MAAOgL,EAAWnE,SAE5D,EAEMkF,EAAkB,SAAC/L,EAAe6J,GAClC0C,EACFA,EAAYvM,GAEZ+J,EAAW7D,KAAK,WAAY,CAAElG,MAAAA,EAAO6J,QAAAA,IAEvCiD,EAAc,GAChB,EAEMiB,GAAiBC,EAAAA,EAAAA,UACrB,kBACE7B,EAAAA,QAAatJ,OAAO,CAClBuJ,oBAAqByB,IACpBxB,WAAW,GAChB,CAACrB,IAaH,OAVAiD,EAAAA,EAAAA,YAAU,WACR9E,GAAc6B,CAChB,GAAG,CAACA,KAEJkD,EAAAA,EAAAA,iBAAe,WACTlD,IAAe7B,IACjB2D,EAAc3D,GAElB,KAGEf,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOC,GAAO7E,UAAUiF,SAAA,EAC5BK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOC,GAAOwG,gBAAgBpG,SAAA,EAClCP,EAAAA,EAAAA,KAAC4G,EAAAA,QAAS,CACRC,IAAK,SAACA,GACJlB,EAAStH,QAAUwI,CACrB,EACA3G,MAAO,CAACH,EAAa5F,MAAOgG,GAAO2G,aACnChR,MAAO0N,EACPuD,aAAc,SAACpK,GACb2I,EAAc3I,EAChB,EACAqK,YAAY,eACZC,qBAAgC,SAAV9L,EAAmB,UAAY,UACrD+L,gBAAiBb,EACjBc,QAAS,WAAF,OAAQzB,GAAe,EAAK,EACnC0B,OAAQ,WAAF,OAAQ1B,GAAe,EAAM,KAErC1F,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfX,MAAOH,EAAa9C,aACpB8D,QAASsF,EACTgB,UAAW7D,EAAWnE,OAAOkB,UAE7BP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAM,SAAUC,KAAM,GAAIxE,MAAM,cAEvCuI,IAAajF,EAAAA,EAAAA,KAAC6D,GAAY,OAG5B4B,IACCzF,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CACHC,MAAO,CACLC,GAAOC,iBACG,SAAVjF,EAAmBgF,GAAOE,YAAcF,GAAOG,cAC/CC,SAED+D,EAAchF,OAAS,GACtBU,EAAAA,EAAAA,KAACqE,GAAU,CACTC,cAAeA,EACfC,gBAAiBA,EACjBC,WAAYA,EAAW8B,SAEvB9C,EAAWnE,QACbW,EAAAA,EAAAA,KAACa,EAAAA,QAAgB9I,GAAAA,GAAA,CAACmI,MAAOC,GAAOW,YAAgByF,GAAc,IAAAhG,UAC5DK,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAapD,KAAMwD,GAAOkB,YAAYd,SAAA,CAAC,IACjDiD,EAAW,iDAGf,SAKd,EAEMrD,GAAS/E,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTgM,SAAU,WACVnL,MAAO,OACPoL,SAAU,IACVC,OAAQ,KAEVb,gBAAiB,CACfnJ,cAAe,OAEjBsJ,YAAa,CACXvL,KAAM,EACNa,OAAQ,GACRN,aAAc,EACdJ,gBAAiB,EACjBc,SAAU,IAEZ4D,iBAAkB,CAChBkH,SAAU,WACVG,IAAK,GACLnG,KAAM,EACNoG,MAAO,EACPC,UAAW,IACX5L,YAAa,EACbH,aAAc,EACd4L,OAAQ,IACRjL,UAAW,GAEb+D,aAAc,CACZ9E,gBAAiB,UACjBQ,YAAa,WAEfqE,YAAa,CACX7E,gBAAiB,UACjBQ,YAAa,WAEf8E,WAAY,CACVtD,cAAe,MACfN,eAAgB,gBAChBrB,QAAS,IAEXwF,WAAY,CACV7E,SAAU,MC3SDoL,GAAkB,SAAHzU,GAUrB,IATLqE,EAAQrE,EAARqE,SACAqQ,EAAS1U,EAAT0U,UACA9G,EAAO5N,EAAP4N,QACA+G,EAAY3U,EAAZ2U,aAOM3M,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAClCsH,GAASsF,EAAAA,EAAAA,oBACf,OACEnH,EAAAA,EAAAA,MAAAoH,EAAAA,SAAA,CAAAzH,SAAA,CACc,aAAXkC,IAAyBzC,EAAAA,EAAAA,KAAC8E,GAAS,KACpC9E,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAOH,EAAazE,UAAUiF,SACjCsH,GACC7H,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAACH,EAAapE,KAAMoE,EAAarC,eAAe6C,UAC3DP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAAC,6BAEhC/I,EAAS8H,OAAS,GACpBU,EAAAA,EAAAA,KAACQ,EAAAA,QAAQ,CACPjL,KAAMiC,EACNiJ,aAAc,SAACC,GAAI,OAAKjN,KAAKW,UAAU,CAACsM,EAAKlI,MAAOkI,EAAK2B,QAAS3B,EAAK5L,IAAI,EAC3E6L,WAAY,SAAFzM,GAAA,IAAKwM,EAAIxM,EAAJwM,KAAI,OACjBE,EAAAA,EAAAA,MAACC,EAAAA,QAAgB,CACfX,MAAOH,EAAapE,KACpBoF,QAAS,WAAF,OAAQA,EAAQL,EAAKlI,MAAOkI,EAAK2B,QAAS3B,EAAK5L,GAAG,EAACyL,SAAA,EAE1DP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAavH,MAAM+H,SAAE6D,GAAY1D,UAC3B/K,IAAlB+K,EAAKuH,WACJjI,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAazC,UAAUiD,SAAEG,EAAKuH,aAE5B,EAErBzG,uBAAwB,WAAF,OAAQxB,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAAE9D,OAAQ,IAAO,KAG9D4D,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAACH,EAAapE,KAAMoE,EAAarC,eAAe6C,UAC3DP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAAEuH,UAM7C,E,0oBCxCA,IAIaI,GAAkB,WAC7B,IAAQC,GAASC,EAAAA,EAAAA,kBAATD,KACR,OACEnI,EAAAA,EAAAA,KAACqI,GAAAA,QAAS,CACR/G,KAAM,SAACgH,GAAM,OAAKtI,EAAAA,EAAAA,KAACqI,EAAAA,QAAStQ,GAAAA,GAAA,GAAKuQ,GAAM,IAAEC,KAAM,gBAAiB,EAChE/P,MAAO2P,EAAK,cACZpH,QAAS,WAAF,OAAQrC,EAAAA,EAAAA,MAAK,aAAa,GAGvC,EAEa8J,GAAqB,WAChC,IAAQL,GAASC,EAAAA,EAAAA,kBAATD,KACR,OACEnI,EAAAA,EAAAA,KAACqI,GAAAA,QAAS,CACR/G,KAAM,SAACgH,GAAM,OAAKtI,EAAAA,EAAAA,KAACqI,EAAAA,QAAStQ,GAAAA,GAAA,GAAKuQ,GAAM,IAAEC,KAAM,cAAe,EAC9D/P,MAAO2P,EAAK,iBACZpH,QAAS,WAAF,OAAQrC,EAAAA,EAAAA,MAAK,gBAAgB,GAG1C,EAEa+J,GAAmB,SAAClT,GAAe,OAC9CA,EACGwF,QAAO,SAACpD,GAAC,OAAKA,EAAEuB,WAAW,IAC3BwP,MAAK,SAACxF,EAAGyF,GAAC,OAAK,IAAI7O,KAAK6O,EAAErS,SAASsS,UAAY,IAAI9O,KAAKoJ,EAAE5M,SAASsS,SAAS,GAAE,EAmHnF,SAjH4B,SAC1B/I,GAEA,IAAQsI,GAASC,EAAAA,EAAAA,kBAATD,KACFU,EAAQzQ,IACRwK,ELgEsB,WAC5B,IAAAkG,EAA4C1Q,IAAc+N,EAAA2C,EAAlDvT,KAAMiC,OAAQ,IAAA2O,EAAG,GAAEA,EAAEtN,EAAUiQ,EAAVjQ,WAC7B,OAAO9D,EAAAA,EAAAA,UAAS,CACdC,SAAU,CAAC,eACXC,QAAQ,WAAD,IAAA8T,GAAA3V,EAAAA,EAAAA,UAAE,YAEP,aAD2B4E,KAExBgC,KAAI,SAACxB,GAAK,OAAKhB,EAASE,MAAK,SAACsB,GAAC,OAAKA,EAAER,QAAUA,CAAK,GAAC,IACtDuC,QAAO,SAAC/B,GAAC,YAAWrD,IAANqD,CAAe,GAClC,IALO,OAKN,WALM,OAAA+P,EAAAhV,MAAA,KAAAC,UAAA,EAAC,GAMRmF,SAAUN,GAEd,CK5EgBmQ,GACA/R,EAAamC,IAAnB7D,KACF0T,EAASC,EAAAA,SACTC,ELmLwB,WAC9B,IAAM1Q,GAAcC,EAAAA,EAAAA,kBAEpB,OAAOgB,EAAAA,EAAAA,aAAY,CACjBC,WAAW,WAAD,IAAAyP,GAAAhW,EAAAA,EAAAA,UAAE,UAAAyD,GAAmE,IAA1D2B,EAAK3B,EAAL2B,MAAO6Q,EAAMxS,EAANwS,OAEpBC,QAAoBtR,IAC1B,QAA6CrC,IAAzC2T,EAAY5R,MAAK,SAACC,GAAC,OAAKA,IAAMa,CAAK,KAAmB6Q,EAAQ,CAChE,IAAMvO,EAAkB,CAAItC,GAAK+B,QAAAC,EAAAA,EAAAA,SAAK8O,UAChCrR,EAAgB6C,EACxB,CAEA,MAAO,CAAEtC,MAAAA,EACX,IATU,OAST,SATS+Q,GAAA,OAAAH,EAAArV,MAAA,KAAAC,UAAA,EAAC,GAUXyG,UAAW,SAAClF,GACVkD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,gBAC7C,GAEJ,CKrMwBwU,GAChBC,EAAmB7O,IACnBrF,EACW,SAAfsK,EAAMvI,KAAmBuR,EAAMtT,KAAOkT,GAAiBI,EAAMtT,MAAQ,GAAMqN,EAAMrN,KAC7EmU,EAAiBzS,QAAwDtB,KAAxC,MAAJJ,OAAI,EAAJA,EAAMmC,MAAK,SAACC,GAAC,OAAKA,EAAE7C,KAAOmC,EAASnC,EAAE,KACnE2N,GAASsF,EAAAA,EAAAA,oBACT4B,EAAwC,cAAXlH,EA5Cd,EAAI,EA6CnBmH,EAAc,SAACpR,GACfA,KAAkB,MAARvB,OAAQ,EAARA,EAAUuB,SAClByQ,EAAO5K,SACTwL,aAAaZ,EAAO5K,SACpB4K,EAAO5K,aAAU1I,EACjBwT,EAAc7C,OAAO,CAAE9N,MAAAA,KAEvByQ,EAAO5K,QAAUyL,YAAW,WAC1Bb,EAAO5K,aAAU1I,CACnB,GAAG,OAGPoU,EAAAA,EAAAA,UAAS,WAAY,CAAEvR,MAAAA,GACzB,EACMwR,EAAkB,SAACxR,GAAmB,IAADyR,EACrChB,EAAO5K,UACTwL,aAAaZ,EAAO5K,SACpB4K,EAAO5K,aAAU1I,QAEgCA,KAArC,OAAVsU,EAAArH,EAAMrN,WAAI,EAAV0U,EAAYvS,MAAK,SAACC,GAAC,OAAKA,EAAEa,QAAUA,CAAK,KAC3C2Q,EAAc7C,OAAO,CAAE9N,MAAAA,EAAO6Q,QAAQ,IAEtCI,EAAiBnD,OAAO9N,EAE5B,EACA,OACkB,SAAfqH,EAAMvI,MAAmBoS,KACxB1J,EAAAA,EAAAA,KAACqI,GAAAA,QAAY,CAAA9H,SACVhL,IACiB,SAAfsK,EAAMvI,KACLoS,IACE1J,EAAAA,EAAAA,KAACqI,GAAAA,QAAS,CACR/G,KAAM,SAACgH,GAAM,OAAKtI,EAAAA,EAAAA,KAACqI,EAAAA,QAAStQ,GAAAA,GAAA,GAAKuQ,GAAM,IAAEC,KAAM,kBAAmB,EAClE/P,MAAOvB,EAASuB,MAChBuI,QAAS,WAAF,OAAQ6I,EAAY3S,EAASuB,MAAM,EAC1C0R,YAAa,WAAF,OAAQF,EAAgB/S,EAASuB,MAAM,EAClD0H,MAAO,CAAErE,QAAS8N,GAClBQ,WAAY,CAAEC,UAAW,YAGZ,SAAfvK,EAAMvI,MACRsJ,EAAAA,EAAAA,MAAAoH,EAAAA,SAAA,CAAAzH,SAAA,CACGhL,EAAK6Q,MAAM,EAAGvG,EAAMwK,WAAWrQ,KAAI,SAACrC,GAAC,OACpCqI,EAAAA,EAAAA,KAACqI,GAAAA,QAAS,CAER/G,KAAM,SAACgH,GAAM,IAAAgC,EAAA,OACXtK,EAAAA,EAAAA,KAACqI,EAAAA,QAAStQ,GAAAA,GAAA,GACJuQ,GAAM,IACVC,UACqD5S,KAAzC,OAAV2U,EAAA1H,EAAMrN,WAAI,EAAV+U,EAAY5S,MAAK,SAAC4L,GAAE,OAAKA,EAAG9K,QAAUb,EAAEa,KAAK,KACzC,WACA,kBAEN,EAEJA,MAAOb,EAAEa,MACTuI,QAAS,WAAF,OAAQ6I,EAAYjS,EAAEa,MAAM,EACnC0R,YAAa,WAAF,OAAQF,EAAgBrS,EAAEa,MAAM,EAC3C0H,MAAO,CAAErE,QAAS8N,IAdbhS,EAAEa,MAeP,KAEJwH,EAAAA,EAAAA,KAACqI,GAAAA,QAAS,CACR/G,KAAM,SAACgH,GAAM,OAAKtI,EAAAA,EAAAA,KAACqI,EAAAA,QAAStQ,GAAAA,GAAA,GAAKuQ,GAAM,IAAEC,KAAM,sBAAuB,EACtE/P,MAAO2P,EAAK,WACZpH,QAAS,WAAF,OAAQrC,EAAAA,EAAAA,MAAK,cAAc,EAClCwB,MAAO,CAAErE,QAAS8N,QAItBpU,EAAKyE,KAAI,SAACrC,GAAC,OACTqI,EAAAA,EAAAA,KAACqI,GAAAA,QAAS,CAER/G,KAAM,SAACgH,GAAM,OAAKtI,EAAAA,EAAAA,KAACqI,EAAAA,QAAStQ,GAAAA,GAAA,GAAKuQ,GAAM,IAAEC,KAAM,uBAAwB,EACvEb,MAAO,SAACY,GAAM,OACZtI,EAAAA,EAAAA,KAACuK,GAAAA,QAAe,CACdrK,MAAO,CACLhD,eAAgB,SAChBtB,aAAc+N,EACdxN,MAAO,GAAmB,EAAdwN,EACZvN,OAAQ,GAAmB,EAAduN,EACba,QAASb,GAEX5I,QAAS,WAAF,OAAQ0I,EAAiBnD,OAAO3O,EAAEa,MAAM,EAAC+H,UAEhDP,EAAAA,EAAAA,KAACqI,EAAAA,QAAS,CAACnI,MAAO,CAAEoB,KAAMqI,EAAc,GAAKpB,KAAM,WACnC,EAEpB/P,MAAOb,EAAEa,MACTuI,QAAS,WAAF,OAAQgJ,EAAAA,EAAAA,UAAS,WAAY,CAAEvR,MAAOb,EAAEa,OAAQ,EACvD0H,MAAO,CAAErE,QAAS8N,IAlBbhS,EAAEa,MAmBP,MAMhB,E,+kBChJA,IAAMiS,IAAgB,IAAI3Q,MAAO4Q,oBAEpBC,GAAgB,SAACC,GAC5B,IAAMC,EAAQ,IAAI/Q,KAAK8Q,GACvBC,EAAMC,WAAWD,EAAME,aAAeN,IACtC,IAAMnU,EAAUuU,EAAM9Q,cAAcqM,MAAM,EAAG,IACvC4E,EAAO1U,EAAQ8P,MAAM,EAAG,IAE9B,OAAO4E,KADO,IAAIlR,MAAOC,cAAcqM,MAAM,EAAG,IACxB9P,EAAQ8P,MAAM,IAAM4E,CAC9C,EAEA,SAASC,GAA4BC,GACnC,IAAMC,EAAanI,MAAMC,KAAKiI,EAAQC,YAEtC,IAAK,IAAMC,KAAQD,EACC,SAAdC,EAAKnK,KACPiK,EAAQG,aAAa,OAAQ,IAE7BH,EAAQI,gBAAgBF,EAAKnK,MAKjC,IAAK,IAAMsK,KAASL,EAAQ3K,SAC1B0K,GAA4BM,EAEhC,CAEA,SAASC,GAA4B5N,GACnC,IAIMW,GAJS,IAAIT,WACAC,gBAAgBH,EAAM,aAGxBW,KACjB,IAAK,IAAMgN,KAAShN,EAAKgC,SACvB0K,GAA4BM,GAG9B,OAAOhN,EAAKkN,SACd,CAEA,IAAMC,GAAe,SAACC,GAAoB,OAAMA,EAAc,GAAK,CAAC,EAC9DC,GAAgB,SAACD,GAAoB,OAAMA,EAAc,IAAM,GAAG,EAIlEE,GAAW3C,EAAAA,MAAW,SAAA/V,GAAqD,IAAlDuN,EAAIvN,EAAJuN,KAAMoL,EAAK3Y,EAAL2Y,MAC7BrJ,GAASsF,EAAAA,EAAAA,oBACTgE,EAAeH,GAAyB,cAAXnJ,GAC7BtH,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAClC6Q,EAAmB,cAAXvJ,EAAyB,EAAI,EAC3CyC,GAA8BC,EAAAA,EAAAA,UAAS2G,EAAQ,IAAG1G,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA3C+G,EAAO7G,EAAA,GAAE8G,EAAU9G,EAAA,GAS1B,IAPAqB,EAAAA,EAAAA,YAAU,WACR,IAAKwF,EAAS,CACZ,IAAME,EAAQrC,YAAW,kBAAMoC,GAAW,EAAK,GAAE,GAAKJ,EAAQ,KAC9D,OAAO,kBAAMjC,aAAasC,EAAO,CACnC,CACF,GAAG,CAACzL,EAAMoL,EAAOG,IAEJ,OAATvL,EACF,OACEV,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,MAAO,CAAEkM,UAAsB,cAAX3J,EAAyB,MAAQ,MAAO8E,SAAUwE,KAGhF,IAAMxJ,GAAauB,EAAAA,EAAAA,iBACb/C,EAAU,WAAH,OAASwB,EAAW7D,KAAK,WAAY,CAAElG,MAAOkI,EAAKlI,OAAS,EACzE,OACEoI,EAAAA,EAAAA,MAACC,EAAAA,QAAgB,CACfX,MAAO,CACLkM,UAAsB,cAAX3J,EAAyB,MAAQ,MAC5C5G,QAAS6P,GAAwB,cAAXjJ,GACtB4J,aAAc,EACdC,SAAUP,EACVxE,SAAUwE,GAEZhL,QAASA,EAAQR,SAAA,EAEjBP,EAAAA,EAAAA,KAACuM,GAAAA,QAAI,CACHxL,QAASA,EACTb,MAAO,CACLH,EAAapE,KACb,CACE6Q,WAAY,EACZC,YAAa,EAAIzI,KAAK0I,KAAK,GAC3B9Q,aAAc,EACdmB,eAAgB,GAChBI,iBAAkB,EAClBwP,SAAU,WAEZpM,UAEFP,EAAAA,EAAAA,KAACuM,GAAAA,QAAKK,QAAO,CAAC1M,MAAO,CAAErE,QAAS,GAAI0E,SAAE0L,GAAWvL,EAAKmM,0BAExDjM,EAAAA,EAAAA,MAACX,EAAAA,KAAI,CACHC,MAAO,CACL1C,cAAe,MACf4D,UAAW,GACXvF,QAAS,EACTqB,eAAgB,gBAChBJ,WAAY,SACZX,MAAO,QACPoE,SAAA,EAEFP,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAACjB,MAAO,CAAE1D,SAAU,GAAKwP,EAAOW,SAAU,UAAWpM,SAAEG,EAAKlI,SACjEwH,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAACjB,MAAO,CAAE1D,SAAU,GAAKwP,EAAOc,QAAS,GAAKC,UAAW,SAAUxM,SACrEoK,GAAcjK,EAAKpK,gBAK9B,IAMa0W,GAAqB9D,EAAAA,MAAW,WAC3C,IAAM/N,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAClCsH,GAASsF,EAAAA,EAAAA,oBACfpP,EAA8CP,IAAcQ,EAAAD,EAApDpD,KAAM+T,OAAW,IAAA1Q,EAAG,GAAEA,EAAEiP,EAASlP,EAATkP,UAC1BtF,GAAauB,EAAAA,EAAAA,iBACbiI,EAAeH,GAAyB,cAAXnJ,GAC7BwK,GAAazG,EAAAA,EAAAA,UAAQ,kBAAM0C,EAAAA,MAAW,kBAAM,mCAAkC,GAAC,GAAE,IACjF1R,GAAWgP,EAAAA,EAAAA,UACf,oBAAAjM,QAAAC,EAAAA,EAAAA,SACKiO,GAAiBa,GAAatP,KAAI,SAACrC,GAAC,OAAAI,GAAAA,GAAA,GAClCJ,GAAC,IACJkV,sBACE7M,EAAAA,EAAAA,KAACiN,EAAU,CACTC,OAAQ,CAAEtP,KAAM4N,GAA4B7T,EAAEuB,aAAe,IAAIkN,MAAM,EAAG,MAAQ,IAClF+G,eAAgB,CACdjK,EAAG,CAAEnC,QAAS,WAAF,OAAQwB,EAAW7D,KAAK,WAAY,CAAElG,MAAOb,EAAEa,OAAQ,IAErE4U,WAAY,CAAE7O,KAAM,CAAE7B,MAAOqD,EAAapD,KAAKD,QAC/C2Q,aAActB,KAEjB,KACA,CACH,KACA,MAAI,GAEN,CAACzC,IAEG/B,GAAYwE,EAAe,IAAiB,cAAXtJ,EAAyB,EAAI,GACpE,OAAOoF,GACL7H,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,MAAO,CAACH,EAAapE,KAAMoE,EAAarC,eAAe6C,UAC3DP,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAAC,6BAEhC/I,EAAS8H,OAAS,GACpBU,EAAAA,EAAAA,KAACsN,GAAAA,QAAU,CAETC,sBAAuB,CACrBC,UAAW,SACXhS,gBAAiB,cACjB4Q,UAAW,OACX7E,SAAAA,EACAkG,SAAU,OACVjQ,cAAe,MACf6O,aAAcX,GAAwB,cAAXjJ,GAC3BvF,eAA2B,cAAXuF,OAAyB9M,EAAY,UACrD4K,UAEFP,EAAAA,EAAAA,KAAC0N,EAAAA,SAAQ,CAAAnN,SAAE/I,EAASwC,KAAI,SAAC0G,EAAMoL,GAAK,OAnDvB,SAAH5X,GAAA,IAAMwM,EAAIxM,EAAJwM,KAAMoL,EAAK5X,EAAL4X,MAAK,OAC/B9L,EAAAA,EAAAA,KAAC6L,GAAQ,CAAaC,MAAOA,EAAOpL,KAAMA,GAA3BoL,EAAmC,CAkDLnL,CAAW,CAAED,KAAAA,EAAMoL,MAAAA,GAAQ,OAZ/DrJ,IAePzC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,MAAO,CAACH,EAAapE,KAAMoE,EAAarC,eAAe6C,UAC3DP,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAAC,kFAGtC,I,+kBC7KO,I,wBC4JDJ,GAAS/E,EAAAA,QAAWC,OAAO,CAC/BqG,gBAAiB,CACflE,cAAe,MACfN,eAAgB,iBAElByQ,aAAc,CACZpS,KAAM,EACNqS,YAAa,EACbpS,gBAAiB,WAEnBqS,WAAY,CACVtS,KAAM,EACNuS,WAAY,K,YC5JHC,GAAqB,SAACC,EAAuB3L,EAAiB4L,GAAwB,IAADC,EAC1FjQ,EAAiD,OAA7CiQ,EAAGF,EAAUtW,MAAK,SAACC,GAAC,OAAKA,EAAEa,QAAU6J,CAAO,UAAC,EAA1C6L,EAA4CjQ,KACzD,OAAOA,EACH+P,EACGjT,QAAO,SAACpD,GAAC,OAAKA,EAAEsG,KAAK2F,WAAW3F,EAAK,IACrCjE,KAAI,SAACrC,GAAC,OAAMsW,GAAatW,EAAEsG,OAASA,EAAOtG,EAAE4F,OAAS,IAAM5F,EAAEuB,WAAW,IACzErD,KAAK,IACR,EACN,EAEasY,GAAgB,SAAC3V,GAC5B,IAAM4V,EAAa5V,EAAM6V,MAAM,KAC/B,OAAID,EAAW9O,OAAS,EACf,CAAC9G,GAEH,CAAC4V,EAAWhI,MAAM,EAAGgI,EAAW9O,OAAS,GAAGzJ,KAAK,KAAMuY,EAAWA,EAAW9O,OAAS,GAC/F,EA8PMa,GAAS/E,EAAAA,QAAWC,OAAO,CAC/BoG,WAAY,CACV5F,QAAS,GAEXyS,UAAW,CACT/S,KAAM,EACNiB,SAAU,IAEZ+R,cAAe,CACb/Q,cAAe,OAEjBgR,aAAc,CACZ3S,QAAS,EACTiS,WAAY,K,+kBCvST,IC4LD3N,GAAS/E,EAAAA,QAAWC,OAAO,CAC/BoT,QAAS,CACPrN,UAAW,EACXtF,aAAc,IAEhB2F,WAAY,CACV5F,QAAS,GAEX6F,gBAAiB,CACflE,cAAe,MACfN,eAAgB,iBAElByQ,aAAc,CACZpS,KAAM,EACNqS,YAAa,EACbpS,gBAAiB,WAEnBkT,WAAY,CACVnT,KAAM,EACNuS,WAAY,K,wBClMVa,GAAe,WACnB,IAAMxT,GAAQ2E,EAAAA,EAAAA,kBACNqI,GAASC,EAAAA,EAAAA,kBAATD,KACR,OACEvH,EAAAA,EAAAA,MAAC0M,GAAAA,QAAU,CAACpN,MAAO,CAAE3E,KAAM,EAAGC,gBAAiBoT,EAAAA,OAAOzT,GAAO0T,YAAatO,SAAA,EACxEP,EAAAA,EAAAA,KAACqI,GAAAA,QAAc,CAACnI,MAAO,CAAC,EAAG4O,YAAY,EAAMvO,SAC1C4H,EAAK,iBAERnI,EAAAA,EAAAA,KAAC+O,GAAmB,CAACzX,KAAM,UAC3B0I,EAAAA,EAAAA,KAAC+O,GAAmB,CAACzX,KAAM,UAC3B0I,EAAAA,EAAAA,KAACqI,GAAAA,QAAc,CAACnI,MAAO,CAAC,EAAG4O,YAAY,EAAMvO,SAC1C4H,EAAK,eAERnI,EAAAA,EAAAA,KAACkI,GAAe,KAChBlI,EAAAA,EAAAA,KAACwI,GAAkB,MAGzB,EAEMwG,GAAuB,WAC3B,OAAOhP,EAAAA,EAAAA,KAACgN,GAAkB,GAC5B,EAEMiC,GAAqB,SAACpP,GAC1B,IAAM1E,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAClCuB,EAAQkS,EAAAA,OAAOzT,GAAOwB,KAC5B,OACEiE,EAAAA,EAAAA,MAACC,EAAAA,QAAgB,CACfX,MAAO,CAACH,EAAaxC,OAAQ,CAAEzB,aAAc,IAC7CiF,QAASlB,EAAMkB,QACfsG,UAAWxH,EAAMkB,QAAQR,SAAA,EAEzBP,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAACjB,MAAO,CAAE1D,SAAU,GAAIE,MAAAA,EAAOD,WAAY,OAAQ8D,SAAEV,EAAMrH,QAC/DqH,EAAMkB,UAAWf,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAAAZ,SAAE,QAG/B,EAEM2O,GAAmB,WAAO,IAADza,EACrB0T,GAASC,EAAAA,EAAAA,kBAATD,KACRgH,GAA2Bxa,EAAAA,EAAAA,kBAAnBD,EAAIya,EAAJza,KAAM0a,EAAQD,EAARC,SACRjU,GAAQ2E,EAAAA,EAAAA,kBACRyC,GAAauB,EAAAA,EAAAA,iBACb/D,EAAe7E,EAAmBC,GAClCuB,EAAQkS,EAAAA,OAAOzT,GAAOwB,KAC5BuI,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAApC9C,EAAMgD,EAAA,GAAEiK,EAASjK,EAAA,GACqBS,EAAbrR,IAAxBe,KAAMpB,OAAQ,IAAA0R,EAAG,GAAEA,EACrByJ,EdFuB,WAAO,IAADC,EAC7B9W,GAAcC,EAAAA,EAAAA,kBACZhE,GAASC,EAAAA,EAAAA,kBAATD,KACFrB,EAASqB,EAAKE,QAAU,GAAK,GAAY,OAAZ2a,EAAG7a,EAAKG,WAAI,EAAT0a,EAAWza,KAEjD,OAAO4E,EAAAA,EAAAA,aAAY,CACjBC,WAAW,WAAD,IAAA6V,GAAApc,EAAAA,EAAAA,UAAE,kBACJa,EAAaZ,EAAQ,GAC7B,IAFU,OAET,WAFS,OAAAmc,EAAAzb,MAAA,KAAAC,UAAA,EAAC,GAGXyG,UAAU,WAAD,IAAAgV,GAAArc,EAAAA,EAAAA,UAAE,kBACHqF,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,WAAY3B,IAC/D,IAFS,OAER,WAFQ,OAAAoc,EAAA1b,MAAA,KAAAC,UAAA,EAAC,IAId,CcXuB0b,GACrB,OACE9O,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAAAM,SAAA,EACHP,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAOH,EAAapE,KAAK4E,UAC7BP,EAAAA,EAAAA,KAAC2P,EAAAA,eAAc,OAEjB/O,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOH,EAAapE,KAAK4E,SAAA,EAC7BP,EAAAA,EAAAA,KAACiP,GAAkB,CAACzW,MAAO2P,EAAK,wBAChCvH,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAAE1C,cAAe,OAAQ+C,SAAA,EACpCP,EAAAA,EAAAA,KAAC4P,EAAAA,WAAU,CACTpX,MAAO,iBACPqX,UAAW,CACTrT,SAAU,GACVE,MAAAA,EACAoT,mBAAoB1N,EAAS,YAAc,QAE7ClC,MAAO,CAAEtE,aAAc,IACvBmF,QAAS,WAAF,OAAQsO,GAAWjN,EAAO,IAElCA,KAAYjO,EAASmL,SACpBU,EAAAA,EAAAA,KAAC4P,EAAAA,WAAU,CACTpX,MAAO,QACPqX,UAAW,CACTrT,SAAU,GACVE,MAAAA,GAEFwD,MAAO,CAAEtE,aAAc,IACvBmF,QAAS,WAAF,OAAQuO,EAAahJ,QAAQ,OAIzClE,IACCpC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAACH,EAAapE,KAAM,CAAEE,QAAS,IAAK0E,UAC/CP,EAAAA,EAAAA,KAACqE,GAAU,CACTC,cAAenQ,EACfoQ,gBAAiB,SAAC/L,EAAO6J,GAAO,OAAKE,EAAW7D,KAAK,WAAY,CAAElG,MAAAA,EAAO6J,QAAAA,GAAU,UAK5FrC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAOH,EAAapE,KAAK4E,UAC7BP,EAAAA,EAAAA,KAACiP,GAAkB,CACjBzW,MAAO2P,EAAK,aACZpH,QAAS,WAAF,OAAQwB,EAAW7D,KAAK,UAAW,CAAC,EAAE,OAGjDkC,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOH,EAAapE,KAAK4E,SAAA,EAC7BP,EAAAA,EAAAA,KAACiP,GAAkB,CAACzW,MAAO2P,EAAK,yBAChCvH,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAAE1C,cAAe,OAAQ+C,SAAA,GACjC7L,EAAKG,OACNmL,EAAAA,EAAAA,KAAC4P,EAAAA,WAAU,CACTpX,MAAO,gBAA0B,OAAZ/D,EAAGC,EAAKG,WAAI,EAATJ,EAAWsb,UACnCF,UAAW,CACTrT,SAAU,GACVE,MAAAA,EACAoT,mBAAqBpb,EAAKE,QAAwB,OAAd,aAEtCsL,MAAO,CAAEtE,aAAc,IACvBmF,QAAS,WAAF,OAAQqO,EAAS,CAAE9X,KAAM,gBAAiB,KAGrD0I,EAAAA,EAAAA,KAAC4P,EAAAA,WAAU,CACTpX,MAAO,gBACPqX,UAAW,CACTrT,SAAU,GACVE,MAAAA,EACAoT,mBAAoBpb,EAAKE,QAAU,YAAc,QAEnDsL,MAAO,CAAEtE,aAAc,IACvBmF,QAAS,WAAF,OAAQqO,EAAS,CAAE9X,KAAM,eAAgB,IAEjD5C,EAAKG,MACJmL,EAAAA,EAAAA,KAAC4P,EAAAA,WAAU,CACTpX,MAAO,SACPqX,UAAW,CACTrT,SAAU,GACVE,MAAAA,GAEFwD,MAAO,CAAEtE,aAAc,IACvBmF,QAAS,WAAF,OAAQqO,EAAS,CAAE9X,KAAM,kBAAmB,KAGrD0I,EAAAA,EAAAA,KAAC4P,EAAAA,WAAU,CACTpX,MAAO,QACPqX,UAAW,CACTrT,SAAU,GACVE,MAAAA,GAEFwD,MAAO,CAAEtE,aAAc,IACvBmF,QAAS,WAAF,OAAQqO,EAAS,CAAE9X,KAAM,gBAAiB,YAO/D,EAEM0Y,GAAgB,WACpB,IAAM7U,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GACxC,OACE6E,EAAAA,EAAAA,KAACsN,GAAAA,QAAU,CACTpN,MAAO,CAAE3E,KAAM,GACfgS,sBAAuB,CACrBxN,EAAazE,UACb,CAAEE,gBAAiBoT,EAAAA,OAAOzT,GAAO0T,aACjCtO,UAEFP,EAAAA,EAAAA,KAACkP,GAAgB,KAGvB,EC3KA,IAAM1W,GAAQ,SAAC9D,GAAU,OACtBA,EAAKE,QAAkC,8BAAxB,qBAAsD,EAC3Dqb,GAAO,CAClBC,KAAM,CACJ1X,MAAAA,GACA2X,UDwKW,SAAmBhd,GAAaA,EAAVoP,WAAiBpP,EAALid,MAAyC,IAChFjI,GAASC,EAAAA,EAAAA,kBAATD,KACFhN,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAElC3C,GADW7D,EAAAA,EAAAA,kBAATD,KACWE,QAAU,8BAAgC,sBACvDyb,EAA4B,CAChC,CACE7X,MAAO2P,EAAK,aACZgI,UAAWxB,GACXpG,MAAMvI,EAAAA,EAAAA,KAACqI,EAAAA,QAAS,CAACE,KAAM,YACvB+H,YAAa,WAAF,OAAQtQ,EAAAA,EAAAA,KAAAgI,EAAAA,SAAA,GAAK,GAE1B,CACExP,MAAO2P,EAAK,aACZgI,UAAWnB,GACXzG,MAAMvI,EAAAA,EAAAA,KAACqI,EAAAA,QAAS,CAACE,KAAM,aACvB+H,YAAa,WAAF,OAAQtQ,EAAAA,EAAAA,KAAAgI,EAAAA,SAAA,GAAK,GAE1B,CACExP,MAAO2P,EAAK,UACZgI,UAAWH,GACXzH,MAAMvI,EAAAA,EAAAA,KAACqI,EAAAA,QAAS,CAACE,KAAM,oBACvB+H,YAAa,WAAF,OAAQtQ,EAAAA,EAAAA,KAAAgI,EAAAA,SAAA,GAAK,IAI5B,OACEhI,EAAAA,EAAAA,KAACuQ,EAAAA,YAAW,CACVF,SAAUA,EACVG,SAAU,CAAEhY,MAAAA,EAAO8X,YAAa,WAAF,OAAQtQ,EAAAA,EAAAA,KAAC8E,GAAS,GAAG,GACnD2L,YAAajY,EAAM+H,UAEnBK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAACH,EAAazE,UAAW,CAAEa,MAAO,OAAQe,eAAgB,kBAAmBqD,SAAA,EACxFP,EAAAA,EAAAA,KAACkP,GAAgB,KACjBlP,EAAAA,EAAAA,KAAC0Q,EAAAA,eAAc,CACbC,QAAS,CACP,CACEpI,MAAMvI,EAAAA,EAAAA,KAAC4Q,GAAAA,QAAS,CAAC3P,KAAK,SAASC,KAAM,GAAIxE,MAAOkS,EAAAA,OAAOzT,GAAO0V,YAC9DhP,IAAK,oDACLiP,OAAO,GAET,CACEvI,MAAMvI,EAAAA,EAAAA,KAAC4Q,GAAAA,QAAS,CAAC3P,KAAK,OAAOC,KAAM,GAAIxE,MAAOkS,EAAAA,OAAOzT,GAAO0V,YAC5DhP,IAAK,6BACLiP,OAAO,UAOrB,EC3NI7S,KAAM,QAER8S,SAAU,CACRvY,MAAAA,GACA2X,UJkBoC,WACtC,IAAMa,GAAYC,EAAAA,EAAAA,gBACZb,GAAQc,EAAAA,EAAAA,YACdC,EAAsCf,EAAMlO,OAApC1J,EAAK2Y,EAAL3Y,MAAO6J,EAAO8O,EAAP9O,QAAS+O,EAASD,EAATC,UAClB7O,GAAauB,EAAAA,EAAAA,iBACb3I,GAAQ2E,EAAAA,EAAAA,kBACRuR,GAAUtJ,EAAAA,EAAAA,oBACVhI,EAAe7E,EAAmBC,GACxC+J,GAAyBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAjCoM,EAAGlM,EAAA,GAAEmM,EAASnM,EAAA,GACrBG,GAAyCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAjDiM,EAAWhM,EAAA,GAAEiM,EAAiBjM,EAAA,GAErCkM,EAAmCnZ,EAAYC,GAAjCO,EAAI2Y,EAAVnc,KAAYsD,EAAU6Y,EAAV7Y,WACN8Y,EAAatZ,IAAnB9C,KACFqc,EAAUR,EACJ,MAARO,OAAQ,EAARA,EAAUja,MAAK,SAACC,GAAC,OAAKA,EAAE7C,KAAOsc,GAAazZ,EAAEuB,eAAoB,MAAJH,OAAI,EAAJA,EAAMG,YAAW,SAC/EvD,EAEEkc,EAAa,WACjBtP,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,GACpC,EAMMwV,EAAYrQ,GAAwB,MAAJ5E,OAAI,EAAJA,EAAMG,cAAe,IACrD4Y,EAAM9D,EAAU+D,WAAU,SAACpa,GAAC,OAAKA,EAAEa,QAAU6J,CAAO,IACpD2P,EAAe,CACnB,CACEzJ,KAAM,aACN0J,YAAajE,EAAUkE,UACrB,SAACva,EAAGsC,GAAC,IAAAkY,EAAA,OAAKlY,EAAI6X,KAAQN,IAA4B,OAAdW,EAAAnE,EAAU8D,SAAI,EAAdK,EAAgBjU,QAASvG,EAAEuG,MAAa,IAE9EkU,SAAS,GAEX,CACE7J,KAAM,cACN0J,YAAajE,EAAUtW,MACrB,SAACC,EAAGsC,GAAC,IAAAoY,EAAA,OAAKpY,EAAI6X,KAAQN,IAA4B,OAAda,EAAArE,EAAU8D,SAAI,EAAdO,EAAgBnU,QAASvG,EAAEuG,MAAa,IAE9EkU,SAAS,IAGbE,GAAsCnN,EAAAA,EAAAA,YAAkBoN,GAAAlN,EAAAA,EAAAA,SAAAiN,EAAA,GAAjDpZ,EAAWqZ,EAAA,GAAEC,EAAcD,EAAA,IAClC9L,EAAAA,EAAAA,YAAU,WAAO,IAADtT,EAAAsf,EACdD,EACEZ,EACIA,EAAQ1Y,YAKa,OALF/F,EAClBkP,EACGmP,EACEzD,GAAmBC,EAAW3L,GAAS,GACG,OADEoQ,EAC5CzE,EAAUtW,MAAK,SAACC,GAAC,OAAKA,EAAEa,QAAU6J,CAAO,UAAC,EAA1CoQ,EAA4CvZ,YAC1C,MAAJH,OAAI,EAAJA,EAAMG,kBAAW,EAJrB/F,EAKGkM,OAEX,GAAG,CAACtG,EAAM6Y,EAASvP,EAASmP,KAC5B/K,EAAAA,EAAAA,YAAU,WACR8K,GAAU,EACZ,GAAG,CAACnB,IACJ,IAAMhC,EAAaD,GAAc3V,GAC3BqY,EAAsB,SAAV1V,EAAmB,UAAY,UAC3CuX,EAA+B,SAAVvX,EAAmB,YAAc,YAC5D,OACE6V,IACEpQ,EAAAA,EAAAA,MAAAoH,EAAAA,SAAA,CAAAzH,SAAA,CACe,aAAZ8Q,IAA0BrR,EAAAA,EAAAA,KAAC8E,GAAS,KACrClE,EAAAA,EAAAA,MAAC0M,GAAAA,QAAU,CAETpN,MAAO,CAACH,EAAazE,UAAW,CAAE+Q,aAAc,GAAIsG,gBAAiB,WACrEpF,sBAAuB,CAAEqF,SAAU,GAAIrS,SAAA,EAEvCK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOH,EAAaxC,OAAOgD,SAAA,EAC/BK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAAE1C,cAAe,OAAQ+C,SAAA,EACpCP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfE,QAAS,WAAF,OACkB,IAAtBqN,EAAW9O,OAAeiD,EAAW7D,KAAO6D,EAAWwH,UAAU,WAAY,CAC5EvR,MAAO4V,EAAW,IAClB,EACH7N,UAEDP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CACHjB,MAAO,CACLH,EAAavH,MACb2H,GAAOmO,UACPjM,GAAiC,IAAtB+L,EAAW9O,OAAe,CAAE5C,MAAOgW,GAAuB,CAAC,GAExEG,cAAe,EAAEtS,SAEhB6N,EAAW,OAGO,IAAtBA,EAAW9O,SACVsB,EAAAA,EAAAA,MAAAoH,EAAAA,SAAA,CAAAzH,SAAA,EACEP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAavH,MAAO2H,GAAOmO,UAAW,CAAE/S,KAAM,IAAKgF,SAAC,OAClEP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CAACE,QAAS,WAAF,OAAQwB,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,GAAQ,EAAC+H,UAC1EP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CACHjB,MAAO,CACLH,EAAavH,MACb2H,GAAOmO,UACPjM,EAAU,CAAE3F,MAAOgW,GAAuB,CAAC,GAE7CG,cAAe,EAAEtS,SAEhB6N,EAAW,YAKjB/L,IACDrC,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CACHjB,MAAO,CAACH,EAAavH,MAAO2H,GAAOmO,UAAW,CAAER,WAAY,IAC5D+E,cAAe,EAAEtS,SAEhB6D,GAAY,CAAE5L,MAAO,GAAI6J,QAAAA,MAG7BuP,IACC5R,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAapD,KAAM,CAAEmR,WAAY,EAAG1D,UAAW,WAAY7J,SACtE,IAAMqR,EAAQtb,QAAU,UAI/BsK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOC,GAAOoO,cAAchO,SAAA,EAC9B8B,IACArC,EAAAA,EAAAA,KAAAgI,EAAAA,SAAA,CAAAzH,UACEP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfE,QAAS,WAAF,OAAQwB,EAAWwH,SAAS,UAAW,CAAEvR,MAAAA,GAAQ,EACxD0H,MAAOC,GAAOqO,aAAajO,UAE3BP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAK,UAAUC,KAAM,GAAIxE,MAAOmU,UAIzCxO,IACDrC,EAAAA,EAAAA,KAAAgI,EAAAA,SAAA,CAAAzH,UACEP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfE,QAAS,WAAF,OAAQ0Q,GAAmBD,EAAY,EAC9CtR,MAAOC,GAAOqO,aAAajO,UAE3BP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAMuQ,EAAc,WAAa,SAAUtQ,KAAM,GAAIxE,MAAOmU,WAIpExO,IAAWnJ,KAAiB0Y,IAC9BhR,EAAAA,EAAAA,MAAAoH,EAAAA,SAAA,CAAAzH,SAAA,EACEP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CAACE,QAAS,WAAF,OAAQwQ,GAAWD,EAAI,EAAEpR,MAAOC,GAAOqO,aAAajO,UAC3EP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAK,OAAOC,KAAM,GAAIxE,MAAOmU,OAErC7Q,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CAACE,QA/HX,WACrBwB,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,EAAO6J,QAAAA,GAC3C,EA6H2DnC,MAAOC,GAAOqO,aAAajO,UACpEP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAK,WAAWC,KAAM,GAAIxE,MAAOmU,YAIzCxO,IAAWnJ,KAAiB0Y,IAAYvP,IAC1CrC,EAAAA,EAAAA,KAAAgI,EAAAA,SAAA,CAAAzH,UACEP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CAACE,QAAS8Q,EAAY3R,MAAOC,GAAOqO,aAAajO,UAChEP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CAACC,KAAK,SAASC,KAAM,GAAIxE,MAAOmU,eAM/CjQ,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOH,EAAaxE,KAAKgF,SAAA,EAC7BP,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CACHC,OACGoR,GAAOpY,EACJ,CAAC6G,EAAapE,KAAM,CAAEE,QAAS,EAAGC,aAAc,IAChD,CAAEP,KAAM,EAAG+L,SAAU,YAC1B/G,UAEDP,EAAAA,EAAAA,KAAC8S,GAAAA,aAAY,CACXC,QAAM,EACNjd,MAAOoD,GAAe,GACtBiC,MAAOA,EACPmH,OAAQ,SAACT,GAAG,OAAKS,GAAOT,EAAKU,EAAW,EACxCyQ,YAAU,MAGbna,QAA8BlD,IAAhBuD,GACb8G,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAACH,EAAapE,KAAMoE,EAAarC,eAAe6C,UAC3DP,EAAAA,EAAAA,KAACiT,GAAAA,QAAiB,CAAC/R,KAAK,QAAQxE,MAAM,cAEtC4U,GACFtR,EAAAA,EAAAA,KAACJ,EAAe,CACdrK,KAAMyY,EACN/P,KAAMoE,GAAW,GACjBd,KAAM/I,EACNuI,QAAS,SAACL,GAAI,OAAK6B,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,EAAO6J,QAAS3B,EAAKlI,OAAQ,IAE9E,MAAJO,GAAAA,EAAMG,cACNmJ,IACArC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CACHC,MAAO,CACL3E,KAAM,EACNiC,cAAe,MACfN,eAAgB,gBAChBJ,WAAY,YACZyD,SAEDyR,EAAahY,KACZ,SAAA9F,GAAA,IAAG+d,EAAW/d,EAAX+d,YAAa1J,EAAIrU,EAAJqU,KAAM6J,EAAOle,EAAPke,QAAO,YACXzc,IAAhBsc,IACErR,EAAAA,EAAAA,MAACC,EAAAA,QAAgB,CAEfE,QAAS,WAAF,OACLwB,EAAWwH,SACT,WACsB,IAAtBkI,EAAY/T,MACR,CAAE1F,MAAAA,GACF,CAAEA,MAAAA,EAAO6J,QAAS4P,EAAYzZ,OACnC,EAEH0H,MAAO,CACL,CAAE1C,cAAe4U,EAAU,cAAgB,MAAO1W,gBAAiB,KACnE6E,SAAA,EAEFP,EAAAA,EAAAA,KAACgB,EAAAA,QAAI,CACHC,KAAMsH,EACNrH,KAAM,GACNxE,MAAOmU,EACP3Q,MAAO,CAAEsN,UAAW,aAEtBxN,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CACHjB,MAAO,CACLH,EAAapD,KACb,CAAEF,WAAY,OAAQU,iBAAkB,KACxCoD,SAEqB,IAAtB0R,EAAY/T,MAAc1F,EAAQyZ,EAAYzZ,UAzB5C+P,EA4BR,OAKT3H,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAACH,EAAapE,KAAMoE,EAAarC,eAAe6C,SAAA,EAC3DP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAAC,0LAGhCP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CAACE,QAAS8Q,EAAY3R,MAAOH,EAAalD,OAAO0D,UAChEP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAa/C,WAAWuD,SAAC,0CASxD,EI3QItC,KAAM,QAERiV,SAAU,CACR1a,MAAAA,GACA2X,ULPoC,WACtC,IAAMC,GAAQc,EAAAA,EAAAA,YACRF,GAAYC,EAAAA,EAAAA,gBACVzY,EAAU4X,EAAMlO,OAAhB1J,MACF+J,GAAauB,EAAAA,EAAAA,iBACb3I,GAAQ2E,EAAAA,EAAAA,kBACRC,EAAe7E,EAAmBC,GAExCuW,EAAkCnZ,EAAYC,GAAhCO,EAAI2Y,EAAVnc,KAAYsS,EAAS6J,EAAT7J,UACuBjP,EAAdR,IAArB7C,KAAMqN,OAAK,IAAAhK,EAAG,GAAEA,EAUxBsM,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAnCzN,EAAO2N,EAAA,GAAE+N,EAAU/N,EAAA,GAEpBgO,EAAW5Z,IAyCjB,OAdAiN,EAAAA,EAAAA,YAAU,YACHoB,GAAiB,MAAJ9O,GAAAA,EAAMG,aACtBia,EAAe,MAAJpa,OAAI,EAAJA,EAAMG,YAErB,GAAG,CAAC2O,EAAW9O,KAEf2N,EAAAA,EAAAA,iBAAe,WACb,IAAM2M,EAAW,SAACC,GAChBA,EAAMC,iBACND,EAAME,YAAc,EACtB,EAEA,OADA/Q,OAAOgR,iBAAiB,eAAgBJ,GACjC,kBAAM5Q,OAAOiR,oBAAoB,eAAgBL,EAAU,CACpE,IAEErC,IACEpQ,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOH,EAAazE,UAAUiF,SAAA,EAClCP,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAOH,EAAaxC,OAAOgD,UAC/BK,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAavH,MAAO,CAAE+C,KAAM,IAAKgF,SAAA,CAAE/H,EAAM,wBAEzDwH,EAAAA,EAAAA,KAAC2T,GAAAA,OAAM,CACLZ,QAAM,EACNjd,MAAO2B,EACPmc,SAAUT,EACVhY,MAAOA,EACP0Y,aAAc,CACZ,CACEC,QAAS,IACTC,gBAAgB,WAAD,IAAAC,GAAA5gB,EAAAA,EAAAA,UAAE,UAAO6gB,GACtB,IAnEYlO,EAmENmO,GAnEMnO,EAmE2BkO,EAlEnDrR,EACG7H,QAAO,SAACpD,GAAC,OAAKA,EAAEa,MAAMoL,WAAWpL,EAAQ,IAAI,IAC7CwB,KAAI,SAACrC,GAAC,MAAM,CACXL,KAAM,aACN2J,KAAMtJ,EAAEa,MAAM6V,MAAM7V,EAAQ,KAAK,GACjCA,MAAOb,EAAEa,MACV,IACAuC,QAAO,SAACpD,GAAC,OAAKA,EAAEsJ,KAAKyC,cAAcE,WAAWmC,EAAQrC,cAAc,KA4D3D,MAAO,CACL,CAAEpM,KAAM,YAAa2J,KAAMgT,EAASzb,MAAAA,EAAO6J,QAAS4R,IAAS1Z,QAAAC,EAAAA,EAAAA,SACzD0Z,EAAc5U,OACd4U,EACA,CAAC,CAAE5c,KAAM,aAAc2J,KAAMgT,EAASzb,MAAOA,EAAQ,IAAMyb,MAAUzZ,EAAAA,EAAAA,SACtE+I,GAAiBX,EAAOqR,KAC3Bja,KAAI,SAACrC,GACL,IAAMgF,EACO,cAAXhF,EAAEL,KACEK,EAAEsJ,KAAO,IAAImD,GAAYzM,MACd,eAAXA,EAAEL,KACFK,EAAEsJ,KACFtJ,EAAEa,MAMR,MAAO,CACLmE,KAAAA,EACA7G,MAAO,WAPGqe,UACC,cAAXxc,EAAEL,MAAwBK,EAAE0K,QACxB,UAAU1K,EAAEa,iBAAiBb,EAAE0K,UAC/B,UAAU1K,EAAEa,YAISmE,QAE7B,GACF,IAzBe,OAyBd,SAzBc7I,GAAA,OAAAkgB,EAAAjgB,MAAA,KAAAC,UAAA,EAAC,IA2BlB,CACE8f,QAAS,OACTC,gBAAgB,WAAD,IAAAK,GAAAhhB,EAAAA,EAAAA,UAAE,UAAO6gB,GACtB,IAAMld,EAAQ,OAASkd,EACjBpS,EAAM,IAAIE,IAAIhL,GACpB,GAAqB,UAAjB8K,EAAIwS,UAAyC,WAAjBxS,EAAIwS,SAClC,MAAO,GAET,IAAMvd,QAAgBJ,EAAW,CAAEK,MAAAA,IACnC,OAAKD,EAAQ0B,MAGN,CACL,CACEmE,KAAM7F,EAAQ0B,MACd1C,MAAO,WAAWgB,EAAQ+K,OAAO/K,EAAQ0B,cALpC,EAYX,IApBe,OAoBd,SApBclE,GAAA,OAAA8f,EAAArgB,MAAA,KAAAC,UAAA,EAAC,QAyBtB4M,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOC,GAAOuB,gBAAgBnB,SAAA,EAClCP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfX,MAAO,CAACH,EAAalD,OAAQsD,GAAOwN,cACpC5M,QA7FW,WACfwB,EAAW+R,YACb/R,EAAWgS,SAEXhS,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,GAEtC,EAuFgC+H,UAEtBP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAa/C,WAAWuD,SAAC,oBAExCP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CAACX,MAAO,CAACH,EAAalD,OAAQsD,GAAO0N,YAAa9M,QAnHxD,YACT,MAAJhI,OAAI,EAAJA,EAAMG,eAAgBzB,EAI1B2b,EAAS9M,OACP,CAAE9N,MAAAA,EAAOU,YAAazB,GACtB,CACEgD,UAAW,WACT8H,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,GACpC,EACAgc,QAAS,SAAC3gB,GACR4gB,GAAAA,QAAMC,MAAM,eAAM7gB,EAAM8gB,SAAW,8GACrC,IAXFpS,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,GActC,EAmG+F+H,UACrFP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAa/C,WAAWuD,SAAC,wBAMlD,EKxIItC,KAAM,QAER2W,SAAU,CACRpc,MAAAA,GACA2X,UFlBoC,WAAO,IAADjC,EAE5CiD,GADcD,EAAAA,EAAAA,YACmBhP,OAAzB1J,EAAK2Y,EAAL3Y,MAAO6J,EAAO8O,EAAP9O,QACTE,GAAauB,EAAAA,EAAAA,iBACb3I,GAAQ2E,EAAAA,EAAAA,kBACRuR,GAAUtJ,EAAAA,EAAAA,oBAChB7C,GAAgCC,EAAAA,EAAAA,UAAS3M,GAAM4M,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAxC2P,EAAQzP,EAAA,GAAE0P,EAAW1P,EAAA,GAC5BsM,EAAkCnZ,EAAYC,GAAhCO,EAAI2Y,EAAVnc,KAAYsS,EAAS6J,EAAT7J,UACdmG,EAAYrQ,GAAwB,MAAJ5E,OAAI,EAAJA,EAAMG,cAAe,IACrD+E,GAAiD,OAA1CiQ,EAAAF,EAAUtW,MAAK,SAACC,GAAC,OAAKA,EAAEa,QAAU6J,CAAO,UAAC,EAA1C6L,EAA4CjQ,OAAQ,GACnD/D,EAAY3B,EAAYsc,GAA9Btf,KACFwf,EAAepX,GAA2B,MAAPzD,OAAO,EAAPA,EAAShB,cAAe,IAAI6B,QACnE,SAACpD,GAAC,OAAKa,IAAUqc,GAAY5W,IAAStG,EAAEsG,OAAStG,EAAEsG,KAAK2F,WAAW3F,EAAK,IAE1EsH,GAA8BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAnCyP,EAAOxP,EAAA,GAAEyP,EAAUzP,EAAA,GAC1B8M,GAA8BnN,EAAAA,EAAAA,YAAmBoN,GAAAlN,EAAAA,EAAAA,SAAAiN,EAAA,GAA1Cxb,EAAOyb,EAAA,GAAE2C,EAAU3C,EAAA,GACpBxS,EAAe7E,EAAmBC,GAElCiY,EAAW5Z,IACX2b,EXkJmB,WACzB,IAAM1c,GAAcC,EAAAA,EAAAA,kBAC0B0c,EAAdhd,IAAxB7C,KAAMiC,OAAQ,IAAA4d,EAAG,GAAEA,EACnB1gB,GAASC,EAAAA,EAAAA,kBAATD,KAER,OAAOgF,EAAAA,EAAAA,aAAY,CACjBC,WAAW,WAAD,IAAA6V,GAAApc,EAAAA,EAAAA,UAAE,UAAAuD,GAQL,IAPL0e,EAAQ1e,EAAR0e,SACAR,EAAQle,EAARke,SACA3b,EAAWvC,EAAXuC,YAMMH,EAAOvB,EAASE,MAAK,SAACsB,GAAC,OAAKA,EAAER,QAAU6c,CAAQ,IAEtD,IAAKtc,EACH,MAAM,IAAIuc,MAAM,kBAGlB,GAAI9d,EAAS+d,MAAK,SAACvc,GAAC,OAAKA,EAAER,QAAUqc,CAAQ,IAC3C,MAAM,IAAIS,MAAM,sCAGlB,IAAMzb,EAAkBrC,EAASwC,KAAI,SAAChB,GAAC,OACrCA,EAAER,QAAU6c,EAAQtd,EAAAA,EAAA,GACXiB,GAAC,IAAER,MAAOqc,EAAU3b,YAAaA,GAAeH,EAAKG,cAC1DF,CAAC,UAGDzB,GAAkB7C,EAAKE,QAASiF,EAAiBd,EAAKjE,IAG5D,IACMgG,SADoB9C,KACagC,KAAI,SAACxB,GAAK,OAC/CA,IAAU6c,EAAWR,EAAWrc,CAAK,IAIvC,aAFMP,EAAgB6C,GAEf,CAAEua,SAAAA,EAAUR,SAAAA,EACrB,IAnCU,OAmCT,SAnCSW,GAAA,OAAAhG,EAAAzb,MAAA,KAAAC,UAAA,EAAC,GAoCXyG,UAAW,SAAClF,GACVkD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,kBAC3CyD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,sBAC3CyD,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,cAAeO,EAAK8f,YAC/D5c,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,cAAeO,EAAKsf,YAC/Dpc,EAAYQ,kBAAkB,CAAEjE,SAAU,CAAC,gBAC7C,GAEJ,CWpMuBygB,GACrBC,GAAiDlP,EAAAA,EAAAA,UAAQ,WAAO,IAADmP,EACvDC,EAAgB5H,EAAUjT,QAAO,SAACpD,GAAC,OAAKA,EAAEsG,KAAK2F,WAAW3F,EAAK,IAC/D4X,GAAiB,MAAP3b,OAAO,EAAPA,EAAS1B,UAAc,MAAJO,OAAI,EAAJA,EAAMP,OAAQ,KAAsB,OAAnBmd,EAAGC,EAAc,SAAE,EAAhBD,EAAkBnd,OACnEsd,EAAkBF,EACrB5b,KAAI,SAACrC,EAAGsC,GAAC,OAAM4b,GAAiB,IAAN5b,EAAU,GAAKtC,EAAE4F,QAAU5F,EAAEuB,WAAW,IAClErD,KAAK,IACFkgB,EAAkB/H,EAAUjT,QAAO,SAACpD,GAAC,OAAMA,EAAEsG,KAAK2F,WAAW3F,EAAK,IAClE+X,EAAoBD,EAAgB/b,KAAI,SAACrC,GAAC,OAAKA,EAAE4F,OAAS5F,EAAEuB,WAAW,IAAErD,KAAK,IAC9EogB,GAAsB,MAAJld,OAAI,EAAJA,EAAMP,UAAiB,MAAP0B,OAAO,EAAPA,EAAS1B,OAAQud,EAAkBhB,EACrEmB,EAAcD,EAAgBE,eAAc,SAACxe,GAAC,OAAKA,EAAEsG,KAAK2F,WAAWoR,EAAQ,IAcnF,MAAO,CAAEgB,kBAAAA,EAAmBI,uBAZVzgB,KAAT,MAAPuE,OAAO,EAAPA,EAASpF,IACLghB,EACA,GAAAvb,QAAAC,EAAAA,EAAAA,SACKyb,EAAgB7P,MAAM,EAAG8P,EAAc,GAAGlc,KAAI,SAACrC,GAAC,OAAKA,EAAE4F,OAAS5F,EAAEuB,WAAW,MAACsB,EAAAA,EAAAA,SAC9Eob,EAAc5b,KACf,SAACrC,EAAGsC,GAAC,OACDtC,EAAEsG,OAASA,GAA0B,KAAlBtG,EAAEuB,aAAwB2c,GAAiB,IAAN5b,EACtD,GACAtC,EAAE4F,QAAU5F,EAAEuB,WAAW,MAChCsB,EAAAA,EAAAA,SACEyb,EAAgB7P,MAAM8P,EAAc,GAAGlc,KAAI,SAACrC,GAAC,OAAKA,EAAE4F,OAAS5F,EAAEuB,WAAW,MAC7ErD,KAAK,IAEf,GAAG,CAACmY,EAAW+G,EAAc9W,EAAM+W,IAxB3BgB,EAAiBN,EAAjBM,kBAAmBI,EAAiBV,EAAjBU,kBA+DrBC,GAAe,WACf9T,EAAW+R,YACb/R,EAAWgS,SAEXhS,EAAWwH,SAAS,WAAY,CAAEvR,MAAAA,GAEtC,GAEAiO,EAAAA,EAAAA,YAAU,WACHoB,GAAc9O,GACjBsd,KAEFtd,GAAQ+b,EAAY/b,EAAKP,OAAS6J,EAAU,IAAIA,IAAY,IAC9D,GAAG,CAACtJ,EAAM8O,KACVpB,EAAAA,EAAAA,YAAU,WACHoB,GACHoN,EAAW5S,EAAU,GAAKpE,EAE9B,GAAG,CAACoE,EAASwF,IACb,IAAMyO,GAAgBtI,EAAUtW,MAAK,SAACC,GAAC,OAAKA,EAAEsG,OAASA,CAAI,IACrDsY,GAAmBxB,EAAard,MAAK,SAACC,GAAC,OAAKA,EAAEsG,OAAS+W,CAAO,IAC9DwB,IAAgB3B,EAASxV,aAA+B1J,IAArB4gB,GACzC,OACEvW,EAAAA,EAAAA,KAACsN,GAAAA,QAAU,CAACpN,MAAOH,EAAazE,UAAUiF,UACxCK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOH,EAAapE,KAAK4E,SAAA,EAC7BK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAAE1C,cAA2B,cAAZ6T,EAA0B,MAAQ,SAAU7J,OAAQ,GAAIjH,SAAA,EACpFK,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAAEsH,OAAQ,GAAIjH,SAAA,EACzBP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAC5B8B,EAAU,8DAAmB,6CAEhCrC,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAavH,MAAO2H,GAAOsO,SAASlO,SAC/C6D,GAAY,CAAE5L,MAAAA,EAAO6J,QAAAA,OAExBrC,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAAC,2DAChCP,EAAAA,EAAAA,KAAC8E,GAAS,CAACC,YAAa+P,EAAa7P,WAAW,KAChDjF,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOsO,QAAQlO,UAC1BP,EAAAA,EAAAA,KAACJ,EAAe,CACd3B,KAAM+W,EACNjU,QAAS,SAACL,GAAI,OAAKuU,EAAWvU,EAAKzC,KAAK,EACxCsD,MAAa,MAAPrH,OAAO,EAAPA,EAAS1B,QAAS,GACxBjD,KAAMwf,UAIZnU,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAO,CAAE3E,KAAM,GAAIgF,SAAA,EACvBP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAapD,KAAK4D,SAAC,gCAChCK,EAAAA,EAAAA,MAACC,EAAAA,QAAgB,CACfX,MAAO,CACLH,EAAalD,OACbsD,GAAOuO,WACP,CACEnT,KAAM,EACNiC,cAAe,MACfV,WAAY,SACZ0P,WAAY,GACZiK,cAAe,KAGnB1V,QAAS,WAAF,OAAQmU,GAAYpe,EAAQ,EAACyJ,SAAA,EAEpCP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAavH,MAAM+H,SAC7B6D,GAAY,CAAE5L,MAAAA,EAAO6J,QAAsB,MAAbiU,QAAa,EAAbA,GAAe9d,WAEhDwH,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAO,CAACH,EAAapD,KAAM,CAAEb,aAAc,EAAGU,SAAU,KAAM+D,SAAC,cACrEP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAavH,MAAM+H,SAC7B6D,GAAY,CAAE5L,MAAOqc,EAAUxS,QAAyB,MAAhBkU,QAAgB,EAAhBA,GAAkB/d,kBAGlD7C,IAAZmB,IACCkJ,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAAEwW,QAAS5f,EAAU,OAAS,QAASyJ,UAClDP,EAAAA,EAAAA,KAAC8S,GAAAA,aAAY,CACXC,QAAM,EACNjd,MAAOsgB,EACPjb,MAAOA,EACPmH,OAAQ,SAACT,GAAG,OAAKS,GAAOT,EAAKU,EAAW,EACxCyQ,YAAU,aAMpBpS,EAAAA,EAAAA,MAACX,EAAAA,QAAI,CAACC,MAAOC,GAAOuB,gBAAgBnB,SAAA,EAClCP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfX,MAAO,CAACH,EAAalD,OAAQsD,GAAOwN,cACpC5M,QAASsV,GAAa9V,UAEtBP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAa/C,WAAWuD,SAAC,oBAExCP,EAAAA,EAAAA,KAACa,EAAAA,QAAgB,CACfX,MAAO,CAACH,EAAalD,OAAQ2Z,GAAerW,GAAOwN,aAAexN,GAAOuO,YACzE3N,QA/HS,gBACGpL,KAAT,MAAPuE,OAAO,EAAPA,EAASpF,IACXqgB,EAAa7O,OACX,CACE+O,SAAU7c,EACVqc,SAAUA,EAASxV,OACnBnG,YAAsB,KAAT+E,OAActI,EAAYygB,GAEzC,CACE3b,UAAW,SAAClF,GACVgN,EAAWwH,SAAS,CAAE9I,KAAM,WAAYiB,OAAQ,CAAE1J,MAAOjD,EAAKsf,WAChE,EACAL,QAAS,SAAC3gB,GACR4gB,GAAAA,QAAMC,MAAM,eAAM7gB,EAAM8gB,SAAW,4FACrC,MAII,MAAJ5b,OAAI,EAAJA,EAAMP,SAAU0B,EAAQ1B,OAASyF,IAAS+W,GAC5CqB,KAEFjD,EAAS9M,OACP,CAAE9N,MAAO0B,EAAQ1B,MAAOU,YAAakd,GACrC,CACE3b,UAAW,SAAClF,IACF,MAAJwD,OAAI,EAAJA,EAAMP,SAAU0B,EAAQ1B,OAC1B4a,EAAS9M,OAAO,CAAE9N,MAAAA,EAAOU,YAAa8c,IAExCzT,EAAWwH,SAAS,CAAE9I,KAAM,WAAYiB,OAAQ,CAAE1J,MAAOjD,EAAKiD,QAChE,EACAgc,QAAS,SAAC3gB,GACR4gB,GAAAA,QAAMC,MAAM,eAAM7gB,EAAM8gB,SAAW,4FACrC,IAIR,EA4FUtN,SAAUmP,GAAajW,UAEvBP,EAAAA,EAAAA,KAACmB,EAAAA,QAAI,CAACjB,MAAOH,EAAa/C,WAAWuD,SAAC,0BAMlD,EEnKItC,KAAM,QAER0Y,YAAa,CACXne,MAAAA,GACA2X,UChCuC,WACzC,IAAM1N,GAASsF,EAAAA,EAAAA,oBACf,OACEnH,EAAAA,EAAAA,MAAAoH,EAAAA,SAAA,CAAAzH,SAAA,CACc,aAAXkC,IAAyBzC,EAAAA,EAAAA,KAAC8E,GAAS,KACpC9E,EAAAA,EAAAA,KAACgN,GAAkB,MAGzB,EDyBI/O,KAAM,UAER2Y,WAAY,CACVpe,MAAAA,GACA2X,UHhCsC,WACxC,IAAM5N,GAAauB,EAAAA,EAAAA,iBACnBnL,EAAwCP,IAAcQ,EAAAD,EAA9CpD,KAAMqN,OAAK,IAAAhK,EAAG,GAAEA,EAAEiP,EAASlP,EAATkP,UACpBgP,EAAclU,GAAaC,GAC9B7H,QAAO,SAACpD,GACP,IAAMoB,EAAO6J,EAAMlL,MAAK,SAAC4L,GAAE,OAAKA,EAAG9K,QAAUb,EAAEa,KAAK,IACpD,OAAQ,MAAJO,IAAAA,EAAMG,kBAEQvD,IAAdgC,EAAE0K,UACF1E,EAAoB5E,EAAKG,aAAaxB,MAAK,SAAC4L,GAAE,OAAKA,EAAG9K,QAAUb,EAAE0K,OAAO,GAM/E,IACCrI,KAAI,SAACrC,GAAC,OAAAI,GAAAA,GAAA,GACFJ,GAAC,IACJsQ,eACiBtS,IAAdgC,EAAE0K,QAAwB,oBAAsB,wBAA0B,IAAI1K,EAAEsK,WAAS,IAE1F6U,EAAkBlU,EACrB5I,KAAI,SAACrC,GACJ,IAAMyW,EAAaD,GAAcxW,EAAEa,OACnC,GACEb,EAAEuB,aACoB,IAAtBkV,EAAW9O,aACsC3J,IAAjDiN,EAAMlL,MAAK,SAACC,GAAC,OAAKA,EAAEa,QAAU4V,EAAW,EAAE,IAE3C,MAAO,CAAE5V,MAAO4V,EAAW,GAAInG,SAAU,qBAAqBtQ,EAAEa,SAGpE,IACCuC,QAAO,SAACpD,GAAC,YAAWhC,IAANgC,CAAe,IAChC,OACEqI,EAAAA,EAAAA,KAAC4H,GAAe,CACdpQ,SAAQ,GAAA+C,QAAAC,EAAAA,EAAAA,SAAMqc,IAAWrc,EAAAA,EAAAA,SAAKsc,IAC9B/V,QAAS,SAACvI,GAAK,OAAK+J,EAAW7D,KAAK,WAAY,CAAElG,MAAAA,GAAQ,EAC1DqP,UAAWA,EACXC,aAAa,sFAGnB,EGTI7J,KAAM,QAER8Y,cAAe,CACbve,MAAAA,GACA2X,UE1ByC,WAC3C,IAAM5N,GAAauB,EAAAA,EAAAA,iBACnBnL,EAAwCP,IAAcQ,EAAAD,EAA9CpD,KAAMqN,OAAK,IAAAhK,EAAG,GAAEA,EAAEiP,EAASlP,EAATkP,UACpBtS,EAAOqN,EAAMC,SAAQ,SAAClL,GAC1B,IAAMqW,EAAYrQ,EAAoBhG,EAAEuB,aAAe,IACjD8d,EAAiBhJ,EAAUjT,QAC/B,SAACuI,GAAE,OAAkB,IAAbA,EAAGpF,OAAyE,KAA1D6P,GAAmBC,EAAW1K,EAAG9K,OAAO,GAAO6G,MAAa,IAElF4X,EAAYjJ,EAAUjT,QAAO,SAACuI,GAAE,OApB1C,SAAwB1F,GAKtB,IAJA,IAEIsZ,EAFEC,EAAQ,sCACRC,EAAoB,GAGY,QAA9BF,EAAQC,EAAME,KAAKzZ,KACzBwZ,EAAQ1Y,KAAKwY,EAAM,IAGrB,OAAOE,CACT,CAU+CE,CAAehU,EAAGpK,aAAaoG,OAAS,CAAC,IACpF,MAAM,GAAN/E,QAAAC,EAAAA,EAAAA,SACKwc,EAAehd,KAAI,SAACsJ,GAAE,MAAM,CAC7B9K,MAAOb,EAAEa,MACT6J,QAAsB,IAAbiB,EAAGpF,WAAcvI,EAAY2N,EAAG9K,MACzCyP,SAAU,gBACX,MAAEzN,EAAAA,EAAAA,SACAyc,EAAUjd,KAAI,SAACsJ,GAAE,MAAM,CACxB9K,MAAOb,EAAEa,MACT6J,QAAsB,IAAbiB,EAAGpF,WAAcvI,EAAY2N,EAAG9K,MACzCyP,SAAU,aACX,KAEL,IACA,OACEjI,EAAAA,EAAAA,KAAC4H,GAAe,CACdpQ,SAAUjC,EACVwL,QAAS,SAACvI,GAAK,OAAK+J,EAAW7D,KAAK,WAAY,CAAElG,MAAAA,GAAQ,EAC1DqP,UAAWA,EACXC,aAAa,sFAGnB,EFHI7J,KAAM,SAERsZ,QAAS,CACP/e,MAAAA,GACA2X,UN1CmC,WACrC,IAAM5N,GAAauB,EAAAA,EAAAA,iBAEXtL,GADM0Y,EAAAA,EAAAA,YACUhP,OAAhB1J,MACRgf,EAA8Cnf,IAAkBof,EAAAD,EAAxDjiB,KAAM+T,OAAW,IAAAmO,EAAG,GAAEA,EAAE5P,EAAS2P,EAAT3P,UAChC,OACE7H,EAAAA,EAAAA,KAAC4H,GAAe,CACdpQ,SAAU8R,EACPvO,QAAO,SAACpD,GAAC,YAAehC,IAAV6C,GAAuBA,IAAUb,EAAEa,KAAK,IACtDkQ,MAAK,SAACxF,EAAGyF,GAAC,OAAK,IAAI7O,KAAK6O,EAAErS,SAASsS,UAAY,IAAI9O,KAAKoJ,EAAE5M,SAASsS,SAAS,IAC5E5O,KAAI,SAACrC,GAAC,OAAAI,GAAAA,GAAA,GAAWJ,GAAC,IAAEsQ,SAAU,8BAAU0C,GAAchT,EAAErB,YAAoB,IAC/EuR,UAAWA,EACX9G,QAAS,SAACvI,EAAOkf,EAAG5iB,GAAE,YACTa,IAAV6C,EAAsB+J,EAAW7D,KAAO6D,EAAWwH,UAAU,WAAY,CACxEvR,MAAAA,EACA4Y,UAAWtc,GACX,EAEJgT,aAAa,gFAGnB,EMsBI7J,KAAM,Y,2lBG3CV,oBACE,IAAQkK,GAASC,EAAAA,EAAAA,kBAATD,KACR,OACEvH,EAAAA,EAAAA,MAACX,EAAAA,KAAI,CAACC,MAAO,CAAE3E,KAAM,GAAIgF,SAAA,EACvBP,EAAAA,EAAAA,KAACqI,GAAAA,QAAS,CACR/G,KAAM,SAACgH,GAAM,OAAKtI,EAAAA,EAAAA,KAACqI,EAAAA,QAAStQ,GAAAA,GAAA,GAAKuQ,GAAM,IAAEC,KAAM,SAAU,EACzD/P,MAAO2P,EAAK,QACZpH,QAAS,WAAF,OAAQrC,EAAAA,EAAAA,MAAK,OAAO,KAE7BsB,EAAAA,EAAAA,KAACkI,GAAe,KAChBlI,EAAAA,EAAAA,KAACwI,GAAkB,KACnB5H,EAAAA,EAAAA,MAAC0M,GAAAA,QAAU,CAACpN,MAAuB,QAAhByX,GAAAA,QAASC,GAAgB,CAAEC,eAAgB,QAAmB,CAAC,EAAEtX,SAAA,EAClFP,EAAAA,EAAAA,KAACqI,GAAAA,QAAc,CAACnI,MAAO,CAAC,EAAG4O,YAAY,EAAMvO,SAC1C4H,EAAK,iBAERnI,EAAAA,EAAAA,KAAC+O,GAAmB,CAACzX,KAAM,UAC3B0I,EAAAA,EAAAA,KAAC+O,GAAmB,CAACzX,KAAM,UAC3B0I,EAAAA,EAAAA,KAACqI,GAAAA,QAAc,CAACnI,MAAO,CAAE3E,KAAM,GAAKuT,YAAY,EAAMvO,SACnD4H,EAAK,qBAGRnI,EAAAA,EAAAA,KAAC+O,GAAmB,CAACzX,KAAM,OAAQ+S,UAAW,UAIrD,E,+kBC3BD,IAAMyN,GAAc,WAElB,MAAsB,eADH/P,EAAAA,EAAAA,qBACiB/H,EAAAA,EAAAA,KAAC8E,GAAS,SAAMnP,CACtD,EAEMoiB,GAAS,eAAA5kB,GAAAC,EAAAA,EAAAA,UAAG,YAChB,IAAM4kB,QAAgB,uDACtB,MAAO,CACL/H,KAAAA,GACAgI,MAAAA,EAAAA,MACAC,SAAU,CAACF,EAAQG,QAAQ,MAC3BC,SAAU,sBACVC,cAAe,CACbC,UAAW,WACT,MAAO,qBACT,GAEFC,WAAY,CACVtI,KAAM,OACNgI,MAAO,eAETO,gBAAgBxY,EAAAA,EAAAA,KAACqI,EAAAA,QAAS,CAACE,KAAK,aAAarI,MAAO,CAAEoB,MAAO,GAAImG,KAAM,MACvE6I,aAAatQ,EAAAA,EAAAA,KAAC8X,GAAW,IACzBW,OAAQ,GACRC,QAAQ1Y,EAAAA,EAAAA,KAAC2Y,GAAM,IAEnB,IAAC,kBArBc,OAAAxlB,EAAAY,MAAA,KAAAC,UAAA,KAuBf,oBACE,IAAM4kB,GAAS9Y,EAAAA,EAAAA,kBACT+Y,EAAsB,SAAXD,EAAoBE,EAAAA,aAAeC,EAAAA,cAC9C5d,EAAsBpD,GAAAA,GAAA,GACvB8gB,GAAQ,IACXG,OAAMjhB,GAAAA,GAAA,GAAO8gB,EAASG,QAAM,IAAEC,QAASrK,EAAAA,OAAOgK,GAAQjc,SAElDuc,EAAiBhQ,EAAAA,MAAW,kBAChC6O,KAAYlgB,MAAK,SAACshB,GAAM,MAAM,CAAEC,QAAS,WAAF,OAAQpZ,EAAAA,EAAAA,KAACqZ,EAAAA,WAAU,CAACF,OAAQA,GAAU,EAAE,GAAE,IAEnF,OACEnZ,EAAAA,EAAAA,KAACsZ,EAAAA,QAAa,CAACne,MAAOA,EAAMoF,UAC1BP,EAAAA,EAAAA,KAAC0N,EAAAA,SAAQ,CAAC6L,UAAUvZ,EAAAA,EAAAA,KAAAgI,EAAAA,SAAA,IAAMzH,UACxBP,EAAAA,EAAAA,KAACkZ,EAAc,OAItB,C","sources":["src/hooks/useKeywordStorage.ts","src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/screens/main/NoteListSection.tsx","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/main/EmptyPageScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/EmptyContentScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords:';\r\n\r\nexport type KeywordContent =\r\n  | {\r\n      type: '_NOTELINK';\r\n      name: string;\r\n      title: string;\r\n      section?: string;\r\n    }\r\n  | {\r\n      type: '_KEYWORD';\r\n      title: string;\r\n    };\r\n\r\nconst getKeywords = async (subkey: string | undefined): Promise<KeywordContent[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY + subkey);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveKeywords = async (\r\n  subkey: string | undefined,\r\n  keywords: KeywordContent[]\r\n): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY + subkey, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving keywords', e);\r\n  }\r\n};\r\n\r\nexport const useKeywords = () => {\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n  return useQuery({\r\n    queryKey: ['keywords', subkey],\r\n    queryFn: async () => {\r\n      return await getKeywords(subkey);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async (keyword: KeywordContent) => {\r\n      const keywords = await getKeywords(subkey);\r\n      const newKeywords = [\r\n        ...new Set([JSON.stringify(keyword), ...keywords.map((v) => JSON.stringify(v))]),\r\n      ].map((v) => JSON.parse(v));\r\n      await saveKeywords(subkey, newKeywords);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords(subkey, []);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n","import { axiosCreate } from '@blacktokki/account';\r\n\r\nimport { Content, PostContent, Link } from '../types';\r\n\r\nconst axios = axiosCreate('notebook');\r\n\r\nexport const getContentOne = async (id: number) => {\r\n  return (await axios.get(`/api/v1/content/${id}`)).data as Content;\r\n};\r\n\r\nexport const getContentList = async (parentId?: number, types?: Content['type'][]) => {\r\n  const parentIdParam = parentId !== undefined ? `&parentId=${parentId}` : '';\r\n  const typeParam = types !== undefined ? `&types=${types.join(',')}` : '';\r\n  return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data\r\n    .value as Content[];\r\n};\r\n\r\nexport const postContent = async (postContent: PostContent) => {\r\n  return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id;\r\n};\r\n\r\nexport const patchContent = async ({ id, updated }: { id: number; updated: PostContent }) => {\r\n  await axios.patch(`/api/v1/content`, { ids: [id], updated });\r\n};\r\n\r\nexport const deleteContent = async (id: number) => {\r\n  await axios.delete(`/api/v1/content/${id}`);\r\n};\r\n\r\nexport const previewUrl = async (preview: { query: string }) => {\r\n  return (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data as Link;\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\n\r\nimport { getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { Content, PostContent } from '../types';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\n\r\nlet lastPage: string | undefined;\r\n\r\nconst getContents = async (isOnline: boolean, type: 'NOTE' | 'SNAPSHOT'): Promise<Content[]> => {\r\n  if (isOnline) {\r\n    return await getContentList(undefined, [type]);\r\n  }\r\n  if (type === 'SNAPSHOT') {\r\n    return [];\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (\r\n  isOnline: boolean,\r\n  contents: (Content | PostContent)[],\r\n  id?: number\r\n): Promise<void> => {\r\n  if (isOnline) {\r\n    const content = contents.find((v) => id === (v as { id?: number }).id);\r\n    if (content) {\r\n      const savedId = await (id\r\n        ? patchContent({ id, updated: content }).then(() => id)\r\n        : postContent(content));\r\n      const snapshot: Content | PostContent = {\r\n        ...content,\r\n        type: 'SNAPSHOT',\r\n        id: undefined,\r\n        parentId: savedId,\r\n      };\r\n      await postContent(snapshot);\r\n    }\r\n    return;\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n\r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n\r\nexport const useNotePages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['pageContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'NOTE'),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['snapshotContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'SNAPSHOT'),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find((v) => v === title) === undefined) {\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '', id: undefined };\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useRecentPages = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['recentPages'],\r\n    queryFn: async () => {\r\n      const recentTitles = await getRecentPages();\r\n      return recentTitles\r\n        .map((title) => contents.find((c) => c.title === title))\r\n        .filter((c) => c !== undefined) as Content[];\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useLastPage = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['lastPage'],\r\n    queryFn: async () => {\r\n      return contents.find((v) => v.title === lastPage);\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useCreateOrUpdatePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const { data: contents = [] } = useNotePages();\r\n  return useMutation({\r\n    mutationFn: async ({ title, description }: { title: string; description: string }) => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      let updatedContents: (Content | PostContent)[];\r\n      const updated = auth.isLocal ? new Date().toISOString() : undefined;\r\n      if (page) {\r\n        updatedContents = contents.map((c, i) =>\r\n          c.id === page.id ? ({ ...c, description, updated } as PostContent) : c\r\n        );\r\n      } else {\r\n        const newPage = {\r\n          title,\r\n          description,\r\n          input: title,\r\n          userId: auth.user?.id || 0,\r\n          parentId: 0,\r\n          type: 'NOTE',\r\n          order: 0,\r\n          updated,\r\n          option: {},\r\n        } as PostContent;\r\n        updatedContents = [...contents, newPage];\r\n      }\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page?.id);\r\n      return { title, description };\r\n    },\r\n    onSuccess: async (data) => {\r\n      await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n      await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useMovePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [] } = useNotePages();\r\n  const { auth } = useAuthContext();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({\r\n      oldTitle,\r\n      newTitle,\r\n      description,\r\n    }: {\r\n      oldTitle: string;\r\n      newTitle: string;\r\n      description?: string;\r\n    }) => {\r\n      const page = contents.find((c) => c.title === oldTitle);\r\n\r\n      if (!page) {\r\n        throw new Error('Page not found');\r\n      }\r\n\r\n      if (contents.some((c) => c.title === newTitle)) {\r\n        throw new Error('Page with new title already exists');\r\n      }\r\n\r\n      const updatedContents = contents.map((c) =>\r\n        c.title === oldTitle\r\n          ? { ...c, title: newTitle, description: description || page.description }\r\n          : c\r\n      );\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page.id);\r\n\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.map((title) =>\r\n        title === oldTitle ? newTitle : title\r\n      );\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { oldTitle, newTitle };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({ title, direct }: { title: string; direct?: boolean }) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find((v) => v === title) === undefined || direct) {\r\n        const updatedRecentPages = [title, ...recentPages];\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async (title: string) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter((_title) => title !== _title);\r\n      lastPage = undefined;\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n    },\r\n  });\r\n};\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};\r\n","import { Text, useColorScheme } from '@blacktokki/core';\r\nimport { TouchableOpacity, View, FlatList, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { createCommonStyles } from '../styles';\r\n\r\nexport interface NodeData {\r\n  path: string;\r\n  title: string;\r\n  level: number;\r\n  header: string;\r\n  description: string;\r\n}\r\n\r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  const result: NodeData[] = [{ path: '', title: '', header: '', level: 0, description: '' }];\r\n\r\n  const headings: string[] = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\r\n  const headerStack: { level: number; title: string }[] = [];\r\n\r\n  let current: NodeData | null = null;\r\n  let cursor = doc.body.firstChild;\r\n\r\n  const flushCurrent = () => {\r\n    if (current) {\r\n      result.push(current);\r\n      current = null;\r\n    }\r\n  };\r\n\r\n  while (cursor) {\r\n    if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n      const el = cursor as HTMLElement;\r\n      if (headings.includes(el.tagName)) {\r\n        flushCurrent();\r\n\r\n        const level = parseInt(el.tagName.substring(1), 10);\r\n        const title = el.textContent?.trim() || '';\r\n\r\n        // 헤더 스택 업데이트\r\n        while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n          headerStack.pop();\r\n        }\r\n        headerStack.push({ level, title });\r\n\r\n        const path = headerStack.map((h) => h.title).join(' > ');\r\n\r\n        current = {\r\n          path,\r\n          title,\r\n          level,\r\n          header: el.outerHTML,\r\n          description: '',\r\n        };\r\n      } else if (current) {\r\n        current.description += el.outerHTML;\r\n      } else {\r\n        // 헤더 밖의 내용 처리\r\n        result[0].description += el.outerHTML;\r\n      }\r\n    } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n      current.description += cursor.textContent || '';\r\n    }\r\n\r\n    cursor = cursor.nextSibling;\r\n  }\r\n\r\n  flushCurrent();\r\n  return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props: {\r\n  root: string;\r\n  path: string;\r\n  onPress: (item: NodeData) => void;\r\n  data: NodeData[];\r\n}) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item: NodeData) => (\r\n    <TouchableOpacity style={styles.resultItem} onPress={() => props.onPress(item)}>\r\n      {item.level === 0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\" />}\r\n      <Text\r\n        style={[\r\n          props.path === item.path\r\n            ? [commonStyles.title, { marginBottom: 5, marginTop: 3 }]\r\n            : commonStyles.text,\r\n          styles.resultText,\r\n          { left: item.level * 10 + 10 },\r\n        ]}\r\n      >\r\n        {item.level === 0 ? props.root : item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View\r\n      style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}\r\n    >\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(item) => item.path}\r\n        renderItem={({ item }) => renderItem(item)}\r\n        ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n});\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Text,\r\n  StyleSheet,\r\n  PanResponder,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { parseHtmlToSections } from './HeaderSelectBar';\r\n\r\nlet _searchText = '';\r\n\r\ntype SearchContent = Content | KeywordContent;\r\n\r\nfunction extractHtmlLinksWithQuery(text: string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map((a) => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href,\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nfunction urlToNoteLink(url: string) {\r\n  const newLocation = new URL(url);\r\n  if (location.origin === newLocation.origin) {\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get('title');\r\n    const section = params.get('section') || undefined;\r\n    if (title) {\r\n      return { title, section };\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLink(url: string, navigation: StackNavigationProp<NavigationParamList>) {\r\n  const noteLink = urlToNoteLink(url);\r\n  if (noteLink) {\r\n    navigation.push('NotePage', noteLink);\r\n  } else {\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nexport function getNoteLinks(pages: Content[]) {\r\n  return pages.flatMap((v) =>\r\n    extractHtmlLinksWithQuery(v.description || '')\r\n      .map((v2) => {\r\n        const noteLink = urlToNoteLink(v2.url);\r\n        if (noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/) {\r\n          return { type: '_NOTELINK' as '_NOTELINK', name: v2.text, ...noteLink, origin: v.title };\r\n        }\r\n      })\r\n      .filter((v) => v !== undefined)\r\n  );\r\n}\r\n\r\nexport const getFilteredPages = (pages: Content[], searchText: string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase();\r\n  const noteLinks = getNoteLinks(pages);\r\n  return [\r\n    ...pages.filter((page) => page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter((v) => v.name.toLowerCase().startsWith(lowerCaseSearch)),\r\n  ];\r\n};\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter((v) => v.description);\r\n  return (\r\n    randomPages && (\r\n      <TouchableOpacity\r\n        style={commonStyles.searchButton}\r\n        onPress={() => {\r\n          const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n          const sections = parseHtmlToSections(page.description || '');\r\n          navigation.push('NotePage', {\r\n            title: page.title,\r\n            section: sections[Math.floor(Math.random() * sections.length)].title,\r\n          });\r\n        }}\r\n      >\r\n        <Icon name={'random'} size={18} color=\"#FFFFFF\" />\r\n      </TouchableOpacity>\r\n    )\r\n  );\r\n};\r\n\r\nexport const titleFormat = (item: { title: string; section?: string }) =>\r\n  `${item.title}${item.section ? ' ▶ ' + item.section : ''}`;\r\n\r\nexport const SearchList = ({\r\n  filteredPages,\r\n  handlePagePress,\r\n  addKeyword,\r\n}: {\r\n  filteredPages: SearchContent[];\r\n  handlePagePress: (title: string, section?: string) => void;\r\n  addKeyword?: (keyword: KeywordContent) => void;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item: SearchContent) => {\r\n    return PanResponder.create({\r\n      onPanResponderStart: () => {\r\n        if (item.type === '_NOTELINK' && item.section) {\r\n          handlePagePress(item.title, item.section);\r\n          addKeyword?.(item);\r\n        } else {\r\n          handlePagePress(item.title);\r\n          addKeyword?.({ type: '_KEYWORD', title: item.title });\r\n        }\r\n      },\r\n    }).panHandlers;\r\n  }, []);\r\n\r\n  return (\r\n    <FlatList\r\n      data={filteredPages}\r\n      keyExtractor={(item: any) => JSON.stringify([item.title, item.name, item.section])}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity style={styles.resultItem} {...pagePressHandlers(item)}>\r\n          <Text style={[commonStyles.text, styles.resultText]}>\r\n            {item.type === '_NOTELINK' ? item.name : item.title}\r\n          </Text>\r\n          {item.type === '_NOTELINK' && (\r\n            <Text style={[commonStyles.text, styles.resultText, { fontSize: 12 }]}>\r\n              {titleFormat(item)}\r\n            </Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SearchBar: React.FC<{\r\n  handlePress?: (title: string) => void;\r\n  useRandom?: boolean;\r\n}> = ({ handlePress, useRandom = true }) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput | null>();\r\n  const { data: keywords = [] } = useKeywords();\r\n  const addKeyword = useAddKeyowrd();\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages: SearchContent[] =\r\n    searchText.length > 0\r\n      ? getFilteredPages(pages, searchText).slice(0, 10)\r\n      : keywords.slice(0, 10);\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim());\r\n      addKeyword.mutate({ type: '_KEYWORD', title: searchText.trim() });\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?: string) => {\r\n    if (handlePress) {\r\n      handlePress(title);\r\n    } else {\r\n      navigation.push('NotePage', { title, section });\r\n    }\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(\r\n    () =>\r\n      PanResponder.create({\r\n        onPanResponderStart: handleSearch,\r\n      }).panHandlers,\r\n    [searchText]\r\n  );\r\n\r\n  useEffect(() => {\r\n    _searchText = searchText;\r\n  }, [searchText]);\r\n\r\n  useFocusEffect(() => {\r\n    if (searchText !== _searchText) {\r\n      setSearchText(_searchText);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={(ref) => {\r\n            inputRef.current = ref;\r\n          }}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={() => setShowResults(true)}\r\n          onBlur={() => setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={'search'} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton />}\r\n      </View>\r\n\r\n      {showResults && (\r\n        <View\r\n          style={[\r\n            styles.resultsContainer,\r\n            theme === 'dark' ? styles.darkResults : styles.lightResults,\r\n          ]}\r\n        >\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList\r\n              filteredPages={filteredPages}\r\n              handlePagePress={handlePagePress}\r\n              addKeyword={addKeyword.mutate}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity style={styles.resultItem} {...searchHandlers}>\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport { SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { createCommonStyles } from '../../styles';\r\n\r\nexport const NoteListSection = ({\r\n  contents,\r\n  isLoading,\r\n  onPress,\r\n  emptyMessage,\r\n}: {\r\n  contents: { title: string; section?: string; subtitle?: string; id?: number }[];\r\n  isLoading: boolean;\r\n  onPress: (title: string, section?: string, id?: number) => void;\r\n  emptyMessage: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n  return (\r\n    <>\r\n      {window === 'portrait' && <SearchBar />}\r\n      <View style={commonStyles.container}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <Text style={commonStyles.text}>로딩 중...</Text>\r\n          </View>\r\n        ) : contents.length > 0 ? (\r\n          <FlatList\r\n            data={contents}\r\n            keyExtractor={(item) => JSON.stringify([item.title, item.section, item.id])}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity\r\n                style={commonStyles.card}\r\n                onPress={() => onPress(item.title, item.section, item.id)}\r\n              >\r\n                <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n                {item.subtitle !== undefined && (\r\n                  <Text style={commonStyles.smallText}>{item.subtitle}</Text>\r\n                )}\r\n              </TouchableOpacity>\r\n            )}\r\n            ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n          />\r\n        ) : (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <Text style={commonStyles.text}>{emptyMessage}</Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n","import { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { navigate, push } from '@blacktokki/navigation';\r\nimport * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\n\r\nimport {\r\n  useRecentPages,\r\n  useNotePages,\r\n  useDeleteRecentPage,\r\n  useLastPage,\r\n  useAddRecentPage,\r\n} from '../../../hooks/useNoteStorage';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape: boolean) => {\r\n  return isLandscape ? 5 : 8;\r\n};\r\n\r\nexport const EmptyPageButton = () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'note-remove'} />}\r\n      title={lang('Empty Note')}\r\n      onPress={() => push('EmptyPages')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const EmptyContentButton = () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'note-edit'} />}\r\n      title={lang('Empty Content')}\r\n      onPress={() => push('EmptyContents')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const toRecentContents = (data: Content[]) =>\r\n  data\r\n    .filter((v) => v.description)\r\n    .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime());\r\n\r\nconst ContentGroupSection = (\r\n  props: { type: 'PAGE' | 'LAST' } | { type: 'NOTE'; noteCount: number }\r\n) => {\r\n  const { lang } = useLangContext();\r\n  const notes = useNotePages();\r\n  const pages = useRecentPages();\r\n  const { data: lastPage } = useLastPage();\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage();\r\n  const deleteRecentPage = useDeleteRecentPage();\r\n  const data =\r\n    props.type === 'NOTE' ? (notes.data ? toRecentContents(notes.data) : []) : pages.data;\r\n  const lastPageExists = lastPage && data?.find((v) => v.id === lastPage.id) === undefined;\r\n  const window = useResizeContext();\r\n  const itemPadding = getItemPadding(window === 'landscape');\r\n  const noteOnPress = (title: string) => {\r\n    if (title === lastPage?.title) {\r\n      if (tabRef.current) {\r\n        clearTimeout(tabRef.current);\r\n        tabRef.current = undefined;\r\n        addRecentPage.mutate({ title });\r\n      } else {\r\n        tabRef.current = setTimeout(() => {\r\n          tabRef.current = undefined;\r\n        }, 500);\r\n      }\r\n    }\r\n    navigate('NotePage', { title });\r\n  };\r\n  const noteOnLongPress = (title: string) => {\r\n    if (tabRef.current) {\r\n      clearTimeout(tabRef.current);\r\n      tabRef.current = undefined;\r\n    }\r\n    if (pages.data?.find((v) => v.title === title) === undefined) {\r\n      addRecentPage.mutate({ title, direct: true });\r\n    } else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  };\r\n  return (\r\n    (props.type !== 'LAST' || lastPageExists) && (\r\n      <List.Section>\r\n        {data &&\r\n          (props.type === 'LAST' ? (\r\n            lastPageExists && (\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document'} />}\r\n                title={lastPage.title}\r\n                onPress={() => noteOnPress(lastPage.title)}\r\n                onLongPress={() => noteOnLongPress(lastPage.title)}\r\n                style={{ padding: itemPadding }}\r\n                titleStyle={{ fontStyle: 'italic' }}\r\n              />\r\n            )\r\n          ) : props.type === 'NOTE' ? (\r\n            <>\r\n              {data.slice(0, props.noteCount).map((v) => (\r\n                <List.Item\r\n                  key={v.title}\r\n                  left={(_props) => (\r\n                    <List.Icon\r\n                      {..._props}\r\n                      icon={\r\n                        pages.data?.find((v2) => v2.title === v.title) === undefined\r\n                          ? 'notebook'\r\n                          : 'notebook-edit'\r\n                      }\r\n                    />\r\n                  )}\r\n                  title={v.title}\r\n                  onPress={() => noteOnPress(v.title)}\r\n                  onLongPress={() => noteOnLongPress(v.title)}\r\n                  style={{ padding: itemPadding }}\r\n                />\r\n              ))}\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'notebook-multiple'} />}\r\n                title={lang('more...')}\r\n                onPress={() => push('RecentPages')}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            </>\r\n          ) : (\r\n            data.map((v) => (\r\n              <List.Item\r\n                key={v.title}\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document-edit'} />}\r\n                right={(_props) => (\r\n                  <TouchableRipple\r\n                    style={{\r\n                      justifyContent: 'center',\r\n                      borderRadius: itemPadding,\r\n                      width: 40 + itemPadding * 2,\r\n                      height: 40 + itemPadding * 2,\r\n                      margin: -itemPadding,\r\n                    }}\r\n                    onPress={() => deleteRecentPage.mutate(v.title)}\r\n                  >\r\n                    <List.Icon style={{ left: itemPadding - 7 }} icon={'close'} />\r\n                  </TouchableRipple>\r\n                )}\r\n                title={v.title}\r\n                onPress={() => navigate('NotePage', { title: v.title })}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            ))\r\n          ))}\r\n      </List.Section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;\r\n","import { useColorScheme, useResizeContext, View, Text } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\n\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset();\r\n\r\nexport const updatedFormat = (_updated: string) => {\r\n  const _date = new Date(_updated);\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset);\r\n  const updated = _date.toISOString().slice(0, 16);\r\n  const date = updated.slice(0, 10);\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  return date === today ? updated.slice(11) : date;\r\n};\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape: boolean) => (isLandscape ? 20 : 4);\r\nconst _cardMaxWidth = (isLandscape: boolean) => (isLandscape ? 250 : 190);\r\n\r\ntype Item = (Content & { descriptionComponent: JSX.Element }) | null;\r\n\r\nconst CardPage = React.memo(({ item, index }: { item: Item; index: number }) => {\r\n  const window = useResizeContext();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window === 'landscape' ? 2 : 0;\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null) {\r\n    return (\r\n      <View style={{ flexBasis: window === 'landscape' ? '33%' : '50%', maxWidth: cardMaxWidth }} />\r\n    );\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = () => navigation.push('NotePage', { title: item.title });\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexBasis: window === 'landscape' ? '33%' : '50%',\r\n        padding: _cardPadding(window === 'landscape'),\r\n        paddingRight: 0,\r\n        minWidth: cardMaxWidth,\r\n        maxWidth: cardMaxWidth,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Card\r\n        onPress={onPress}\r\n        style={[\r\n          commonStyles.card,\r\n          {\r\n            paddingTop: 8,\r\n            aspectRatio: 1 / Math.sqrt(2),\r\n            borderRadius: 6,\r\n            marginVertical: 10,\r\n            marginHorizontal: 8,\r\n            overflow: 'hidden',\r\n          },\r\n        ]}\r\n      >\r\n        <Card.Content style={{ padding: 0 }}>{mounted && item.descriptionComponent}</Card.Content>\r\n      </Card>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          marginTop: 10,\r\n          padding: 0,\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 14 + fSize, overflow: 'hidden' }}>{item.title}</Text>\r\n        <Text style={{ fontSize: 12 + fSize, opacity: 0.4, textAlign: 'right' }}>\r\n          {updatedFormat(item.updated)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n});\r\n\r\nconst renderItem = ({ item, index }: { item: Item; index: number }) => (\r\n  <CardPage key={index} index={index} item={item} />\r\n);\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const RenderHtml = useMemo(() => React.lazy(() => import('react-native-render-html')), []);\r\n  const contents = useMemo(\r\n    () => [\r\n      ...toRecentContents(recentPages).map((v) => ({\r\n        ...v,\r\n        descriptionComponent: (\r\n          <RenderHtml\r\n            source={{ html: removeAllAttributesFromHTML(v.description || '').slice(0, 300) || '' }}\r\n            renderersProps={{\r\n              a: { onPress: () => navigation.push('NotePage', { title: v.title }) },\r\n            }}\r\n            tagsStyles={{ body: { color: commonStyles.text.color } }}\r\n            contentWidth={cardMaxWidth}\r\n          />\r\n        ),\r\n      })),\r\n      null,\r\n      null,\r\n    ],\r\n    [recentPages]\r\n  );\r\n  const maxWidth = (cardMaxWidth + 5) * (window === 'landscape' ? 5 : 3);\r\n  return isLoading ? (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>로딩 중...</Text>\r\n    </View>\r\n  ) : contents.length > 2 ? (\r\n    <ScrollView\r\n      key={window}\r\n      contentContainerStyle={{\r\n        alignSelf: 'center',\r\n        backgroundColor: 'transparent',\r\n        flexBasis: '100%',\r\n        maxWidth,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        paddingRight: _cardPadding(window === 'landscape'),\r\n        justifyContent: window === 'landscape' ? undefined : 'center',\r\n      }}\r\n    >\r\n      <Suspense>{contents.map((item, index) => renderItem({ item, index }))}</Suspense>\r\n    </ScrollView>\r\n  ) : (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>최근 수정한 노트가 없습니다.</Text>\r\n    </View>\r\n  );\r\n});\r\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return (\r\n    <NoteListSection\r\n      contents={recentPages\r\n        .filter((v) => title === undefined || title === v.title)\r\n        .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n        .map((v) => ({ ...v, subtitle: `최근 수정: ${updatedFormat(v.updated as string)}` }))}\r\n      isLoading={isLoading}\r\n      onPress={(title, _, id) =>\r\n        (title === undefined ? navigation.push : navigation.navigate)('NotePage', {\r\n          title,\r\n          archiveId: id,\r\n        })\r\n      }\r\n      emptyMessage=\"최근 수정한 노트가 없습니다.\"\r\n    />\r\n  );\r\n};\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport {\r\n  RouteProp,\r\n  useFocusEffect,\r\n  useIsFocused,\r\n  useNavigation,\r\n  useRoute,\r\n} from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet } from 'react-native';\r\n\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport { previewUrl } from '../../services/notebook';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const isFocused = useIsFocused();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword: string) =>\r\n    pages\r\n      .filter((v) => v.title.startsWith(title + '/'))\r\n      .map((v) => ({\r\n        type: '_CHILDNOTE' as '_CHILDNOTE',\r\n        name: v.title.split(title + '/')[1],\r\n        title: v.title,\r\n      }))\r\n      .filter((v) => v.name.toLowerCase().startsWith(keyword.toLowerCase()));\r\n  const [content, setContent] = useState('');\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    if (page?.description === content) {\r\n      navigation.navigate('NotePage', { title });\r\n      return;\r\n    }\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error: any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && page?.description) {\r\n      setContent(page?.description);\r\n    }\r\n  }, [isLoading, page]);\r\n\r\n  useFocusEffect(() => {\r\n    const callback = (event: any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  });\r\n  return (\r\n    isFocused && (\r\n      <View style={commonStyles.container}>\r\n        <View style={commonStyles.header}>\r\n          <Text style={[commonStyles.title, { flex: 1 }]}>{title} - 편집</Text>\r\n        </View>\r\n        <Editor\r\n          active\r\n          value={content}\r\n          setValue={setContent}\r\n          theme={theme}\r\n          autoComplete={[\r\n            {\r\n              trigger: '[',\r\n              getMatchedChars: async (pattern) => {\r\n                const childrenPages = getChildrenPages(pattern);\r\n                return [\r\n                  { type: '_NOTELINK', name: pattern, title, section: pattern },\r\n                  ...(childrenPages.length\r\n                    ? childrenPages\r\n                    : [{ type: '_CHILDNOTE', name: pattern, title: title + '/' + pattern }]),\r\n                  ...getFilteredPages(pages, pattern),\r\n                ].map((v) => {\r\n                  const text =\r\n                    v.type === '_NOTELINK'\r\n                      ? v.name + `(${titleFormat(v)})`\r\n                      : v.type === '_CHILDNOTE'\r\n                      ? v.name\r\n                      : v.title;\r\n                  const url = encodeURI(\r\n                    v.type === '_NOTELINK' && v.section\r\n                      ? `?title=${v.title}&section=${v.section}`\r\n                      : `?title=${v.title}`\r\n                  );\r\n                  return {\r\n                    text,\r\n                    value: `<a href=${url}>${text}</a>`,\r\n                  };\r\n                });\r\n              },\r\n            },\r\n            {\r\n              trigger: 'http',\r\n              getMatchedChars: async (pattern) => {\r\n                const query = 'http' + pattern;\r\n                const url = new URL(query);\r\n                if (url.protocol !== 'http:' && url.protocol !== 'https:') {\r\n                  return [];\r\n                }\r\n                const preview = await previewUrl({ query });\r\n                if (!preview.title) {\r\n                  return [];\r\n                }\r\n                return [\r\n                  {\r\n                    text: preview.title,\r\n                    value: `<a href=${preview.url}>${preview.title}</a>`,\r\n                  },\r\n                  // {\r\n                  //   text:preview.title + '...',\r\n                  //   value:`<a href=${preview.url}>${preview.title}</a><p>${preview.description}...</p>`,\r\n                  // }\r\n                ];\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[commonStyles.button, styles.saveButton]} onPress={handleSave}>\r\n            <Text style={commonStyles.buttonText}>저장</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const sectionDescription = (paragraph: NodeData[], section: string, rootTitle: boolean) => {\r\n  const path = paragraph.find((v) => v.title === section)?.path;\r\n  return path\r\n    ? paragraph\r\n        .filter((v) => v.path.startsWith(path))\r\n        .map((v) => (rootTitle || v.path !== path ? v.header : '') + v.description)\r\n        .join('')\r\n    : '';\r\n};\r\n\r\nexport const getSplitTitle = (title: string) => {\r\n  const splitTitle = title.split('/');\r\n  if (splitTitle.length < 2) {\r\n    return [title];\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length - 1).join('/'), splitTitle[splitTitle.length - 1]];\r\n};\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullSection, toggleFullSection] = useState(false);\r\n\r\n  const { data: page, isFetching } = useNotePage(title);\r\n  const { data: archives } = useSnapshotPages();\r\n  const archive = archiveId\r\n    ? archives?.find((v) => v.id === archiveId && v.description !== page?.description)\r\n    : undefined;\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n\r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description || '');\r\n  const idx = paragraph.findIndex((v) => v.title === section);\r\n  const moveSections = [\r\n    {\r\n      icon: 'arrow-left',\r\n      moveSection: paragraph.findLast(\r\n        (v, i) => i < idx && (fullSection ? paragraph[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: false,\r\n    },\r\n    {\r\n      icon: 'arrow-right',\r\n      moveSection: paragraph.find(\r\n        (v, i) => i > idx && (fullSection ? paragraph[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: true,\r\n    },\r\n  ];\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      archive\r\n        ? archive.description\r\n        : (section\r\n            ? fullSection\r\n              ? sectionDescription(paragraph, section, true)\r\n              : paragraph.find((v) => v.title === section)?.description\r\n            : page?.description\r\n          )?.trim()\r\n    );\r\n  }, [page, archive, section, fullSection]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const splitTitle = getSplitTitle(title);\r\n  const iconColor = theme === 'dark' ? '#E4E4E4' : '#333333';\r\n  const pressableTextColor = theme === 'dark' ? '#FFFFFF88' : '#00000088';\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, { paddingRight: 12, scrollbarGutter: 'stable' }]}\r\n          contentContainerStyle={{ flexGrow: 1 }}\r\n        >\r\n          <View style={commonStyles.header}>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  (splitTitle.length === 2 ? navigation.push : navigation.navigate)('NotePage', {\r\n                    title: splitTitle[0],\r\n                  })\r\n                }\r\n              >\r\n                <Text\r\n                  style={[\r\n                    commonStyles.title,\r\n                    styles.pageTitle,\r\n                    section || splitTitle.length === 2 ? { color: pressableTextColor } : {},\r\n                  ]}\r\n                  numberOfLines={1}\r\n                >\r\n                  {splitTitle[0]}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              {splitTitle.length === 2 && (\r\n                <>\r\n                  <Text style={[commonStyles.title, styles.pageTitle, { flex: 0 }]}>/</Text>\r\n                  <TouchableOpacity onPress={() => navigation.navigate('NotePage', { title })}>\r\n                    <Text\r\n                      style={[\r\n                        commonStyles.title,\r\n                        styles.pageTitle,\r\n                        section ? { color: pressableTextColor } : {},\r\n                      ]}\r\n                      numberOfLines={1}\r\n                    >\r\n                      {splitTitle[1]}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!section && (\r\n                <Text\r\n                  style={[commonStyles.title, styles.pageTitle, { marginLeft: 5 }]}\r\n                  numberOfLines={1}\r\n                >\r\n                  {titleFormat({ title: '', section })}\r\n                </Text>\r\n              )}\r\n              {archive && (\r\n                <Text style={[commonStyles.text, { marginLeft: 5, fontStyle: 'italic' }]}>\r\n                  {'(' + archive.updated + ')'}\r\n                </Text>\r\n              )}\r\n            </View>\r\n            <View style={styles.actionButtons}>\r\n              {!section && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Archive', { title })}\r\n                    style={styles.actionButton}\r\n                  >\r\n                    <Icon name=\"history\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!section && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullSection(!fullSection)}\r\n                    style={styles.actionButton}\r\n                  >\r\n                    <Icon name={fullSection ? 'compress' : 'expand'} size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(section || description) && !archive && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={styles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n                    <Icon name=\"exchange\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(section || description) && !archive && !section && (\r\n                <>\r\n                  <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n                    <Icon name=\"pencil\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <View\r\n              style={\r\n                !toc && description\r\n                  ? [commonStyles.card, { padding: 0, marginBottom: 0 }]\r\n                  : { flex: 1, position: 'absolute' }\r\n              }\r\n            >\r\n              <EditorViewer\r\n                active\r\n                value={description || ''}\r\n                theme={theme}\r\n                onLink={(url) => onLink(url, navigation)}\r\n                autoResize\r\n              />\r\n            </View>\r\n            {isFetching || description === undefined ? (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n              </View>\r\n            ) : toc ? (\r\n              <HeaderSelectBar\r\n                data={paragraph}\r\n                path={section || ''}\r\n                root={title}\r\n                onPress={(item) => navigation.navigate('NotePage', { title, section: item.title })}\r\n              />\r\n            ) : page?.description ? (\r\n              !!section && (\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'flex-end',\r\n                  }}\r\n                >\r\n                  {moveSections.map(\r\n                    ({ moveSection, icon, reverse }) =>\r\n                      moveSection !== undefined && (\r\n                        <TouchableOpacity\r\n                          key={icon}\r\n                          onPress={() =>\r\n                            navigation.navigate(\r\n                              'NotePage',\r\n                              moveSection.level === 0\r\n                                ? { title }\r\n                                : { title, section: moveSection.title }\r\n                            )\r\n                          }\r\n                          style={[\r\n                            { flexDirection: reverse ? 'row-reverse' : 'row', paddingVertical: 16 },\r\n                          ]}\r\n                        >\r\n                          <Icon\r\n                            name={icon}\r\n                            size={16}\r\n                            color={iconColor}\r\n                            style={{ alignSelf: 'center' }}\r\n                          />\r\n                          <Text\r\n                            style={[\r\n                              commonStyles.text,\r\n                              { fontWeight: 'bold', marginHorizontal: 16 },\r\n                            ]}\r\n                          >\r\n                            {moveSection.level === 0 ? title : moveSection.title}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )\r\n                  )}\r\n                </View>\r\n              )\r\n            ) : (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <Text style={commonStyles.text}>\r\n                  아직 내용이 없는 문서입니다. '편집' 버튼을 눌러 내용을 추가해보세요.\r\n                </Text>\r\n                <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                  <Text style={commonStyles.buttonText}>편집하기</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { getNoteLinks } from '../../components/SearchBar';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { getSplitTitle } from './NotePageScreen';\r\n\r\nexport const EmptyPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const unknownData = getNoteLinks(pages)\r\n    .filter((v) => {\r\n      const page = pages.find((v2) => v2.title === v.title);\r\n      if (page?.description) {\r\n        if (\r\n          v.section === undefined ||\r\n          parseHtmlToSections(page.description).find((v2) => v2.title === v.section)\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    })\r\n    .map((v) => ({\r\n      ...v,\r\n      subtitle:\r\n        (v.section === undefined ? 'Unknown note link' : 'Unknown section link') + `(${v.origin})`,\r\n    }));\r\n  const emptyParentData = pages\r\n    .map((v) => {\r\n      const splitTitle = getSplitTitle(v.title);\r\n      if (\r\n        v.description &&\r\n        splitTitle.length === 2 &&\r\n        pages.find((v) => v.title === splitTitle[0]) === undefined\r\n      ) {\r\n        return { title: splitTitle[0], subtitle: `Empty parent note(${v.title})` };\r\n      }\r\n      return undefined;\r\n    })\r\n    .filter((v) => v !== undefined);\r\n  return (\r\n    <NoteListSection\r\n      contents={[...unknownData, ...emptyParentData]}\r\n      onPress={(title) => navigation.push('EditPage', { title })}\r\n      isLoading={isLoading}\r\n      emptyMessage=\"작성이 필요한 노트가 없습니다.\"\r\n    />\r\n  );\r\n};\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\n\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description || '');\r\n  const path = paragraph.find((v) => v.title === section)?.path || '';\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(\r\n    (v) => title !== newTitle || path === v.path || !v.path.startsWith(path)\r\n  );\r\n  const [newPath, setNewPath] = useState('');\r\n  const [preview, setPreview] = useState<boolean>();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const moveMutation = useMovePage();\r\n  const { sourceDescription, targetDescription } = useMemo(() => {\r\n    const moveParagraph = paragraph.filter((v) => v.path.startsWith(path));\r\n    const isSplit = newPage?.title === page?.title + '/' + moveParagraph[0]?.title;\r\n    const moveDescription = moveParagraph\r\n      .map((v, i) => (isSplit && i === 0 ? '' : v.header) + v.description)\r\n      .join('');\r\n    const sourceParagraph = paragraph.filter((v) => !v.path.startsWith(path));\r\n    const sourceDescription = sourceParagraph.map((v) => v.header + v.description).join('');\r\n    const targetParagraph = page?.title === newPage?.title ? sourceParagraph : newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex((v) => v.path.startsWith(newPath));\r\n    const targetDescription =\r\n      newPage?.id === undefined\r\n        ? moveDescription\r\n        : [\r\n            ...targetParagraph.slice(0, targetIndex + 1).map((v) => v.header + v.description),\r\n            ...moveParagraph.map(\r\n              (v, i) =>\r\n                ((v.path === path && v.description === '') || (isSplit && i === 0)\r\n                  ? ''\r\n                  : v.header) + v.description\r\n            ),\r\n            ...targetParagraph.slice(targetIndex + 1).map((v) => v.header + v.description),\r\n          ].join('');\r\n    return { sourceDescription, targetDescription };\r\n  }, [paragraph, newParagraph, path, newPath]);\r\n\r\n  const handleMove = () => {\r\n    if (newPage?.id === undefined) {\r\n      moveMutation.mutate(\r\n        {\r\n          oldTitle: title,\r\n          newTitle: newTitle.trim(),\r\n          description: path === '' ? undefined : targetDescription,\r\n        },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      if (page?.title === newPage.title && path === newPath) {\r\n        handleCancel();\r\n      }\r\n      mutation.mutate(\r\n        { title: newPage.title, description: targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title) {\r\n              mutation.mutate({ title, description: sourceDescription });\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !page) {\r\n      handleCancel();\r\n    }\r\n    page && setNewTitle(page.title + (section ? `/${section}` : ''));\r\n  }, [page, isLoading]);\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setNewPath(section ? '' : path);\r\n    }\r\n  }, [section, isLoading]);\r\n  const paragraphItem = paragraph.find((v) => v.path === path);\r\n  const newParagraphItem = newParagraph.find((v) => v.path === newPath);\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined;\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: _window === 'landscape' ? 'row' : 'column', zIndex: 1 }}>\r\n          <View style={{ zIndex: 1 }}>\r\n            <Text style={commonStyles.text}>\r\n              {section ? '현재 노트 제목 및 문단:' : '현재 노트 제목:'}\r\n            </Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>\r\n              {titleFormat({ title, section })}\r\n            </Text>\r\n            <Text style={commonStyles.text}>새 노트 제목 및 문단:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false} />\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar\r\n                path={newPath}\r\n                onPress={(item) => setNewPath(item.path)}\r\n                root={newPage?.title || ''}\r\n                data={newParagraph}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                commonStyles.button,\r\n                styles.moveButton,\r\n                {\r\n                  flex: 0,\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  paddingTop: 24,\r\n                  paddingBottom: 16,\r\n                },\r\n              ]}\r\n              onPress={() => setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title, section: paragraphItem?.title })}\r\n              </Text>\r\n              <Text style={[commonStyles.text, { marginBottom: 8, fontSize: 14 }]}> ➜ </Text>\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title: newTitle, section: newParagraphItem?.title })}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {preview !== undefined && (\r\n              <View style={{ display: preview ? 'flex' : 'none' }}>\r\n                <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  onLink={(url) => onLink(url, navigation)}\r\n                  autoResize\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, moveDisabled ? styles.cancelButton : styles.moveButton]}\r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: {\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport {\r\n  Colors,\r\n  ContractFooter,\r\n  Text,\r\n  TextButton,\r\n  useColorScheme,\r\n  useLangContext,\r\n} from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections, TabViewOption } from '@blacktokki/navigation';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp, StackScreenProps } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { ScrollView, TouchableOpacity, View } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nimport { SearchBar, SearchList } from '../../../components/SearchBar';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport ContentGroupSection, { EmptyContentButton, EmptyPageButton } from './ContentGroupSection';\r\n\r\nconst NotesTabView = () => {\r\n  const theme = useColorScheme();\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <ScrollView style={{ flex: 1, backgroundColor: Colors[theme].background }}>\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Open Pages')}\r\n      </List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Problems')}\r\n      </List.Subheader>\r\n      <EmptyPageButton />\r\n      <EmptyContentButton />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst RecentChangesTabView = () => {\r\n  return <RecentPagesSection />;\r\n};\r\n\r\nconst CommonConfigButton = (props: { title: string; onPress?: () => void }) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TouchableOpacity\r\n      style={[commonStyles.header, { marginBottom: 0 }]}\r\n      onPress={props.onPress}\r\n      disabled={!props.onPress}\r\n    >\r\n      <Text style={{ fontSize: 20, color, fontWeight: '600' }}>{props.title}</Text>\r\n      {props.onPress && <Text>{'>'}</Text>}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst ConfigCommonView = () => {\r\n  const { lang } = useLangContext();\r\n  const { auth, dispatch } = useAuthContext();\r\n  const theme = useColorScheme();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  const [search, setSearch] = useState(false);\r\n  const { data: keywords = [] } = useKeywords();\r\n  const resetKeyword = useResetKeyowrd();\r\n  return (\r\n    <View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <CommonConfigButton title={lang('* Search Settings')} />\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TextButton\r\n            title={'Search History'}\r\n            textStyle={{\r\n              fontSize: 16,\r\n              color,\r\n              textDecorationLine: search ? 'underline' : 'none',\r\n            }}\r\n            style={{ borderRadius: 20 }}\r\n            onPress={() => setSearch(!search)}\r\n          />\r\n          {search && !!keywords.length && (\r\n            <TextButton\r\n              title={'Clear'}\r\n              textStyle={{\r\n                fontSize: 16,\r\n                color,\r\n              }}\r\n              style={{ borderRadius: 20 }}\r\n              onPress={() => resetKeyword.mutate()}\r\n            />\r\n          )}\r\n        </View>\r\n        {search && (\r\n          <View style={[commonStyles.card, { padding: 0 }]}>\r\n            <SearchList\r\n              filteredPages={keywords}\r\n              handlePagePress={(title, section) => navigation.push('NotePage', { title, section })}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <CommonConfigButton\r\n          title={lang('* Archive')}\r\n          onPress={() => navigation.push('Archive', {})}\r\n        />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <CommonConfigButton title={lang('* Account Settings')} />\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {!!auth.user && (\r\n            <TextButton\r\n              title={'My Account: ' + auth.user?.username}\r\n              textStyle={{\r\n                fontSize: 16,\r\n                color,\r\n                textDecorationLine: !auth.isLocal ? 'underline' : 'none',\r\n              }}\r\n              style={{ borderRadius: 20 }}\r\n              onPress={() => dispatch({ type: 'LOGOUT_LOCAL' })}\r\n            />\r\n          )}\r\n          <TextButton\r\n            title={'Local Account'}\r\n            textStyle={{\r\n              fontSize: 16,\r\n              color,\r\n              textDecorationLine: auth.isLocal ? 'underline' : 'none',\r\n            }}\r\n            style={{ borderRadius: 20 }}\r\n            onPress={() => dispatch({ type: 'LOGIN_LOCAL' })}\r\n          />\r\n          {auth.user ? (\r\n            <TextButton\r\n              title={'Logout'}\r\n              textStyle={{\r\n                fontSize: 16,\r\n                color,\r\n              }}\r\n              style={{ borderRadius: 20 }}\r\n              onPress={() => dispatch({ type: 'LOGOUT_REQUEST' })}\r\n            />\r\n          ) : (\r\n            <TextButton\r\n              title={'Login'}\r\n              textStyle={{\r\n                fontSize: 16,\r\n                color,\r\n              }}\r\n              style={{ borderRadius: 20 }}\r\n              onPress={() => dispatch({ type: 'LOGOUT_LOCAL' })}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst ConfigTabView = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <ScrollView\r\n      style={{ flex: 1 }}\r\n      contentContainerStyle={[\r\n        commonStyles.container,\r\n        { backgroundColor: Colors[theme].background },\r\n      ]}\r\n    >\r\n      <ConfigCommonView />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default function HomeScreen({ navigation, route }: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { auth } = useAuthContext();\r\n  const title = auth.isLocal ? 'Blacktokki Notebook - Local' : 'Blacktokki Notebook';\r\n  const tabViews: TabViewOption[] = [\r\n    {\r\n      title: lang('Discovery'),\r\n      component: NotesTabView,\r\n      icon: <List.Icon icon={'compass'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n    {\r\n      title: lang('All Notes'),\r\n      component: RecentChangesTabView,\r\n      icon: <List.Icon icon={'notebook'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n    {\r\n      title: lang('Config'),\r\n      component: ConfigTabView,\r\n      icon: <List.Icon icon={'dots-horizontal'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <HomeSection\r\n      tabViews={tabViews}\r\n      homeView={{ title, headerRight: () => <SearchBar /> }}\r\n      headerTitle={title}\r\n    >\r\n      <View style={[commonStyles.container, { width: '100%', justifyContent: 'space-between' }]}>\r\n        <ConfigCommonView />\r\n        <ContractFooter\r\n          buttons={[\r\n            {\r\n              icon: <AntDesign name=\"github\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'https://github.com/blacktokki/blacktokki-notebook',\r\n              isWeb: true,\r\n            },\r\n            {\r\n              icon: <AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'mailto:ydh051541@naver.com',\r\n              isWeb: false,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n    </HomeSection>\r\n  );\r\n}\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { Auth } from '@blacktokki/account';\r\n\r\nimport { ArchiveScreen } from './main/ArchiveScreen';\r\nimport { EditPageScreen } from './main/EditPageScreen';\r\nimport { EmptyContentsScreen } from './main/EmptyContentScreen';\r\nimport { EmptyPagesScreen } from './main/EmptyPageScreen';\r\nimport { MovePageScreen } from './main/MovePageScreen';\r\nimport { NotePageScreen } from './main/NotePageScreen';\r\nimport { RecentPagesScreen } from './main/RecentPageScreen';\r\nimport HomeScreen from './main/home/HomeScreen';\r\n\r\nconst title = (auth: Auth) =>\r\n  !auth.isLocal ? 'Blacktokki Notebook' : 'Blacktokki Notebook - Local';\r\nexport const main = {\r\n  Home: {\r\n    title,\r\n    component: HomeScreen,\r\n    path: 'home',\r\n  },\r\n  NotePage: {\r\n    title,\r\n    component: NotePageScreen,\r\n    path: 'page',\r\n  },\r\n  EditPage: {\r\n    title,\r\n    component: EditPageScreen,\r\n    path: 'edit',\r\n  },\r\n  MovePage: {\r\n    title,\r\n    component: MovePageScreen,\r\n    path: 'move',\r\n  },\r\n  RecentPages: {\r\n    title,\r\n    component: RecentPagesScreen,\r\n    path: 'recent',\r\n  },\r\n  EmptyPages: {\r\n    title,\r\n    component: EmptyPagesScreen,\r\n    path: 'need',\r\n  },\r\n  EmptyContents: {\r\n    title,\r\n    component: EmptyContentsScreen,\r\n    path: 'empty',\r\n  },\r\n  Archive: {\r\n    title,\r\n    component: ArchiveScreen,\r\n    path: 'archive',\r\n  },\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window = useResizeContext();\r\n  return (\r\n    <>\r\n      {window === 'portrait' && <SearchBar />}\r\n      <RecentPagesSection />\r\n    </>\r\n  );\r\n};\r\n","import { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { sectionDescription } from './NotePageScreen';\r\n\r\nfunction findEmptyLists(html: string): string[] {\r\n  const regex = /<(ol|ul)\\b[^>]*>([\\s\\n\\r]*)<\\/\\1>/gi;\r\n  const matches: string[] = [];\r\n  let match;\r\n\r\n  while ((match = regex.exec(html)) !== null) {\r\n    matches.push(match[0]); // 전체 태그를 반환\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\nexport const EmptyContentsScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const data = pages.flatMap((v) => {\r\n    const paragraph = parseHtmlToSections(v.description || '');\r\n    const emptyParagraph = paragraph.filter(\r\n      (v2) => v2.level !== 0 && sectionDescription(paragraph, v2.title, false).trim() === ''\r\n    );\r\n    const emptyList = paragraph.filter((v2) => findEmptyLists(v2.description).length > 0);\r\n    return [\r\n      ...emptyParagraph.map((v2) => ({\r\n        title: v.title,\r\n        section: v2.level === 0 ? undefined : v2.title,\r\n        subtitle: 'Empty section',\r\n      })),\r\n      ...emptyList.map((v2) => ({\r\n        title: v.title,\r\n        section: v2.level === 0 ? undefined : v2.title,\r\n        subtitle: 'Empty list',\r\n      })),\r\n    ];\r\n  });\r\n  return (\r\n    <NoteListSection\r\n      contents={data}\r\n      onPress={(title) => navigation.push('EditPage', { title })}\r\n      isLoading={isLoading}\r\n      emptyMessage=\"작성이 필요한 내용이 없습니다.\"\r\n    />\r\n  );\r\n};\r\n","import { useLangContext, View } from '@blacktokki/core';\r\nimport { push } from '@blacktokki/navigation';\r\nimport React from 'react';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\n\r\nimport ContentGroupSection, {\r\n  EmptyContentButton,\r\n  EmptyPageButton,\r\n} from '../screens/main/home/ContentGroupSection';\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <List.Item\r\n        left={(_props) => <List.Icon {..._props} icon={'home'} />}\r\n        title={lang('Home')}\r\n        onPress={() => push('Home')}\r\n      />\r\n      <EmptyPageButton />\r\n      <EmptyContentButton />\r\n      <ScrollView style={Platform.OS === 'web' ? ({ scrollbarWidth: 'thin' } as any) : {}}>\r\n        <List.Subheader style={{}} selectable={false}>\r\n          {lang('Open Pages')}\r\n        </List.Subheader>\r\n        <ContentGroupSection type={'LAST'} />\r\n        <ContentGroupSection type={'PAGE'} />\r\n        <List.Subheader style={{ flex: 1 }} selectable={false}>\r\n          {lang('Recent Changes')}\r\n        </List.Subheader>\r\n        {/* 최근 변경 */}\r\n        <ContentGroupSection type={'NOTE'} noteCount={10} />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n","import { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { login, Navigation, NavigationConfig } from '@blacktokki/navigation';\r\nimport React, { Suspense } from 'react';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\n\r\nconst HeaderRight = () => {\r\n  const windowType = useResizeContext();\r\n  return windowType === 'landscape' ? <SearchBar /> : undefined;\r\n};\r\n\r\nconst getConfig = async () => {\r\n  const Linking = await import('expo-linking');\r\n  return {\r\n    main,\r\n    login,\r\n    prefixes: [Linking.makeUrl('/')],\r\n    rootPath: 'blacktokki-notebook',\r\n    documentTitle: {\r\n      formatter: () => {\r\n        return 'blacktokki-notebook';\r\n      },\r\n    },\r\n    rootScreen: {\r\n      main: 'Home',\r\n      login: 'LoginScreen',\r\n    },\r\n    headerLeftIcon: <List.Icon icon=\"backburger\" style={{ left: -18, top: -14 }} />,\r\n    headerRight: <HeaderRight />,\r\n    modals: [],\r\n    drawer: <Drawer />,\r\n  } as NavigationConfig;\r\n};\r\n\r\nexport default () => {\r\n  const scheme = useColorScheme();\r\n  const preTheme = scheme === 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n  const theme: typeof preTheme = {\r\n    ...preTheme,\r\n    colors: { ...preTheme.colors, primary: Colors[scheme].text },\r\n  };\r\n  const NavigationLazy = React.lazy(() =>\r\n    getConfig().then((config) => ({ default: () => <Navigation config={config} /> }))\r\n  );\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <Suspense fallback={<></>}>\r\n        <NavigationLazy />\r\n      </Suspense>\r\n    </PaperProvider>\r\n  );\r\n};\r\n"],"names":["KEYWORDS_KEY","getKeywords","_ref","_asyncToGenerator","subkey","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","error","_x","apply","arguments","saveKeywords","_ref2","keywords","stringify","setItem","_x2","_x3","useKeywords","_auth$user","auth","useAuthContext","isLocal","user","id","useQuery","queryKey","queryFn","_queryFn","axios","axiosCreate","getContentList","get","data","parentId","types","parentIdParam","undefined","typeParam","join","value","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","previewUrl","_ref6","delete","_ref7","preview","query","_x7","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getContents","isOnline","type","saveNoteContents","contents","content","find","v","savedId","then","snapshot","_objectSpread","getRecentPages","saveRecentPages","titles","_x6","useNotePages","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","page","c","invalidateQueries","description","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","useCreateOrUpdatePage","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","Date","toISOString","map","i","newPage","input","userId","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x8","useDeleteRecentPage","_mutationFn4","updatedRecentPages","filter","_title","_x11","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","push","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","substring","textContent","trim","length","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","section","onLink","navigation","noteLink","window","open","getNoteLinks","pages","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","noteLinks","startsWith","RandomButton","useNavigation","randomPages","Math","floor","random","sections","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useKeywords$data","_auth$user2","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","NoteListSection","isLoading","emptyMessage","useResizeContext","_Fragment","subtitle","EmptyPageButton","lang","useLangContext","List","_props","icon","EmptyContentButton","toRecentContents","sort","b","getTime","notes","_useNotePages2","_queryFn4","useRecentPages","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x10","useAddRecentPage","deleteRecentPage","lastPageExists","itemPadding","noteOnPress","clearTimeout","setTimeout","navigate","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","noteCount","_pages$data2","TouchableRipple","margin","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","date","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","innerHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","index","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","overflow","Content","descriptionComponent","opacity","textAlign","RecentPagesSection","RenderHtml","source","renderersProps","tagsStyles","contentWidth","ScrollView","contentContainerStyle","alignSelf","flexWrap","Suspense","cancelButton","marginRight","saveButton","marginLeft","sectionDescription","paragraph","rootTitle","_paragraph$find","getSplitTitle","splitTitle","split","pageTitle","actionButtons","actionButton","columns","moveButton","NotesTabView","Colors","background","selectable","ContentGroupSection","RecentChangesTabView","CommonConfigButton","ConfigCommonView","_useAuthContext","dispatch","setSearch","resetKeyword","_auth$user3","_mutationFn2","_onSuccess2","useResetKeyowrd","ConfigSections","TextButton","textStyle","textDecorationLine","username","ConfigTabView","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","buttons","AntDesign","iconColor","isWeb","NotePage","isFocused","useIsFocused","useRoute","_route$params","archiveId","_window","toc","toggleToc","fullSection","toggleFullSection","_useNotePage","archives","archive","handleEdit","idx","findIndex","moveSections","moveSection","findLast","_paragraph$idx","reverse","_paragraph$idx2","_useState5","_useState6","setDescription","_paragraph$find2","pressableTextColor","scrollbarGutter","flexGrow","numberOfLines","EditorViewer","active","autoResize","ActivityIndicator","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","_getMatchedChars","pattern","childrenPages","encodeURI","_getMatchedChars2","protocol","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","setPreview","moveMutation","_useNotePages5$data","oldTitle","Error","some","_x9","useMovePage","_useMemo","_moveParagraph$","moveParagraph","isSplit","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","display","RecentPages","EmptyPages","unknownData","emptyParentData","EmptyContents","emptyParagraph","emptyList","match","regex","matches","exec","findEmptyLists","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","default","Navigation","PaperProvider","fallback"],"sourceRoot":""}