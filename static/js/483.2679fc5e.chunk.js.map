{"version":3,"file":"static/js/483.2679fc5e.chunk.js","mappings":"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","sources":["src/hooks/useKeywordStorage.ts","src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/modals/AlertModal.tsx","src/modals/DatePikcerModal.tsx","src/modals/index.ts","src/screens/main/NoteListSection.tsx","src/components/TimerTag.tsx","src/hooks/useProblem.ts","src/hooks/useTimeLine.ts","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/NoteItemSections.tsx","src/screens/main/home/ConfigSection.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/notepage/TimerTagSection.tsx","src/screens/main/notepage/NotePageScreen.tsx","src/screens/main/timeline/DateHeaderSection.tsx","src/screens/main/timeline/TimeLineScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/ProblemScreen.tsx","src/screens/main/NoteViewerScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords:';\r\n\r\nexport type KeywordContent =\r\n  | {\r\n      type: '_LINK';\r\n      name: string;\r\n      url: string;\r\n      origin: string;\r\n    }\r\n  | {\r\n      type: '_NOTELINK';\r\n      name: string;\r\n      title: string;\r\n      paragraph?: string;\r\n      origin: string;\r\n    }\r\n  | {\r\n      type: '_KEYWORD';\r\n      title: string;\r\n    };\r\n\r\nconst getKeywords = async (subkey: string | undefined): Promise<KeywordContent[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY + subkey);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveKeywords = async (\r\n  subkey: string | undefined,\r\n  keywords: KeywordContent[]\r\n): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY + subkey, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving keywords', e);\r\n  }\r\n};\r\n\r\nexport const useKeywords = () => {\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n  return useQuery({\r\n    queryKey: ['keywords', subkey],\r\n    queryFn: async () => {\r\n      return await getKeywords(subkey);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async (keyword: KeywordContent) => {\r\n      const keywords = await getKeywords(subkey);\r\n      const newKeywords = [\r\n        ...new Set([JSON.stringify(keyword), ...keywords.map((v) => JSON.stringify(v))]),\r\n      ].map((v) => JSON.parse(v));\r\n      await saveKeywords(subkey, newKeywords);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords(subkey, []);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n","import { axiosCreate } from '@blacktokki/account';\r\n\r\nimport { Content, PostContent, Link } from '../types';\r\n\r\nconst axios = axiosCreate('notebook');\r\n\r\nexport const getContentOne = async (id: number) => {\r\n  return (await axios.get(`/api/v1/content/${id}`)).data as Content;\r\n};\r\n\r\nexport const getContentList = async (parentId?: number, types?: Content['type'][]) => {\r\n  const parentIdParam = parentId !== undefined ? `&parentId=${parentId}` : '';\r\n  const typeParam = types !== undefined ? `&types=${types.join(',')}` : '';\r\n  return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data\r\n    .value as Content[];\r\n};\r\n\r\nexport const postContent = async (postContent: PostContent) => {\r\n  return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id;\r\n};\r\n\r\nexport const patchContent = async ({ id, updated }: { id: number; updated: PostContent }) => {\r\n  await axios.patch(`/api/v1/content`, { ids: [id], updated });\r\n};\r\n\r\nexport const deleteContent = async (id: number) => {\r\n  await axios.delete(`/api/v1/content/${id}`);\r\n};\r\n\r\nexport const previewUrl = async (preview: { query: string }) => {\r\n  return (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data as Link;\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { toHtml } from '@blacktokki/editor';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\n\r\nimport { getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { Content, PostContent } from '../types';\r\n\r\nconst DB_NAME = '@Blacktokki:notebook';\r\nconst DB_VERSION = 1;\r\n\r\nexport async function openDB(): Promise<IDBDatabase> {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = (event.target as IDBOpenDBRequest).result;\r\n      if (!db.objectStoreNames.contains('NOTE')) {\r\n        db.createObjectStore('NOTE', { keyPath: 'title' });\r\n      }\r\n      // if (!db.objectStoreNames.contains('SNAPSHOT')) {\r\n      //   db.createObjectStore('SNAPSHOT', { keyPath: ['title', 'updated'] });\r\n      // }\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\n\r\nlet lastPage: string | undefined;\r\n\r\nconst getContents = async (isOnline: boolean, type: 'NOTE' | 'SNAPSHOT'): Promise<Content[]> => {\r\n  if (isOnline) {\r\n    return await getContentList(undefined, [type]);\r\n  }\r\n  if (type === 'SNAPSHOT') {\r\n    return [];\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    return new Promise((resolve) => {\r\n      const transaction = db.transaction(type, 'readonly');\r\n      const store = transaction.objectStore(type);\r\n\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result as Content[]);\r\n      };\r\n      request.onerror = () => {\r\n        console.error('Error loading contents from IndexedDB:', request.error);\r\n        throw request.error;\r\n      };\r\n    });\r\n  } catch (e) {\r\n    console.error('Error opening IndexedDB', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (\r\n  isOnline: boolean,\r\n  contents: (Content | PostContent)[],\r\n  id?: number\r\n): Promise<void> => {\r\n  const content = contents.find((v) => id === (v as { id?: number }).id);\r\n  if (isOnline) {\r\n    if (content) {\r\n      const savedId = await (id\r\n        ? patchContent({ id, updated: content }).then(() => id)\r\n        : postContent(content));\r\n      const snapshot: Content | PostContent = {\r\n        ...content,\r\n        type: 'SNAPSHOT',\r\n        id: undefined,\r\n        parentId: savedId,\r\n      };\r\n      await postContent(snapshot);\r\n    }\r\n    return;\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(['NOTE' /*, 'SNAPSHOT' */], 'readwrite');\r\n    const store = tx.objectStore('NOTE');\r\n    // const archive = tx.objectStore('SNAPSHOT');\r\n\r\n    for (const contentItem of contents) {\r\n      store.put(contentItem); // id를 기준으로 덮어씌움 (없으면 추가)\r\n    }\r\n    // if (content) {\r\n    //   const snapshot: Content | PostContent = {\r\n    //     ...content,\r\n    //     type: 'SNAPSHOT',\r\n    //   };\r\n    //   archive.put(snapshot);\r\n    // }\r\n    await new Promise((resolve, reject) => {\r\n      tx.oncomplete = () => resolve(undefined);\r\n      tx.onerror = () => reject(tx.error);\r\n    });\r\n  } catch (e) {\r\n    console.error('Error saving contents to IndexedDB', e);\r\n  }\r\n};\r\n\r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent notes', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent notes', e);\r\n  }\r\n};\r\n\r\nexport const useNotePages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['pageContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'NOTE'),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['snapshotContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'SNAPSHOT'),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find((v) => v === title) === undefined) {\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '', id: undefined };\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useRecentPages = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['recentPages'],\r\n    queryFn: async () => {\r\n      const recentTitles = await getRecentPages();\r\n      return recentTitles\r\n        .map((title) => contents.find((c) => c.title === title))\r\n        .filter((c) => c !== undefined) as Content[];\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useLastPage = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['lastPage'],\r\n    queryFn: async () => {\r\n      return contents.find((v) => v.title === lastPage);\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useCreateOrUpdatePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const { data: contents = [] } = useNotePages();\r\n  return useMutation({\r\n    mutationFn: async ({ title, description }: { title: string; description: string }) => {\r\n      const page = contents.find((c) => c.title === title);\r\n      if (page?.description === description) {\r\n        return { title, description, skip: true };\r\n      }\r\n      let updatedContents: (Content | PostContent)[];\r\n      const updated = auth.isLocal ? new Date().toISOString() : undefined;\r\n      if (page) {\r\n        updatedContents = contents.map((c, i) =>\r\n          c.id === page.id ? ({ ...c, description, updated } as PostContent) : c\r\n        );\r\n      } else {\r\n        const newPage = {\r\n          title,\r\n          description,\r\n          input: title,\r\n          userId: auth.user?.id || 0,\r\n          parentId: 0,\r\n          type: 'NOTE',\r\n          order: 0,\r\n          updated,\r\n          option: {},\r\n        } as PostContent;\r\n        updatedContents = [...contents, newPage];\r\n      }\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page?.id);\r\n      return { title, description, skip: false };\r\n    },\r\n    onSuccess: async (data) => {\r\n      if (!data.skip) {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      }\r\n    },\r\n  });\r\n};\r\n\r\nexport const useMovePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [] } = useNotePages();\r\n  const { auth } = useAuthContext();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({\r\n      oldTitle,\r\n      newTitle,\r\n      description,\r\n    }: {\r\n      oldTitle: string;\r\n      newTitle: string;\r\n      description?: string;\r\n    }) => {\r\n      const page = contents.find((c) => c.title === oldTitle);\r\n\r\n      if (!page) {\r\n        throw new Error('Page not found');\r\n      }\r\n\r\n      if (contents.some((c) => c.title === newTitle)) {\r\n        throw new Error('Page with new title already exists');\r\n      }\r\n\r\n      const updatedContents = contents.map((c) =>\r\n        c.title === oldTitle\r\n          ? { ...c, title: newTitle, description: description || page.description }\r\n          : c\r\n      );\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page.id);\r\n\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.map((title) =>\r\n        title === oldTitle ? newTitle : title\r\n      );\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { oldTitle, newTitle };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({ title, direct }: { title: string; direct?: boolean }) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find((v) => v === title) === undefined || direct) {\r\n        const updatedRecentPages = [title, ...recentPages];\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async (title: string) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter((_title) => title !== _title);\r\n      lastPage = undefined;\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useNoteViewers = () => {\r\n  const { lang, locale } = useLangContext();\r\n  return useQuery({\r\n    queryKey: ['viewerContents', locale],\r\n    queryFn: async () => {\r\n      return await Promise.all(\r\n        ['Usage'].map(async (key) => {\r\n          const title = lang(key);\r\n          const v2 = await fetch(process.env.PUBLIC_URL + '/' + title + '.md');\r\n          const description = toHtml(await v2.text());\r\n          return { key, description };\r\n        })\r\n      );\r\n    },\r\n  });\r\n};\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};\r\n","import { Text, useColorScheme } from '@blacktokki/core';\r\nimport { TouchableOpacity, View, FlatList, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { createCommonStyles } from '../styles';\r\n\r\nexport interface Paragraph {\r\n  path: string;\r\n  title: string;\r\n  level: number;\r\n  header: string;\r\n  description: string;\r\n}\r\n\r\nexport function parseHtmlToParagraphs(html: string): Paragraph[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  const result: Paragraph[] = [{ path: '', title: '', header: '', level: 0, description: '' }];\r\n\r\n  const headings: string[] = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\r\n  const headerStack: { level: number; title: string }[] = [];\r\n\r\n  let current: Paragraph | null = null;\r\n  let cursor = doc.body.firstChild;\r\n\r\n  const flushCurrent = () => {\r\n    if (current) {\r\n      result.push(current);\r\n      current = null;\r\n    }\r\n  };\r\n\r\n  while (cursor) {\r\n    if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n      const el = cursor as HTMLElement;\r\n      if (headings.includes(el.tagName)) {\r\n        flushCurrent();\r\n\r\n        const level = parseInt(el.tagName.substring(1), 10);\r\n        const title = el.textContent?.trim() || '';\r\n\r\n        // 헤더 스택 업데이트\r\n        while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n          headerStack.pop();\r\n        }\r\n        headerStack.push({ level, title });\r\n\r\n        const path = headerStack.map((h) => h.title).join(' > ');\r\n\r\n        current = {\r\n          path,\r\n          title,\r\n          level,\r\n          header: el.outerHTML,\r\n          description: '',\r\n        };\r\n      } else if (current) {\r\n        current.description += el.outerHTML;\r\n      } else {\r\n        // 헤더 밖의 내용 처리\r\n        result[0].description += el.outerHTML;\r\n      }\r\n    } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n      current.description += cursor.textContent || '';\r\n    }\r\n\r\n    cursor = cursor.nextSibling;\r\n  }\r\n\r\n  flushCurrent();\r\n  return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props: {\r\n  root: string;\r\n  path: string;\r\n  onPress: (item: Paragraph) => void;\r\n  data: Paragraph[];\r\n}) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item: Paragraph) => (\r\n    <TouchableOpacity style={styles.resultItem} onPress={() => props.onPress(item)}>\r\n      {item.level === 0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\" />}\r\n      <Text\r\n        style={[\r\n          props.path === item.path\r\n            ? [commonStyles.title, { marginBottom: 5, marginTop: 3 }]\r\n            : commonStyles.text,\r\n          styles.resultText,\r\n          { left: item.level * 10 + 10 },\r\n        ]}\r\n      >\r\n        {item.level === 0 ? props.root : item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View\r\n      style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}\r\n    >\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(item) => item.path}\r\n        renderItem={({ item }) => renderItem(item)}\r\n        ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n});\r\n","import { useColorScheme, useLangContext, View, Text } from '@blacktokki/core';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { TextInput, TouchableOpacity, FlatList, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { parseHtmlToParagraphs } from './HeaderSelectBar';\r\n\r\nlet _searchText = '';\r\n\r\ntype SearchContent = Content | KeywordContent;\r\n\r\nfunction extractHtmlLinksWithQuery(text: string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map((a) => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href,\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nfunction urlToNoteLink(url: string) {\r\n  const newLocation = new URL(url);\r\n  if (location.origin === newLocation.origin) {\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get('title');\r\n    const paragraph = params.get('paragraph') || params.get('section') || undefined;\r\n    if (title) {\r\n      return { title, paragraph };\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLink(url: string, navigation: StackNavigationProp<NavigationParamList>) {\r\n  const noteLink = urlToNoteLink(url);\r\n  if (noteLink) {\r\n    navigation.push('NotePage', noteLink);\r\n  } else {\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nexport function getLinks(pages: Content[], sameTitle?: boolean) {\r\n  return pages\r\n    .flatMap((v) =>\r\n      extractHtmlLinksWithQuery(v.description || '').map((v2) => {\r\n        const noteLink = urlToNoteLink(v2.url);\r\n        if (noteLink) {\r\n          if (sameTitle || v2.text !== noteLink.title) {\r\n            return {\r\n              type: '_NOTELINK' as '_NOTELINK',\r\n              name: v2.text,\r\n              ...noteLink,\r\n              origin: v.title,\r\n            };\r\n          }\r\n          return undefined;\r\n        }\r\n        return { type: '_LINK' as '_LINK', url: v2.url, name: v2.text, origin: v.title };\r\n      })\r\n    )\r\n    .filter((v) => v !== undefined);\r\n}\r\n\r\nexport const getFilteredPages = (pages: Content[], searchText: string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase().normalize('NFKD');\r\n  const links = getLinks(pages);\r\n  return [\r\n    ...pages.filter((page) =>\r\n      page.title.toLowerCase().normalize('NFKD').startsWith(lowerCaseSearch)\r\n    ),\r\n    ...links.filter((v) => v.name.toLowerCase().normalize('NFKD').startsWith(lowerCaseSearch)),\r\n  ];\r\n};\r\n\r\nconst RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter((v) => v.description);\r\n  return (\r\n    randomPages && (\r\n      <TouchableOpacity\r\n        style={commonStyles.searchButton}\r\n        onPress={() => {\r\n          const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n          const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n          navigation.push('NotePage', {\r\n            title: page.title,\r\n            paragraph: paragraphs[Math.floor(Math.random() * paragraphs.length)].title,\r\n          });\r\n        }}\r\n      >\r\n        <Icon name={'random'} size={18} color=\"#FFFFFF\" />\r\n      </TouchableOpacity>\r\n    )\r\n  );\r\n};\r\n\r\nexport const titleFormat = (item: { title: string; paragraph?: string }) =>\r\n  `${item.title}${item.paragraph ? ' ▶ ' + item.paragraph : ''}`;\r\n\r\nexport const SearchList = ({\r\n  filteredPages,\r\n  handlePagePress,\r\n  addKeyword,\r\n}: {\r\n  filteredPages: SearchContent[];\r\n  handlePagePress: (title: string, paragraph?: string) => void;\r\n  addKeyword?: (keyword: KeywordContent) => void;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item: SearchContent) => {\r\n    return PanResponder.create({\r\n      onPanResponderStart: () => {\r\n        if (item.type === '_NOTELINK' && item.paragraph) {\r\n          handlePagePress(item.title, item.paragraph);\r\n          addKeyword?.(item);\r\n        } else if (item.type === '_LINK') {\r\n          window.open(item.url, '_blank');\r\n          addKeyword?.(item);\r\n        } else {\r\n          handlePagePress(item.title);\r\n          addKeyword?.({ type: '_KEYWORD', title: item.title });\r\n        }\r\n      },\r\n    }).panHandlers;\r\n  }, []);\r\n\r\n  return (\r\n    <FlatList\r\n      data={filteredPages}\r\n      keyExtractor={(item: any) => JSON.stringify([item.title, item.name, item.paragraph])}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity style={styles.resultItem} {...pagePressHandlers(item)}>\r\n          <Text style={[commonStyles.text, styles.resultText, { flexShrink: 0 }]}>\r\n            {item.type === '_NOTELINK' || item.type === '_LINK' ? item.name : item.title}\r\n          </Text>\r\n          {item.type === '_NOTELINK' && (\r\n            <Text\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n              style={[commonStyles.text, styles.resultText, { fontSize: 12, paddingLeft: 24 }]}\r\n            >\r\n              {titleFormat(item)}\r\n            </Text>\r\n          )}\r\n          {item.type === '_LINK' && (\r\n            <Text\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n              style={[commonStyles.text, styles.resultText, { fontSize: 12, paddingLeft: 24 }]}\r\n            >\r\n              {titleFormat({ title: item.origin, paragraph: item.url })}\r\n            </Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SearchBar: React.FC<{\r\n  handlePress?: (title: string) => void;\r\n  useRandom?: boolean;\r\n}> = ({ handlePress, useRandom = true }) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const { lang } = useLangContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput | null>();\r\n  const { data: keywords = [] } = useKeywords();\r\n  const addKeyword = useAddKeyowrd();\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages: SearchContent[] = (\r\n    searchText.length > 0 ? getFilteredPages(pages, searchText) : keywords\r\n  )\r\n    .filter((v) => handlePress === undefined || v.type === 'NOTE')\r\n    .slice(0, 10);\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim());\r\n      addKeyword.mutate({ type: '_KEYWORD', title: searchText.trim() });\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, paragraph?: string) => {\r\n    if (handlePress) {\r\n      handlePress(title);\r\n    } else {\r\n      navigation.push('NotePage', { title, paragraph });\r\n    }\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(\r\n    () =>\r\n      PanResponder.create({\r\n        onPanResponderStart: handleSearch,\r\n      }).panHandlers,\r\n    [searchText]\r\n  );\r\n\r\n  useEffect(() => {\r\n    _searchText = searchText;\r\n  }, [searchText]);\r\n\r\n  useFocusEffect(() => {\r\n    if (searchText !== _searchText) {\r\n      setSearchText(_searchText);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={(ref) => {\r\n            inputRef.current = ref;\r\n          }}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder={lang('Search')}\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={() => setShowResults(true)}\r\n          onBlur={() => setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={'search'} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton />}\r\n      </View>\r\n\r\n      {showResults && (\r\n        <View\r\n          style={[\r\n            styles.resultsContainer,\r\n            theme === 'dark' ? styles.darkResults : styles.lightResults,\r\n          ]}\r\n        >\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList\r\n              filteredPages={filteredPages}\r\n              handlePagePress={handlePagePress}\r\n              addKeyword={addKeyword.mutate}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity style={styles.resultItem} {...searchHandlers}>\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import { CommonButton, Text, useLangContext, useModalsContext, View } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nexport default function AlertModal({\r\n  type,\r\n  callbacks,\r\n}: {\r\n  type: string;\r\n  callbacks: (() => void)[];\r\n}) {\r\n  const { lang } = useLangContext();\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(AlertModal, null);\r\n  };\r\n  const messages = {\r\n    UNSAVED: {\r\n      message: 'Changes that you made may not be saved.',\r\n      buttons: [\r\n        {\r\n          title: 'save',\r\n          onPress: () => {\r\n            callbacks[0]();\r\n            back();\r\n          },\r\n        },\r\n        {\r\n          title: 'do not save',\r\n          onPress: () => {\r\n            callbacks[1]();\r\n            back();\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  } as Record<string, { message: string; buttons: { title: string; onPress: () => void }[] }>;\r\n\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ padding: 16 }}>\r\n        <Text>{lang(messages[type].message)}</Text>\r\n        <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n          {messages[type].buttons.map((button, i) => (\r\n            <CommonButton\r\n              key={i}\r\n              style={{ marginRight: 10 }}\r\n              title={lang(button.title)}\r\n              onPress={button.onPress}\r\n            />\r\n          ))}\r\n          <CommonButton title={lang('cancel')} onPress={() => back()} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import {\r\n  Calendar,\r\n  useLangContext,\r\n  useModalsContext,\r\n  View,\r\n  Text,\r\n  CommonButton,\r\n} from '@blacktokki/core';\r\nimport { CalendarProps } from '@blacktokki/core/build/typescript/components/Calendar';\r\nimport dayjs from 'dayjs';\r\nimport React, { Suspense, useState } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\nexport type MarkedDateRange = { dateStart: string; dateEnd: string };\r\n\r\nconst DIRECT_PICK = true;\r\n\r\nconst getMarkedDays = (dateString: string, markedDateStrings: MarkedDateRange[]) => {\r\n  const disableDays: string[] = [];\r\n  const date = dayjs(dateString);\r\n  let startDate = date.clone().startOf('month').add(-1, 'month');\r\n  const endDate = date.clone().endOf('month').add(1, 'month');\r\n  const markedDate = markedDateStrings.map((v) => ({\r\n    startDate: dayjs(v.dateStart),\r\n    endDate: dayjs(v.dateEnd),\r\n  }));\r\n  const markedDays: string[] = [];\r\n  // const today = dayjs().startOf('day');\r\n  while (startDate <= endDate) {\r\n    // if (startDate < today) {\r\n    //   disableDays.push(startDate.format('YYYY-MM-DD'));\r\n    // }\r\n    if (markedDate.find((v) => !v.startDate.isAfter(startDate) && !v.endDate.isBefore(startDate))) {\r\n      markedDays.push(startDate.format('YYYY-MM-DD'));\r\n    }\r\n    startDate = startDate.add(1, 'day');\r\n  }\r\n  return {\r\n    ...disableDays.reduce((p, c) => {\r\n      p[c] = { disabled: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...markedDays.reduce((p, c) => {\r\n      p[c] = { marked: true, dotColor: 'red' };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...(dateString ? [dateString] : []).reduce((p, c) => {\r\n      p[c] = { selected: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n  };\r\n};\r\n\r\nconst defaultDayjs = () => {\r\n  const m = dayjs();\r\n  const restMinute = parseInt(m.format('mm'), 10) % 5;\r\n  return m.add(5 - restMinute, 'minute');\r\n};\r\n\r\nexport default function DatePickerModal({\r\n  datetime,\r\n  markedDateStrings,\r\n  callback,\r\n}: {\r\n  datetime?: string;\r\n  markedDateStrings?: MarkedDateRange[];\r\n  callback: (datetime?: string) => void;\r\n}) {\r\n  const _dayjs = datetime ? dayjs(datetime) : defaultDayjs();\r\n  const { lang, locale } = useLangContext();\r\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\r\n  const [markedDates, setMarkedDates] = useState<CalendarProps['markedDates']>(\r\n    getMarkedDays(_dayjs.format('YYYY-MM-DD'), markedDateStrings || [])\r\n  );\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(DatePickerModal, null);\r\n  };\r\n  const onSave = (datetime?: string) => {\r\n    callback?.(datetime);\r\n    back();\r\n  };\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ alignItems: 'center', minHeight: 450 }}>\r\n        <View style={{ flexDirection: 'row', width: '100%' }}>\r\n          <View style={{ flex: 1, flexDirection: 'row' }}>\r\n            <TouchableOpacity onPress={back}>\r\n              <Text>{lang('back')}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={{ fontSize: 20, textAlign: 'center' }}>{lang('Date')}</Text>\r\n          </View>\r\n          <View style={{ flex: 1 }} />\r\n        </View>\r\n        <View\r\n          style={{ marginBottom: 20, height: 1, width: '100%' }}\r\n          lightColor=\"#ddd\"\r\n          darkColor=\"rgba(255,255,255, 0.3)\"\r\n        />\r\n        <Suspense fallback={<></>}>\r\n          <Calendar\r\n            locale={locale}\r\n            style={undefined}\r\n            date={date}\r\n            setDate={DIRECT_PICK ? onSave : setDate}\r\n            disableAllTouchEventsForDisabledDays={true}\r\n            onMonthChange={(v) =>\r\n              setMarkedDates(getMarkedDays(v.dateString, markedDateStrings || []))\r\n            }\r\n            markedDates={markedDates}\r\n          />\r\n        </Suspense>\r\n        {!DIRECT_PICK && (\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <CommonButton title={lang('save')} onPress={() => onSave(date)} />\r\n            <CommonButton title={lang('cancel')} onPress={() => onSave(undefined)} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import AlertModal from './AlertModal';\r\nimport DatePickerModal from './DatePikcerModal';\r\n\r\nexport default [DatePickerModal, AlertModal];\r\n","import { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport { titleFormat } from '../../components/SearchBar';\r\nimport { createCommonStyles } from '../../styles';\r\n\r\nexport const NoteListSection = ({\r\n  contents,\r\n  isLoading,\r\n  onPress,\r\n  emptyMessage,\r\n}: {\r\n  contents: {\r\n    title: string;\r\n    paragraph?: string;\r\n    subtitles?: string[];\r\n    id?: number;\r\n  }[];\r\n  isLoading: boolean;\r\n  onPress: (title: string, paragraph?: string, id?: number) => void;\r\n  emptyMessage: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : contents.length > 0 ? (\r\n        <FlatList\r\n          data={contents}\r\n          keyExtractor={(item) => JSON.stringify([item.title, item.paragraph, item.id])}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => onPress(item.title, item.paragraph, item.id)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n              {(item.subtitles || []).map((subtitle, index) => (\r\n                <Text key={index} style={[commonStyles.smallText]}>\r\n                  {subtitle}\r\n                </Text>\r\n              ))}\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text selectable={false} style={commonStyles.text}>\r\n            {lang(emptyMessage)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n","import { CommonButton, useLangContext } from '@blacktokki/core';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\n\r\nimport { Paragraph } from './HeaderSelectBar';\r\n\r\ntype DatePattern = {\r\n  pattern: string;\r\n  format?: (s: string, e: string) => string;\r\n  text: string;\r\n  dateStart: string;\r\n  dateEnd: string;\r\n  index: number;\r\n};\r\n\r\nfunction extractDates(input: string) {\r\n  const now = new Date();\r\n  const currentYear = now.getFullYear();\r\n  // 정규식 패턴들\r\n  const patterns: {\r\n    regex: RegExp;\r\n    parse: (match: RegExpExecArray) => DatePattern;\r\n  }[] = [\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\/(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        // YYYY-MM-DD/YYYY-MM-DD\r\n        pattern: 'YYYY-MM-DD',\r\n        format: (s, e) => `${s}/${e}`,\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[2],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        pattern: 'YYYY-MM-DD',\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[1],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b\\d{4}-\\d{2}(?!-)\\b/g,\r\n      parse: (match) => {\r\n        const split = match[0].split('-');\r\n        const year = parseInt(split[0], 10);\r\n        const month = parseInt(split[1], 10);\r\n        const lastDay = new Date(year, month, 0).getDate();\r\n        return {\r\n          pattern: 'YYYY-MM',\r\n          text: match[0],\r\n          dateStart: `${year}-${String(month).padStart(2, '0')}-01`,\r\n          dateEnd: `${year}-${String(month).padStart(2, '0')}-${String(lastDay).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      regex: /\\b(\\d{2})\\/(\\d{2})\\s*~\\s*(\\d{2})\\/(\\d{2})\\b/g,\r\n      parse: (match) => {\r\n        const mm = parseInt(match[1], 10);\r\n        const dd = parseInt(match[2], 10);\r\n        const mm2 = parseInt(match[3], 10);\r\n        const dd2 = parseInt(match[4], 10);\r\n        return {\r\n          // MM/DD ~ MM/DD\r\n          pattern: 'MM/DD',\r\n          format: (s, e) => `${s} ~ ${e}`,\r\n          text: match[0],\r\n          dateStart: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          dateEnd: `${currentYear}-${String(mm2).padStart(2, '0')}-${String(dd2).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      regex: /\\b(?<!\\d)(\\d{2})\\/(\\d{2})(?!\\d)\\b/g,\r\n      parse: (match) => {\r\n        const mm = parseInt(match[1], 10);\r\n        const dd = parseInt(match[2], 10);\r\n        return {\r\n          pattern: 'MM/DD',\r\n          text: match[0],\r\n          dateStart: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          dateEnd: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n  ];\r\n\r\n  const results: DatePattern[] = [];\r\n\r\n  const usedRanges: [number, number][] = [];\r\n\r\n  for (const pattern of patterns) {\r\n    const regex = new RegExp(pattern.regex.source, 'g');\r\n    let match: RegExpExecArray | null;\r\n\r\n    while ((match = regex.exec(input)) !== null) {\r\n      const start = match.index;\r\n      const end = regex.lastIndex;\r\n      // 이미 처리된 범위에 속하면 skip\r\n      if (results.some((result) => start < result.index + result.text.length && end > result.index))\r\n        continue;\r\n      results.push(pattern.parse(match));\r\n      usedRanges.push([start, end]);\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\nexport function cleanHtml(html: string, cleanAnchors: boolean, mergeTds: boolean): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // 1. <code> 태그 내부 비우기\r\n  const codeTags = doc.querySelectorAll('code');\r\n  codeTags.forEach((code) => {\r\n    code.textContent = '';\r\n  });\r\n  // 2. <a> 태그 내부 비우기\r\n  const aTags = doc.querySelectorAll('a');\r\n  aTags.forEach((a) => {\r\n    a.textContent = '';\r\n  });\r\n  if (mergeTds) {\r\n    // 3. 각 <tr> 안의 <td> 병합\r\n    const trList = doc.querySelectorAll('tr');\r\n    trList.forEach((tr) => {\r\n      const tdList = tr.querySelectorAll('td');\r\n      if (tdList.length > 1) {\r\n        const mergedText = Array.from(tdList)\r\n          .map((td) => td.textContent?.trim() || '')\r\n          .join(' ');\r\n\r\n        // 첫 td에 병합된 텍스트 설정\r\n        const newTd = document.createElement('td');\r\n        newTd.textContent = mergedText;\r\n\r\n        // 기존 td 모두 제거 후 병합 td 삽입\r\n        tr.innerHTML = '';\r\n        tr.appendChild(newTd);\r\n      }\r\n    });\r\n  }\r\n  return doc.body.innerHTML;\r\n}\r\n\r\nexport const paragraphsToDatePatterns = (title: string, paragraphs: Paragraph[]) => {\r\n  return paragraphs\r\n    .map((paragraph) => {\r\n      const dateMatches = [\r\n        toRaw(paragraph.header),\r\n        ...toRaw(cleanHtml(paragraph.description, false, true)).split('\\n'),\r\n      ].map((v2, i) => ({\r\n        path: paragraph.path,\r\n        isHeader: i === 0,\r\n        original: v2,\r\n        matches: extractDates(v2),\r\n      }));\r\n      return { title, paragraph: paragraph.title, dateMatches };\r\n    })\r\n    .filter((v) => v.dateMatches.filter((v2) => v2.matches.length > 0).length > 0);\r\n};\r\n\r\nexport const matchDateRange = (\r\n  dateMatches: { matches: DatePattern[]; original: string; path: string; isHeader: boolean }[],\r\n  dateNum: number\r\n) => {\r\n  return dateMatches.filter((dateMatch) =>\r\n    dateMatch.matches.find(\r\n      (match) =>\r\n        new Date(match.dateStart).getTime() <= dateNum &&\r\n        dateNum <= new Date(match.dateEnd).getTime()\r\n    )\r\n  );\r\n};\r\n\r\nexport const today = () => dayjs().format('YYYY-MM-DD');\r\n\r\nexport type TimerData = DatePattern & { original: string; replace: (a: string) => void };\r\n\r\nconst TimerTag = (props: {\r\n  data: TimerData;\r\n  buttons: (data: TimerData) => { title: string; onPress: () => void }[];\r\n  now: dayjs.Dayjs;\r\n  isExpand: boolean;\r\n  toggleExpand: () => void;\r\n}) => {\r\n  const start = dayjs(props.data.dateStart);\r\n  const end = dayjs(props.data.dateEnd).add(1, 'day');\r\n  const ratio = start.diff(props.now) / start.diff(end);\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <TouchableOpacity onPress={() => props.toggleExpand()}>\r\n      <View\r\n        style={{ backgroundColor: 'lightgray', borderRadius: 20, overflow: 'hidden', margin: 4 }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: 'darkgray',\r\n            position: 'absolute',\r\n            width: `${ratio * 100}%`,\r\n            height: '100%',\r\n          }}\r\n        />\r\n        {props.isExpand ? (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, maxWidth: 270 }}>\r\n            <View style={{ flexDirection: 'row', alignItems: 'stretch' }}>\r\n              <Text>⌚</Text>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n            <Text>{props.data.original}</Text>\r\n            <View style={{ width: '100%', alignItems: 'center' }}>\r\n              {props.buttons(props.data).map((v) => (\r\n                <CommonButton\r\n                  key={v.title}\r\n                  title={lang(v.title)}\r\n                  onPress={() => {\r\n                    v.onPress();\r\n                    props.toggleExpand();\r\n                  }}\r\n                  style={{ width: '100%', backgroundColor: '#8888', margin: 4, maxWidth: 150 }}\r\n                />\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, flexDirection: 'row' }}>\r\n            <View style={{ paddingHorizontal: 4 }}>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\nexport default TimerTag;\r\n","import { toRaw } from '@blacktokki/editor';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Paragraph, parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { getLinks, titleFormat } from '../components/SearchBar';\r\nimport { cleanHtml } from '../components/TimerTag';\r\nimport { Content } from '../types';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nconst getReadabilityLevel = (() => {\r\n  function getKoreanRatio(text: string): number {\r\n    return (text.match(/[가-힣]/g) || []).length / text.length;\r\n  }\r\n\r\n  function countSyllables(word: string): number {\r\n    word = word.toLowerCase();\r\n    if (word.length <= 3) return 1;\r\n    const vowels = /[aeiouy]+/g;\r\n    const trailingE = /e\\b/;\r\n    const matches = word.match(vowels) || [];\r\n    let syllables = matches.length;\r\n    if (trailingE.test(word) && syllables > 1) syllables--;\r\n    return Math.max(syllables, 1);\r\n  }\r\n\r\n  function calculateFleschKincaid(text: string): number {\r\n    const sentenceCount = (text.match(/[.!?]+/g) || []).length || 1;\r\n    const wordList = text.trim().split(/\\s+/);\r\n    const wordCount = wordList.length;\r\n    const syllableCount = wordList.reduce((sum, word) => sum + countSyllables(word), 0);\r\n    return 0.39 * (wordCount / sentenceCount) + 11.8 * (syllableCount / wordCount) - 15.59;\r\n  }\r\n\r\n  function classifyFleschKincaid(score: number): number {\r\n    if (score < 3.0) return 1;\r\n    if (score < 6.0) return 2;\r\n    if (score < 9.0) return 3;\r\n    if (score < 12.0) return 4;\r\n    return 5;\r\n  }\r\n\r\n  function classifyKoreanReadability(text: string): number {\r\n    const sentences = text.split(/[.?!\\r\\n]/).filter((s) => s.trim().length > 0);\r\n    const words = text.trim().split(/\\s+/);\r\n    const wordCount = words.length;\r\n    const sentenceCount = sentences.length || 1;\r\n    const avgWordsPerSentence = wordCount / sentenceCount;\r\n\r\n    if (avgWordsPerSentence <= 7) return 1; // 매우 쉬움\r\n    if (avgWordsPerSentence <= 10) return 2;\r\n    if (avgWordsPerSentence <= 13) return 3;\r\n    if (avgWordsPerSentence <= 16) return 4;\r\n    return 5; // 매우 어려움\r\n  }\r\n\r\n  function _getReadabilityLevel(text: string) {\r\n    const koRatio = getKoreanRatio(text);\r\n    const enGrade = calculateFleschKincaid(text);\r\n    const enLevel = classifyFleschKincaid(enGrade);\r\n    const koLevel = classifyKoreanReadability(text);\r\n    return { koRatio, enLevel, koLevel, level: koLevel * koRatio + enLevel * (1 - koRatio) };\r\n  }\r\n  return _getReadabilityLevel;\r\n})();\r\n\r\nfunction findLists(html: string): { type: 'ul' | 'ol'; items: string[] }[] {\r\n  const results: { type: 'ul' | 'ol'; items: string[] }[] = [];\r\n\r\n  const listRegex = /<(ul|ol)[^>]*?>([\\s\\S]*?)<\\/\\1>/gi;\r\n  const liRegex = /<li[^>]*>([\\s\\S]*?)<\\/li>/gi;\r\n\r\n  let listMatch;\r\n  while ((listMatch = listRegex.exec(html)) !== null) {\r\n    const [, type, innerHTML] = listMatch;\r\n    const items: string[] = [];\r\n\r\n    let liMatch;\r\n    while ((liMatch = liRegex.exec(innerHTML)) !== null) {\r\n      const itemContent = liMatch[1].trim();\r\n      items.push(itemContent);\r\n    }\r\n\r\n    results.push({ type: type as 'ul' | 'ol', items });\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport const getSplitTitle = (title: string) => {\r\n  const splitTitle = title.split('/');\r\n  if (splitTitle.length < 2) {\r\n    return [title];\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length - 1).join('/'), splitTitle[splitTitle.length - 1]];\r\n};\r\n\r\nexport const paragraphDescription = (\r\n  paragraphs: Paragraph[],\r\n  paragraph: string,\r\n  rootTitle: boolean\r\n) => {\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path;\r\n  return path\r\n    ? paragraphs\r\n        .filter((v) => v.path === path || v.path.startsWith(path + ' > '))\r\n        .map((v) => (rootTitle || v.path !== path ? v.header : '') + v.description)\r\n        .join('')\r\n    : '';\r\n};\r\n\r\nconst trim = (text: string) => text.replaceAll('\\n', '').replaceAll('&nbsp;', '').trim();\r\n\r\ntype ProblemItem = [string, string | undefined, string]; // title, paragraph, subtitle\r\ntype ProblemSource = {\r\n  title: string;\r\n  updated: string;\r\n  raw: string;\r\n  links: { name: string; title: string; paragraph?: string; origin: string }[];\r\n  parentTitle: string | undefined;\r\n};\r\n\r\nconst problemCache: Record<\r\n  string,\r\n  {\r\n    record: ProblemItem[];\r\n    source: ProblemSource;\r\n    matrix: Record<string, { updated: string; record: ProblemItem[] }>;\r\n  }\r\n> = {};\r\n\r\nconst getDataLinear = (page: Content) => {\r\n  const existData = problemCache[page.title];\r\n  if (existData?.source.updated === page.updated) {\r\n    return problemCache[page.title];\r\n  }\r\n  const record: ProblemItem[] = [];\r\n  // empty contents\r\n  const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n  const lists = paragraphs\r\n    .map((v) => ({ ...v, lists: findLists(v.description) }))\r\n    .filter((v) => v.lists.length > 0);\r\n  paragraphs\r\n    .filter(\r\n      (v) => v.level !== 0 && trim(paragraphDescription(paragraphs, v.title, false)).length === 0\r\n    )\r\n    .forEach((v) =>\r\n      record.push([page.title, v.level === 0 ? undefined : v.title, 'Empty paragraph'])\r\n    );\r\n  lists\r\n    .filter(\r\n      (v) =>\r\n        v.lists.filter((v2) => v2.items.filter((v2) => trim(v2).length === 0).length > 0).length > 0\r\n    )\r\n    .forEach((v2) =>\r\n      record.push([page.title, v2.level === 0 ? undefined : v2.title, 'Empty list'])\r\n    );\r\n\r\n  // duplicate contents\r\n  paragraphs\r\n    .filter((v) => v !== paragraphs.findLast((v2) => v2.path === v.path))\r\n    .forEach((v) => record.push([page.title, undefined, `Duplicate paragraphs(${v})`]));\r\n  paragraphs\r\n    .map((v) => {\r\n      const sentences = cleanHtml(v.description, false, true)\r\n        .split('\\n')\r\n        .map((v2) => toRaw(v2).trim())\r\n        .filter((v) => v.includes(' ') && v.length > 4);\r\n      return {\r\n        ...v,\r\n        duplicates: sentences.filter((v2, i) => i !== sentences.lastIndexOf(v2)),\r\n      };\r\n    })\r\n    .forEach((v) =>\r\n      v.duplicates.forEach((v2) =>\r\n        record.push([page.title, v.level === 0 ? undefined : v.title, `Duplicate contents(${v2})`])\r\n      )\r\n    );\r\n  // readability\r\n  const readability = page.description\r\n    ? getReadabilityLevel(\r\n        toRaw(\r\n          page.description\r\n            .replaceAll(/<code\\b[^>]*>[\\s\\S]*?<\\/code>/gi, '<code></code>')\r\n            .replaceAll(/<br\\s*[/]?>/gi, '\\r\\n')\r\n        )\r\n      )\r\n    : { level: 0 };\r\n  if (readability.level > 3.5) {\r\n    record.push([\r\n      page.title,\r\n      undefined,\r\n      `Too high readability score: ${readability.level.toFixed(4)} > 3.5`,\r\n    ]);\r\n  }\r\n  const links = getLinks([page], true).filter((v) => v.type === '_NOTELINK');\r\n  const splitTitle = getSplitTitle(page.title);\r\n  const parentTitle = page.description && splitTitle.length === 2 ? splitTitle[0] : undefined;\r\n  const raw = toRaw(cleanHtml(page.description || '', true, false));\r\n  problemCache[page.title] = {\r\n    record,\r\n    source: { title: page.title, updated: page.updated, links, parentTitle, raw },\r\n    matrix: {},\r\n  };\r\n  return problemCache[page.title];\r\n};\r\n\r\nconst getDataMatrix = (source: ProblemSource, target: Content) => {\r\n  if (source.title === target.title) {\r\n    return [];\r\n  }\r\n  const existData = problemCache[source.title];\r\n  const existTarget = existData.matrix[target.title];\r\n  if (existData?.source.updated === source.updated && existTarget?.updated === target.updated) {\r\n    return existTarget.record;\r\n  }\r\n  const record: ProblemItem[] = [];\r\n  const links = source.links.filter((link) => link.title === target.title);\r\n\r\n  if (target.description) {\r\n    const description = target.description;\r\n    const _target = problemCache[target.title].source;\r\n    //unknown paragraph\r\n    links\r\n      .filter(\r\n        (link) =>\r\n          link.paragraph !== undefined &&\r\n          parseHtmlToParagraphs(description).find((v2) => v2.title === link.paragraph) === undefined\r\n      )\r\n      .forEach((link) => {\r\n        record.push([link.title, link.paragraph, `Unknown paragraph link(${link.origin})`]);\r\n      });\r\n    //unlinked keyword\r\n    const sourceName = source.title;\r\n    if (\r\n      _target.parentTitle !== source.title &&\r\n      _target.links.find((v) => v.name.toLowerCase() === sourceName.toLowerCase()) === undefined\r\n    ) {\r\n      const match = _target.raw.match(new RegExp(`\\\\b${sourceName}\\\\b`, 'i'));\r\n      if (match) {\r\n        record.push([target.title, undefined, `Unlinked note keyword: ${match[0]}`]);\r\n      }\r\n    }\r\n    source.links\r\n      .filter(\r\n        (link) =>\r\n          _target.parentTitle !== link.title &&\r\n          link.title.toLowerCase() !== link.name.toLowerCase() && // alias link only\r\n          link.title !== target.title && // not self link\r\n          _target.links.find(\r\n            (v) =>\r\n              v.name.toLowerCase() === link.name.toLowerCase() &&\r\n              v.title === link.title &&\r\n              v.paragraph === link.paragraph\r\n          ) === undefined\r\n      )\r\n      .forEach((link) => {\r\n        const match = _target.raw.match(new RegExp(`\\\\b${link.name}\\\\b`, 'i'));\r\n        if (match) {\r\n          record.push([\r\n            target.title,\r\n            undefined,\r\n            `Unlinked note keyword: ${match[0]} => ${titleFormat(link)}(${link.origin})`,\r\n          ]);\r\n        }\r\n      });\r\n  } else {\r\n    //unknown note\r\n    links.forEach((link) => {\r\n      record.push([link.title, link.paragraph, `Unknown note link(${link.origin})`]);\r\n    });\r\n\r\n    //empty parent note\r\n    if (source.parentTitle === target.title) {\r\n      record.push([source.parentTitle, undefined, `Empty parent note(${source.title})`]);\r\n    }\r\n  }\r\n  existData.matrix[target.title] = { record, updated: target.updated };\r\n\r\n  return record;\r\n};\r\n\r\nconst getData = (pages: Content[]) => {\r\n  const records: { title: string; paragraph: string | undefined; subtitles: string[] }[] = [];\r\n  pages\r\n    .map(getDataLinear)\r\n    .flatMap(({ record, source }) => {\r\n      return [...pages.flatMap((target) => getDataMatrix(source, target)), ...record];\r\n    })\r\n    .forEach(([title, paragraph, subtitle]) => {\r\n      const i = records.findIndex((v) => v.title === title && v.paragraph === paragraph);\r\n      if (i >= 0) {\r\n        records[i].subtitles.push(subtitle);\r\n      } else {\r\n        records.push({ title, paragraph, subtitles: [subtitle] });\r\n      }\r\n    });\r\n  return records;\r\n};\r\n\r\nexport default (delay?: number) => {\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const [data, setData] = useState<{ title: string; paragraph?: string; subtitles: string[] }[]>();\r\n  const timeoutRef = useRef<NodeJS.Timeout>();\r\n  useEffect(() => {\r\n    timeoutRef.current && clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = setTimeout(() => {\r\n      setData(getData(pages));\r\n      timeoutRef.current = undefined;\r\n    }, delay || 500);\r\n  }, [pages]);\r\n  return { data: data || [], isLoading: isLoading || data === undefined };\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nimport { parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { matchDateRange, paragraphsToDatePatterns, today } from '../components/TimerTag';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nexport default (date?: string) => {\r\n  const dateNum = new Date(date || today()).getTime();\r\n\r\n  const { data: notes = [], isLoading } = useNotePages();\r\n  const preData = useMemo(\r\n    () =>\r\n      notes.flatMap((v) =>\r\n        paragraphsToDatePatterns(v.title, parseHtmlToParagraphs(v?.description || ''))\r\n      ),\r\n    [notes]\r\n  );\r\n  const data = preData\r\n    .map((v) => {\r\n      return {\r\n        ...v,\r\n        subtitles: matchDateRange(v.dateMatches, dateNum).map((dateMatch) => dateMatch.original),\r\n      };\r\n    })\r\n    .filter((v2) => v2.subtitles.length > 0);\r\n  return { data, isLoading, preData };\r\n};\r\n","import { useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport { navigate, push } from '@blacktokki/navigation';\r\nimport React, { useRef } from 'react';\r\nimport { List, TouchableRipple, Badge } from 'react-native-paper';\r\n\r\nimport {\r\n  useRecentPages,\r\n  useNotePages,\r\n  useDeleteRecentPage,\r\n  useLastPage,\r\n  useAddRecentPage,\r\n} from '../../../hooks/useNoteStorage';\r\nimport useProblem from '../../../hooks/useProblem';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape: boolean) => {\r\n  return isLandscape ? 5 : 8;\r\n};\r\n\r\nexport const TimeLineButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useTimeLine();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'calendar'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('TimeLine')}\r\n      onPress={() => navigate('TimeLine')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ProblemButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useProblem();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'note-alert'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('Problems')}\r\n      onPress={() => push('Problem')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const toRecentContents = (data: Content[]) =>\r\n  data\r\n    .filter((v) => v.description)\r\n    .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime());\r\n\r\nconst ContentGroupSection = (\r\n  props: { type: 'PAGE' | 'LAST' } | { type: 'NOTE'; noteCount: number }\r\n) => {\r\n  const { lang } = useLangContext();\r\n  const notes = useNotePages();\r\n  const pages = useRecentPages();\r\n  const { data: lastPage } = useLastPage();\r\n  const tabRef = useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage();\r\n  const deleteRecentPage = useDeleteRecentPage();\r\n  const data =\r\n    props.type === 'NOTE' ? (notes.data ? toRecentContents(notes.data) : []) : pages.data;\r\n  const lastPageExists = lastPage && data?.find((v) => v.id === lastPage.id) === undefined;\r\n  const window = useResizeContext();\r\n  const itemPadding = getItemPadding(window === 'landscape');\r\n  const noteOnPress = (title: string) => {\r\n    if (title === lastPage?.title) {\r\n      if (tabRef.current) {\r\n        clearTimeout(tabRef.current);\r\n        tabRef.current = undefined;\r\n        addRecentPage.mutate({ title });\r\n      } else {\r\n        tabRef.current = setTimeout(() => {\r\n          tabRef.current = undefined;\r\n        }, 500);\r\n      }\r\n    }\r\n    navigate('NotePage', { title });\r\n  };\r\n  const noteOnLongPress = (title: string) => {\r\n    if (tabRef.current) {\r\n      clearTimeout(tabRef.current);\r\n      tabRef.current = undefined;\r\n    }\r\n    if (pages.data?.find((v) => v.title === title) === undefined) {\r\n      addRecentPage.mutate({ title, direct: true });\r\n    } else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  };\r\n  return (\r\n    (props.type !== 'LAST' || lastPageExists) && (\r\n      <List.Section>\r\n        {data &&\r\n          (props.type === 'LAST' ? (\r\n            lastPageExists && (\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document'} />}\r\n                title={lastPage.title}\r\n                onPress={() => noteOnPress(lastPage.title)}\r\n                onLongPress={() => noteOnLongPress(lastPage.title)}\r\n                style={{ padding: itemPadding }}\r\n                titleStyle={{ fontStyle: 'italic' }}\r\n              />\r\n            )\r\n          ) : props.type === 'NOTE' ? (\r\n            <>\r\n              {data.slice(0, props.noteCount).map((v) => (\r\n                <List.Item\r\n                  key={v.title}\r\n                  left={(_props) => (\r\n                    <List.Icon\r\n                      {..._props}\r\n                      icon={\r\n                        pages.data?.find((v2) => v2.title === v.title) === undefined\r\n                          ? 'notebook'\r\n                          : 'notebook-edit'\r\n                      }\r\n                    />\r\n                  )}\r\n                  title={v.title}\r\n                  onPress={() => noteOnPress(v.title)}\r\n                  onLongPress={() => noteOnLongPress(v.title)}\r\n                  style={{ padding: itemPadding }}\r\n                />\r\n              ))}\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'notebook-multiple'} />}\r\n                title={lang('more...')}\r\n                onPress={() => push('RecentPages')}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            </>\r\n          ) : (\r\n            data.map((v) => (\r\n              <List.Item\r\n                key={v.title}\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document-edit'} />}\r\n                right={(_props) => (\r\n                  <TouchableRipple\r\n                    style={{\r\n                      justifyContent: 'center',\r\n                      borderRadius: itemPadding,\r\n                      width: 40 + itemPadding * 2,\r\n                      height: 40 + itemPadding * 2,\r\n                      margin: -itemPadding,\r\n                    }}\r\n                    onPress={() => deleteRecentPage.mutate(v.title)}\r\n                  >\r\n                    <List.Icon style={{ left: itemPadding - 7 }} icon={'close'} />\r\n                  </TouchableRipple>\r\n                )}\r\n                title={v.title}\r\n                onPress={() => navigate('NotePage', { title: v.title })}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            ))\r\n          ))}\r\n      </List.Section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;\r\n","import { useColorScheme, useResizeContext, View, Text, useLangContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\n\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset();\r\n\r\nexport const updatedFormat = (_updated: string) => {\r\n  const _date = new Date(_updated);\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset);\r\n  const updated = _date.toISOString().slice(0, 16);\r\n  const date = updated.slice(0, 10);\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  return date === today ? updated.slice(11) : date;\r\n};\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape: boolean) => (isLandscape ? 20 : 4);\r\nconst _cardMaxWidth = (isLandscape: boolean) => (isLandscape ? 250 : 190);\r\n\r\ntype Item = (Content & { descriptionComponent: JSX.Element }) | null;\r\n\r\nconst CardPage = React.memo(({ item, index }: { item: Item; index: number }) => {\r\n  const window = useResizeContext();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window === 'landscape' ? 2 : 0;\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexBasis: window === 'landscape' ? '33%' : '50%',\r\n          maxWidth: cardMaxWidth,\r\n          backgroundColor: 'transparent',\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = () => navigation.push('NotePage', { title: item.title });\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexBasis: window === 'landscape' ? '33%' : '50%',\r\n        padding: _cardPadding(window === 'landscape'),\r\n        paddingRight: 0,\r\n        minWidth: cardMaxWidth,\r\n        maxWidth: cardMaxWidth,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Card\r\n        onPress={onPress}\r\n        style={[\r\n          commonStyles.card,\r\n          {\r\n            paddingTop: 8,\r\n            aspectRatio: 1 / Math.sqrt(2),\r\n            borderRadius: 6,\r\n            marginVertical: 10,\r\n            marginHorizontal: 8,\r\n            overflow: 'hidden',\r\n          },\r\n        ]}\r\n      >\r\n        <Card.Content style={{ padding: 0 }}>{mounted && item.descriptionComponent}</Card.Content>\r\n      </Card>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          marginTop: 10,\r\n          padding: 0,\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n          backgroundColor: 'transparent',\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 14 + fSize, overflow: 'hidden' }}>{item.title}</Text>\r\n        <Text style={{ fontSize: 12 + fSize, opacity: 0.4, textAlign: 'right' }}>\r\n          {updatedFormat(item.updated)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n});\r\n\r\nconst renderItem = ({ item, index }: { item: Item; index: number }) => (\r\n  <CardPage key={index} index={index} item={item} />\r\n);\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const RenderHtml = useMemo(() => React.lazy(() => import('react-native-render-html')), []);\r\n  const contents = useMemo(\r\n    () => [\r\n      ...toRecentContents(recentPages).map((v) => ({\r\n        ...v,\r\n        descriptionComponent: (\r\n          <RenderHtml\r\n            source={{ html: removeAllAttributesFromHTML(v.description || '').slice(0, 300) || '' }}\r\n            renderersProps={{\r\n              a: { onPress: () => navigation.push('NotePage', { title: v.title }) },\r\n            }}\r\n            tagsStyles={{ body: { color: commonStyles.text.color } }}\r\n            contentWidth={cardMaxWidth}\r\n          />\r\n        ),\r\n      })),\r\n      null,\r\n      null,\r\n    ],\r\n    [recentPages]\r\n  );\r\n  const maxWidth = (cardMaxWidth + 5) * (window === 'landscape' ? 5 : 3);\r\n  return isLoading ? (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>로딩 중...</Text>\r\n    </View>\r\n  ) : contents.length > 2 ? (\r\n    <ScrollView\r\n      key={window}\r\n      contentContainerStyle={{\r\n        alignSelf: 'center',\r\n        backgroundColor: 'transparent',\r\n        flexBasis: '100%',\r\n        maxWidth,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        paddingRight: _cardPadding(window === 'landscape'),\r\n        justifyContent: window === 'landscape' ? undefined : 'center',\r\n      }}\r\n    >\r\n      <Suspense>{contents.map((item, index) => renderItem({ item, index }))}</Suspense>\r\n    </ScrollView>\r\n  ) : (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>{lang('There are no recently modified notes.')}</Text>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.push('NoteViewer', { key: 'Usage' })}\r\n        style={commonStyles.button}\r\n      >\r\n        <Text style={commonStyles.buttonText}>{lang('Usage')}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n});\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>();\r\n  const _window = useResizeContext();\r\n  const title = route.params?.title;\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={recentPages\r\n          .filter((v) => title === undefined || title === v.title)\r\n          .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n          .map((v, i) => ({\r\n            ...v,\r\n            subtitles: [`최근 수정: ${updatedFormat(v.updated as string)}`],\r\n            id: v.id || i,\r\n          }))}\r\n        isLoading={isLoading}\r\n        onPress={(title, _, id) =>\r\n          (title === undefined ? navigation.push : navigation.navigate)('NotePage', {\r\n            title,\r\n            archiveId: id,\r\n          })\r\n        }\r\n        emptyMessage=\"There are no recently modified notes.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme, useLangContext, useModalsContext } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport {\r\n  RouteProp,\r\n  useFocusEffect,\r\n  useIsFocused,\r\n  useNavigation,\r\n  useRoute,\r\n} from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet } from 'react-native';\r\n\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport AlertModal from '../../modals/AlertModal';\r\nimport { previewUrl } from '../../services/notebook';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const isFocused = useIsFocused();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { lang } = useLangContext();\r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword: string) =>\r\n    pages\r\n      .filter((v) => v.title.startsWith(title + '/'))\r\n      .map((v) => ({\r\n        type: '_CHILDNOTE' as '_CHILDNOTE',\r\n        name: v.title.split(title + '/')[1],\r\n        title: v.title,\r\n      }))\r\n      .filter((v) => v.name.toLowerCase().startsWith(keyword.toLowerCase()));\r\n  const [content, setContent] = useState('');\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const { setModal } = useModalsContext();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error: any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        },\r\n      }\r\n    );\r\n  };\r\n  const handleBack = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (page?.description === content) {\r\n      handleBack();\r\n    } else {\r\n      setModal(AlertModal, { type: 'UNSAVED', callbacks: [handleSave, handleBack] });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && page?.description) {\r\n      setContent(page?.description);\r\n    }\r\n  }, [isLoading, page]);\r\n\r\n  useFocusEffect(() => {\r\n    const callback = (event: any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  });\r\n  return (\r\n    isFocused && (\r\n      <View style={commonStyles.container}>\r\n        <View style={commonStyles.header}>\r\n          <Text style={[commonStyles.title, { flex: 1 }]}>{title} - 편집</Text>\r\n        </View>\r\n        <Editor\r\n          active\r\n          value={content}\r\n          setValue={setContent}\r\n          theme={theme}\r\n          autoComplete={[\r\n            {\r\n              trigger: '[',\r\n              getMatchedChars: async (pattern) => {\r\n                const childrenPages = getChildrenPages(pattern);\r\n                return [\r\n                  { type: '_NOTELINK', name: pattern, title, paragraph: pattern },\r\n                  ...(childrenPages.length\r\n                    ? childrenPages\r\n                    : [{ type: '_CHILDNOTE', name: pattern, title: title + '/' + pattern }]),\r\n                  ...getFilteredPages(pages, pattern).filter((v) => v.type !== '_LINK'),\r\n                ].map((v) => {\r\n                  const name = v.type === '_NOTELINK' || v.type === '_CHILDNOTE' ? v.name : v.title;\r\n                  const description =\r\n                    v.type === '_NOTELINK'\r\n                      ? `(${titleFormat(v)})`\r\n                      : v.type === '_CHILDNOTE'\r\n                      ? `(${v.title})`\r\n                      : '';\r\n                  const url = encodeURI(\r\n                    v.type === '_NOTELINK' && v.paragraph\r\n                      ? `?title=${v.title}&paragraph=${v.paragraph}`\r\n                      : `?title=${v.title}`\r\n                  );\r\n                  return {\r\n                    text: name + description,\r\n                    value: `<a href=${url}>${name}</a>`,\r\n                  };\r\n                });\r\n              },\r\n            },\r\n            {\r\n              trigger: 'http',\r\n              getMatchedChars: async (pattern) => {\r\n                const query = 'http' + pattern;\r\n                const url = new URL(query);\r\n                if (url.protocol !== 'http:' && url.protocol !== 'https:') {\r\n                  return [];\r\n                }\r\n                const preview = await previewUrl({ query });\r\n                if (!preview.title) {\r\n                  return [];\r\n                }\r\n                return [\r\n                  {\r\n                    text: preview.title,\r\n                    value: `<a href=${preview.url}>${preview.title}</a>`,\r\n                  },\r\n                  // {\r\n                  //   text:preview.title + '...',\r\n                  //   value:`<a href=${preview.url}>${preview.title}</a><p>${preview.description}...</p>`,\r\n                  // }\r\n                ];\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('cancel')}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[commonStyles.button, styles.saveButton]} onPress={handleSave}>\r\n            <Text style={commonStyles.buttonText}>{lang('save')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme, useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\n\r\nimport HeaderSelectBar, { parseHtmlToParagraphs } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, paragraph } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path || '';\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToParagraphs(newPage?.description || '').filter(\r\n    (v) => title !== newTitle || path === v.path || !v.path.startsWith(path)\r\n  );\r\n  const [newPath, setNewPath] = useState('');\r\n  const [preview, setPreview] = useState<boolean>();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const moveMutation = useMovePage();\r\n  const { sourceDescription, targetDescription } = useMemo(() => {\r\n    const moveParagraph = paragraphs.filter((v) => v.path.startsWith(path));\r\n    const isSplit = newPage?.title === page?.title + '/' + moveParagraph[0]?.title;\r\n    const moveDescription = moveParagraph\r\n      .map((v, i) => (isSplit && i === 0 ? '' : v.header) + v.description)\r\n      .join('');\r\n    const sourceParagraph = paragraphs.filter((v) => !v.path.startsWith(path));\r\n    const sourceDescription = sourceParagraph.map((v) => v.header + v.description).join('');\r\n    const targetParagraph = page?.title === newPage?.title ? sourceParagraph : newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex((v) => v.path.startsWith(newPath));\r\n    const targetDescription =\r\n      newPage?.id === undefined\r\n        ? moveDescription\r\n        : [\r\n            ...targetParagraph.slice(0, targetIndex + 1).map((v) => v.header + v.description),\r\n            ...moveParagraph.map(\r\n              (v, i) =>\r\n                ((v.path === path && v.description === '') || (isSplit && i === 0)\r\n                  ? ''\r\n                  : v.header) + v.description\r\n            ),\r\n            ...targetParagraph.slice(targetIndex + 1).map((v) => v.header + v.description),\r\n          ].join('');\r\n    return { sourceDescription, targetDescription };\r\n  }, [paragraphs, newParagraph, path, newPath]);\r\n\r\n  const handleMove = () => {\r\n    if (newPage?.id === undefined) {\r\n      moveMutation.mutate(\r\n        {\r\n          oldTitle: title,\r\n          newTitle: newTitle.trim(),\r\n          description: path === '' ? undefined : targetDescription,\r\n        },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert(\r\n              lang('error'),\r\n              error.message || lang('An error occurred while moving note.')\r\n            );\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      if (page?.title === newPage.title && path === newPath) {\r\n        handleCancel();\r\n      }\r\n      mutation.mutate(\r\n        { title: newPage.title, description: targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title) {\r\n              mutation.mutate({ title, description: sourceDescription });\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert(\r\n              lang('error'),\r\n              error.message || lang('An error occurred while moving note.')\r\n            );\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !page) {\r\n      handleCancel();\r\n    }\r\n    page && setNewTitle(page.title + (paragraph ? `/${paragraph}` : ''));\r\n  }, [page, isLoading]);\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setNewPath(paragraph ? '' : path);\r\n    }\r\n  }, [paragraph, isLoading]);\r\n  const paragraphItem = paragraphs.find((v) => v.path === path);\r\n  const newParagraphItem = newParagraph.find((v) => v.path === newPath);\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined;\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: _window === 'landscape' ? 'row' : 'column', zIndex: 1 }}>\r\n          <View style={{ zIndex: 1 }}>\r\n            <Text style={commonStyles.text}>\r\n              {lang(paragraph ? 'Current note title and paragraph:' : 'Current note title:')}\r\n            </Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>\r\n              {titleFormat({ title, paragraph })}\r\n            </Text>\r\n            <Text style={commonStyles.text}>{lang('New note title and paragraph:')}</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false} />\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar\r\n                path={newPath}\r\n                onPress={(item) => setNewPath(item.path)}\r\n                root={newPage?.title || ''}\r\n                data={newParagraph}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={commonStyles.text}> {lang('Preview:')}</Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                commonStyles.button,\r\n                styles.moveButton,\r\n                {\r\n                  flex: 0,\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  paddingTop: 24,\r\n                  paddingBottom: 16,\r\n                },\r\n              ]}\r\n              onPress={() => setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title, paragraph: paragraphItem?.title })}\r\n              </Text>\r\n              <Text style={[commonStyles.text, { marginBottom: 8, fontSize: 14 }]}> ➜ </Text>\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title: newTitle, paragraph: newParagraphItem?.title })}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {preview !== undefined && (\r\n              <View style={{ display: preview ? 'flex' : 'none' }}>\r\n                <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  onLink={(url) => onLink(url, navigation)}\r\n                  autoResize\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('move')}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, moveDisabled ? styles.cancelButton : styles.moveButton]}\r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('cancel')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: {\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport HeaderSelectBar, { Paragraph } from '../../components/HeaderSelectBar';\r\nimport { onLink, titleFormat } from '../../components/SearchBar';\r\nimport { getSplitTitle } from '../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\nexport const NotePageHeader = ({\r\n  title,\r\n  onPress,\r\n  paragraph,\r\n  updated,\r\n}: {\r\n  title: string;\r\n  onPress: (title: string, hasChild: boolean) => void;\r\n  pressable?: boolean;\r\n  paragraph?: string;\r\n  updated?: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const splitTitle = getSplitTitle(title);\r\n  const pressableTextColor = theme === 'dark' ? '#FFFFFF88' : '#00000088';\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      <TouchableOpacity onPress={() => onPress(splitTitle[0], splitTitle.length === 2)}>\r\n        <Text\r\n          style={[\r\n            commonStyles.title,\r\n            styles.title,\r\n            paragraph || splitTitle.length === 2 ? { color: pressableTextColor } : {},\r\n          ]}\r\n          numberOfLines={1}\r\n        >\r\n          {splitTitle[0]}\r\n        </Text>\r\n      </TouchableOpacity>\r\n      {splitTitle.length === 2 && (\r\n        <>\r\n          <Text style={[commonStyles.title, styles.title, { flex: 0 }]}>/</Text>\r\n          <TouchableOpacity onPress={() => onPress(title, false)}>\r\n            <Text\r\n              style={[\r\n                commonStyles.title,\r\n                styles.title,\r\n                paragraph ? { color: pressableTextColor } : {},\r\n              ]}\r\n              numberOfLines={1}\r\n            >\r\n              {splitTitle[1]}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </>\r\n      )}\r\n      {!!paragraph && (\r\n        <Text style={[commonStyles.title, styles.title, { marginLeft: 5 }]} numberOfLines={1}>\r\n          {titleFormat({ title: '', paragraph })}\r\n        </Text>\r\n      )}\r\n      {updated && <Text style={[commonStyles.text, styles.updated]}>{'(' + updated + ')'}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const NotePageSection = ({\r\n  active,\r\n  description,\r\n}: {\r\n  active: boolean;\r\n  description?: string;\r\n}) => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <View style={active && description ? [commonStyles.card, styles.card] : styles.inactiveCard}>\r\n      <EditorViewer\r\n        active\r\n        value={description || ''}\r\n        theme={theme}\r\n        onLink={(url) => onLink(url, navigation)}\r\n        autoResize\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const NoteBottomSection = ({\r\n  toc,\r\n  fullParagraph,\r\n  paragraph,\r\n  paragraphs,\r\n  root,\r\n  onPress,\r\n}: {\r\n  toc: boolean;\r\n  fullParagraph: boolean;\r\n  paragraph?: string;\r\n  paragraphs: Paragraph[];\r\n  root: string;\r\n  onPress: (paragraph: Paragraph) => void;\r\n}) => {\r\n  const idx = paragraphs.findIndex((v) => v.title === paragraph);\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const iconColor = getIconColor(theme);\r\n  const moveParagraphs = [\r\n    {\r\n      icon: 'arrow-left',\r\n      moveParagraph: paragraphs.findLast(\r\n        (v, i) => i < idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: false,\r\n    },\r\n    {\r\n      icon: 'arrow-right',\r\n      moveParagraph: paragraphs.find(\r\n        (v, i) => i > idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: true,\r\n    },\r\n  ];\r\n  return toc ? (\r\n    <HeaderSelectBar data={paragraphs} path={paragraph || ''} root={root} onPress={onPress} />\r\n  ) : (\r\n    !!paragraph && (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'flex-end',\r\n        }}\r\n      >\r\n        {moveParagraphs.map(\r\n          ({ moveParagraph, icon, reverse }) =>\r\n            moveParagraph !== undefined && (\r\n              <TouchableOpacity\r\n                key={icon}\r\n                onPress={() => onPress(moveParagraph)}\r\n                style={[{ flexDirection: reverse ? 'row-reverse' : 'row', paddingVertical: 16 }]}\r\n              >\r\n                <Icon name={icon} size={16} color={iconColor} style={{ alignSelf: 'center' }} />\r\n                <Text\r\n                  ellipsizeMode=\"tail\"\r\n                  style={[commonStyles.text, { fontWeight: 'bold', marginHorizontal: 16 }]}\r\n                >\r\n                  {moveParagraph.level === 0 ? root : moveParagraph.title}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )\r\n        )}\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nexport const getIconColor = (theme: 'light' | 'dark') => (theme === 'dark' ? '#E4E4E4' : '#333333');\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  updated: { marginLeft: 5, fontStyle: 'italic' },\r\n  card: { padding: 0, marginBottom: 0 },\r\n  inactiveCard: { flex: 1, position: 'absolute' },\r\n});\r\n\r\nexport const pageStyles = StyleSheet.create({\r\n  container: { paddingRight: 12, scrollbarGutter: 'stable' },\r\n  contentContainer: { flexGrow: 1 },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, TextButton, useColorScheme, useLangContext, Text } from '@blacktokki/core';\r\nimport { ConfigSection, LanguageConfigSection, SkinConfigSection } from '@blacktokki/navigation';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { SearchList } from '../../../components/SearchBar';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { useCreateOrUpdatePage, useNotePages } from '../../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { Content, NavigationParamList } from '../../../types';\r\n\r\nconst exportMarkdowns = async (contents: Content[]) => {\r\n  const JSZip = (await import('jszip')).default;\r\n  const zip = new JSZip();\r\n  for (const content of contents.filter((v) => (v.description?.length || 0) > 0)) {\r\n    zip.file(content.title + '.md', content.description as string);\r\n  }\r\n  const blob = await zip.generateAsync({ type: 'blob' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = 'notebook.zip';\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  setTimeout(() => {\r\n    window.URL.revokeObjectURL(url);\r\n  }, 500);\r\n  a.remove();\r\n};\r\n\r\nconst importMarkdowns = async () => {\r\n  const files = await new Promise<File[]>((resolve, reject) => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = 'application/zip,.md,.markdown'; // 특정 타입만 허용하고 싶으면 'text/plain', 'image/*' 등으로 설정\r\n    input.style.display = 'none';\r\n    input.multiple = true;\r\n\r\n    input.onchange = () => {\r\n      if (input.files && input.files.length > 0) {\r\n        resolve(Array.from(input.files)); // File은 Blob의 하위 클래스\r\n      } else {\r\n        reject(new Error('파일이 선택되지 않았습니다.'));\r\n      }\r\n    };\r\n\r\n    input.click(); // 파일 선택창 열기\r\n  });\r\n  const contents: { title: string; description: string }[] = [];\r\n  const JSZip = (await import('jszip')).default;\r\n  for (const file of files) {\r\n    if (file.type === 'application/zip' || file.name.endsWith('.zip')) {\r\n      const zip = new JSZip();\r\n      const files = (await zip.loadAsync(file)).files;\r\n      for (const relativePath in files) {\r\n        const file = zip.files[relativePath];\r\n        if (!file.dir) {\r\n          contents.push({\r\n            title: relativePath.replace(/\\.[^/.]+$/, ''),\r\n            description: (await file.async('text')).toString(),\r\n          });\r\n        }\r\n      }\r\n    } else if (file.name.endsWith('.md') || file.name.endsWith('.markdown')) {\r\n      contents.push({ title: file.name.replace(/\\.[^/.]+$/, ''), description: await file.text() });\r\n    }\r\n  }\r\n  return contents;\r\n};\r\n\r\nconst OptionButton = (props: { title: string; onPress: () => void; active: boolean }) => {\r\n  const theme = useColorScheme();\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TextButton\r\n      title={props.title}\r\n      textStyle={{\r\n        fontSize: 16,\r\n        color,\r\n        textDecorationLine: props.active ? 'underline' : 'none',\r\n      }}\r\n      style={{ borderRadius: 20 }}\r\n      onPress={props.onPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  const { auth, dispatch } = useAuthContext();\r\n  const theme = useColorScheme();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { data: contents } = useNotePages();\r\n  const mutation = useCreateOrUpdatePage();\r\n  const [search, setSearch] = useState(false);\r\n  const { data: keywords = [] } = useKeywords();\r\n  const resetKeyword = useResetKeyowrd();\r\n  return (\r\n    <View>\r\n      <View style={commonStyles.card}>\r\n        <LanguageConfigSection />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <SkinConfigSection />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSection title={lang('* Search Settings')}>\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <OptionButton\r\n              title={lang('Search History')}\r\n              onPress={() => setSearch(!search)}\r\n              active={search}\r\n            />\r\n            {search && !!keywords.length && (\r\n              <OptionButton\r\n                title={lang('Clear')}\r\n                onPress={() => resetKeyword.mutate()}\r\n                active={false}\r\n              />\r\n            )}\r\n          </View>\r\n          {search && (\r\n            <View style={[commonStyles.card, { padding: 0 }]}>\r\n              <SearchList\r\n                filteredPages={keywords}\r\n                handlePagePress={(title, paragraph) =>\r\n                  navigation.push('NotePage', { title, paragraph })\r\n                }\r\n              />\r\n            </View>\r\n          )}\r\n        </ConfigSection>\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSection title={lang('* Archive')}>\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <OptionButton\r\n              title={lang('Export')}\r\n              onPress={() => contents && exportMarkdowns(contents)}\r\n              active={false}\r\n            />\r\n            <OptionButton\r\n              title={lang('Import')}\r\n              onPress={() => importMarkdowns().then((v) => v.forEach((v2) => mutation.mutate(v2)))}\r\n              active={false}\r\n            />\r\n            {!auth.isLocal && (\r\n              <OptionButton\r\n                title={lang('Changelog')}\r\n                onPress={() => navigation.push('Archive', {})}\r\n                active={false}\r\n              />\r\n            )}\r\n          </View>\r\n        </ConfigSection>\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSection\r\n          title={lang('* Usage')}\r\n          onPress={() => navigation.push('NoteViewer', { key: 'Usage' })}\r\n        />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <ConfigSection title={lang('* Account Settings')} />\r\n          {!auth.isLocal && (\r\n            <Text numberOfLines={1} ellipsizeMode=\"tail\" style={{ marginLeft: 4 }}>\r\n              - {auth.user?.username}\r\n            </Text>\r\n          )}\r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {!!auth.user && (\r\n            <OptionButton\r\n              title={lang('My Account')}\r\n              onPress={() => auth.isLocal && dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={!auth.isLocal}\r\n            />\r\n          )}\r\n          <OptionButton\r\n            title={lang('Local Account')}\r\n            onPress={() => !auth.isLocal && dispatch({ type: 'LOGIN_LOCAL' })}\r\n            active={!!auth.isLocal}\r\n          />\r\n          {auth.user ? (\r\n            <OptionButton\r\n              title={lang('Sign out')}\r\n              onPress={() => dispatch({ type: 'LOGOUT_REQUEST' })}\r\n              active={false}\r\n            />\r\n          ) : (\r\n            <OptionButton\r\n              title={lang('Sign in')}\r\n              onPress={() => dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, ContractFooter, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, TabViewOption } from '@blacktokki/navigation';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport React, { useMemo } from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport ConfigSection from './ConfigSection';\r\nimport ContentGroupSection, { ProblemButton, TimeLineButton } from './ContentGroupSection';\r\n\r\nconst NotesTabView = () => {\r\n  const theme = useColorScheme();\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <ScrollView style={{ flex: 1, backgroundColor: Colors[theme].background }}>\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Open Notes')}\r\n      </List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Event Notes')}\r\n      </List.Subheader>\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst RecentChangesTabView = () => {\r\n  return <RecentPagesSection />;\r\n};\r\n\r\nconst ConfigTabView = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <ScrollView\r\n      style={{ flex: 1 }}\r\n      contentContainerStyle={[\r\n        commonStyles.container,\r\n        { backgroundColor: Colors[theme].background },\r\n      ]}\r\n    >\r\n      <ConfigSection />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default function HomeScreen({ navigation, route }: StackScreenProps<any, 'Home'>) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { auth } = useAuthContext();\r\n  const title = auth.isLocal ? 'Blacktokki Notebook - Local' : 'Blacktokki Notebook';\r\n  const tabViews: TabViewOption[] = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Discovery',\r\n        component: NotesTabView,\r\n        icon: <List.Icon icon={'compass'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n      {\r\n        title: 'All Notes',\r\n        component: RecentChangesTabView,\r\n        icon: <List.Icon icon={'notebook'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n      {\r\n        title: 'Config',\r\n        component: ConfigTabView,\r\n        icon: <List.Icon icon={'dots-horizontal'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <HomeSection\r\n      tabViews={tabViews}\r\n      homeView={{ title, headerRight: () => <SearchBar /> }}\r\n      headerTitle={title}\r\n    >\r\n      <View style={[commonStyles.container, { width: '100%', justifyContent: 'space-between' }]}>\r\n        <ConfigSection />\r\n        <ContractFooter\r\n          buttons={[\r\n            {\r\n              icon: <AntDesign name=\"github\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'https://github.com/blacktokki/blacktokki-notebook',\r\n              isWeb: true,\r\n            },\r\n            {\r\n              icon: <AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'mailto:ydh051541@naver.com',\r\n              isWeb: false,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n    </HomeSection>\r\n  );\r\n}\r\n","import dayjs from 'dayjs';\r\nimport { useEffect, useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { Paragraph } from '../../../components/HeaderSelectBar';\r\nimport TimerTag, {\r\n  matchDateRange,\r\n  paragraphsToDatePatterns,\r\n  TimerData,\r\n  today,\r\n} from '../../../components/TimerTag';\r\nimport { useCreateOrUpdatePage } from '../../../hooks/useNoteStorage';\r\n\r\nconst replaceDay = (data: TimerData, newDate: string) => {\r\n  return (\r\n    data.original.substring(0, data.index) +\r\n    newDate +\r\n    data.original.substring(data.index + data.text.length)\r\n  );\r\n};\r\n\r\nconst addDay = (data: TimerData, value: number, unit: 'day' | 'month', moved: boolean) => {\r\n  const s = dayjs(data.dateStart)\r\n    .add(moved ? value : 0, unit)\r\n    .format(data.pattern);\r\n  const e = dayjs(data.dateEnd).add(value, unit).format(data.pattern);\r\n  return replaceDay(data, data.format ? data.format(s, e) : e);\r\n};\r\n\r\nconst buttons = (data: TimerData) => {\r\n  const format = data.format;\r\n  return [\r\n    ...(data.pattern.includes('DD')\r\n      ? [\r\n          { title: '+1d', onPress: () => data.replace(addDay(data, 1, 'day', true)) },\r\n          { title: '+2d', onPress: () => data.replace(addDay(data, 2, 'day', true)) },\r\n          { title: '+7d', onPress: () => data.replace(addDay(data, 7, 'day', true)) },\r\n        ]\r\n      : []),\r\n    { title: '+1M', onPress: () => data.replace(addDay(data, 1, 'month', true)) },\r\n    ...(format\r\n      ? [\r\n          {\r\n            title: '+Period',\r\n            onPress: () => {\r\n              const s = dayjs(data.dateStart);\r\n              const e = dayjs(data.dateEnd);\r\n              const diff = e.diff(s, 'day');\r\n              data.replace(\r\n                replaceDay(\r\n                  data,\r\n                  format(\r\n                    s.add(diff + 1, 'day').format(data.pattern),\r\n                    e.add(diff + 1, 'day').format(data.pattern)\r\n                  )\r\n                )\r\n              );\r\n            },\r\n          },\r\n          { title: 'End date +1d', onPress: () => data.replace(addDay(data, 1, 'day', false)) },\r\n          { title: 'End date +2d', onPress: () => data.replace(addDay(data, 2, 'day', false)) },\r\n          { title: 'End date +7d', onPress: () => data.replace(addDay(data, 7, 'day', false)) },\r\n          { title: 'End date +1M', onPress: () => data.replace(addDay(data, 1, 'month', false)) },\r\n        ]\r\n      : []),\r\n    { title: 'Delete', onPress: () => data.replace(replaceDay(data, '')) },\r\n  ];\r\n};\r\n\r\nexport default (props: { title: string; paragraphs: Paragraph[] }) => {\r\n  const dateNum = new Date(today()).getTime();\r\n  const createOrUpdatePage = useCreateOrUpdatePage();\r\n  const data = paragraphsToDatePatterns(props.title, props.paragraphs)\r\n    .flatMap((v) => matchDateRange(v.dateMatches, dateNum))\r\n    .flatMap((v) =>\r\n      v.matches.map((v2) => ({\r\n        ...v2,\r\n        original: v.original,\r\n        replace: (a: string) =>\r\n          createOrUpdatePage.mutate({\r\n            title: props.title,\r\n            description: props.paragraphs\r\n              .map(\r\n                (v3) =>\r\n                  (v3.path === v.path && v.isHeader\r\n                    ? v3.header.replace(v.original, a)\r\n                    : v3.header) +\r\n                  (v3.path === v.path && !v.isHeader\r\n                    ? v3.description.replace(v.original, a)\r\n                    : v3.description)\r\n              )\r\n              .join(''),\r\n          }),\r\n      }))\r\n    );\r\n\r\n  const [now, setNow] = useState(dayjs());\r\n  const [expand, setExpand] = useState<number>();\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setNow(dayjs());\r\n    }, 30000);\r\n    return () => clearTimeout(timeout);\r\n  }, [now]);\r\n  return (\r\n    <View style={{ height: 0 }}>\r\n      <View style={{ flexDirection: 'row', overflow: 'hidden' }}>\r\n        {data.map((v, i) => (\r\n          <TimerTag\r\n            key={i}\r\n            data={v}\r\n            buttons={buttons}\r\n            now={now}\r\n            isExpand={i === expand}\r\n            toggleExpand={() => setExpand(expand === i ? undefined : i)}\r\n          />\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useColorScheme, useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { parseHtmlToParagraphs } from '../../../components/HeaderSelectBar';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { useNotePage, useSnapshotPages } from '../../../hooks/useNoteStorage';\r\nimport { paragraphDescription } from '../../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport {\r\n  getIconColor,\r\n  NoteBottomSection,\r\n  NotePageHeader,\r\n  NotePageSection,\r\n  pageStyles,\r\n} from '../NoteItemSections';\r\nimport TimerTagSection from './TimerTagSection';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, paragraph, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullParagraph, toggleFullParagraph] = useState(false);\r\n\r\n  const { data: page, isFetching } = useNotePage(title);\r\n  const { data: archives } = useSnapshotPages();\r\n  const archive = archiveId\r\n    ? archives?.find((v) => v.id === archiveId && v.description !== page?.description)\r\n    : undefined;\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n\r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, paragraph });\r\n  };\r\n\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      archive\r\n        ? archive.description\r\n        : (paragraph\r\n            ? fullParagraph\r\n              ? paragraphDescription(paragraphs, paragraph, true)\r\n              : paragraphs.find((v) => v.title === paragraph)?.description\r\n            : page?.description\r\n          )?.trim()\r\n    );\r\n  }, [page, archive, paragraph, fullParagraph]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const iconColor = getIconColor(theme);\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, pageStyles.container]}\r\n          contentContainerStyle={pageStyles.contentContainer}\r\n        >\r\n          <View style={[commonStyles.header, { zIndex: 1 }]}>\r\n            <NotePageHeader\r\n              title={title}\r\n              paragraph={paragraph}\r\n              updated={archive?.updated}\r\n              onPress={(title, hasChild) =>\r\n                (hasChild ? navigation.push : navigation.navigate)('NotePage', { title })\r\n              }\r\n            />\r\n            <View style={pageStyles.actionButtons}>\r\n              <TimerTagSection title={page?.title || ''} paragraphs={paragraphs} />\r\n              {!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Archive', { title })}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon name=\"history\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullParagraph(!fullParagraph)}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon\r\n                      name={fullParagraph ? 'compress' : 'expand'}\r\n                      size={16}\r\n                      color={iconColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={pageStyles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={handleMovePage} style={pageStyles.actionButton}>\r\n                    <Icon name=\"exchange\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && !paragraph && (\r\n                <>\r\n                  <TouchableOpacity onPress={handleEdit} style={pageStyles.actionButton}>\r\n                    <Icon name=\"pencil\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <NotePageSection active={!toc} description={description} />\r\n            {isFetching || description === undefined ? (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n              </View>\r\n            ) : page?.description ? (\r\n              <NoteBottomSection\r\n                toc={toc}\r\n                fullParagraph={fullParagraph}\r\n                root={title}\r\n                paragraph={paragraph}\r\n                paragraphs={paragraphs}\r\n                onPress={(moveParagraph) =>\r\n                  navigation.navigate(\r\n                    'NotePage',\r\n                    moveParagraph.level === 0\r\n                      ? { title }\r\n                      : { title, paragraph: moveParagraph.title }\r\n                  )\r\n                }\r\n              />\r\n            ) : (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <Text style={commonStyles.text}>\r\n                  {lang('This note has no content yet. Press the ‘Edit’ button to add content.')}\r\n                </Text>\r\n                <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                  <Text style={commonStyles.buttonText}>{lang('edit')}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n","import { useColorScheme, useModalsContext, Text, useLangContext } from '@blacktokki/core';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nimport { today } from '../../../components/TimerTag';\r\nimport DatePickerModal, { MarkedDateRange } from '../../../modals/DatePikcerModal';\r\nimport { createCommonStyles } from '../../../styles';\r\n\r\ntype DateHeaderSectionProps = {\r\n  date: string;\r\n  setDate: (date: string) => void;\r\n  markedDateRange: MarkedDateRange[];\r\n  monthly?: boolean;\r\n};\r\n\r\nexport default function DateHeaderSection({\r\n  date,\r\n  setDate,\r\n  monthly,\r\n  markedDateRange,\r\n}: DateHeaderSectionProps) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { setModal } = useModalsContext();\r\n  const { lang } = useLangContext();\r\n  const moveDate = (value: number) =>\r\n    setDate(\r\n      dayjs(date)\r\n        .add(value, monthly ? 'month' : 'day')\r\n        .format('YYYY-MM-DD')\r\n    );\r\n\r\n  const themedStyles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: commonStyles.container.backgroundColor,\r\n      shadowColor: commonStyles.text.color,\r\n      borderColor: commonStyles.card.borderColor,\r\n    },\r\n    dateDisplay: {\r\n      color: commonStyles.text.color,\r\n    },\r\n    todayButton: {\r\n      backgroundColor: commonStyles.searchButton.backgroundColor,\r\n    },\r\n    navButton: {\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#efefef',\r\n    },\r\n  });\r\n  return (\r\n    <View style={[headerStyles.container, themedStyles.container]}>\r\n      <View style={commonStyles.flex} />\r\n      {/* Date Display */}\r\n      <View style={headerStyles.dateContainer}>\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            setModal(DatePickerModal, {\r\n              datetime: date,\r\n              markedDateStrings: markedDateRange,\r\n              callback: (datetime?: string) => setDate(datetime || date),\r\n            })\r\n          }\r\n        >\r\n          <Text style={[headerStyles.dateDisplay, themedStyles.dateDisplay]}>{date}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/* Navigation Bar */}\r\n      <View style={headerStyles.navContainer}>\r\n        {/* Previous Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(-1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-left\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n\r\n        {/* Today Button */}\r\n        <TouchableOpacity\r\n          onPress={() => setDate(today())}\r\n          style={[headerStyles.todayButton, themedStyles.todayButton]}\r\n          accessibilityLabel=\"Go to today\"\r\n        >\r\n          <Text style={headerStyles.todayButtonText}>{lang('Today')}</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Next Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-right\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst BUTTON_SIZE = 30;\r\n\r\n// Base styles that don't change based on theme\r\nconst headerStyles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n    borderWidth: 1,\r\n  },\r\n  dateContainer: {\r\n    flex: 1,\r\n    minWidth: 130,\r\n    height: BUTTON_SIZE,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  dateDisplay: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  navContainer: {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  navButton: {\r\n    width: BUTTON_SIZE,\r\n    height: BUTTON_SIZE,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginHorizontal: 8,\r\n    borderRadius: 8,\r\n    padding: 8,\r\n  },\r\n  todayButton: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 6,\r\n  },\r\n  todayButtonText: {\r\n    fontSize: 14,\r\n    color: '#ffffff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { today } from '../../../components/TimerTag';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport { NoteListSection } from '../NoteListSection';\r\nimport DateHeaderSection from './DateHeaderSection';\r\n\r\nexport const TimeLineScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const _window = useResizeContext();\r\n  const [date, setDate] = useState(today());\r\n  const { data, preData, isLoading } = useTimeLine(date);\r\n  const markedDateRange = preData.flatMap((v) => v.dateMatches.flatMap((v2) => v2.matches));\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <View style={[{ ...commonStyles.container, flex: undefined, paddingBottom: 0 }]}>\r\n        <DateHeaderSection date={date} setDate={setDate} markedDateRange={markedDateRange} />\r\n      </View>\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title, paragraph) => navigation.push('NotePage', { title, paragraph })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"There are no notes.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { Auth } from '@blacktokki/account';\r\n\r\nimport { ArchiveScreen } from './main/ArchiveScreen';\r\nimport { EditPageScreen } from './main/EditPageScreen';\r\nimport { MovePageScreen } from './main/MovePageScreen';\r\nimport { NoteViewerScreen } from './main/NoteViewerScreen';\r\nimport { ProblemsScreen } from './main/ProblemScreen';\r\nimport { RecentPagesScreen } from './main/RecentPageScreen';\r\nimport HomeScreen from './main/home/HomeScreen';\r\nimport { NotePageScreen } from './main/notepage/NotePageScreen';\r\nimport { TimeLineScreen } from './main/timeline/TimeLineScreen';\r\n\r\nconst title = (auth: Auth) =>\r\n  !auth.isLocal ? 'Blacktokki Notebook' : 'Blacktokki Notebook - Local';\r\nexport const main = {\r\n  Home: {\r\n    title,\r\n    component: HomeScreen,\r\n    path: 'home',\r\n  },\r\n  NotePage: {\r\n    title,\r\n    component: NotePageScreen,\r\n    path: 'page',\r\n  },\r\n  EditPage: {\r\n    title,\r\n    component: EditPageScreen,\r\n    path: 'edit',\r\n  },\r\n  MovePage: {\r\n    title,\r\n    component: MovePageScreen,\r\n    path: 'move',\r\n  },\r\n  RecentPages: {\r\n    title,\r\n    component: RecentPagesScreen,\r\n    path: 'recent',\r\n  },\r\n  Problem: {\r\n    title,\r\n    component: ProblemsScreen,\r\n    path: 'problem',\r\n  },\r\n  Archive: {\r\n    title,\r\n    component: ArchiveScreen,\r\n    path: 'archive',\r\n  },\r\n  TimeLine: {\r\n    title,\r\n    component: TimeLineScreen,\r\n    path: 'timeline',\r\n  },\r\n  NoteViewer: {\r\n    title,\r\n    component: NoteViewerScreen,\r\n    path: 'viewer',\r\n  },\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window = useResizeContext();\r\n  return (\r\n    <>\r\n      {window === 'portrait' && <SearchBar />}\r\n      <RecentPagesSection />\r\n    </>\r\n  );\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport useProblem from '../../hooks/useProblem';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\n\r\nexport const ProblemsScreen: React.FC = () => {\r\n  const _window = useResizeContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data, isLoading } = useProblem(1);\r\n\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title) => navigation.push('EditPage', { title })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"There are no notes needed to be written.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, ScrollView, TouchableOpacity } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { parseHtmlToParagraphs } from '../../components/HeaderSelectBar';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useNoteViewers } from '../../hooks/useNoteStorage';\r\nimport { paragraphDescription } from '../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\nimport {\r\n  getIconColor,\r\n  NoteBottomSection,\r\n  NotePageHeader,\r\n  NotePageSection,\r\n  pageStyles,\r\n} from './NoteItemSections';\r\n\r\ntype NoteViewerScreenRouteProp = RouteProp<NavigationParamList, 'NoteViewer'>;\r\n\r\nexport const NoteViewerScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NoteViewerScreenRouteProp>();\r\n  const { key, paragraph } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullParagraph, toggleFullParagraph] = useState(false);\r\n  const { data: viewers } = useNoteViewers();\r\n\r\n  const page = viewers?.find((v) => v.key === key);\r\n\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      paragraph\r\n        ? fullParagraph\r\n          ? paragraphDescription(paragraphs, paragraph, true)\r\n          : paragraphs.find((v) => v.title === paragraph)?.description\r\n        : page?.description?.trim()\r\n    );\r\n  }, [page, paragraph, fullParagraph]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const iconColor = getIconColor(theme);\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, pageStyles.container]}\r\n          contentContainerStyle={pageStyles.contentContainer}\r\n        >\r\n          <View style={[commonStyles.header, { zIndex: 1 }]}>\r\n            <NotePageHeader\r\n              title={key}\r\n              paragraph={paragraph}\r\n              pressable={false}\r\n              onPress={(key, hasChild) =>\r\n                (hasChild ? navigation.push : navigation.navigate)('NoteViewer', { key })\r\n              }\r\n            />\r\n            <View style={pageStyles.actionButtons}>\r\n              {!!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullParagraph(!fullParagraph)}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon\r\n                      name={fullParagraph ? 'compress' : 'expand'}\r\n                      size={16}\r\n                      color={iconColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={pageStyles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <NotePageSection active={!toc} description={description} />\r\n            {\r\n              <NoteBottomSection\r\n                toc={toc}\r\n                fullParagraph={fullParagraph}\r\n                root={key}\r\n                paragraph={paragraph}\r\n                paragraphs={paragraphs}\r\n                onPress={(paragraph) =>\r\n                  navigation.navigate(\r\n                    'NoteViewer',\r\n                    paragraph.level === 0 ? { key } : { key, paragraph: paragraph.title }\r\n                  )\r\n                }\r\n              />\r\n            }\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n","import { useLangContext, View } from '@blacktokki/core';\r\nimport { push } from '@blacktokki/navigation';\r\nimport React from 'react';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\n\r\nimport ContentGroupSection, {\r\n  ProblemButton,\r\n  TimeLineButton,\r\n} from '../screens/main/home/ContentGroupSection';\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <List.Item\r\n        left={(_props) => <List.Icon {..._props} icon={'home'} />}\r\n        title={lang('Home')}\r\n        onPress={() => push('Home')}\r\n      />\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n      <ScrollView style={Platform.OS === 'web' ? ({ scrollbarWidth: 'thin' } as any) : {}}>\r\n        <List.Subheader style={{}} selectable={false}>\r\n          {lang('Open Notes')}\r\n        </List.Subheader>\r\n        <ContentGroupSection type={'LAST'} />\r\n        <ContentGroupSection type={'PAGE'} />\r\n        <List.Subheader style={{ flex: 1 }} selectable={false}>\r\n          {lang('Recent Changes')}\r\n        </List.Subheader>\r\n        {/* 최근 변경 */}\r\n        <ContentGroupSection type={'NOTE'} noteCount={10} />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n","import { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { login, Navigation, NavigationConfig } from '@blacktokki/navigation';\r\nimport React, { Suspense } from 'react';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport modals from '../modals';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\n\r\nconst HeaderRight = () => {\r\n  const windowType = useResizeContext();\r\n  return windowType === 'landscape' ? <SearchBar /> : undefined;\r\n};\r\n\r\nconst getConfig = async () => {\r\n  const Linking = await import('expo-linking');\r\n  return {\r\n    main,\r\n    login,\r\n    prefixes: [Linking.makeUrl('/')],\r\n    rootPath: 'blacktokki-notebook',\r\n    documentTitle: {\r\n      formatter: () => {\r\n        return 'blacktokki-notebook';\r\n      },\r\n    },\r\n    rootScreen: {\r\n      main: 'Home',\r\n      login: 'LoginScreen',\r\n    },\r\n    headerLeftIcon: <List.Icon icon=\"backburger\" style={{ left: -18, top: -14 }} />,\r\n    headerRight: <HeaderRight />,\r\n    modals,\r\n    drawer: <Drawer />,\r\n  } as NavigationConfig;\r\n};\r\n\r\nexport default () => {\r\n  const scheme = useColorScheme();\r\n  const preTheme = scheme === 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n  const theme: typeof preTheme = {\r\n    ...preTheme,\r\n    colors: { ...preTheme.colors, primary: Colors[scheme].text },\r\n  };\r\n  const NavigationLazy = React.lazy(() =>\r\n    getConfig().then((config) => ({ default: () => <Navigation config={config} /> }))\r\n  );\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <Suspense fallback={<></>}>\r\n        <NavigationLazy />\r\n      </Suspense>\r\n    </PaperProvider>\r\n  );\r\n};\r\n"],"names":["KEYWORDS_KEY","getKeywords","_ref","_asyncToGenerator","subkey","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","error","_x","apply","arguments","saveKeywords","_ref2","keywords","stringify","setItem","_x2","_x3","useKeywords","_auth$user","auth","useAuthContext","isLocal","user","id","useQuery","queryKey","queryFn","_queryFn","axios","axiosCreate","getContentList","get","data","parentId","types","parentIdParam","undefined","typeParam","join","value","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","previewUrl","_ref6","delete","_ref7","preview","query","_x7","openDB","_openDB","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","lastPage","RECENT_PAGES_KEY","getContents","isOnline","type","transaction","objectStore","getAll","saveNoteContents","contents","content","find","v","savedId","then","snapshot","_objectSpread","tx","store","contentItem","put","oncomplete","getRecentPages","saveRecentPages","titles","_x6","useNotePages","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","page","c","invalidateQueries","description","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","useCreateOrUpdatePage","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","skip","Date","toISOString","map","i","newPage","input","userId","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x8","useDeleteRecentPage","_mutationFn4","updatedRecentPages","filter","_title","_x11","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToParagraphs","html","doc","DOMParser","parseFromString","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","push","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","substring","textContent","trim","length","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","paragraph","onLink","navigation","noteLink","window","getLinks","pages","sameTitle","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","normalize","startsWith","RandomButton","useNavigation","randomPages","Math","floor","random","paragraphs","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","flexShrink","numberOfLines","ellipsizeMode","paddingLeft","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","lang","useLangContext","inputRef","useRef","_useKeywords$data","_auth$user2","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","AlertModal","callbacks","setModal","useModalsContext","back","messages","UNSAVED","message","buttons","margin","CommonButton","marginRight","getMarkedDays","dateString","markedDateStrings","date","dayjs","startDate","clone","startOf","add","endDate","endOf","markedDate","dateStart","dateEnd","markedDays","isAfter","isBefore","format","reduce","p","marked","dotColor","selected","DatePickerModal","datetime","callback","_dayjs","m","restMinute","defaultDayjs","_useLangContext","locale","markedDates","setMarkedDates","onSave","minHeight","textAlign","lightColor","darkColor","Suspense","fallback","_Fragment","Calendar","setDate","disableAllTouchEventsForDisabledDays","onMonthChange","NoteListSection","isLoading","emptyMessage","subtitles","subtitle","index","selectable","extractDates","currentYear","getFullYear","patterns","regex","match","pattern","s","split","year","month","lastDay","getDate","String","padStart","mm","dd","mm2","dd2","results","usedRanges","RegExp","source","_loop","start","end","lastIndex","some","exec","cleanHtml","cleanAnchors","mergeTds","forEach","code","tr","tdList","mergedText","td","_td$textContent","newTd","document","createElement","innerHTML","appendChild","paragraphsToDatePatterns","dateMatches","toRaw","isHeader","original","matches","matchDateRange","dateNum","dateMatch","getTime","today","ratio","diff","now","toggleExpand","overflow","isExpand","getReadabilityLevel","calculateFleschKincaid","sentenceCount","wordList","wordCount","sum","word","syllables","test","max","countSyllables","score","koRatio","getKoreanRatio","enGrade","enLevel","koLevel","sentences","avgWordsPerSentence","classifyKoreanReadability","findLists","listMatch","listRegex","liRegex","_listMatch","_listMatch2","items","liMatch","itemContent","getSplitTitle","splitTitle","paragraphDescription","rootTitle","_paragraphs$find","replaceAll","problemCache","getDataLinear","existData","record","lists","findLast","duplicates","lastIndexOf","readability","toFixed","parentTitle","raw","matrix","getData","records","existTarget","link","_target","sourceName","getDataMatrix","findIndex","delay","setData","timeoutRef","clearTimeout","setTimeout","notes","preData","TimeLineButton","useTimeLine","List","_props","icon","alignSelf","Badge","navigate","ProblemButton","useProblem","toRecentContents","sort","b","_useNotePages2","_queryFn4","useRecentPages","tabRef","addRecentPage","_mutationFn3","direct","recentPages","_x10","useAddRecentPage","deleteRecentPage","lastPageExists","useResizeContext","itemPadding","noteOnPress","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","noteCount","_pages$data2","TouchableRipple","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","React","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","Content","descriptionComponent","opacity","RecentPagesSection","RenderHtml","renderersProps","tagsStyles","contentWidth","ScrollView","contentContainerStyle","flexWrap","key","cancelButton","saveButton","marginLeft","columns","moveButton","NotePageHeader","pressableTextColor","NotePageSection","active","inactiveCard","EditorViewer","autoResize","NoteBottomSection","toc","fullParagraph","idx","iconColor","getIconColor","moveParagraphs","moveParagraph","_paragraphs$idx","reverse","_paragraphs$idx2","pageStyles","scrollbarGutter","contentContainer","flexGrow","actionButtons","actionButton","exportMarkdowns","zip","JSZip","default","_v$description","file","blob","generateAsync","createObjectURL","download","click","revokeObjectURL","remove","importMarkdowns","files","accept","display","multiple","onchange","Error","endsWith","loadAsync","relativePath","dir","replace","async","toString","OptionButton","Colors","TextButton","textStyle","textDecorationLine","_useAuthContext","dispatch","mutation","setSearch","resetKeyword","_auth$user3","_mutationFn2","_onSuccess2","useResetKeyowrd","LanguageConfigSection","SkinConfigSection","ConfigSection","username","NotesTabView","background","ContentGroupSection","RecentChangesTabView","ConfigTabView","replaceDay","newDate","addDay","unit","moved","createOrUpdatePage","v3","setNow","expand","setExpand","timeout","TimerTag","DateHeaderSection","monthly","markedDateRange","moveDate","themedStyles","dateDisplay","todayButton","navButton","headerStyles","dateContainer","navContainer","accessibilityLabel","todayButtonText","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","AntDesign","isWeb","NotePage","isFocused","useIsFocused","useRoute","_route$params","archiveId","_window","toggleToc","toggleFullParagraph","_useNotePage","archives","archive","handleEdit","_useState5","_useState6","setDescription","hasChild","TimerTagSection","ActivityIndicator","EditPage","setContent","handleSave","onError","Alert","alert","handleBack","canGoBack","goBack","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","_getMatchedChars","childrenPages","encodeURI","_getMatchedChars2","protocol","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","setPreview","moveMutation","_useNotePages5$data","oldTitle","_x9","useMovePage","_useMemo","_moveParagraph$","isSplit","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","RecentPages","Problem","_useProblem","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","TimeLine","_useTimeLine","NoteViewer","_useNoteViewers","_queryFn6","all","_ref8","fetch","process","toHtml","_x12","useNoteViewers","viewers","_page$description","pressable","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider"],"sourceRoot":""}