{"version":3,"file":"static/js/183.52c92671.chunk.js","mappings":"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","sources":["src/components/LinkPreview.tsx","src/services/feedynote.ts","src/hooks/useContentList.ts","src/components/TimeLine.tsx","src/components/ContentList.tsx","src/hooks/useInfiniteContentList.ts","src/components/DynamicTextInput.tsx","src/components/DndSortableList.tsx","src/screens/main/NoteSection.tsx","src/components/ContentGroupList.tsx","src/screens/main/HomeScreen.tsx","src/screens/index.ts","src/screens/main/NoteScreen.tsx","src/hooks/useContent.ts","src/screens/main/ContentListScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking, TouchableOpacity } from \"react-native\"\r\nimport { View, Text } from \"@blacktokki/core\";\r\nimport { Link } from \"../types\"\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nexport const toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <View style={{borderRadius:6, marginVertical:10, marginHorizontal:8}}>\r\n            <TouchableOpacity\r\n                onPress={()=>Linking.openURL(link.url)}\r\n                onLongPress={()=>{}}\r\n                style={{width:'100%', flexDirection:'row'}}\r\n            >\r\n                {link.imageUrl?<Image source={{uri:link.imageUrl}} resizeMode=\"cover\" style={{ borderRadius:6, width:'100%', maxWidth:isMobile?120:160, maxHeight:isMobile?120:160, borderWidth:1}}/>:undefined}\r\n                <View style={{flex:1, marginHorizontal:20, overflow:'hidden', minHeight:isMobile?90:120}}>\r\n                    <Text style={{fontSize:18}} numberOfLines={1}>{link.title}</Text>\r\n                    <Text style={{fontSize:14}} numberOfLines={7} ellipsizeMode='head'>{link.description}</Text>\r\n                    <Text style={{fontSize:12}} numberOfLines={1}>{link.url}</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n}","import { toUrls } from '../components/LinkPreview';\r\nimport { Content, PostContent, CellType, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"feedynote\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const getInfiniteContentList = async (parentId:number, type:'NOTEV2', page:number)=>{\r\n    //const parentIdParam = parentId ? `&grandParentId=${parentId}`: `&parentId=${parentId}`\r\n    const parentIdParam = parentId < 1 ? ``: `&parentId=${parentId}`\r\n    const size = type ===\"NOTEV2\"?\"256\":\"20\"\r\n    return { current: (await axios.get(`/api/v1/content?self=true&sort=id,DESC&size=${size}&page=${page}${parentIdParam}`) ).data.value as Content[] }\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const postCells = async (contents:{created:(PostContent & {type:CellType})[], deleteIds:number[]}) => {\r\n    await axios.post(`/api/v1/content/bulk`, contents)\r\n}\r\n\r\nexport const executeCells = async (cells:({type: CellType |'OUTPUT'} & ({query:string} | {id:number}))[]) => { // TBA\r\n    return (await axios.post(`/api/v1/cell/`, cells)).data\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getContentList, patchContent, postCells, postContent } from \"../services/feedynote\";\r\nimport { Content } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useContentList(parentId?:number, type?: Content['type']){\r\n  const { data } = useQuery([\"ContentList\", parentId, type] , async()=> (parentId!==undefined || type!==undefined)?await getContentList(parentId, type):undefined)\r\n  return data\r\n}\r\n\r\n\r\nexport function useContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postContent, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const update = useMutation(patchContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n      queryClient.invalidateQueries(\"Content\")\r\n    }\r\n  })\r\n  const _delete = useMutation(deleteContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const updateCells = useMutation(postCells, {\r\n    onSuccess: () =>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n  }, [])\r\n\r\n  return {create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutateAsync, updateCells:updateCells.mutateAsync}\r\n}","import React from \"react\";\r\nimport { View, FlatList, TouchableOpacity, StyleSheet, I18nManager, Platform, Image } from \"react-native\";\r\nimport { Text } from \"@blacktokki/core\"\r\nimport { List } from \"react-native-paper\";\r\n\r\nconst EventTime = ({ time: { content, style: timeStyle } = {}, style }:any) => {\r\n  return (\r\n    <View style={[styles.timeContainer, style]}>\r\n      <Text style={[styles.time, timeStyle]}>{content}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst EventIcon = ({ icon: OriginalIcon = {}, iconStyle, lineStyle }:any) => {\r\n  // Determines whether we are trying to render a custom icon component, or use the default\r\n  const iconIsComponent = typeof OriginalIcon === \"function\";\r\n  let iconToBeRendered = iconIsComponent ? (\r\n    <OriginalIcon styles={[styles.icon, iconStyle]} />\r\n  ) : (<List.Icon\r\n      icon={OriginalIcon.content}\r\n      style={[\r\n        styles.icon,\r\n        OriginalIcon.style ? OriginalIcon.style : null\r\n      ]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <View style={[styles.iconContainer, iconStyle]}>\r\n      {iconToBeRendered}\r\n      <View style={[styles.verticalLine, lineStyle]} />\r\n    </View>\r\n  );\r\n};\r\n\r\n/*\r\nEvent component, is the component in which you can render whatever the event is about,\r\ne.g. Title, description, or even render a custom template by sending a render-prop with whatsoever\r\ncontent you need.\r\n*/\r\nconst Event = ({ children, style }:any) => {\r\n  return <View style={[styles.eventContainer, style]}>{children}</View>;\r\n};\r\n\r\n/*\r\nRow component, is the component that combines all the sub-components (EventIcon, Event, EventTime) and\r\ngets each 'event' as an argument of type object\r\n*/\r\nexport const TimeLineRow = ({\r\n  event = {},\r\n  eventStyle,\r\n  timeContainerStyle,\r\n  iconContainerStyle,\r\n  lineStyle,\r\n  contentContainerStyle\r\n}: any) => {\r\n  const {\r\n    title: OriginalTitle = {},\r\n    description: OriginalDescription = {},\r\n    imageUrl,\r\n    time,\r\n    icon,\r\n    pressAction\r\n  } = event;\r\n\r\n  // Determines whether or not the Row is clickable, and acts accordingly\r\n  const RowComp:React.ComponentType<any> = pressAction ? TouchableOpacity : View\r\n\r\n  // Determines whether the title is just a text and its style, or a render-prop function, and acts accrodingly\r\n  const titleIsComponent = OriginalTitle && typeof OriginalTitle === \"function\";\r\n  const title = titleIsComponent ? (\r\n    <OriginalTitle styles={styles.title} />\r\n  ) : (\r\n      <Text style={[styles.title, {fontSize:14}]}>\r\n        {OriginalTitle}\r\n      </Text>\r\n  );\r\n\r\n  // Determines whether the description is just a text and its style, or a render-prop function, and acts accrodingly\r\n  const descriptionIsComponent =\r\n    OriginalDescription && typeof OriginalDescription === \"function\";\r\n  const description = descriptionIsComponent ? (\r\n    <OriginalDescription styles={styles.description} />\r\n  ) : (\r\n    <View style={{flexDirection:'row'}}>\r\n      {imageUrl?<Image source={{uri:imageUrl}} resizeMode=\"cover\" style={{ width:'33%', maxWidth:150, minHeight:120, borderWidth:1}}/>:undefined}\r\n      <Text style={[styles.description, {fontSize:12}]}>\r\n        {OriginalDescription}\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <RowComp style={[styles.row, eventStyle]} onPress={pressAction}>\r\n      <EventTime time={time} style={timeContainerStyle} />\r\n      <EventIcon\r\n        icon={icon}\r\n        iconStyle={iconContainerStyle}\r\n        lineStyle={lineStyle}\r\n      />\r\n      <Event style={contentContainerStyle}>\r\n        {title}\r\n        {description}\r\n      </Event>\r\n    </RowComp>\r\n  );\r\n};\r\n\r\nexport default ({\r\n  data = [], // The actual event's array, array of objects, each object represents a single event\r\n  eventStyle = {}, // Each event's whole row's style\r\n  timeContainerStyle = {}, // The style object of the container that holds the time\r\n  iconContainerStyle = {}, // The style object of the container that holds the icon\r\n  lineStyle = {}, // The vertical line's style object\r\n  contentContainerStyle = {}, // The style object of the container that holds the content i.e. title and description\r\n  onEndReachedThreshold,\r\n  onEndReached,\r\n  TimelineFooter,\r\n  TimelineHeader,\r\n  ...rest\r\n}: any) => {\r\n  const events = (\r\n    <FlatList\r\n      data={data}\r\n      renderItem={({ item }) => (\r\n        <TimeLineRow\r\n          event={item}\r\n          eventStyle={eventStyle}\r\n          timeContainerStyle={timeContainerStyle}\r\n          iconContainerStyle={iconContainerStyle}\r\n          lineStyle={lineStyle}\r\n          contentContainerStyle={contentContainerStyle}\r\n        />\r\n      )}\r\n      keyExtractor={(_, ndx) => ndx.toString()}\r\n      onEndReached={onEndReached}\r\n      onEndReachedThreshold={onEndReachedThreshold || 0}\r\n      ListFooterComponent={TimelineFooter}\r\n      ListHeaderComponent={TimelineHeader}\r\n      {...rest}\r\n    />\r\n  );\r\n\r\n  return <View style={styles.container}>{events}</View>;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      width: \"100%\"\r\n    },\r\n    row: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"flex-start\",\r\n      marginVertical: 5\r\n    },\r\n    timeContainer: {\r\n      flexBasis: \"15%\",\r\n      paddingTop:10,\r\n    },\r\n    time: {\r\n      fontSize: 12,\r\n      color: \"#888\",\r\n      fontStyle: \"italic\",\r\n      textAlign: 'center'\r\n    },\r\n    iconContainer: {\r\n      flexBasis: \"5%\",\r\n      alignItems: \"center\",\r\n      alignSelf: \"stretch\",\r\n      marginHorizontal: \"5%\"\r\n    },\r\n    verticalLine: {\r\n      flex: 1,\r\n      width: 1,\r\n      backgroundColor: \"#ccc\"\r\n    },\r\n    eventContainer: {\r\n      flexBasis: \"65%\",\r\n      flexGrow:1,\r\n      alignItems: \"flex-start\",\r\n      padding: 16,\r\n      borderRadius: 15,\r\n      shadowOffset: { width: I18nManager.isRTL ? 8 : -8, height: 0 },\r\n      shadowColor: \"#888\",\r\n      shadowOpacity: 0.2,\r\n      marginBottom: 10,\r\n      borderTopLeftRadius: 0,\r\n    },\r\n    icon: {\r\n      textAlign: \"center\",\r\n      width: 20,\r\n      height: 20,\r\n      backgroundColor: \"#6F98FA\",\r\n      paddingTop: Platform.OS === \"ios\" ? 2.5 : 5,\r\n      borderRadius: 10,\r\n      fontSize: 9,\r\n      overflow: \"hidden\",\r\n      borderWidth: 3,\r\n      borderColor: '#e0e9ff'\r\n    },\r\n    title: {\r\n      fontSize: 12,\r\n      fontWeight: \"bold\",\r\n      textAlign: \"left\",\r\n      marginBottom: 5,\r\n      lineHeight: 20\r\n    },\r\n    description: {\r\n      textAlign: \"left\",\r\n      fontSize: 11,\r\n      lineHeight: 18,\r\n      paddingBottom: 10,\r\n    }\r\n  });","import * as React from 'react';\r\nimport { Content } from '../types';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Text, useResizeContext } from '@blacktokki/core';\r\nimport { FlatList, ScrollView, TouchableOpacity, View } from 'react-native';\r\nimport { TimeLineRow } from './TimeLine';\r\nimport { Card } from 'react-native-paper';\r\nimport useInfiniteContentList from '../hooks/useInfiniteContentList';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nconst TimelinePage = React.memo(({data}: {data:Content[]})=>{\r\n  return data.map(v=>({...v, time:{content:updatedFormat(v.updated)}, pressAction: ()=>navigate('NoteScreen', {id:v.id})})).map((item, index)=>{\r\n    return <TimeLineRow \r\n      key={index}\r\n      event={item}\r\n    /> \r\n  })\r\n})\r\n\r\nconst _cardPadding = (isLandscape:boolean) => isLandscape?20:4\r\nconst _cardMaxWidth = (isLandscape:boolean) => isLandscape?230:190\r\n\r\n\r\nconst CardPage = React.memo(({data}: {data:Content[]})=>{\r\n  const window  = useResizeContext()\r\n  const cardMaxWidth = _cardMaxWidth(window===\"landscape\")\r\n  const fSize = window==='landscape'?2:0\r\n\r\n  return [...data.sort((a, b)=>a.updated < b.updated?1:-1), null, null]?.map((item, index)=>{\r\n    if (item === null){\r\n      return <View key={index} style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n    }\r\n    const content = item.description\r\n    const onPress = ()=>navigate('NoteScreen', {id:item.id})\r\n    return <TouchableOpacity key={index} style={{flexBasis:window==='landscape'?'33%':'50%', padding:_cardPadding(window==='landscape'), paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n        <Card onPress={onPress} style={{aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}}>\r\n          <Card.Content>\r\n          <Text style={{fontSize:12+fSize, opacity: 0.4}}>{content}</Text>\r\n          </Card.Content>\r\n        </Card>\r\n        <View style={{flexDirection:'row', marginTop:10, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n          <Text style={{fontSize:14+fSize}}>{item.title}</Text>\r\n          <Text style={{fontSize:12+fSize, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n            \r\n        </View>\r\n    </TouchableOpacity>\r\n  })\r\n})\r\n\r\nconst ContentList = ({ parentContent } : { parentContent:Content }) => {\r\n  const {data, fetchNextPage} = useInfiniteContentList(parentContent.id, parentContent.type as \"NOTEV2\" )\r\n  const window  = useResizeContext()\r\n  return data && (\r\n    parentContent.type!=='NOTEV2'?\r\n    <FlatList\r\n      data={data.pages}\r\n      renderItem={({item})=><TimelinePage data={item.current}/>}\r\n      style={{height:0}}\r\n      onEndReached={()=>{\r\n        fetchNextPage()\r\n      }}\r\n    />:\r\n    <ScrollView \r\n      style={{ height:0}} \r\n      contentContainerStyle={{flexDirection:'row', justifyContent:'center'}}\r\n    >\r\n      <View style={{backgroundColor:'transparent', flexBasis:'100%', maxWidth:(_cardMaxWidth(window==='landscape') + 5)  * (window==='landscape'?5:3), flexWrap:'wrap', flexDirection:'row', paddingRight:_cardPadding(window==='landscape'), justifyContent:window==='landscape'?undefined:'center'}}>\r\n        {data.pages.map((item, index)=><CardPage key={index} data={item.current}/>)}\r\n      </View>\r\n      {/* {window === 'landscape' && <View style={{backgroundColor:'transparent', flexBasis:'0%', flexGrow:1, maxWidth:240}}></View>} */}\r\n    </ScrollView>)\r\n};\r\n\r\nexport default ContentList;","import { useInfiniteQuery } from \"react-query\";\r\nimport { getInfiniteContentList } from \"../services/feedynote\";\r\nimport { Content } from \"../types\";\r\n\r\nexport type ContentPage = {\r\n  next?:ContentPage\r\n  current:Content[]\r\n}\r\n\r\nexport default function useInfiniteContentList(parentId:number, type:'NOTEV2'){\r\n  const { data, fetchNextPage } = useInfiniteQuery<ContentPage>(\r\n    [\"ContentList\", parentId], \r\n    async({pageParam})=>await getInfiniteContentList(parentId, type,  pageParam), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage, allPages)=>allPages.length,\r\n      refetchOnReconnect:false,\r\n      //refetchOnWindowFocus:refetch\r\n    }\r\n  )\r\n  \r\n  return { data, fetchNextPage }\r\n}","import React, { useState } from \"react\";\r\nimport { TextInput } from \"react-native\";\r\n\r\n// 동적 높이 TextInput 컴포넌트\r\nexport default ({\r\n    value,\r\n    onChangeText,\r\n    style,\r\n    placeholder,\r\n    autoCapitalize = 'none',\r\n    autoCorrect = false,\r\n    minHeight = 40,\r\n    maxHeight = 200,\r\n  }: {\r\n    value: string;\r\n    onChangeText: (text: string) => void;\r\n    style?: any;\r\n    placeholder?: string;\r\n    autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters';\r\n    autoCorrect?: boolean;\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n  }) => {\r\n    const [height, setHeight] = useState(minHeight);\r\n  \r\n    const handleContentSizeChange = (event: any) => {\r\n      const contentHeight = event.nativeEvent.contentSize.height;\r\n      \r\n      // 높이를 minHeight와 maxHeight 사이로 제한\r\n      const newHeight = Math.max(\r\n        minHeight, \r\n        Math.min(contentHeight, maxHeight)\r\n      );\r\n  \r\n      setHeight(newHeight);\r\n    };\r\n  \r\n    return (\r\n      <TextInput\r\n        multiline\r\n        value={value}\r\n        onChangeText={onChangeText}\r\n        onContentSizeChange={handleContentSizeChange}\r\n        style={[\r\n          style, \r\n          { \r\n            height: height,\r\n            textAlignVertical: 'top',\r\n          }\r\n        ]}\r\n        scrollEnabled={height >= maxHeight}\r\n        placeholder={placeholder}\r\n        autoCapitalize={autoCapitalize}\r\n        autoCorrect={autoCorrect}\r\n      />\r\n    );\r\n  };","import React, { useEffect, useState } from 'react';\r\nimport { Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\n// @ts-ignore\r\nimport { MaterialIcons as Icon } from 'react-native-vector-icons';\r\nimport { RenderItem, SortableListProps } from './SortableListBase';\r\n\r\n// Import platform-specific components\r\nlet DraggableFlatList: any;\r\nlet ScaleDecorator: any;\r\n\r\n// For web, import specific versions of dnd-kit components\r\n// @dnd-kit/core@3.0.3, @dnd-kit/sortable@3.0.1, @dnd-kit/utilities@2.0.0\r\nlet DndCore: any;\r\nlet DndSortable: any;\r\nlet DndUtilities: any;\r\n\r\n// Handle platform-specific imports\r\nif (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n  // For native platforms, import react-native-draggable-flatlist\r\n  const DraggableImport = {} as any; // require('react-native-draggable-flatlist');\r\n  DraggableFlatList = DraggableImport.default;\r\n  ScaleDecorator = DraggableImport.ScaleDecorator;\r\n} else {\r\n  // For web, import dnd-kit with specific versions\r\n  DndCore = require('@dnd-kit/core');\r\n  DndSortable = require('@dnd-kit/sortable');\r\n  DndUtilities = require('@dnd-kit/utilities');\r\n}\r\n\r\n// Web environment Draggable Cell Item using dnd-kit\r\nconst DraggableCellItem = <T, >({ \r\n  item, \r\n  code,\r\n  renderCellContent,\r\n}: { \r\n  item: T, \r\n  code: string,\r\n  renderCellContent: RenderItem<T>,\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = DndSortable.useSortable({ id:code });\r\n\r\n  const style = {\r\n    transform: DndUtilities.CSS.Transform.toString(transform ? {\r\n      x: transform.x,\r\n      y: transform.y,\r\n      scaleX: 1,\r\n      scaleY: 1\r\n    } : null),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    position: 'relative' as const,\r\n    flex: 1,\r\n    zIndex: isDragging ? 1 : 0\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n    >\r\n      <div \r\n        {...attributes}\r\n        {...listeners}\r\n        style={{ \r\n          cursor: 'move', \r\n          width: 40, \r\n          position: 'absolute', \r\n          height: '100%', \r\n          zIndex: 10,\r\n          left: 0,\r\n          top: 0\r\n        }}\r\n      />\r\n      {renderCellContent({item})}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Web Sortable List using dnd-kit\r\nconst SortableCellsList = <T, >({ \r\n  items, \r\n  onSortEnd, \r\n  renderCellContent,\r\n  getId\r\n}: { \r\n  items: T[], \r\n  onSortEnd: (items: T[]) => void, \r\n  renderCellContent: RenderItem<T>,\r\n  getId:(item:T)=>string,\r\n}) => {\r\n  const [codes, setCodes] = useState(items.map(v=>''+ getId(v)))\r\n  useEffect(()=>{\r\n    if (items.length !== codes.length){\r\n      setCodes((codes)=>{\r\n        return items.map((v, i)=>i<codes.length?codes[i]:''+getId(v)).slice(0, items.length)\r\n      })\r\n    }\r\n  }, [items])\r\n  const sensors = DndCore.useSensors(\r\n    DndCore.useSensor(DndCore.PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    DndCore.useSensor(DndCore.KeyboardSensor, {\r\n      coordinateGetter: DndSortable.sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const handleDragEnd = (event: any) => {\r\n    const { active, over } = event;\r\n    \r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = codes.findIndex((item) => item === active.id);\r\n      const newIndex = codes.findIndex((item) => item === over.id);\r\n      const idx = DndSortable.arrayMove(Array.from(Array(items.length).keys()), oldIndex, newIndex)\r\n      setCodes((codes)=>{\r\n        return DndSortable.arrayMove(codes, oldIndex, newIndex).map((v:string, i:number)=>i>idx[i]?'@'+v:v) \r\n      })\r\n      onSortEnd(DndSortable.arrayMove(items, oldIndex, newIndex));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DndCore.DndContext\r\n      sensors={sensors}\r\n      collisionDetection={DndCore.closestCenter}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <DndSortable.SortableContext\r\n        items={codes}\r\n        strategy={DndSortable.verticalListSortingStrategy}\r\n      >\r\n        <View style={commonStyles.cellsList}>\r\n          {items.map((item, i) => {\r\n            const code = codes[i] || '' + getId(item)\r\n            return <DraggableCellItem\r\n              key={code}\r\n              code={code}\r\n              item={item}\r\n              renderCellContent={renderCellContent}\r\n            />\r\n})}\r\n        </View>\r\n      </DndSortable.SortableContext>\r\n    </DndCore.DndContext>\r\n  );\r\n};\r\n\r\n// Choose the appropriate list component based on platform\r\nconst SortableList = <T, >({data, setData:setItems, getId, renderItem:renderContent}:SortableListProps<T>) => {\r\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n    return (\r\n      <DraggableFlatList\r\n        data={data}\r\n        onDragEnd={({ data }: { data: T[] }) => setItems(data)}\r\n        keyExtractor={(item: any) => item.id.toString()}\r\n        renderItem={({ item, drag, isActive }: any) => {\r\n          return (\r\n            <ScaleDecorator>\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <TouchableOpacity\r\n                  onLongPress={drag} \r\n                  style={{ \r\n                    width: 40,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n                </TouchableOpacity>\r\n                <View style={{ flex: 1 }}>\r\n                  {renderContent(item)}\r\n                </View>\r\n              </View>\r\n            </ScaleDecorator>\r\n          );\r\n        }}\r\n        contentContainerStyle={commonStyles.cellsList}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <SortableCellsList\r\n        items={data}\r\n        getId={getId}\r\n        onSortEnd={setItems}\r\n        renderCellContent={renderContent}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst commonStyles = StyleSheet.create({\r\n  cellsList: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 5,\r\n  }\r\n});\r\n\r\nexport default SortableList;\r\n","// App.tsx\r\nimport React, { useState, useCallback, MutableRefObject, useEffect, useRef } from 'react';\r\nimport { \r\n  SafeAreaView, \r\n  StyleSheet, \r\n  View, \r\n  Text, \r\n  TouchableOpacity, \r\n  Platform,\r\n  StyleProp,\r\n  ViewStyle,\r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport Markdown from 'react-native-markdown-display';\r\nimport { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { Editor, EditorViewer } from '@blacktokki/editor';\r\nimport { CellType, Link } from '../../types';\r\nimport { previewScrap } from '../../services/feedynote';\r\nimport LinkPreview from '../../components/LinkPreview';\r\nimport DynamicTextInput from '../../components/DynamicTextInput';\r\nimport SortableList from '../../components/DndSortableList';\r\n\r\n \r\n// Cell execution status\r\nenum ExecutionStatus {\r\n  IDLE = 'idle',\r\n  RUNNING = 'running',\r\n  COMPLETED = 'completed',\r\n  ERROR = 'error',\r\n}\r\n\r\n// Structure for a cell\r\ninterface Cell {\r\n  id: string;\r\n  type: CellType;\r\n  content: string;\r\n  output: string;\r\n  executionCount: number | null;\r\n  status: ExecutionStatus;\r\n}\r\n\r\nconst typeDetail = {\r\n  'EDITOR':{\r\n    executable:false,\r\n    init:(cells:Cell[])=>'',\r\n    iconName: \"edit\",\r\n    iconSize: 18\r\n\r\n  },\r\n  'LINK': {\r\n    executable:true,\r\n    init:(cells:Cell[])=>'https://',\r\n    iconName: 'link',\r\n    iconSize: 20\r\n  },\r\n  'MARKDOWN':{\r\n    executable:false,\r\n    init:(cells:Cell[])=>'# Welcome to Jupyter Notebook in React Native\\n\\nThis is a basic implementation of Jupyter Notebook using React Native and TypeScript. You can:\\n\\n- Write and edit markdown cells\\n- Write and execute JavaScript code\\n- Reorder cells by dragging them',\r\n    iconName: 'text-fields',\r\n    iconSize: 20\r\n  }\r\n}\r\n\r\nconst execute = (type:CellType, query: string): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (type==='LINK'){\r\n        resolve(previewScrap({query}).then(v=>JSON.stringify(v)))\r\n      }\r\n      else if(type==='MARKDOWN'){\r\n        console.log(\"TEMP\")\r\n      }\r\n      else {\r\n        resolve(\"\")\r\n      }\r\n    } catch (error) {\r\n      reject(`Error: ${error}`);\r\n    }\r\n  });\r\n};\r\n\r\nconst CellComponent = ({theme, item, isSelected, heightRef, setCells, executeCell, setSelectedCellId}:{theme:'light'|'dark', item:Cell, isSelected:boolean, heightRef:MutableRefObject<Record<string, number>>, setCells:(func:(cells:Cell[])=>Cell[])=>void, executeCell:(id:string)=>void, setSelectedCellId:(id:string)=>void})=>{\r\n  const {styles, markdownStyles} = useStyles(theme)\r\n  // Update cell content\r\n  const updateCellContent = (id: string, content: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, content } : cell\r\n      )\r\n    );\r\n  };\r\n  // Delete a cell\r\n  const deleteCell = (id: string) => {\r\n    setCells(prevCells => prevCells.filter(cell => cell.id !== id));\r\n  };\r\n  return (\r\n    <View style={[\r\n      styles.cellContainer,\r\n      {minHeight: heightRef.current[item.id]},\r\n      isSelected && styles.selectedCell,\r\n      // isDragging && styles.draggingCell\r\n    ]}\r\n    onLayout={e=>{heightRef.current[item.id]=e.nativeEvent.layout.height}}\r\n    >\r\n      {/* Cell sidebar with execution count and drag handle */}\r\n      <View style={styles.cellHandle}>\r\n        {typeDetail[item.type].executable && (\r\n          <View style={styles.executionCount}>\r\n            <Text style={styles.executionCountText}>\r\n              {item.executionCount ? `[${item.executionCount}]` : '[ ]'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n        <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n      </View>\r\n      \r\n      <View style={styles.cellContent}>\r\n        {/* Cell toolbar */}\r\n        {<View style={styles.cellToolbar}>\r\n        <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => setSelectedCellId(item.id)}\r\n          >\r\n            <Icon\r\n              name={typeDetail[item.type].iconName} \r\n              size={typeDetail[item.type].iconSize} \r\n              color=\"#2196F3\" \r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => executeCell(item.id)}\r\n            disabled={!typeDetail[item.type].executable}\r\n          >\r\n            <Icon \r\n              name=\"play-arrow\" \r\n              size={20} \r\n              color={typeDetail[item.type].executable ? \"#4CAF50\" : \"#ccc\"} \r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => deleteCell(item.id)}\r\n          >\r\n            <Icon name=\"delete\" size={20} color=\"#F44336\" />\r\n          </TouchableOpacity>\r\n        </View>}\r\n        \r\n        {/* Cell input area */}\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={() => setSelectedCellId(item.id)}\r\n          style={styles.cellInputContainer}\r\n        >\r\n          {/* EDITOR CELL */}\r\n          {item.type === 'EDITOR' && <View>\r\n            <EditorViewer theme={theme} value={item.content} autoResize active={!isSelected} onPress={()=>setSelectedCellId(item.id)}/>\r\n            <Editor       theme={theme} value={item.content} autoResize active={isSelected} setValue={(text) => updateCellContent(item.id, text)}/>\r\n          </View>}\r\n          {/* LINK CELL */}\r\n          {item.type === 'LINK' && <DynamicTextInput\r\n              style={styles.codeInput}\r\n              value={item.content}\r\n              onChangeText={(text) => updateCellContent(item.id, text)}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n          }\r\n          {/* MARKDOWN CELL */}\r\n          {item.type === \"MARKDOWN\" && (\r\n          isSelected ? (\r\n            <DynamicTextInput\r\n              style={styles.markdownInput}\r\n              value={item.content}\r\n              onChangeText={(text) => updateCellContent(item.id, text)}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n            ) : (\r\n              <Markdown style={markdownStyles}>\r\n                {item.content}\r\n              </Markdown>\r\n            )\r\n          )}\r\n        </TouchableOpacity>\r\n        {/* Output area for code cells */}\r\n        {item.status === ExecutionStatus.COMPLETED  ? <>\r\n            {typeDetail[item.type].executable && (JSON.parse(item.output) as Link[]).map((link, i)=><LinkPreview key={i} link={link} isMobile={false} />)}\r\n          </>:\r\n          item.status === ExecutionStatus.ERROR && <View style={[styles.outputContainer, styles.errorOutput]}>\r\n            <Text style={styles.outputText}>{item.output}</Text>\r\n          </View>}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst App = (props: {init:{type:CellType, content:string, output:string, executionCount:number|null, status?:string}[], cellRef:MutableRefObject<{cells:Cell[], executeAllCells:()=>Promise<void>}|undefined>}) => {\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const [cells, setCells] = useState<Cell[]>(props.init.map((v, i)=>({...v, id:`${i}` , status:v.status as ExecutionStatus || ExecutionStatus.IDLE})));\r\n  \r\n  const [selectedCellId, setSelectedCellId] = useState<string | null>(null);\r\n  const [nextExecutionCount, setNextExecutionCount] = useState(1);\r\n  const heightRef = useRef<Record<string, number>>({})\r\n  useEffect(()=>{\r\n    props.cellRef.current = {\r\n      cells:cells,\r\n      executeAllCells: async () => {\r\n        for (const cell of cells) {\r\n          if (typeDetail[cell.type].executable) {\r\n            await executeCell(cell.id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [cells])\r\n  \r\n  // Add a new cell\r\n  const addCell = (type: CellType) => {\r\n    const newCell: Cell = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      content: typeDetail[type].init(cells),\r\n      output: '',\r\n      executionCount: null,\r\n      status: ExecutionStatus.IDLE,\r\n    };\r\n    \r\n    setCells(prevCells => [...prevCells, newCell]);\r\n  };\r\n  \r\n  // Execute code in a cell\r\n  const executeCell = async (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id \r\n          ? { ...cell, status: ExecutionStatus.RUNNING } \r\n          : cell\r\n      )\r\n    );\r\n    \r\n    const cell = cells.find(c => c.id === id);\r\n    if (!cell || typeDetail[cell.type].executable === false) return;\r\n    \r\n    try {\r\n      const result = await execute(cell.type, cell.content);\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: result, \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.COMPLETED\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n      setNextExecutionCount(prev => prev + 1);\r\n    } catch (error) {\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: String(error), \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.ERROR\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n      setNextExecutionCount(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  // Render a single cell (shared between platform implementations)\r\n  const renderCellContent = useCallback(({item}:{item: Cell}) => {\r\n    return <CellComponent \r\n      theme={theme}\r\n      item={item}\r\n      isSelected={selectedCellId === item.id}\r\n      heightRef={heightRef}\r\n      setCells={setCells} \r\n      executeCell={executeCell} \r\n      setSelectedCellId={setSelectedCellId}\r\n    />\r\n  }, [selectedCellId, cells]);\r\n  \r\n  const { styles } = useStyles(theme)\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <SortableList data={cells} setData={setCells} getId={v=>v.id} renderItem={renderCellContent}/>\r\n      \r\n      <View style={styles.addCellContainer}>\r\n        {Object.entries(typeDetail).map(([k, v], i)=>{\r\n          const buttonStyle:StyleProp<ViewStyle> = {\r\n            backgroundColor: Colors[theme][k as keyof typeof Colors['light'|'dark']]\r\n          }\r\n          return <TouchableOpacity\r\n          key={i}\r\n          style={[styles.addCellButton, buttonStyle]}\r\n          onPress={() => addCell(k as CellType)}\r\n        >\r\n          <Icon name={v.iconName} size={v.iconSize} color=\"#fff\" />\r\n          <Text style={styles.addCellButtonText}>{lang(k)}</Text>\r\n        </TouchableOpacity>\r\n        })}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst Colors = {\r\n  light:{\r\n    background: '#f8f8f8',\r\n    text: '#111',\r\n    codeText: '#333',\r\n    codeBackground: '#f8f8f8',\r\n    outerBackground: '#fff',\r\n    border: '#e0e0e0',\r\n    selectedBorder: '#3F51B5',\r\n    error:  'rgba(244, 67, 54, 0.1)',\r\n    markdownHead: '#2C3E50',\r\n    markdownCode: '#f5f5f5',\r\n    LINK: '#4CAF50',\r\n    MARKDOWN:'#2196F3',\r\n    EDITOR: 'goldenrod',\r\n  },\r\n  dark:{\r\n    background:'#1E1E1E',  // 어두운 헤더 배경\r\n    text: '#E0E0E0',  // 연한 회색 텍스트\r\n    codeText: '#B0B0B0',// 회색 텍스트\r\n    codeBackground: '#2A2A2A',  // 어두운 출력 배경\r\n    outerBackground: '#121212', // 다크 모드 배경색\r\n    border: '3A3A3A',  // 어두운 구분선\r\n    selectedBorder: '#4A90E2', // 밝은 블루 선택 강조\r\n    error:  'rgba(244, 67, 54, 0.2)', // 오류 출력 배경 (반투명 레드)\r\n    markdownHead: '#A0B9D0',\r\n    markdownCode: '#1E1E1E',\r\n    LINK: '#2E7D32', // 어두운 녹색\r\n    MARKDOWN:'#1565C0', // 어두운 블루\r\n    EDITOR: 'darkgoldenrod',\r\n  }\r\n}\r\n\r\nconst _styles = (theme:'light'|'dark') => {\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: Colors[theme].outerBackground,\r\n    },\r\n    header: {\r\n      backgroundColor: Colors[theme].background,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      padding: 15,\r\n      ...(Platform.OS !== 'web' && { elevation: 4 }),\r\n    },\r\n    title: {\r\n      color: Colors[theme].text,\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n    },\r\n    headerButtonText: {\r\n      color: Colors[theme].codeText,\r\n      marginLeft: 5,\r\n      fontWeight: '500',\r\n    },\r\n    cellContainer: {\r\n      flexDirection: 'row',\r\n      borderTopLeftRadius: 6,\r\n      borderBottomLeftRadius: 6,\r\n      backgroundColor: Colors[theme].background,\r\n      overflow: 'hidden',\r\n      borderColor: Colors[theme].border,\r\n      padding:1,\r\n    },\r\n    selectedCell: {\r\n      borderColor: Colors[theme].selectedBorder,\r\n      borderWidth: 2,\r\n      padding:0,\r\n    },\r\n    draggingCell: {\r\n      opacity: 0.7,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    cellHandle: {\r\n      width: 40,\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      alignItems: 'center',\r\n      paddingTop: 15,\r\n    },\r\n    cellContent: {\r\n      flex: 1,\r\n      borderWidth: 1,\r\n      margin: 10,\r\n      marginVertical: 5,\r\n      borderColor: Colors[theme].border,\r\n    },\r\n    cellToolbar: {\r\n      flexDirection: 'row',\r\n      padding: 5,\r\n      paddingVertical: 0,\r\n      borderBottomColor: Colors[theme].border,\r\n    },\r\n    codeInput: {\r\n      fontFamily: 'monospace',\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    markdownInput: {\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    outputContainer: {\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      padding: 10,\r\n      borderTopWidth: 1,\r\n      borderTopColor: Colors[theme].border,\r\n    },\r\n    errorOutput: {\r\n      backgroundColor: Colors[theme].error,\r\n    },\r\n    outputText: {\r\n      fontFamily: 'monospace',\r\n      color: Colors[theme].codeText,\r\n    },\r\n    addCellContainer: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      padding: 15,\r\n      borderTopWidth: 1,\r\n      borderTopColor: Colors[theme].border,\r\n      backgroundColor: Colors[theme].outerBackground,\r\n      zIndex: -1\r\n    },\r\n    // common styles\r\n    headerButtons: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingHorizontal: 12,\r\n      paddingVertical: 6,\r\n      borderRadius: 4,\r\n    },\r\n    executionCount: {\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n    },\r\n    toolbarButton: {\r\n      padding: 5,\r\n      marginRight: 10,\r\n    },\r\n    cellInputContainer: {\r\n      //padding: 10,\r\n      padding:0,\r\n      paddingHorizontal:5,\r\n    },\r\n    addCellButton: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingHorizontal: 16,\r\n      paddingVertical: 8,\r\n      borderRadius: 4,\r\n      marginHorizontal: 5,\r\n    },\r\n    addCellButtonText: {\r\n      color: '#fff',\r\n      marginLeft: 5,\r\n      fontWeight: '500',\r\n    },\r\n    executionCountText: {\r\n      color: '#888',\r\n      fontSize: 12,\r\n    },\r\n  });\r\n  const markdownStyles = {\r\n    body: {\r\n      fontSize: 14,\r\n      color: Colors[theme].codeText,\r\n    },\r\n    heading1: {\r\n      fontSize: 24,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    heading2: {\r\n      fontSize: 20,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    code_inline: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 2,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n    code_block: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 10,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n  }\r\n  return {styles , markdownStyles}\r\n}\r\n\r\nconst lightStyles = _styles('light')\r\nconst darkStyles = _styles('dark')\r\nconst useStyles = (theme:'light'|'dark') => theme === 'light'?lightStyles:darkStyles\r\n\r\n\r\nexport default App;","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\n\r\n\r\ntype ContentGroupListProps = {\r\n  type: 'NOTEV2';\r\n}\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentGroupList = ( props : ContentGroupListProps) => {\r\n  const data = useContentList(0, props.type);\r\n  const { lang } = useLangContext()\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  return (\r\n    <List.Section>\r\n      <View style={{flexDirection:'row'}}>\r\n        <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>\r\n        <TouchableRipple style={{position:'absolute', right:0}} onPress={()=>navigate('ContentListScreen', {type:props.type})}><List.Icon icon='plus' style={{margin:itemPadding}}/></TouchableRipple>\r\n      </View>\r\n        {data && data.map(v=>\r\n          <List.Item key={v.id} left={(_props)=><List.Icon {..._props} icon={\"notebook\"} />} title={v.title} onPress={()=>navigate('ContentListScreen', {id:v.id})} style={{padding:itemPadding }} />\r\n        )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupList;","import React, {} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupList from '../../components/ContentGroupList';\r\nimport { List } from 'react-native-paper';\r\n\r\nconst ContentTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'NOTEV2'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Contents'), component:ContentTabView, icon:<List.Icon icon={'table-of-contents'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  return <HomeSection tabViews={tabViews} title={lang('home')}>\r\n    <View style={{flexGrow:1, width:'80%', marginTop:72}}>\r\n      <Text style={{fontSize:32, color}}>feedynote</Text>\r\n      <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n      {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n      <View style={{height:24}}/>\r\n      <ConfigSections/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import ContentListScreen from \"./main/ContentListScreen\";\r\nimport NoteScreen from \"./main/NoteScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n      title:'home',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NoteScreen: {\r\n      path: 'notes',\r\n      title: 'notes',\r\n      component: NoteScreen\r\n    },\r\n    ContentListScreen: {\r\n      path: 'contents',\r\n      title: 'contents',\r\n      component: ContentListScreen\r\n    }\r\n  };\r\n  ","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView,  useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useMemo,useRef,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport useContent from '../../hooks/useContent';\r\nimport NoteSection from './NoteSection';\r\nimport { CellType } from '../../types';\r\nimport { toRaw } from '@blacktokki/editor';\r\n\r\nexport default function NoteScreen({ navigation, route }: StackScreenProps<any, 'Editor'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId!==undefined?parseInt(route?.params?.parentId):undefined\r\n  } as { created:true, parentId:number } | { created:false, id:number }\r\n  const cellRef: Parameters<typeof NoteSection>[0]['cellRef'] = useRef()\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const content = useContent(params.created?undefined:params.id)\r\n  const contents = useContentList(params.created?undefined:params.id)\r\n  const cellContents = useMemo(()=>{\r\n    return (params.created?[]:contents)?.map(v=>({type:v.type as CellType, content:v.title, output:v.description || '', executionCount:v.option.EXECUTION_COUNT?parseInt(v.option.EXECUTION_COUNT, 10):null, status:v.option.EXECUTION_STATUS}))\r\n  }, [contents])\r\n\r\n  const contentMutation = useContentMutation()\r\n  const [title, setTitle] = useState<string>()\r\n  const [editPage, setEditPage] = useState(false)\r\n  const onSaveTitle = () => {\r\n        if (!auth.user){\r\n          return;\r\n      }\r\n      let promise\r\n      const description = cellRef.current? cellRef.current.cells.map((v, i)=>{\r\n        let str = toRaw(v.content).replaceAll(/\\r\\n/g, '');\r\n        if(str.length > 32){\r\n          str = str.substring(0, 32 - 2) + '...';\r\n        }\r\n        return str\r\n      }).join('\\r\\n'):''\r\n      if (params.created){\r\n          promise = contentMutation.create({userId:auth.user.id, parentId:params.parentId, type:'PAGE', order: 0, title:title || '', description, option:{}}).then((v)=>{\r\n            navigate(\"NoteScreen\", {id:v});\r\n            return v\r\n          })\r\n      }\r\n      else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, title:title || content.title, description}}).then(()=>params.id)\r\n      }\r\n      return promise\r\n  }\r\n\r\n  const onSave = ()=>{\r\n    const promise = onSaveTitle()\r\n    promise?.then((parentId)=>{\r\n      const userId = auth.user?.id\r\n      const created = userId && cellRef.current? cellRef.current.cells.map((v, i)=>({\r\n        userId, parentId, type:v.type, order:i, description:v.output, title:v.content, option:{EXECUTION_COUNT:v.executionCount!==null?`${v.executionCount}`:undefined, EXECUTION_STATUS: v.status} })):[]\r\n      const deleteIds = contents!==undefined?contents.map(v=>v.id):[]\r\n      return contentMutation.updateCells({created, deleteIds})\r\n    })\r\n  }\r\n\r\n  useLayoutEffect(()=>{\r\n      if(params.created){\r\n        setEditPage(false)\r\n        setTitle(lang(\"New Page\"))\r\n      }\r\n      else if (content){\r\n        setEditPage(false)\r\n        setTitle(content.title)\r\n      }\r\n    }, [content])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created || content){\r\n        navigation.setOptions({\r\n            title,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>setEditPage(true)}/>\r\n              <CommonButton title={lang('save')} onPress={onSave} style={{paddingTop:8, marginRight:10}}/>\r\n              {content && <CommonButton title={'🗑️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>}\r\n            </View>,\r\n            headerShown: !editPage\r\n          });\r\n      }\r\n  }, [navigation, content, contents, title, editPage]);\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n  }\r\n  \r\n  return <ThemedView style={{width:\"100%\", height:\"100%\"}}>\r\n     {editPage && <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSaveTitle} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={()=>setEditPage(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>}\r\n      </>}\r\n    <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n      {cellContents !==undefined && <NoteSection init={cellContents} cellRef={cellRef}/>}\r\n    </ScrollView>\r\n  </ThemedView>\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { getContentOne } from \"../services/feedynote\";\r\n\r\nexport default function useContent(id?:number){\r\n  const { data } = useQuery([\"Content\", id] , async()=> (id?await getContentOne(id):undefined))\r\n  return data\r\n}","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView,  View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport ContentList from '../../components/ContentList';\r\n\r\nexport default function ContentListScreen({ navigation, route }: StackScreenProps<any, 'ContentList'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id:  route?.params?.id===\"*\"?\"*\":parseInt(route?.params?.id),\r\n    type: route?.params?.type\r\n  } as { created:true, type:'NOTEV2' } | { created:false, id:number| \"*\" }\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const rootlist = useContentList(0);\r\n  const list = rootlist\r\n  const contentMutation = useContentMutation()\r\n  const content = params.created?undefined:list?.find(v=>v.id===params.id)\r\n  const [title, setTitle] = useState<string>()\r\n  const [editable, setEditable] = useState(false)\r\n  const type = params.created?params.type:content?.type\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n  }\r\n  const onSave = ()=>{\r\n    if (!auth.user || (title===undefined) || (content?.title === title) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    if (params.created){\r\n        const typedList = list?.filter(v=>v.type == params.type)\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:0, type, order: (typedList?.length || 0) + 1, title, option:{}}).then(v=>{\r\n            navigate(\"ContentListScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, title}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'NOTEV2': lang('New Note'),\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}\r\n  useLayoutEffect(()=>{\r\n    if(params.created){\r\n      setEditable(false)\r\n      setTitle(defaultTitle[params.type])\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setTitle(content.title)\r\n    }\r\n  }, [content, type])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else {\r\n        navigation.setOptions({\r\n            title: content?.title || lang(\"All Timelines\"),\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content?.type==='NOTEV2' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('NoteScreen', {parentId:content.id})}/>}\r\n              {(content && !params.created) && <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>}\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, type, editable]);\r\n\r\n  const editableExact = (params.created || editable)\r\n\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\", backgroundColor:'transparent'}}>\r\n    {editableExact?\r\n      <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={params.created?back:()=>setEditable(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>}\r\n      </>:\r\n      <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n        {content && <ContentList parentContent={content}/>}\r\n      </ScrollView>}\r\n    </ThemedView>\r\n}\r\n","import React from 'react';\r\nimport ContentGroupList from '../components/ContentGroupList';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <ScrollView style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('HomeScreen')} />\r\n        <ContentGroupList type={'NOTEV2'}/>\r\n    </ScrollView>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nconst getConfig = async () => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'feedynote',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'feedynote'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'HomeScreen',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <></>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig().then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n        <Suspense fallback={<></>}>\r\n            <NavigationLazy/>\r\n        </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["re","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref","link","isMobile","_jsx","View","style","borderRadius","marginVertical","marginHorizontal","children","_jsxs","TouchableOpacity","onPress","Linking","openURL","url","onLongPress","width","flexDirection","imageUrl","Image","source","uri","resizeMode","maxWidth","maxHeight","borderWidth","undefined","flex","overflow","minHeight","Text","fontSize","numberOfLines","title","ellipsizeMode","axios","axiosCreate","getContentOne","_asyncToGenerator","id","get","data","_x","apply","arguments","getContentList","_ref2","parentId","type","parentIdParam","typeParam","value","_x2","_x3","getInfiniteContentList","_ref3","page","size","current","_x4","_x5","_x6","postContent","_ref4","post","_x7","patchContent","_ref6","_ref5","updated","patch","ids","_x8","deleteContent","_ref7","delete","_x9","postCells","_ref8","contents","_x10","previewScrap","_ref9","cells","_ref10","preview","query","_x12","useContentList","useQuery","useContentMutation","queryClient","useQueryClient","create","useMutation","onSuccess","invalidateQueries","update","_delete","updateCells","useEffect","mutateAsync","EventTime","_ref$time","time","content","timeStyle","styles","timeContainer","EventIcon","_ref2$icon","icon","OriginalIcon","iconStyle","lineStyle","iconToBeRendered","List","iconContainer","verticalLine","Event","eventContainer","TimeLineRow","_ref4$event","event","eventStyle","timeContainerStyle","iconContainerStyle","contentContainerStyle","_event$title","OriginalTitle","_event$description","OriginalDescription","pressAction","RowComp","row","StyleSheet","container","alignItems","flexBasis","paddingTop","color","fontStyle","textAlign","alignSelf","backgroundColor","flexGrow","padding","shadowOffset","I18nManager","isRTL","height","shadowColor","shadowOpacity","marginBottom","borderTopLeftRadius","Platform","OS","borderColor","fontWeight","lineHeight","paddingBottom","updatedOffset","Date","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","slice","date","TimelinePage","React","_objectSpread","navigate","item","_cardPadding","isLandscape","_cardMaxWidth","CardPage","window","useResizeContext","cardMaxWidth","fSize","concat","_toConsumableArray","sort","a","b","paddingRight","minWidth","Card","aspectRatio","Math","sqrt","Content","opacity","marginTop","justifyContent","parentContent","_useInfiniteContentLi","_useInfiniteQuery","useInfiniteQuery","pageParam","select","pages","next","getNextPageParam","lastPage","allPages","refetchOnReconnect","fetchNextPage","useInfiniteContentList","FlatList","renderItem","onEndReached","ScrollView","flexWrap","onChangeText","placeholder","_ref$autoCapitalize","autoCapitalize","_ref$autoCorrect","autoCorrect","_ref$minHeight","_ref$maxHeight","_useState","useState","_useState2","_slicedToArray","setHeight","TextInput","multiline","onContentSizeChange","contentHeight","nativeEvent","contentSize","newHeight","max","min","textAlignVertical","scrollEnabled","DraggableFlatList","ScaleDecorator","DndCore","DndSortable","DndUtilities","DraggableImport","default","require","DraggableCellItem","code","renderCellContent","_DndSortable$useSorta","useSortable","attributes","listeners","setNodeRef","transform","transition","isDragging","CSS","Transform","toString","x","y","scaleX","scaleY","position","zIndex","ref","cursor","left","top","SortableCellsList","items","onSortEnd","getId","codes","setCodes","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","DndContext","collisionDetection","closestCenter","onDragEnd","active","over","oldIndex","findIndex","newIndex","idx","arrayMove","Array","from","keys","SortableContext","strategy","verticalListSortingStrategy","commonStyles","cellsList","paddingVertical","paddingHorizontal","setItems","setData","renderContent","keyExtractor","drag","isActive","Icon","name","ExecutionStatus","typeDetail","executable","init","iconName","iconSize","CellComponent","theme","isSelected","heightRef","setCells","executeCell","setSelectedCellId","_useStyles","useStyles","markdownStyles","updateCellContent","prevCells","cell","cellContainer","selectedCell","onLayout","e","layout","cellHandle","executionCount","executionCountText","cellContent","cellToolbar","toolbarButton","disabled","activeOpacity","cellInputContainer","EditorViewer","autoResize","Editor","setValue","text","DynamicTextInput","codeInput","markdownInput","Markdown","status","COMPLETED","_Fragment","JSON","parse","output","LinkPreview","ERROR","outputContainer","errorOutput","outputText","Colors","light","background","codeText","codeBackground","outerBackground","border","selectedBorder","error","markdownHead","markdownCode","LINK","MARKDOWN","EDITOR","dark","_styles","header","elevation","headerButtonText","marginLeft","borderBottomLeftRadius","draggingCell","margin","borderBottomColor","fontFamily","borderTopWidth","borderTopColor","addCellContainer","headerButtons","marginRight","addCellButton","addCellButtonText","body","heading1","heading2","code_inline","code_block","lightStyles","darkStyles","props","useColorScheme","lang","useLangContext","IDLE","_useState3","_useState4","selectedCellId","_useState5","_useState6","nextExecutionCount","setNextExecutionCount","useRef","cellRef","executeAllCells","_executeAllCells","RUNNING","find","c","result","Promise","resolve","reject","then","stringify","console","log","prev","String","useCallback","SafeAreaView","SortableList","Object","entries","k","buttonStyle","newCell","now","addCell","itemPadding","selectable","TouchableRipple","right","_props","ContentTabView","ContentGroupList","ConfigTabView","ConfigSections","main","HomeScreen","component","navigation","route","tabViews","headerRight","HomeSection","path","NoteScreen","_route$params","_route$params2","_route$params3","_route$params4","params","created","parseInt","auth","useAuthContext","cellContents","useMemo","option","EXECUTION_COUNT","EXECUTION_STATUS","contentMutation","setTitle","editPage","setEditPage","onSaveTitle","user","promise","toRaw","replaceAll","join","userId","order","onSave","_auth$user","deleteIds","useLayoutEffect","setOptions","CommonButton","back","headerShown","canGoBack","goBack","tab","ThemedView","mode","textStyle","NoteSection","ContentListScreen","list","editable","setEditable","defaultTitle","onEdit","editableExact","_promise","typedList","ContentList","getConfig","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}