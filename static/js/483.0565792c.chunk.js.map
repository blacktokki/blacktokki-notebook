{"version":3,"file":"static/js/483.0565792c.chunk.js","mappings":"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","sources":["src/hooks/useKeywordStorage.ts","src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/modals/AlertModal.tsx","src/modals/DatePikcerModal.tsx","src/modals/index.ts","src/screens/main/NoteListSection.tsx","src/components/TimerTag.tsx","src/hooks/useProblem.ts","src/hooks/useTimeLine.ts","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/NoteItemSections.tsx","src/screens/main/home/ConfigSection.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/notepage/TimerTagSection.tsx","src/screens/main/notepage/NotePageScreen.tsx","src/screens/main/timeline/DateHeaderSection.tsx","src/screens/main/timeline/TimeLineScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/ProblemScreen.tsx","src/screens/main/NoteViewerScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords:';\r\n\r\nexport type KeywordContent =\r\n  | {\r\n      type: '_LINK';\r\n      name: string;\r\n      url: string;\r\n      origin: string;\r\n    }\r\n  | {\r\n      type: '_NOTELINK';\r\n      name: string;\r\n      title: string;\r\n      paragraph?: string;\r\n      origin: string;\r\n    }\r\n  | {\r\n      type: '_KEYWORD';\r\n      title: string;\r\n    };\r\n\r\nconst getKeywords = async (subkey: string | undefined): Promise<KeywordContent[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY + subkey);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveKeywords = async (\r\n  subkey: string | undefined,\r\n  keywords: KeywordContent[]\r\n): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY + subkey, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving keywords', e);\r\n  }\r\n};\r\n\r\nexport const useKeywords = () => {\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n  return useQuery({\r\n    queryKey: ['keywords', subkey],\r\n    queryFn: async () => {\r\n      return await getKeywords(subkey);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async (keyword: KeywordContent) => {\r\n      const keywords = await getKeywords(subkey);\r\n      const newKeywords = [\r\n        ...new Set([JSON.stringify(keyword), ...keywords.map((v) => JSON.stringify(v))]),\r\n      ].map((v) => JSON.parse(v));\r\n      await saveKeywords(subkey, newKeywords);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords(subkey, []);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n","import { axiosCreate } from '@blacktokki/account';\r\n\r\nimport { Content, PostContent, Link } from '../types';\r\n\r\nconst axios = axiosCreate('notebook');\r\n\r\nexport const getContentOne = async (id: number) => {\r\n  return (await axios.get(`/api/v1/content/${id}`)).data as Content;\r\n};\r\n\r\nexport const getContentList = async (\r\n  parentId?: number,\r\n  types?: Content['type'][],\r\n  page?: number\r\n) => {\r\n  const parentIdParam = parentId !== undefined ? `&parentId=${parentId}` : '';\r\n  const typeParam = types !== undefined ? `&types=${types.join(',')}` : '';\r\n  const pageParam = page !== undefined ? `&size=20&page=${page}` : '&size=256';\r\n  return (\r\n    await axios.get(\r\n      `/api/v1/content?self=true&sort=id,DESC${parentIdParam}${typeParam}${pageParam}`\r\n    )\r\n  ).data.value as Content[];\r\n};\r\n\r\nexport const postContent = async (postContent: PostContent) => {\r\n  return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id;\r\n};\r\n\r\nexport const patchContent = async ({ id, updated }: { id: number; updated: PostContent }) => {\r\n  await axios.patch(`/api/v1/content`, { ids: [id], updated });\r\n};\r\n\r\nexport const deleteContent = async (id: number) => {\r\n  await axios.delete(`/api/v1/content/${id}`);\r\n};\r\n\r\nexport const previewUrl = async (preview: { query: string }) => {\r\n  return (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data as Link;\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { toHtml } from '@blacktokki/editor';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useQuery, useMutation, useQueryClient, useInfiniteQuery } from 'react-query';\r\n\r\nimport { getContentList, getContentOne, patchContent, postContent } from '../services/notebook';\r\nimport { Content, PostContent } from '../types';\r\n\r\nconst DB_NAME = '@Blacktokki:notebook';\r\nconst DB_VERSION = 1;\r\n\r\nexport async function openDB(): Promise<IDBDatabase> {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = (event.target as IDBOpenDBRequest).result;\r\n      if (!db.objectStoreNames.contains('NOTE')) {\r\n        db.createObjectStore('NOTE', { keyPath: 'title' });\r\n      }\r\n      // if (!db.objectStoreNames.contains('SNAPSHOT')) {\r\n      //   db.createObjectStore('SNAPSHOT', { keyPath: ['title', 'updated'] });\r\n      // }\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\n\r\nlet lastPage: string | undefined;\r\n\r\nconst getContents = async (\r\n  data:\r\n    | { isOnline: true; type: 'NOTE' | 'SNAPSHOT'; page?: number; parentId?: number }\r\n    | { isOnline: false }\r\n): Promise<Content[]> => {\r\n  if (data.isOnline) {\r\n    return await getContentList(data.parentId, [data.type], data.page);\r\n  }\r\n  const type = 'NOTE';\r\n  try {\r\n    const db = await openDB();\r\n    return new Promise((resolve) => {\r\n      const transaction = db.transaction(type, 'readonly');\r\n      const store = transaction.objectStore(type);\r\n\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result as Content[]);\r\n      };\r\n      request.onerror = () => {\r\n        console.error('Error loading contents from IndexedDB:', request.error);\r\n        throw request.error;\r\n      };\r\n    });\r\n  } catch (e) {\r\n    console.error('Error opening IndexedDB', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (\r\n  isOnline: boolean,\r\n  contents: (Content | PostContent)[],\r\n  id?: number\r\n): Promise<void> => {\r\n  const content = contents.find((v) => id === (v as { id?: number }).id);\r\n  if (isOnline) {\r\n    if (content) {\r\n      const savedId = await (id\r\n        ? patchContent({ id, updated: content }).then(() => id)\r\n        : postContent(content));\r\n      const snapshot: Content | PostContent = {\r\n        ...content,\r\n        type: 'SNAPSHOT',\r\n        id: undefined,\r\n        parentId: savedId,\r\n      };\r\n      await postContent(snapshot);\r\n    }\r\n    return;\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(['NOTE' /*, 'SNAPSHOT' */], 'readwrite');\r\n    const store = tx.objectStore('NOTE');\r\n    // const archive = tx.objectStore('SNAPSHOT');\r\n\r\n    for (const contentItem of contents) {\r\n      store.put(contentItem); // id를 기준으로 덮어씌움 (없으면 추가)\r\n    }\r\n    // if (content) {\r\n    //   const snapshot: Content | PostContent = {\r\n    //     ...content,\r\n    //     type: 'SNAPSHOT',\r\n    //   };\r\n    //   archive.put(snapshot);\r\n    // }\r\n    await new Promise((resolve, reject) => {\r\n      tx.oncomplete = () => resolve(undefined);\r\n      tx.onerror = () => reject(tx.error);\r\n    });\r\n  } catch (e) {\r\n    console.error('Error saving contents to IndexedDB', e);\r\n  }\r\n};\r\n\r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent notes', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent notes', e);\r\n  }\r\n};\r\n\r\nexport const useNotePages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['pageContents', !auth.isLocal],\r\n    queryFn: async () => await getContents({ isOnline: !auth.isLocal, type: 'NOTE' }),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = (parentId?: number) => {\r\n  const { auth } = useAuthContext();\r\n  return useInfiniteQuery<Content[], number>({\r\n    queryKey: ['snapshotContents', !auth.isLocal, parentId],\r\n    queryFn: async ({ pageParam }) =>\r\n      await getContents({\r\n        isOnline: !auth.isLocal,\r\n        type: 'SNAPSHOT',\r\n        parentId,\r\n        page: pageParam || 0,\r\n      }),\r\n    getNextPageParam: (lastPage, allPages) => (lastPage?.length ? allPages.length : undefined),\r\n    refetchOnReconnect: false,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find((v) => v === title) === undefined) {\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '', id: undefined };\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useArchivePage = (archiveId?: number) => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['snapshotContent', !auth.isLocal, archiveId],\r\n    queryFn: async () =>\r\n      auth.isLocal || archiveId === undefined ? undefined : await getContentOne(archiveId),\r\n  });\r\n};\r\n\r\nexport const useRecentPages = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['recentPages'],\r\n    queryFn: async () => {\r\n      const recentTitles = await getRecentPages();\r\n      return recentTitles\r\n        .map((title) => contents.find((c) => c.title === title))\r\n        .filter((c) => c !== undefined) as Content[];\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useLastPage = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['lastPage'],\r\n    queryFn: async () => {\r\n      return contents.find((v) => v.title === lastPage);\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useCreateOrUpdatePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const { data: contents = [] } = useNotePages();\r\n  return useMutation({\r\n    mutationFn: async ({ title, description }: { title: string; description: string }) => {\r\n      const page = contents.find((c) => c.title === title);\r\n      if (page?.description === description) {\r\n        return { title, description, skip: true };\r\n      }\r\n      let updatedContents: (Content | PostContent)[];\r\n      const updated = auth.isLocal ? new Date().toISOString() : undefined;\r\n      if (page) {\r\n        updatedContents = contents.map((c, i) =>\r\n          c.id === page.id ? ({ ...c, description, updated } as PostContent) : c\r\n        );\r\n      } else {\r\n        const newPage = {\r\n          title,\r\n          description,\r\n          input: title,\r\n          userId: auth.user?.id || 0,\r\n          parentId: 0,\r\n          type: 'NOTE',\r\n          order: 0,\r\n          updated,\r\n          option: {},\r\n        } as PostContent;\r\n        updatedContents = [...contents, newPage];\r\n      }\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page?.id);\r\n      return { title, description, skip: false };\r\n    },\r\n    onSuccess: async (data) => {\r\n      if (!data.skip) {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContent'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      }\r\n    },\r\n  });\r\n};\r\n\r\nexport const useMovePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [] } = useNotePages();\r\n  const { auth } = useAuthContext();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({\r\n      oldTitle,\r\n      newTitle,\r\n      description,\r\n    }: {\r\n      oldTitle: string;\r\n      newTitle: string;\r\n      description?: string;\r\n    }) => {\r\n      const page = contents.find((c) => c.title === oldTitle);\r\n\r\n      if (!page) {\r\n        throw new Error('Page not found');\r\n      }\r\n\r\n      if (contents.some((c) => c.title === newTitle)) {\r\n        throw new Error('Page with new title already exists');\r\n      }\r\n\r\n      const updatedContents = contents.map((c) =>\r\n        c.title === oldTitle\r\n          ? { ...c, title: newTitle, description: description || page.description }\r\n          : c\r\n      );\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page.id);\r\n\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.map((title) =>\r\n        title === oldTitle ? newTitle : title\r\n      );\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { oldTitle, newTitle };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['snapshotContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({ title, direct }: { title: string; direct?: boolean }) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find((v) => v === title) === undefined || direct) {\r\n        const updatedRecentPages = [title, ...recentPages];\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async (title: string) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter((_title) => title !== _title);\r\n      lastPage = undefined;\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useNoteViewers = () => {\r\n  const { lang, locale } = useLangContext();\r\n  return useQuery({\r\n    queryKey: ['viewerContents', locale],\r\n    queryFn: async () => {\r\n      return await Promise.all(\r\n        ['Usage'].map(async (key) => {\r\n          const title = lang(key);\r\n          const v2 = await fetch(process.env.PUBLIC_URL + '/' + title + '.md');\r\n          const description = toHtml(await v2.text());\r\n          return { key, description };\r\n        })\r\n      );\r\n    },\r\n  });\r\n};\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};\r\n","import { Text, useColorScheme } from '@blacktokki/core';\r\nimport { TouchableOpacity, View, FlatList, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { createCommonStyles } from '../styles';\r\n\r\nexport interface Paragraph {\r\n  path: string;\r\n  title: string;\r\n  level: number;\r\n  header: string;\r\n  description: string;\r\n}\r\n\r\nexport function parseHtmlToParagraphs(html: string): Paragraph[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  const result: Paragraph[] = [{ path: '', title: '', header: '', level: 0, description: '' }];\r\n\r\n  const headings: string[] = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\r\n  const headerStack: { level: number; title: string }[] = [];\r\n\r\n  let current: Paragraph | null = null;\r\n  let cursor = doc.body.firstChild;\r\n\r\n  const flushCurrent = () => {\r\n    if (current) {\r\n      result.push(current);\r\n      current = null;\r\n    }\r\n  };\r\n\r\n  while (cursor) {\r\n    if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n      const el = cursor as HTMLElement;\r\n      if (headings.includes(el.tagName)) {\r\n        flushCurrent();\r\n\r\n        const level = parseInt(el.tagName.substring(1), 10);\r\n        const title = el.textContent?.trim() || '';\r\n\r\n        // 헤더 스택 업데이트\r\n        while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n          headerStack.pop();\r\n        }\r\n        headerStack.push({ level, title });\r\n\r\n        const path = headerStack.map((h) => h.title).join(' > ');\r\n\r\n        current = {\r\n          path,\r\n          title,\r\n          level,\r\n          header: el.outerHTML,\r\n          description: '',\r\n        };\r\n      } else if (current) {\r\n        current.description += el.outerHTML;\r\n      } else {\r\n        // 헤더 밖의 내용 처리\r\n        result[0].description += el.outerHTML;\r\n      }\r\n    } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n      current.description += cursor.textContent || '';\r\n    }\r\n\r\n    cursor = cursor.nextSibling;\r\n  }\r\n\r\n  flushCurrent();\r\n  return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props: {\r\n  root: string;\r\n  path: string;\r\n  onPress: (item: Paragraph) => void;\r\n  data: Paragraph[];\r\n}) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item: Paragraph) => (\r\n    <TouchableOpacity style={styles.resultItem} onPress={() => props.onPress(item)}>\r\n      {item.level === 0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\" />}\r\n      <Text\r\n        style={[\r\n          props.path === item.path\r\n            ? [commonStyles.title, { marginBottom: 5, marginTop: 3 }]\r\n            : commonStyles.text,\r\n          styles.resultText,\r\n          { left: item.level * 10 + 10 },\r\n        ]}\r\n      >\r\n        {item.level === 0 ? props.root : item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View\r\n      style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}\r\n    >\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(item) => item.path}\r\n        renderItem={({ item }) => renderItem(item)}\r\n        ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n});\r\n","import { useColorScheme, useLangContext, View, Text } from '@blacktokki/core';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { TextInput, TouchableOpacity, FlatList, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { parseHtmlToParagraphs } from './HeaderSelectBar';\r\n\r\nlet _searchText = '';\r\n\r\ntype SearchContent = Content | KeywordContent;\r\n\r\nfunction extractHtmlLinksWithQuery(text: string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map((a) => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href,\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nfunction urlToNoteLink(url: string) {\r\n  const newLocation = new URL(url);\r\n  if (location.origin === newLocation.origin) {\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get('title');\r\n    const paragraph = params.get('paragraph') || params.get('section') || undefined;\r\n    if (title) {\r\n      return { title, paragraph };\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLink(url: string, navigation: StackNavigationProp<NavigationParamList>) {\r\n  const noteLink = urlToNoteLink(url);\r\n  if (noteLink) {\r\n    navigation.push('NotePage', noteLink);\r\n  } else {\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nexport function getLinks(pages: Content[], sameTitle?: boolean) {\r\n  return pages\r\n    .flatMap((v) =>\r\n      extractHtmlLinksWithQuery(v.description || '').map((v2) => {\r\n        const noteLink = urlToNoteLink(v2.url);\r\n        if (noteLink) {\r\n          if (sameTitle || v2.text !== noteLink.title) {\r\n            return {\r\n              type: '_NOTELINK' as '_NOTELINK',\r\n              name: v2.text,\r\n              ...noteLink,\r\n              origin: v.title,\r\n            };\r\n          }\r\n          return undefined;\r\n        }\r\n        return { type: '_LINK' as '_LINK', url: v2.url, name: v2.text, origin: v.title };\r\n      })\r\n    )\r\n    .filter((v) => v !== undefined);\r\n}\r\n\r\nexport const getFilteredPages = (pages: Content[], searchText: string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase().normalize('NFKD');\r\n  const links = getLinks(pages);\r\n  return [\r\n    ...pages.filter((page) =>\r\n      page.title.toLowerCase().normalize('NFKD').startsWith(lowerCaseSearch)\r\n    ),\r\n    ...links.filter((v) => v.name.toLowerCase().normalize('NFKD').startsWith(lowerCaseSearch)),\r\n  ];\r\n};\r\n\r\nconst RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter((v) => v.description);\r\n  return (\r\n    randomPages && (\r\n      <TouchableOpacity\r\n        style={commonStyles.searchButton}\r\n        onPress={() => {\r\n          const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n          const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n          navigation.push('NotePage', {\r\n            title: page.title,\r\n            paragraph: paragraphs[Math.floor(Math.random() * paragraphs.length)].title,\r\n          });\r\n        }}\r\n      >\r\n        <Icon name={'random'} size={18} color=\"#FFFFFF\" />\r\n      </TouchableOpacity>\r\n    )\r\n  );\r\n};\r\n\r\nexport const titleFormat = (item: { title: string; paragraph?: string }) =>\r\n  `${item.title}${item.paragraph ? ' ▶ ' + item.paragraph : ''}`;\r\n\r\nexport const SearchList = ({\r\n  filteredPages,\r\n  handlePagePress,\r\n  addKeyword,\r\n}: {\r\n  filteredPages: SearchContent[];\r\n  handlePagePress: (title: string, paragraph?: string) => void;\r\n  addKeyword?: (keyword: KeywordContent) => void;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item: SearchContent) => {\r\n    return PanResponder.create({\r\n      onPanResponderStart: () => {\r\n        if (item.type === '_NOTELINK' && item.paragraph) {\r\n          handlePagePress(item.title, item.paragraph);\r\n          addKeyword?.(item);\r\n        } else if (item.type === '_LINK') {\r\n          window.open(item.url, '_blank');\r\n          addKeyword?.(item);\r\n        } else {\r\n          handlePagePress(item.title);\r\n          addKeyword?.({ type: '_KEYWORD', title: item.title });\r\n        }\r\n      },\r\n    }).panHandlers;\r\n  }, []);\r\n\r\n  return (\r\n    <FlatList\r\n      data={filteredPages}\r\n      keyExtractor={(item: any) => JSON.stringify([item.title, item.name, item.paragraph])}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity style={styles.resultItem} {...pagePressHandlers(item)}>\r\n          <Text style={[commonStyles.text, styles.resultText, { flexShrink: 0 }]}>\r\n            {item.type === '_NOTELINK' || item.type === '_LINK' ? item.name : item.title}\r\n          </Text>\r\n          {item.type === '_NOTELINK' && (\r\n            <Text\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n              style={[commonStyles.text, styles.resultText, { fontSize: 12, paddingLeft: 24 }]}\r\n            >\r\n              {titleFormat(item)}\r\n            </Text>\r\n          )}\r\n          {item.type === '_LINK' && (\r\n            <Text\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n              style={[commonStyles.text, styles.resultText, { fontSize: 12, paddingLeft: 24 }]}\r\n            >\r\n              {titleFormat({ title: item.origin, paragraph: item.url })}\r\n            </Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SearchBar: React.FC<{\r\n  handlePress?: (title: string) => void;\r\n  useRandom?: boolean;\r\n}> = ({ handlePress, useRandom = true }) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const { lang } = useLangContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput | null>();\r\n  const { data: keywords = [] } = useKeywords();\r\n  const addKeyword = useAddKeyowrd();\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages: SearchContent[] = (\r\n    searchText.length > 0 ? getFilteredPages(pages, searchText) : keywords\r\n  )\r\n    .filter((v) => handlePress === undefined || v.type === 'NOTE')\r\n    .slice(0, 10);\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim());\r\n      addKeyword.mutate({ type: '_KEYWORD', title: searchText.trim() });\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, paragraph?: string) => {\r\n    if (handlePress) {\r\n      handlePress(title);\r\n    } else {\r\n      navigation.push('NotePage', { title, paragraph });\r\n    }\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(\r\n    () =>\r\n      PanResponder.create({\r\n        onPanResponderStart: handleSearch,\r\n      }).panHandlers,\r\n    [searchText]\r\n  );\r\n\r\n  useEffect(() => {\r\n    _searchText = searchText;\r\n  }, [searchText]);\r\n\r\n  useFocusEffect(() => {\r\n    if (searchText !== _searchText) {\r\n      setSearchText(_searchText);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={(ref) => {\r\n            inputRef.current = ref;\r\n          }}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder={lang('Search')}\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={() => setShowResults(true)}\r\n          onBlur={() => setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={'search'} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton />}\r\n      </View>\r\n\r\n      {showResults && (\r\n        <View\r\n          style={[\r\n            styles.resultsContainer,\r\n            theme === 'dark' ? styles.darkResults : styles.lightResults,\r\n          ]}\r\n        >\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList\r\n              filteredPages={filteredPages}\r\n              handlePagePress={handlePagePress}\r\n              addKeyword={addKeyword.mutate}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity style={styles.resultItem} {...searchHandlers}>\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import { CommonButton, Text, useLangContext, useModalsContext, View } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nexport default function AlertModal({\r\n  type,\r\n  callbacks,\r\n}: {\r\n  type: string;\r\n  callbacks: (() => void)[];\r\n}) {\r\n  const { lang } = useLangContext();\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(AlertModal, null);\r\n  };\r\n  const messages = {\r\n    UNSAVED: {\r\n      message: 'Changes that you made may not be saved.',\r\n      buttons: [\r\n        {\r\n          title: 'save',\r\n          onPress: () => {\r\n            callbacks[0]();\r\n            back();\r\n          },\r\n        },\r\n        {\r\n          title: 'do not save',\r\n          onPress: () => {\r\n            callbacks[1]();\r\n            back();\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  } as Record<string, { message: string; buttons: { title: string; onPress: () => void }[] }>;\r\n\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ padding: 16 }}>\r\n        <Text>{lang(messages[type].message)}</Text>\r\n        <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n          {messages[type].buttons.map((button, i) => (\r\n            <CommonButton\r\n              key={i}\r\n              style={{ marginRight: 10 }}\r\n              title={lang(button.title)}\r\n              onPress={button.onPress}\r\n            />\r\n          ))}\r\n          <CommonButton title={lang('cancel')} onPress={() => back()} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import {\r\n  Calendar,\r\n  useLangContext,\r\n  useModalsContext,\r\n  View,\r\n  Text,\r\n  CommonButton,\r\n} from '@blacktokki/core';\r\nimport { CalendarProps } from '@blacktokki/core/build/typescript/components/Calendar';\r\nimport dayjs from 'dayjs';\r\nimport React, { Suspense, useState } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\nexport type MarkedDateRange = { dateStart: string; dateEnd: string };\r\n\r\nconst DIRECT_PICK = true;\r\n\r\nconst getMarkedDays = (dateString: string, markedDateStrings: MarkedDateRange[]) => {\r\n  const disableDays: string[] = [];\r\n  const date = dayjs(dateString);\r\n  let startDate = date.clone().startOf('month').add(-1, 'month');\r\n  const endDate = date.clone().endOf('month').add(1, 'month');\r\n  const markedDate = markedDateStrings.map((v) => ({\r\n    startDate: dayjs(v.dateStart),\r\n    endDate: dayjs(v.dateEnd),\r\n  }));\r\n  const markedDays: string[] = [];\r\n  // const today = dayjs().startOf('day');\r\n  while (startDate <= endDate) {\r\n    // if (startDate < today) {\r\n    //   disableDays.push(startDate.format('YYYY-MM-DD'));\r\n    // }\r\n    if (markedDate.find((v) => !v.startDate.isAfter(startDate) && !v.endDate.isBefore(startDate))) {\r\n      markedDays.push(startDate.format('YYYY-MM-DD'));\r\n    }\r\n    startDate = startDate.add(1, 'day');\r\n  }\r\n  return {\r\n    ...disableDays.reduce((p, c) => {\r\n      p[c] = { disabled: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...markedDays.reduce((p, c) => {\r\n      p[c] = { marked: true, dotColor: 'red' };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...(dateString ? [dateString] : []).reduce((p, c) => {\r\n      p[c] = { selected: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n  };\r\n};\r\n\r\nconst defaultDayjs = () => {\r\n  const m = dayjs();\r\n  const restMinute = parseInt(m.format('mm'), 10) % 5;\r\n  return m.add(5 - restMinute, 'minute');\r\n};\r\n\r\nexport default function DatePickerModal({\r\n  datetime,\r\n  markedDateStrings,\r\n  callback,\r\n}: {\r\n  datetime?: string;\r\n  markedDateStrings?: MarkedDateRange[];\r\n  callback: (datetime?: string) => void;\r\n}) {\r\n  const _dayjs = datetime ? dayjs(datetime) : defaultDayjs();\r\n  const { lang, locale } = useLangContext();\r\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\r\n  const [markedDates, setMarkedDates] = useState<CalendarProps['markedDates']>(\r\n    getMarkedDays(_dayjs.format('YYYY-MM-DD'), markedDateStrings || [])\r\n  );\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(DatePickerModal, null);\r\n  };\r\n  const onSave = (datetime?: string) => {\r\n    callback?.(datetime);\r\n    back();\r\n  };\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ alignItems: 'center', minHeight: 450 }}>\r\n        <View style={{ flexDirection: 'row', width: '100%' }}>\r\n          <View style={{ flex: 1, flexDirection: 'row' }}>\r\n            <TouchableOpacity onPress={back}>\r\n              <Text>{lang('back')}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={{ fontSize: 20, textAlign: 'center' }}>{lang('Date')}</Text>\r\n          </View>\r\n          <View style={{ flex: 1 }} />\r\n        </View>\r\n        <View\r\n          style={{ marginBottom: 20, height: 1, width: '100%' }}\r\n          lightColor=\"#ddd\"\r\n          darkColor=\"rgba(255,255,255, 0.3)\"\r\n        />\r\n        <Suspense fallback={<></>}>\r\n          <Calendar\r\n            locale={locale}\r\n            style={undefined}\r\n            date={date}\r\n            setDate={DIRECT_PICK ? onSave : setDate}\r\n            disableAllTouchEventsForDisabledDays={true}\r\n            onMonthChange={(v) =>\r\n              setMarkedDates(getMarkedDays(v.dateString, markedDateStrings || []))\r\n            }\r\n            markedDates={markedDates}\r\n          />\r\n        </Suspense>\r\n        {!DIRECT_PICK && (\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <CommonButton title={lang('save')} onPress={() => onSave(date)} />\r\n            <CommonButton title={lang('cancel')} onPress={() => onSave(undefined)} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import AlertModal from './AlertModal';\r\nimport DatePickerModal from './DatePikcerModal';\r\n\r\nexport default [DatePickerModal, AlertModal];\r\n","import { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport React, { useRef } from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport { titleFormat } from '../../components/SearchBar';\r\nimport { createCommonStyles } from '../../styles';\r\n\r\nexport const NoteListSection = ({\r\n  contents,\r\n  isLoading,\r\n  onPress,\r\n  emptyMessage,\r\n  onScrollEnd,\r\n}: {\r\n  contents: {\r\n    title: string;\r\n    paragraph?: string;\r\n    subtitles?: string[];\r\n    id?: number;\r\n  }[];\r\n  isLoading: boolean;\r\n  onPress: (title: string, paragraph?: string, id?: number) => void;\r\n  emptyMessage: string;\r\n  onScrollEnd?: () => void;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { lang } = useLangContext();\r\n  const height = useRef(0);\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : contents.length > 0 ? (\r\n        <FlatList\r\n          data={contents}\r\n          keyExtractor={(item) => JSON.stringify([item.title, item.paragraph, item.id])}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => onPress(item.title, item.paragraph, item.id)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n              {(item.subtitles || []).map((subtitle, index) => (\r\n                <Text key={index} style={[commonStyles.smallText]}>\r\n                  {subtitle}\r\n                </Text>\r\n              ))}\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n          onScroll={(e) => {\r\n            if (\r\n              e.nativeEvent.contentSize.height - height.current - e.nativeEvent.contentOffset.y <\r\n              1\r\n            )\r\n              onScrollEnd?.();\r\n          }}\r\n          onLayout={(p) => {\r\n            height.current = p.nativeEvent.layout.height;\r\n          }}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text selectable={false} style={commonStyles.text}>\r\n            {lang(emptyMessage)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n","import { CommonButton, useLangContext } from '@blacktokki/core';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\n\r\nimport { Paragraph } from './HeaderSelectBar';\r\n\r\ntype DatePattern = {\r\n  pattern: string;\r\n  format?: (s: string, e: string) => string;\r\n  text: string;\r\n  dateStart: string;\r\n  dateEnd: string;\r\n  index: number;\r\n};\r\n\r\nfunction extractDates(input: string) {\r\n  const now = new Date();\r\n  const currentYear = now.getFullYear();\r\n  // 정규식 패턴들\r\n  const patterns: {\r\n    regex: RegExp;\r\n    parse: (match: RegExpExecArray) => DatePattern;\r\n  }[] = [\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\/(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        // YYYY-MM-DD/YYYY-MM-DD\r\n        pattern: 'YYYY-MM-DD',\r\n        format: (s, e) => `${s}/${e}`,\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[2],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        pattern: 'YYYY-MM-DD',\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[1],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b\\d{4}-\\d{2}(?!-)\\b/g,\r\n      parse: (match) => {\r\n        const split = match[0].split('-');\r\n        const year = parseInt(split[0], 10);\r\n        const month = parseInt(split[1], 10);\r\n        const lastDay = new Date(year, month, 0).getDate();\r\n        return {\r\n          pattern: 'YYYY-MM',\r\n          text: match[0],\r\n          dateStart: `${year}-${String(month).padStart(2, '0')}-01`,\r\n          dateEnd: `${year}-${String(month).padStart(2, '0')}-${String(lastDay).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      regex: /\\b(\\d{2})\\/(\\d{2})\\s*~\\s*(\\d{2})\\/(\\d{2})\\b/g,\r\n      parse: (match) => {\r\n        const mm = parseInt(match[1], 10);\r\n        const dd = parseInt(match[2], 10);\r\n        const mm2 = parseInt(match[3], 10);\r\n        const dd2 = parseInt(match[4], 10);\r\n        return {\r\n          // MM/DD ~ MM/DD\r\n          pattern: 'MM/DD',\r\n          format: (s, e) => `${s} ~ ${e}`,\r\n          text: match[0],\r\n          dateStart: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          dateEnd: `${currentYear}-${String(mm2).padStart(2, '0')}-${String(dd2).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      regex: /\\b(?<!\\d)(\\d{2})\\/(\\d{2})(?!\\d)\\b/g,\r\n      parse: (match) => {\r\n        const mm = parseInt(match[1], 10);\r\n        const dd = parseInt(match[2], 10);\r\n        return {\r\n          pattern: 'MM/DD',\r\n          text: match[0],\r\n          dateStart: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          dateEnd: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n  ];\r\n\r\n  const results: DatePattern[] = [];\r\n\r\n  const usedRanges: [number, number][] = [];\r\n\r\n  for (const pattern of patterns) {\r\n    const regex = new RegExp(pattern.regex.source, 'g');\r\n    let match: RegExpExecArray | null;\r\n\r\n    while ((match = regex.exec(input)) !== null) {\r\n      const start = match.index;\r\n      const end = regex.lastIndex;\r\n      // 이미 처리된 범위에 속하면 skip\r\n      if (results.some((result) => start < result.index + result.text.length && end > result.index))\r\n        continue;\r\n      results.push(pattern.parse(match));\r\n      usedRanges.push([start, end]);\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\nexport function cleanHtml(html: string, cleanAnchors: boolean, mergeTds: boolean): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // 1. <code> 태그 내부 비우기\r\n  const codeTags = doc.querySelectorAll('code');\r\n  codeTags.forEach((code) => {\r\n    code.textContent = '';\r\n  });\r\n  // 2. <a> 태그 내부 비우기\r\n  const aTags = doc.querySelectorAll('a');\r\n  aTags.forEach((a) => {\r\n    a.textContent = '';\r\n  });\r\n  if (mergeTds) {\r\n    // 3. 각 <tr> 안의 <td> 병합\r\n    const trList = doc.querySelectorAll('tr');\r\n    trList.forEach((tr) => {\r\n      const tdList = tr.querySelectorAll('td');\r\n      if (tdList.length > 1) {\r\n        const mergedText = Array.from(tdList)\r\n          .map((td) => td.textContent?.trim() || '')\r\n          .join(' ');\r\n\r\n        // 첫 td에 병합된 텍스트 설정\r\n        const newTd = document.createElement('td');\r\n        newTd.textContent = mergedText;\r\n\r\n        // 기존 td 모두 제거 후 병합 td 삽입\r\n        tr.innerHTML = '';\r\n        tr.appendChild(newTd);\r\n      }\r\n    });\r\n  }\r\n  return doc.body.innerHTML;\r\n}\r\n\r\nexport const paragraphsToDatePatterns = (title: string, paragraphs: Paragraph[]) => {\r\n  return paragraphs\r\n    .map((paragraph) => {\r\n      const dateMatches = [\r\n        toRaw(paragraph.header),\r\n        ...toRaw(cleanHtml(paragraph.description, false, true)).split('\\n'),\r\n      ].map((v2, i) => ({\r\n        path: paragraph.path,\r\n        isHeader: i === 0,\r\n        original: v2,\r\n        matches: extractDates(v2),\r\n      }));\r\n      return { title, paragraph: paragraph.title, dateMatches };\r\n    })\r\n    .filter((v) => v.dateMatches.filter((v2) => v2.matches.length > 0).length > 0);\r\n};\r\n\r\nexport const matchDateRange = (\r\n  dateMatches: { matches: DatePattern[]; original: string; path: string; isHeader: boolean }[],\r\n  dateNum: number\r\n) => {\r\n  return dateMatches.filter((dateMatch) =>\r\n    dateMatch.matches.find(\r\n      (match) =>\r\n        new Date(match.dateStart).getTime() <= dateNum &&\r\n        dateNum <= new Date(match.dateEnd).getTime()\r\n    )\r\n  );\r\n};\r\n\r\nexport const today = () => dayjs().format('YYYY-MM-DD');\r\n\r\nexport type TimerData = DatePattern & { original: string; replace: (a: string) => void };\r\n\r\nconst TimerTag = (props: {\r\n  data: TimerData;\r\n  buttons: (data: TimerData) => { title: string; onPress: () => void }[];\r\n  now: dayjs.Dayjs;\r\n  isExpand: boolean;\r\n  toggleExpand: () => void;\r\n}) => {\r\n  const start = dayjs(props.data.dateStart);\r\n  const end = dayjs(props.data.dateEnd).add(1, 'day');\r\n  const ratio = start.diff(props.now) / start.diff(end);\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <TouchableOpacity onPress={() => props.toggleExpand()}>\r\n      <View\r\n        style={{ backgroundColor: 'lightgray', borderRadius: 20, overflow: 'hidden', margin: 4 }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: 'darkgray',\r\n            position: 'absolute',\r\n            width: `${ratio * 100}%`,\r\n            height: '100%',\r\n          }}\r\n        />\r\n        {props.isExpand ? (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, maxWidth: 270 }}>\r\n            <View style={{ flexDirection: 'row', alignItems: 'stretch' }}>\r\n              <Text>⌚</Text>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n            <Text>{props.data.original}</Text>\r\n            <View style={{ width: '100%', alignItems: 'center' }}>\r\n              {props.buttons(props.data).map((v) => (\r\n                <CommonButton\r\n                  key={v.title}\r\n                  title={lang(v.title)}\r\n                  onPress={() => {\r\n                    v.onPress();\r\n                    props.toggleExpand();\r\n                  }}\r\n                  style={{ width: '100%', backgroundColor: '#8888', margin: 4, maxWidth: 150 }}\r\n                />\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, flexDirection: 'row' }}>\r\n            <View style={{ paddingHorizontal: 4 }}>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\nexport default TimerTag;\r\n","import { toRaw } from '@blacktokki/editor';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Paragraph, parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { getLinks, titleFormat } from '../components/SearchBar';\r\nimport { cleanHtml } from '../components/TimerTag';\r\nimport { Content } from '../types';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nconst getReadabilityLevel = (() => {\r\n  function getKoreanRatio(text: string): number {\r\n    return (text.match(/[가-힣]/g) || []).length / text.length;\r\n  }\r\n\r\n  function countSyllables(word: string): number {\r\n    word = word.toLowerCase();\r\n    if (word.length <= 3) return 1;\r\n    const vowels = /[aeiouy]+/g;\r\n    const trailingE = /e\\b/;\r\n    const matches = word.match(vowels) || [];\r\n    let syllables = matches.length;\r\n    if (trailingE.test(word) && syllables > 1) syllables--;\r\n    return Math.max(syllables, 1);\r\n  }\r\n\r\n  function calculateFleschKincaid(text: string): number {\r\n    const sentenceCount = (text.match(/[.!?\\n]+/g) || []).length || 1;\r\n    const wordList = text.trim().split(/\\s+/);\r\n    const wordCount = wordList.length;\r\n    const syllableCount = wordList.reduce((sum, word) => sum + countSyllables(word), 0);\r\n    return 0.39 * (wordCount / sentenceCount) + 11.8 * (syllableCount / wordCount) - 15.59;\r\n  }\r\n\r\n  function classifyFleschKincaid(score: number): number {\r\n    if (score < 3.0) return 1;\r\n    if (score < 6.0) return 2;\r\n    if (score < 9.0) return 3;\r\n    if (score < 12.0) return 4;\r\n    return 5;\r\n  }\r\n\r\n  function classifyKoreanReadability(text: string): number {\r\n    const sentences = text.split(/[.?!\\n]/).filter((s) => s.trim().length > 0);\r\n    const words = text.trim().split(/\\s+/);\r\n    const wordCount = words.length;\r\n    const sentenceCount = sentences.length || 1;\r\n    const avgWordsPerSentence = wordCount / sentenceCount;\r\n\r\n    if (avgWordsPerSentence <= 7) return 1; // 매우 쉬움\r\n    if (avgWordsPerSentence <= 10) return 2;\r\n    if (avgWordsPerSentence <= 13) return 3;\r\n    if (avgWordsPerSentence <= 16) return 4;\r\n    return 5; // 매우 어려움\r\n  }\r\n\r\n  function _getReadabilityLevel(text: string) {\r\n    const koRatio = getKoreanRatio(text);\r\n    const enGrade = calculateFleschKincaid(text);\r\n    const enLevel = classifyFleschKincaid(enGrade);\r\n    const koLevel = classifyKoreanReadability(text);\r\n    return { koRatio, enLevel, koLevel, level: koLevel * koRatio + enLevel * (1 - koRatio) };\r\n  }\r\n  return _getReadabilityLevel;\r\n})();\r\n\r\nfunction findLists(html: string): { type: 'ul' | 'ol'; items: string[] }[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  const results: { type: 'ul' | 'ol'; items: string[] }[] = [];\r\n\r\n  const listTags = ['ul', 'ol'] as const;\r\n\r\n  listTags.forEach((tag) => {\r\n    const lists = Array.from(doc.querySelectorAll(tag));\r\n\r\n    lists.forEach((list) => {\r\n      const items: string[] = [];\r\n\r\n      const liElements = list.querySelectorAll('li');\r\n      liElements.forEach((li) => {\r\n        // li 요소 내 중첩 리스트는 제거하고 텍스트만 추출\r\n        const cloned = li.cloneNode(true) as HTMLElement;\r\n\r\n        // 중첩된 리스트 제거\r\n        cloned.querySelectorAll('ul, ol').forEach((nested) => nested.remove());\r\n\r\n        items.push(cloned.textContent?.trim() || '');\r\n      });\r\n\r\n      results.push({ type: tag, items });\r\n    });\r\n  });\r\n\r\n  return results;\r\n}\r\n\r\nexport const getSplitTitle = (title: string) => {\r\n  const splitTitle = title.split('/');\r\n  if (splitTitle.length < 2) {\r\n    return [title];\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length - 1).join('/'), splitTitle[splitTitle.length - 1]];\r\n};\r\n\r\nexport const paragraphDescription = (\r\n  paragraphs: Paragraph[],\r\n  paragraph: string,\r\n  rootTitle: boolean\r\n) => {\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path;\r\n  return path\r\n    ? paragraphs\r\n        .filter((v) => v.path === path || v.path.startsWith(path + ' > '))\r\n        .map((v) => (rootTitle || v.path !== path ? v.header : '') + v.description)\r\n        .join('')\r\n    : '';\r\n};\r\n\r\nconst trim = (text: string) => text.replaceAll('\\n', '').replaceAll('&nbsp;', '').trim();\r\n\r\ntype ProblemItem = [string, string | undefined, string]; // title, paragraph, subtitle\r\ntype ProblemSource = {\r\n  title: string;\r\n  updated: string;\r\n  raw: string;\r\n  links: { name: string; title: string; paragraph?: string; origin: string }[];\r\n  parentTitle: string | undefined;\r\n};\r\n\r\nconst problemCache: Record<\r\n  string,\r\n  {\r\n    record: ProblemItem[];\r\n    source: ProblemSource;\r\n    matrix: Record<string, { updated: string; record: ProblemItem[] }>;\r\n  }\r\n> = {};\r\n\r\nconst getDataLinear = (page: Content) => {\r\n  const existData = problemCache[page.title];\r\n  if (existData?.source.updated === page.updated) {\r\n    return problemCache[page.title];\r\n  }\r\n  const record: ProblemItem[] = [];\r\n  // empty contents\r\n  const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n  const lists = paragraphs\r\n    .map((v) => ({ ...v, lists: findLists(v.description) }))\r\n    .filter((v) => v.lists.length > 0);\r\n  paragraphs\r\n    .filter(\r\n      (v) => v.level !== 0 && trim(paragraphDescription(paragraphs, v.title, false)).length === 0\r\n    )\r\n    .forEach((v) =>\r\n      record.push([page.title, v.level === 0 ? undefined : v.title, 'Empty paragraph'])\r\n    );\r\n  lists\r\n    .filter(\r\n      (v) =>\r\n        v.lists.filter((v2) => v2.items.filter((v2) => trim(v2).length === 0).length > 0).length > 0\r\n    )\r\n    .forEach((v2) =>\r\n      record.push([page.title, v2.level === 0 ? undefined : v2.title, 'Empty list'])\r\n    );\r\n\r\n  // duplicate contents\r\n  paragraphs\r\n    .filter((v) => v !== paragraphs.findLast((v2) => v2.path === v.path))\r\n    .forEach((v) => record.push([page.title, undefined, `Duplicate paragraphs(${v})`]));\r\n  paragraphs\r\n    .map((v) => {\r\n      const sentences = cleanHtml(v.description, false, true)\r\n        .split('\\n')\r\n        .map((v2) => toRaw(v2).trim())\r\n        .filter((v) => v.includes(' ') && v.length > 4);\r\n      return {\r\n        ...v,\r\n        duplicates: sentences.filter((v2, i) => i !== sentences.lastIndexOf(v2)),\r\n      };\r\n    })\r\n    .forEach((v) =>\r\n      v.duplicates.forEach((v2) =>\r\n        record.push([page.title, v.level === 0 ? undefined : v.title, `Duplicate contents(${v2})`])\r\n      )\r\n    );\r\n  // readability\r\n  const readability = page.description\r\n    ? getReadabilityLevel(\r\n        toRaw(\r\n          page.description\r\n            .replaceAll(/<code\\b[^>]*>[\\s\\S]*?<\\/code>/gi, '<code></code>')\r\n            .replaceAll(/<br\\s*[/]?>/gi, '\\r\\n')\r\n        )\r\n      )\r\n    : { level: 0 };\r\n  if (readability.level > 3.0) {\r\n    record.push([\r\n      page.title,\r\n      undefined,\r\n      `Too high readability score: ${readability.level.toFixed(4)} > 3.0`,\r\n    ]);\r\n  }\r\n  const links = getLinks([page], true).filter((v) => v.type === '_NOTELINK');\r\n  const splitTitle = getSplitTitle(page.title);\r\n  const parentTitle = page.description && splitTitle.length === 2 ? splitTitle[0] : undefined;\r\n  const raw = toRaw(cleanHtml(page.description || '', true, false));\r\n  problemCache[page.title] = {\r\n    record,\r\n    source: { title: page.title, updated: page.updated, links, parentTitle, raw },\r\n    matrix: {},\r\n  };\r\n  return problemCache[page.title];\r\n};\r\n\r\nconst getDataMatrix = (source: ProblemSource, target: Content) => {\r\n  if (source.title === target.title) {\r\n    return [];\r\n  }\r\n  const existData = problemCache[source.title];\r\n  const existTarget = existData.matrix[target.title];\r\n  if (existData?.source.updated === source.updated && existTarget?.updated === target.updated) {\r\n    return existTarget.record;\r\n  }\r\n  const record: ProblemItem[] = [];\r\n  const links = source.links.filter((link) => link.title === target.title);\r\n\r\n  if (target.description) {\r\n    const description = target.description;\r\n    const _target = problemCache[target.title].source;\r\n    //unknown paragraph\r\n    links\r\n      .filter(\r\n        (link) =>\r\n          link.paragraph !== undefined &&\r\n          parseHtmlToParagraphs(description).find((v2) => v2.title === link.paragraph) === undefined\r\n      )\r\n      .forEach((link) => {\r\n        record.push([link.title, link.paragraph, `Unknown paragraph link(${link.origin})`]);\r\n      });\r\n    //unlinked keyword\r\n    const sourceName = source.title;\r\n    if (\r\n      _target.parentTitle !== source.title &&\r\n      _target.links.find((v) => v.name.toLowerCase() === sourceName.toLowerCase()) === undefined\r\n    ) {\r\n      const match = _target.raw.match(new RegExp(`\\\\b${sourceName}\\\\b`, 'i'));\r\n      if (match) {\r\n        record.push([target.title, undefined, `Unlinked note keyword: ${match[0]}`]);\r\n      }\r\n    }\r\n    source.links\r\n      .filter(\r\n        (link) =>\r\n          _target.parentTitle !== link.title &&\r\n          link.title.toLowerCase() !== link.name.toLowerCase() && // alias link only\r\n          link.title !== target.title && // not self link\r\n          _target.links.find(\r\n            (v) =>\r\n              v.name.toLowerCase() === link.name.toLowerCase() &&\r\n              v.title === link.title &&\r\n              v.paragraph === link.paragraph\r\n          ) === undefined\r\n      )\r\n      .forEach((link) => {\r\n        const match = _target.raw.match(new RegExp(`\\\\b${link.name}\\\\b`, 'i'));\r\n        if (match) {\r\n          record.push([\r\n            target.title,\r\n            undefined,\r\n            `Unlinked note keyword: ${match[0]} => ${titleFormat(link)}(${link.origin})`,\r\n          ]);\r\n        }\r\n      });\r\n  } else {\r\n    //unknown note\r\n    links.forEach((link) => {\r\n      record.push([link.title, link.paragraph, `Unknown note link(${link.origin})`]);\r\n    });\r\n\r\n    //empty parent note\r\n    if (source.parentTitle === target.title) {\r\n      record.push([source.parentTitle, undefined, `Empty parent note(${source.title})`]);\r\n    }\r\n  }\r\n  existData.matrix[target.title] = { record, updated: target.updated };\r\n\r\n  return record;\r\n};\r\n\r\nconst getData = (pages: Content[]) => {\r\n  const records: { title: string; paragraph: string | undefined; subtitles: string[] }[] = [];\r\n  pages\r\n    .map(getDataLinear)\r\n    .flatMap(({ record, source }) => {\r\n      return [...pages.flatMap((target) => getDataMatrix(source, target)), ...record];\r\n    })\r\n    .forEach(([title, paragraph, subtitle]) => {\r\n      const i = records.findIndex((v) => v.title === title && v.paragraph === paragraph);\r\n      if (i >= 0) {\r\n        records[i].subtitles.push(subtitle);\r\n      } else {\r\n        records.push({ title, paragraph, subtitles: [subtitle] });\r\n      }\r\n    });\r\n  return records;\r\n};\r\n\r\nexport default (delay?: number) => {\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const [data, setData] = useState<{ title: string; paragraph?: string; subtitles: string[] }[]>();\r\n  const timeoutRef = useRef<NodeJS.Timeout>();\r\n  useEffect(() => {\r\n    timeoutRef.current && clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = setTimeout(() => {\r\n      setData(getData(pages));\r\n      timeoutRef.current = undefined;\r\n    }, delay || 500);\r\n  }, [pages]);\r\n  return { data: data || [], isLoading: isLoading || data === undefined };\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nimport { parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { matchDateRange, paragraphsToDatePatterns, today } from '../components/TimerTag';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nexport default (date?: string) => {\r\n  const dateNum = new Date(date || today()).getTime();\r\n\r\n  const { data: notes = [], isLoading } = useNotePages();\r\n  const preData = useMemo(\r\n    () =>\r\n      notes.flatMap((v) =>\r\n        paragraphsToDatePatterns(v.title, parseHtmlToParagraphs(v?.description || ''))\r\n      ),\r\n    [notes]\r\n  );\r\n  const data = preData\r\n    .map((v) => {\r\n      return {\r\n        ...v,\r\n        subtitles: matchDateRange(v.dateMatches, dateNum).map((dateMatch) => dateMatch.original),\r\n      };\r\n    })\r\n    .filter((v2) => v2.subtitles.length > 0);\r\n  return { data, isLoading, preData };\r\n};\r\n","import { useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport { navigate, push } from '@blacktokki/navigation';\r\nimport React, { useRef } from 'react';\r\nimport { List, TouchableRipple, Badge } from 'react-native-paper';\r\n\r\nimport {\r\n  useRecentPages,\r\n  useNotePages,\r\n  useDeleteRecentPage,\r\n  useLastPage,\r\n  useAddRecentPage,\r\n} from '../../../hooks/useNoteStorage';\r\nimport useProblem from '../../../hooks/useProblem';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape: boolean) => {\r\n  return isLandscape ? 5 : 8;\r\n};\r\n\r\nexport const TimeLineButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useTimeLine();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'calendar'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('TimeLine')}\r\n      onPress={() => navigate('TimeLine')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ProblemButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useProblem();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'note-alert'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('Problems')}\r\n      onPress={() => push('Problem')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const toRecentContents = (data: Content[]) =>\r\n  data\r\n    .filter((v) => v.description)\r\n    .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime());\r\n\r\nconst ContentGroupSection = (\r\n  props: { type: 'PAGE' | 'LAST' } | { type: 'NOTE'; noteCount: number }\r\n) => {\r\n  const { lang } = useLangContext();\r\n  const notes = useNotePages();\r\n  const pages = useRecentPages();\r\n  const { data: lastPage } = useLastPage();\r\n  const tabRef = useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage();\r\n  const deleteRecentPage = useDeleteRecentPage();\r\n  const data =\r\n    props.type === 'NOTE' ? (notes.data ? toRecentContents(notes.data) : []) : pages.data;\r\n  const lastPageExists = lastPage && data?.find((v) => v.id === lastPage.id) === undefined;\r\n  const window = useResizeContext();\r\n  const itemPadding = getItemPadding(window === 'landscape');\r\n  const noteOnPress = (title: string) => {\r\n    if (title === lastPage?.title) {\r\n      if (tabRef.current) {\r\n        clearTimeout(tabRef.current);\r\n        tabRef.current = undefined;\r\n        addRecentPage.mutate({ title });\r\n      } else {\r\n        tabRef.current = setTimeout(() => {\r\n          tabRef.current = undefined;\r\n        }, 500);\r\n      }\r\n    }\r\n    navigate('NotePage', { title });\r\n  };\r\n  const noteOnLongPress = (title: string) => {\r\n    if (tabRef.current) {\r\n      clearTimeout(tabRef.current);\r\n      tabRef.current = undefined;\r\n    }\r\n    if (pages.data?.find((v) => v.title === title) === undefined) {\r\n      addRecentPage.mutate({ title, direct: true });\r\n    } else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  };\r\n  return (\r\n    (props.type !== 'LAST' || lastPageExists) && (\r\n      <List.Section>\r\n        {data &&\r\n          (props.type === 'LAST' ? (\r\n            lastPageExists && (\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document'} />}\r\n                title={lastPage.title}\r\n                onPress={() => noteOnPress(lastPage.title)}\r\n                onLongPress={() => noteOnLongPress(lastPage.title)}\r\n                style={{ padding: itemPadding }}\r\n                titleStyle={{ fontStyle: 'italic' }}\r\n              />\r\n            )\r\n          ) : props.type === 'NOTE' ? (\r\n            <>\r\n              {data.slice(0, props.noteCount).map((v) => (\r\n                <List.Item\r\n                  key={v.title}\r\n                  left={(_props) => (\r\n                    <List.Icon\r\n                      {..._props}\r\n                      icon={\r\n                        pages.data?.find((v2) => v2.title === v.title) === undefined\r\n                          ? 'notebook'\r\n                          : 'notebook-edit'\r\n                      }\r\n                    />\r\n                  )}\r\n                  title={v.title}\r\n                  onPress={() => noteOnPress(v.title)}\r\n                  onLongPress={() => noteOnLongPress(v.title)}\r\n                  style={{ padding: itemPadding }}\r\n                />\r\n              ))}\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'notebook-multiple'} />}\r\n                title={lang('more...')}\r\n                onPress={() => push('RecentPages')}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            </>\r\n          ) : (\r\n            data.map((v) => (\r\n              <List.Item\r\n                key={v.title}\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document-edit'} />}\r\n                right={(_props) => (\r\n                  <TouchableRipple\r\n                    style={{\r\n                      justifyContent: 'center',\r\n                      borderRadius: itemPadding,\r\n                      width: 40 + itemPadding * 2,\r\n                      height: 40 + itemPadding * 2,\r\n                      margin: -itemPadding,\r\n                    }}\r\n                    onPress={() => deleteRecentPage.mutate(v.title)}\r\n                  >\r\n                    <List.Icon style={{ left: itemPadding - 7 }} icon={'close'} />\r\n                  </TouchableRipple>\r\n                )}\r\n                title={v.title}\r\n                onPress={() => navigate('NotePage', { title: v.title })}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            ))\r\n          ))}\r\n      </List.Section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;\r\n","import { useColorScheme, useResizeContext, View, Text, useLangContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\n\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset();\r\n\r\nexport const updatedFormat = (_updated: string) => {\r\n  const _date = new Date(_updated);\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset);\r\n  const updated = _date.toISOString().slice(0, 16);\r\n  const date = updated.slice(0, 10);\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  return date === today ? updated.slice(11) : date;\r\n};\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape: boolean) => (isLandscape ? 20 : 4);\r\nconst _cardMaxWidth = (isLandscape: boolean) => (isLandscape ? 250 : 190);\r\n\r\ntype Item = (Content & { descriptionComponent: JSX.Element }) | null;\r\n\r\nconst CardPage = React.memo(({ item, index }: { item: Item; index: number }) => {\r\n  const window = useResizeContext();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window === 'landscape' ? 2 : 0;\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexBasis: window === 'landscape' ? '33%' : '50%',\r\n          maxWidth: cardMaxWidth,\r\n          backgroundColor: 'transparent',\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = () => navigation.push('NotePage', { title: item.title });\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexBasis: window === 'landscape' ? '33%' : '50%',\r\n        padding: _cardPadding(window === 'landscape'),\r\n        paddingRight: 0,\r\n        minWidth: cardMaxWidth,\r\n        maxWidth: cardMaxWidth,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Card\r\n        onPress={onPress}\r\n        style={[\r\n          commonStyles.card,\r\n          {\r\n            paddingTop: 8,\r\n            aspectRatio: 1 / Math.sqrt(2),\r\n            borderRadius: 6,\r\n            marginVertical: 10,\r\n            marginHorizontal: 8,\r\n            overflow: 'hidden',\r\n          },\r\n        ]}\r\n      >\r\n        <Card.Content style={{ padding: 0 }}>{mounted && item.descriptionComponent}</Card.Content>\r\n      </Card>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          marginTop: 10,\r\n          padding: 0,\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n          backgroundColor: 'transparent',\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 14 + fSize, overflow: 'hidden' }}>{item.title}</Text>\r\n        <Text style={{ fontSize: 12 + fSize, opacity: 0.4, textAlign: 'right' }}>\r\n          {updatedFormat(item.updated)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n});\r\n\r\nconst renderItem = ({ item, index }: { item: Item; index: number }) => (\r\n  <CardPage key={index} index={index} item={item} />\r\n);\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const RenderHtml = useMemo(() => React.lazy(() => import('react-native-render-html')), []);\r\n  const contents = useMemo(\r\n    () => [\r\n      ...toRecentContents(recentPages).map((v) => ({\r\n        ...v,\r\n        descriptionComponent: (\r\n          <RenderHtml\r\n            source={{ html: removeAllAttributesFromHTML(v.description || '').slice(0, 300) || '' }}\r\n            renderersProps={{\r\n              a: { onPress: () => navigation.push('NotePage', { title: v.title }) },\r\n            }}\r\n            tagsStyles={{ body: { color: commonStyles.text.color } }}\r\n            contentWidth={cardMaxWidth}\r\n          />\r\n        ),\r\n      })),\r\n      null,\r\n      null,\r\n    ],\r\n    [recentPages]\r\n  );\r\n  const maxWidth = (cardMaxWidth + 5) * (window === 'landscape' ? 5 : 3);\r\n  return isLoading ? (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>로딩 중...</Text>\r\n    </View>\r\n  ) : contents.length > 2 ? (\r\n    <ScrollView\r\n      key={window}\r\n      contentContainerStyle={{\r\n        alignSelf: 'center',\r\n        backgroundColor: 'transparent',\r\n        flexBasis: '100%',\r\n        maxWidth,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        paddingRight: _cardPadding(window === 'landscape'),\r\n        justifyContent: window === 'landscape' ? undefined : 'center',\r\n      }}\r\n    >\r\n      <Suspense>{contents.map((item, index) => renderItem({ item, index }))}</Suspense>\r\n    </ScrollView>\r\n  ) : (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>{lang('There are no recently modified notes.')}</Text>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.push('NoteViewer', { key: 'Usage' })}\r\n        style={commonStyles.button}\r\n      >\r\n        <Text style={commonStyles.buttonText}>{lang('Usage')}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n});\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useNotePage, useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>();\r\n  const _window = useResizeContext();\r\n  const title = route.params?.title;\r\n  const { data: note } = useNotePage(title || '');\r\n  const { data: archives = { pages: [] }, isLoading, fetchNextPage } = useSnapshotPages(note?.id);\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={archives.pages\r\n          .flat()\r\n          .filter((v) => title === undefined || title === v.title)\r\n          .map((v, i) => ({\r\n            ...v,\r\n            subtitles: [`최근 수정: ${updatedFormat(v.updated as string)}`],\r\n            id: v.id || i,\r\n          }))}\r\n        isLoading={isLoading}\r\n        onPress={(title, _, id) =>\r\n          (title === undefined ? navigation.push : navigation.navigate)('NotePage', {\r\n            title,\r\n            archiveId: id,\r\n          })\r\n        }\r\n        emptyMessage=\"There are no recently modified notes.\"\r\n        onScrollEnd={fetchNextPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme, useLangContext, useModalsContext } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet } from 'react-native';\r\n\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport AlertModal from '../../modals/AlertModal';\r\nimport { previewUrl } from '../../services/notebook';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nconst useUnsaveEffect = (\r\n  isPrevent: () => boolean,\r\n  handleUnsaved: () => void,\r\n  currentTitle: () => string | undefined\r\n) => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  useEffect(\r\n    () =>\r\n      navigation.addListener('beforeRemove', (e) => {\r\n        if (!isPrevent()) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        if (e.data.action.type === 'NAVIGATE') {\r\n          const payload = e.data.action.payload as any;\r\n          navigation.push(payload.name, payload.params);\r\n          return;\r\n        }\r\n        handleUnsaved();\r\n      }),\r\n    [navigation]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isPrevent() && currentTitle() !== title) {\r\n      navigation.setParams({ title: currentTitle() });\r\n      handleUnsaved();\r\n    }\r\n  }, [navigation, title]);\r\n\r\n  useEffect(() => {\r\n    const callback = (event: any) => {\r\n      if (isPrevent()) {\r\n        event.preventDefault();\r\n        event.returnValue = '';\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  }, []);\r\n};\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const isFocused = useIsFocused();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { lang } = useLangContext();\r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword: string) =>\r\n    pages\r\n      .filter((v) => v.title.startsWith(title + '/'))\r\n      .map((v) => ({\r\n        type: '_CHILDNOTE' as '_CHILDNOTE',\r\n        name: v.title.split(title + '/')[1],\r\n        title: v.title,\r\n      }))\r\n      .filter((v) => v.name.toLowerCase().startsWith(keyword.toLowerCase()));\r\n  const [content, setContent] = useState('');\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const { setModal } = useModalsContext();\r\n  const checkedRef = useRef<{ title: string; unsaved: boolean }>();\r\n\r\n  const handleBack = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (checkedRef.current === undefined) return;\r\n    const title = checkedRef.current.title;\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          checkedRef.current = undefined;\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error: any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleUnsaved = () => {\r\n    setModal(AlertModal, {\r\n      type: 'UNSAVED',\r\n      callbacks: [\r\n        handleSave,\r\n        () => {\r\n          if (title === checkedRef.current?.title && page?.description !== undefined) {\r\n            setContent(page?.description);\r\n          }\r\n          checkedRef.current = undefined;\r\n          handleBack();\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  if (title === checkedRef.current?.title) {\r\n    checkedRef.current.unsaved = page?.description !== content;\r\n  }\r\n\r\n  const isPrevent = () => checkedRef.current !== undefined && checkedRef.current.unsaved;\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && page?.description !== undefined && !isPrevent()) {\r\n      checkedRef.current = { title, unsaved: false };\r\n      setContent(page.description);\r\n    }\r\n  }, [isLoading, page]);\r\n\r\n  useUnsaveEffect(isPrevent, handleUnsaved, () => checkedRef.current?.title);\r\n  return (\r\n    isFocused && (\r\n      <View style={commonStyles.container}>\r\n        <View style={commonStyles.header}>\r\n          <Text style={[commonStyles.title, { flex: 1 }]}>{title} - 편집</Text>\r\n        </View>\r\n        <Editor\r\n          active\r\n          value={content}\r\n          setValue={setContent}\r\n          theme={theme}\r\n          autoComplete={[\r\n            {\r\n              trigger: '[',\r\n              getMatchedChars: async (pattern) => {\r\n                const childrenPages = getChildrenPages(pattern);\r\n                return [\r\n                  { type: '_NOTELINK', name: pattern, title, paragraph: pattern },\r\n                  ...(childrenPages.length\r\n                    ? childrenPages\r\n                    : [{ type: '_CHILDNOTE', name: pattern, title: title + '/' + pattern }]),\r\n                  ...getFilteredPages(pages, pattern).filter((v) => v.type !== '_LINK'),\r\n                ].map((v) => {\r\n                  const name = v.type === '_NOTELINK' || v.type === '_CHILDNOTE' ? v.name : v.title;\r\n                  const description =\r\n                    v.type === '_NOTELINK'\r\n                      ? `(${titleFormat(v)})`\r\n                      : v.type === '_CHILDNOTE'\r\n                      ? `(${v.title})`\r\n                      : '';\r\n                  const url = encodeURI(\r\n                    v.type === '_NOTELINK' && v.paragraph\r\n                      ? `?title=${v.title}&paragraph=${v.paragraph}`\r\n                      : `?title=${v.title}`\r\n                  );\r\n                  return {\r\n                    text: name + description,\r\n                    value: `<a href=${url}>${name}</a>`,\r\n                  };\r\n                });\r\n              },\r\n            },\r\n            {\r\n              trigger: 'http',\r\n              getMatchedChars: async (pattern) => {\r\n                const query = 'http' + pattern;\r\n                const url = new URL(query);\r\n                if (url.protocol !== 'http:' && url.protocol !== 'https:') {\r\n                  return [];\r\n                }\r\n                const preview = await previewUrl({ query });\r\n                if (!preview.title) {\r\n                  return [];\r\n                }\r\n                return [\r\n                  {\r\n                    text: preview.title,\r\n                    value: `<a href=${preview.url}>${preview.title}</a>`,\r\n                  },\r\n                  // {\r\n                  //   text:preview.title + '...',\r\n                  //   value:`<a href=${preview.url}>${preview.title}</a><p>${preview.description}...</p>`,\r\n                  // }\r\n                ];\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={isPrevent() ? handleUnsaved : handleBack}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('cancel')}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[commonStyles.button, styles.saveButton]} onPress={handleSave}>\r\n            <Text style={commonStyles.buttonText}>{lang('save')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme, useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\n\r\nimport HeaderSelectBar, { parseHtmlToParagraphs } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, paragraph } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path || '';\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToParagraphs(newPage?.description || '').filter(\r\n    (v) => title !== newTitle || path === v.path || !v.path.startsWith(path)\r\n  );\r\n  const [newPath, setNewPath] = useState('');\r\n  const [preview, setPreview] = useState<boolean>();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const moveMutation = useMovePage();\r\n  const { sourceDescription, targetDescription } = useMemo(() => {\r\n    const moveParagraph = paragraphs.filter((v) => v.path.startsWith(path));\r\n    const isSplit = newPage?.title === page?.title + '/' + moveParagraph[0]?.title;\r\n    const moveDescription = moveParagraph\r\n      .map((v, i) => (isSplit && i === 0 ? '' : v.header) + v.description)\r\n      .join('');\r\n    const sourceParagraph = paragraphs.filter((v) => !v.path.startsWith(path));\r\n    const sourceDescription = sourceParagraph.map((v) => v.header + v.description).join('');\r\n    const targetParagraph = page?.title === newPage?.title ? sourceParagraph : newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex((v) => v.path.startsWith(newPath));\r\n    const targetDescription =\r\n      newPage?.id === undefined\r\n        ? moveDescription\r\n        : [\r\n            ...targetParagraph.slice(0, targetIndex + 1).map((v) => v.header + v.description),\r\n            ...moveParagraph.map(\r\n              (v, i) =>\r\n                ((v.path === path && v.description === '') || (isSplit && i === 0)\r\n                  ? ''\r\n                  : v.header) + v.description\r\n            ),\r\n            ...targetParagraph.slice(targetIndex + 1).map((v) => v.header + v.description),\r\n          ].join('');\r\n    return { sourceDescription, targetDescription };\r\n  }, [paragraphs, newParagraph, path, newPath]);\r\n\r\n  const handleMove = () => {\r\n    if (newPage?.id === undefined) {\r\n      moveMutation.mutate(\r\n        {\r\n          oldTitle: title,\r\n          newTitle: newTitle.trim(),\r\n          description: path === '' ? undefined : targetDescription,\r\n        },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert(\r\n              lang('error'),\r\n              error.message || lang('An error occurred while moving note.')\r\n            );\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      if (page?.title === newPage.title && path === newPath) {\r\n        handleCancel();\r\n      }\r\n      mutation.mutate(\r\n        { title: newPage.title, description: targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title) {\r\n              mutation.mutate({ title, description: sourceDescription });\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert(\r\n              lang('error'),\r\n              error.message || lang('An error occurred while moving note.')\r\n            );\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !page) {\r\n      handleCancel();\r\n    }\r\n    page && setNewTitle(page.title + (paragraph ? `/${paragraph}` : ''));\r\n  }, [page, isLoading]);\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setNewPath(paragraph ? '' : path);\r\n    }\r\n  }, [paragraph, isLoading]);\r\n  const paragraphItem = paragraphs.find((v) => v.path === path);\r\n  const newParagraphItem = newParagraph.find((v) => v.path === newPath);\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined;\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: _window === 'landscape' ? 'row' : 'column', zIndex: 1 }}>\r\n          <View style={{ zIndex: 1 }}>\r\n            <Text style={commonStyles.text}>\r\n              {lang(paragraph ? 'Current note title and paragraph:' : 'Current note title:')}\r\n            </Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>\r\n              {titleFormat({ title, paragraph })}\r\n            </Text>\r\n            <Text style={commonStyles.text}>{lang('New note title and paragraph:')}</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false} />\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar\r\n                path={newPath}\r\n                onPress={(item) => setNewPath(item.path)}\r\n                root={newPage?.title || ''}\r\n                data={newParagraph}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={commonStyles.text}> {lang('Preview:')}</Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                commonStyles.button,\r\n                styles.moveButton,\r\n                {\r\n                  flex: 0,\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  paddingTop: 24,\r\n                  paddingBottom: 16,\r\n                },\r\n              ]}\r\n              onPress={() => setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title, paragraph: paragraphItem?.title })}\r\n              </Text>\r\n              <Text style={[commonStyles.text, { marginBottom: 8, fontSize: 14 }]}> ➜ </Text>\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title: newTitle, paragraph: newParagraphItem?.title })}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {preview !== undefined && (\r\n              <View style={{ display: preview ? 'flex' : 'none' }}>\r\n                <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  onLink={(url) => onLink(url, navigation)}\r\n                  autoResize\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('cancel')}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, moveDisabled ? styles.cancelButton : styles.moveButton]}\r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('move')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: {\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport HeaderSelectBar, { Paragraph } from '../../components/HeaderSelectBar';\r\nimport { onLink, titleFormat } from '../../components/SearchBar';\r\nimport { getSplitTitle } from '../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\nexport const NotePageHeader = ({\r\n  title,\r\n  onPress,\r\n  paragraph,\r\n  updated,\r\n}: {\r\n  title: string;\r\n  onPress: (title: string, hasChild: boolean) => void;\r\n  pressable?: boolean;\r\n  paragraph?: string;\r\n  updated?: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const splitTitle = getSplitTitle(title);\r\n  const pressableTextColor = theme === 'dark' ? '#FFFFFF88' : '#00000088';\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: 'row',\r\n        maxWidth: '100%',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <TouchableOpacity\r\n        onPress={() => onPress(splitTitle[0], splitTitle.length === 2)}\r\n        style={{ maxWidth: '100%' }}\r\n      >\r\n        <Text\r\n          style={[\r\n            commonStyles.title,\r\n            styles.title,\r\n            paragraph || splitTitle.length === 2 ? { color: pressableTextColor } : {},\r\n          ]}\r\n          numberOfLines={1}\r\n        >\r\n          {splitTitle[0]}\r\n        </Text>\r\n      </TouchableOpacity>\r\n      {splitTitle.length === 2 && (\r\n        <View style={{ maxWidth: '100%', flexDirection: 'row' }}>\r\n          <Text style={[commonStyles.title, styles.title, { flex: 0 }]}>/</Text>\r\n          <TouchableOpacity onPress={() => onPress(title, false)}>\r\n            <Text\r\n              style={[\r\n                commonStyles.title,\r\n                styles.title,\r\n                paragraph ? { color: pressableTextColor } : {},\r\n              ]}\r\n              numberOfLines={1}\r\n            >\r\n              {splitTitle[1]}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n      <View style={{ maxWidth: '100%', flexDirection: 'row' }}>\r\n        {!!paragraph && (\r\n          <Text style={[commonStyles.title, styles.title, { marginLeft: 5 }]} numberOfLines={1}>\r\n            {titleFormat({ title: '', paragraph })}\r\n          </Text>\r\n        )}\r\n        {updated && <Text style={[commonStyles.text, styles.updated]}>{'(' + updated + ')'}</Text>}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const NotePageSection = ({\r\n  active,\r\n  description,\r\n}: {\r\n  active: boolean;\r\n  description?: string;\r\n}) => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <View style={active && description ? [commonStyles.card, styles.card] : styles.inactiveCard}>\r\n      <EditorViewer\r\n        active\r\n        value={description || ''}\r\n        theme={theme}\r\n        onLink={(url) => onLink(url, navigation)}\r\n        autoResize\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const NoteBottomSection = ({\r\n  toc,\r\n  fullParagraph,\r\n  paragraph,\r\n  paragraphs,\r\n  root,\r\n  onPress,\r\n}: {\r\n  toc: boolean;\r\n  fullParagraph: boolean;\r\n  paragraph?: string;\r\n  paragraphs: Paragraph[];\r\n  root: string;\r\n  onPress: (paragraph: Paragraph) => void;\r\n}) => {\r\n  const idx = paragraphs.findIndex((v) => v.title === paragraph);\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const iconColor = getIconColor(theme);\r\n  const moveParagraphs = [\r\n    {\r\n      icon: 'arrow-left',\r\n      moveParagraph: paragraphs.findLast(\r\n        (v, i) => i < idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: false,\r\n    },\r\n    {\r\n      icon: 'arrow-right',\r\n      moveParagraph: paragraphs.find(\r\n        (v, i) => i > idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: true,\r\n    },\r\n  ];\r\n  return toc ? (\r\n    <HeaderSelectBar data={paragraphs} path={paragraph || ''} root={root} onPress={onPress} />\r\n  ) : (\r\n    !!paragraph && (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'flex-end',\r\n        }}\r\n      >\r\n        {moveParagraphs.map(\r\n          ({ moveParagraph, icon, reverse }) =>\r\n            moveParagraph !== undefined && (\r\n              <TouchableOpacity\r\n                key={icon}\r\n                onPress={() => onPress(moveParagraph)}\r\n                style={[\r\n                  { flex: 1, flexDirection: reverse ? 'row-reverse' : 'row', paddingVertical: 16 },\r\n                ]}\r\n              >\r\n                <Icon name={icon} size={16} color={iconColor} style={{ alignSelf: 'center' }} />\r\n                <Text\r\n                  ellipsizeMode=\"tail\"\r\n                  style={[commonStyles.text, { fontWeight: 'bold', marginHorizontal: 16 }]}\r\n                >\r\n                  {moveParagraph.level === 0 ? root : moveParagraph.title}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )\r\n        )}\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nexport const getIconColor = (theme: 'light' | 'dark') => (theme === 'dark' ? '#E4E4E4' : '#333333');\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  updated: { marginLeft: 5, fontStyle: 'italic' },\r\n  card: { padding: 0, marginBottom: 0 },\r\n  inactiveCard: { flex: 1, position: 'absolute' },\r\n});\r\n\r\nexport const pageStyles = StyleSheet.create({\r\n  container: { paddingRight: 12, scrollbarGutter: 'stable' },\r\n  contentContainer: { flexGrow: 1 },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    flexBasis: 156,\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, TextButton, useColorScheme, useLangContext, Text } from '@blacktokki/core';\r\nimport { ConfigSection, LanguageConfigSection, SkinConfigSection } from '@blacktokki/navigation';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { SearchList } from '../../../components/SearchBar';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { useCreateOrUpdatePage, useNotePages } from '../../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { Content, NavigationParamList } from '../../../types';\r\n\r\nconst exportMarkdowns = async (contents: Content[]) => {\r\n  const JSZip = (await import('jszip')).default;\r\n  const zip = new JSZip();\r\n  for (const content of contents.filter((v) => (v.description?.length || 0) > 0)) {\r\n    zip.file(content.title + '.md', content.description as string);\r\n  }\r\n  const blob = await zip.generateAsync({ type: 'blob' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = 'notebook.zip';\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  setTimeout(() => {\r\n    window.URL.revokeObjectURL(url);\r\n  }, 500);\r\n  a.remove();\r\n};\r\n\r\nconst importMarkdowns = async () => {\r\n  const files = await new Promise<File[]>((resolve, reject) => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = 'application/zip,.md,.markdown'; // 특정 타입만 허용하고 싶으면 'text/plain', 'image/*' 등으로 설정\r\n    input.style.display = 'none';\r\n    input.multiple = true;\r\n\r\n    input.onchange = () => {\r\n      if (input.files && input.files.length > 0) {\r\n        resolve(Array.from(input.files)); // File은 Blob의 하위 클래스\r\n      } else {\r\n        reject(new Error('파일이 선택되지 않았습니다.'));\r\n      }\r\n    };\r\n\r\n    input.click(); // 파일 선택창 열기\r\n  });\r\n  const contents: { title: string; description: string }[] = [];\r\n  const JSZip = (await import('jszip')).default;\r\n  for (const file of files) {\r\n    if (file.type === 'application/zip' || file.name.endsWith('.zip')) {\r\n      const zip = new JSZip();\r\n      const files = (await zip.loadAsync(file)).files;\r\n      for (const relativePath in files) {\r\n        const file = zip.files[relativePath];\r\n        if (!file.dir) {\r\n          contents.push({\r\n            title: relativePath.replace(/\\.[^/.]+$/, ''),\r\n            description: (await file.async('text')).toString(),\r\n          });\r\n        }\r\n      }\r\n    } else if (file.name.endsWith('.md') || file.name.endsWith('.markdown')) {\r\n      contents.push({ title: file.name.replace(/\\.[^/.]+$/, ''), description: await file.text() });\r\n    }\r\n  }\r\n  return contents;\r\n};\r\n\r\nconst OptionButton = (props: { title: string; onPress: () => void; active: boolean }) => {\r\n  const theme = useColorScheme();\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TextButton\r\n      title={props.title}\r\n      textStyle={{\r\n        fontSize: 16,\r\n        color,\r\n        textDecorationLine: props.active ? 'underline' : 'none',\r\n      }}\r\n      style={{ borderRadius: 20 }}\r\n      onPress={props.onPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  const { auth, dispatch } = useAuthContext();\r\n  const theme = useColorScheme();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { data: contents } = useNotePages();\r\n  const mutation = useCreateOrUpdatePage();\r\n  const [search, setSearch] = useState(false);\r\n  const { data: keywords = [] } = useKeywords();\r\n  const resetKeyword = useResetKeyowrd();\r\n  return (\r\n    <View>\r\n      <View style={commonStyles.card}>\r\n        <LanguageConfigSection />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <SkinConfigSection />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSection title={lang('* Search Settings')}>\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <OptionButton\r\n              title={lang('Search History')}\r\n              onPress={() => setSearch(!search)}\r\n              active={search}\r\n            />\r\n            {search && !!keywords.length && (\r\n              <OptionButton\r\n                title={lang('Clear')}\r\n                onPress={() => resetKeyword.mutate()}\r\n                active={false}\r\n              />\r\n            )}\r\n          </View>\r\n          {search && (\r\n            <View style={[commonStyles.card, { padding: 0 }]}>\r\n              <SearchList\r\n                filteredPages={keywords}\r\n                handlePagePress={(title, paragraph) =>\r\n                  navigation.push('NotePage', { title, paragraph })\r\n                }\r\n              />\r\n            </View>\r\n          )}\r\n        </ConfigSection>\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSection title={lang('* Archive')}>\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <OptionButton\r\n              title={lang('Export')}\r\n              onPress={() => contents && exportMarkdowns(contents)}\r\n              active={false}\r\n            />\r\n            <OptionButton\r\n              title={lang('Import')}\r\n              onPress={() => importMarkdowns().then((v) => v.forEach((v2) => mutation.mutate(v2)))}\r\n              active={false}\r\n            />\r\n            {!auth.isLocal && (\r\n              <OptionButton\r\n                title={lang('Changelog')}\r\n                onPress={() => navigation.push('Archive', {})}\r\n                active={false}\r\n              />\r\n            )}\r\n          </View>\r\n        </ConfigSection>\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSection\r\n          title={lang('* Usage')}\r\n          onPress={() => navigation.push('NoteViewer', { key: 'Usage' })}\r\n        />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <ConfigSection title={lang('* Account Settings')} />\r\n          {!auth.isLocal && (\r\n            <Text numberOfLines={1} ellipsizeMode=\"tail\" style={{ marginLeft: 4 }}>\r\n              - {auth.user?.username}\r\n            </Text>\r\n          )}\r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {!!auth.user && (\r\n            <OptionButton\r\n              title={lang('My Account')}\r\n              onPress={() => auth.isLocal && dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={!auth.isLocal}\r\n            />\r\n          )}\r\n          <OptionButton\r\n            title={lang('Local Account')}\r\n            onPress={() => !auth.isLocal && dispatch({ type: 'LOGIN_LOCAL' })}\r\n            active={!!auth.isLocal}\r\n          />\r\n          {auth.user ? (\r\n            <OptionButton\r\n              title={lang('Sign out')}\r\n              onPress={() => dispatch({ type: 'LOGOUT_REQUEST' })}\r\n              active={false}\r\n            />\r\n          ) : (\r\n            <OptionButton\r\n              title={lang('Sign in')}\r\n              onPress={() => dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, ContractFooter, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, TabViewOption } from '@blacktokki/navigation';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport React, { useMemo } from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport ConfigSection from './ConfigSection';\r\nimport ContentGroupSection, { ProblemButton, TimeLineButton } from './ContentGroupSection';\r\n\r\nconst NotesTabView = () => {\r\n  const theme = useColorScheme();\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <ScrollView style={{ flex: 1, backgroundColor: Colors[theme].background }}>\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Open Notes')}\r\n      </List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Event Notes')}\r\n      </List.Subheader>\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst RecentChangesTabView = () => {\r\n  return <RecentPagesSection />;\r\n};\r\n\r\nconst ConfigTabView = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <ScrollView\r\n      style={{ flex: 1 }}\r\n      contentContainerStyle={[\r\n        commonStyles.container,\r\n        { backgroundColor: Colors[theme].background },\r\n      ]}\r\n    >\r\n      <ConfigSection />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default function HomeScreen({ navigation, route }: StackScreenProps<any, 'Home'>) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { auth } = useAuthContext();\r\n  const title = auth.isLocal ? 'Blacktokki Notebook - Local' : 'Blacktokki Notebook';\r\n  const tabViews: TabViewOption[] = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Discovery',\r\n        component: NotesTabView,\r\n        icon: <List.Icon icon={'compass'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n      {\r\n        title: 'All Notes',\r\n        component: RecentChangesTabView,\r\n        icon: <List.Icon icon={'notebook'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n      {\r\n        title: 'Config',\r\n        component: ConfigTabView,\r\n        icon: <List.Icon icon={'dots-horizontal'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <HomeSection\r\n      tabViews={tabViews}\r\n      homeView={{ title, headerRight: () => <SearchBar /> }}\r\n      headerTitle={title}\r\n    >\r\n      <View style={[commonStyles.container, { width: '100%', justifyContent: 'space-between' }]}>\r\n        <ConfigSection />\r\n        <ContractFooter\r\n          buttons={[\r\n            {\r\n              icon: <AntDesign name=\"github\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'https://github.com/blacktokki/blacktokki-notebook',\r\n              isWeb: true,\r\n            },\r\n            {\r\n              icon: <AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'mailto:ydh051541@naver.com',\r\n              isWeb: false,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n    </HomeSection>\r\n  );\r\n}\r\n","import dayjs from 'dayjs';\r\nimport { useEffect, useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { Paragraph } from '../../../components/HeaderSelectBar';\r\nimport TimerTag, {\r\n  matchDateRange,\r\n  paragraphsToDatePatterns,\r\n  TimerData,\r\n  today,\r\n} from '../../../components/TimerTag';\r\nimport { useCreateOrUpdatePage } from '../../../hooks/useNoteStorage';\r\n\r\nconst replaceDay = (data: TimerData, newDate: string) => {\r\n  return (\r\n    data.original.substring(0, data.index) +\r\n    newDate +\r\n    data.original.substring(data.index + data.text.length)\r\n  );\r\n};\r\n\r\nconst addDay = (data: TimerData, value: number, unit: 'day' | 'month', moved: boolean) => {\r\n  const s = dayjs(data.dateStart)\r\n    .add(moved ? value : 0, unit)\r\n    .format(data.pattern);\r\n  const e = dayjs(data.dateEnd).add(value, unit).format(data.pattern);\r\n  return replaceDay(data, data.format ? data.format(s, e) : e);\r\n};\r\n\r\nconst buttons = (data: TimerData) => {\r\n  const format = data.format;\r\n  return [\r\n    ...(data.pattern.includes('DD')\r\n      ? [\r\n          { title: '+1d', onPress: () => data.replace(addDay(data, 1, 'day', true)) },\r\n          { title: '+2d', onPress: () => data.replace(addDay(data, 2, 'day', true)) },\r\n          { title: '+7d', onPress: () => data.replace(addDay(data, 7, 'day', true)) },\r\n        ]\r\n      : []),\r\n    { title: '+1M', onPress: () => data.replace(addDay(data, 1, 'month', true)) },\r\n    ...(format\r\n      ? [\r\n          {\r\n            title: '+Period',\r\n            onPress: () => {\r\n              const s = dayjs(data.dateStart);\r\n              const e = dayjs(data.dateEnd);\r\n              const diff = e.diff(s, 'day');\r\n              data.replace(\r\n                replaceDay(\r\n                  data,\r\n                  format(\r\n                    s.add(diff + 1, 'day').format(data.pattern),\r\n                    e.add(diff + 1, 'day').format(data.pattern)\r\n                  )\r\n                )\r\n              );\r\n            },\r\n          },\r\n          { title: 'End date +1d', onPress: () => data.replace(addDay(data, 1, 'day', false)) },\r\n          { title: 'End date +2d', onPress: () => data.replace(addDay(data, 2, 'day', false)) },\r\n          { title: 'End date +7d', onPress: () => data.replace(addDay(data, 7, 'day', false)) },\r\n          { title: 'End date +1M', onPress: () => data.replace(addDay(data, 1, 'month', false)) },\r\n        ]\r\n      : []),\r\n    { title: 'Delete', onPress: () => data.replace(replaceDay(data, '')) },\r\n  ];\r\n};\r\n\r\nexport default (props: { title: string; paragraphs: Paragraph[] }) => {\r\n  const dateNum = new Date(today()).getTime();\r\n  const createOrUpdatePage = useCreateOrUpdatePage();\r\n  const data = paragraphsToDatePatterns(props.title, props.paragraphs)\r\n    .flatMap((v) => matchDateRange(v.dateMatches, dateNum))\r\n    .flatMap((v) =>\r\n      v.matches.map((v2) => ({\r\n        ...v2,\r\n        original: v.original,\r\n        replace: (a: string) =>\r\n          createOrUpdatePage.mutate({\r\n            title: props.title,\r\n            description: props.paragraphs\r\n              .map(\r\n                (v3) =>\r\n                  (v3.path === v.path && v.isHeader\r\n                    ? v3.header.replace(v.original, a)\r\n                    : v3.header) +\r\n                  (v3.path === v.path && !v.isHeader\r\n                    ? v3.description.replace(v.original, a)\r\n                    : v3.description)\r\n              )\r\n              .join(''),\r\n          }),\r\n      }))\r\n    );\r\n\r\n  const [now, setNow] = useState(dayjs());\r\n  const [expand, setExpand] = useState<number>();\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setNow(dayjs());\r\n    }, 30000);\r\n    return () => clearTimeout(timeout);\r\n  }, [now]);\r\n  return (\r\n    <View style={{ height: 0 }}>\r\n      <View style={{ flexDirection: 'row', overflow: 'hidden' }}>\r\n        {data.map((v, i) => (\r\n          <TimerTag\r\n            key={i}\r\n            data={v}\r\n            buttons={buttons}\r\n            now={now}\r\n            isExpand={i === expand}\r\n            toggleExpand={() => setExpand(expand === i ? undefined : i)}\r\n          />\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useColorScheme, useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { parseHtmlToParagraphs } from '../../../components/HeaderSelectBar';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { useArchivePage, useNotePage } from '../../../hooks/useNoteStorage';\r\nimport { paragraphDescription } from '../../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport {\r\n  getIconColor,\r\n  NoteBottomSection,\r\n  NotePageHeader,\r\n  NotePageSection,\r\n  pageStyles,\r\n} from '../NoteItemSections';\r\nimport TimerTagSection from './TimerTagSection';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, paragraph, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullParagraph, toggleFullParagraph] = useState(false);\r\n\r\n  const { data: page, isFetching } = useNotePage(title);\r\n  const { data: archive } = useArchivePage(archiveId);\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n\r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, paragraph });\r\n  };\r\n\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      archive\r\n        ? archive.description\r\n        : (paragraph\r\n            ? fullParagraph\r\n              ? paragraphDescription(paragraphs, paragraph, true)\r\n              : paragraphs.find((v) => v.title === paragraph)?.description\r\n            : page?.description\r\n          )?.trim()\r\n    );\r\n  }, [page, archive, paragraph, fullParagraph]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const iconColor = getIconColor(theme);\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, pageStyles.container]}\r\n          contentContainerStyle={pageStyles.contentContainer}\r\n        >\r\n          <View style={[commonStyles.header, { zIndex: 1, alignItems: 'flex-start' }]}>\r\n            <NotePageHeader\r\n              title={title}\r\n              paragraph={paragraph}\r\n              updated={archive?.updated}\r\n              onPress={(title, hasChild) =>\r\n                (hasChild ? navigation.push : navigation.navigate)('NotePage', { title })\r\n              }\r\n            />\r\n            <View style={pageStyles.actionButtons}>\r\n              <TimerTagSection title={page?.title || ''} paragraphs={paragraphs} />\r\n              {!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Archive', { title })}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon name=\"history\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullParagraph(!fullParagraph)}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon\r\n                      name={fullParagraph ? 'compress' : 'expand'}\r\n                      size={16}\r\n                      color={iconColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={pageStyles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={handleMovePage} style={pageStyles.actionButton}>\r\n                    <Icon name=\"exchange\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && !paragraph && (\r\n                <>\r\n                  <TouchableOpacity onPress={handleEdit} style={pageStyles.actionButton}>\r\n                    <Icon name=\"pencil\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <NotePageSection active={!toc} description={description} />\r\n            {isFetching || description === undefined ? (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n              </View>\r\n            ) : page?.description ? (\r\n              <NoteBottomSection\r\n                toc={toc}\r\n                fullParagraph={fullParagraph}\r\n                root={title}\r\n                paragraph={paragraph}\r\n                paragraphs={paragraphs}\r\n                onPress={(moveParagraph) =>\r\n                  navigation.navigate(\r\n                    'NotePage',\r\n                    moveParagraph.level === 0\r\n                      ? { title }\r\n                      : { title, paragraph: moveParagraph.title }\r\n                  )\r\n                }\r\n              />\r\n            ) : (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <Text style={commonStyles.text}>\r\n                  {lang('This note has no content yet. Press the ‘Edit’ button to add content.')}\r\n                </Text>\r\n                <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                  <Text style={commonStyles.buttonText}>{lang('Edit')}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n","import { useColorScheme, useModalsContext, Text, useLangContext } from '@blacktokki/core';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nimport { today } from '../../../components/TimerTag';\r\nimport DatePickerModal, { MarkedDateRange } from '../../../modals/DatePikcerModal';\r\nimport { createCommonStyles } from '../../../styles';\r\n\r\ntype DateHeaderSectionProps = {\r\n  date: string;\r\n  setDate: (date: string) => void;\r\n  markedDateRange: MarkedDateRange[];\r\n  monthly?: boolean;\r\n};\r\n\r\nexport default function DateHeaderSection({\r\n  date,\r\n  setDate,\r\n  monthly,\r\n  markedDateRange,\r\n}: DateHeaderSectionProps) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { setModal } = useModalsContext();\r\n  const { lang } = useLangContext();\r\n  const moveDate = (value: number) =>\r\n    setDate(\r\n      dayjs(date)\r\n        .add(value, monthly ? 'month' : 'day')\r\n        .format('YYYY-MM-DD')\r\n    );\r\n\r\n  const themedStyles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: commonStyles.container.backgroundColor,\r\n      shadowColor: commonStyles.text.color,\r\n      borderColor: commonStyles.card.borderColor,\r\n    },\r\n    dateDisplay: {\r\n      color: commonStyles.text.color,\r\n    },\r\n    todayButton: {\r\n      backgroundColor: commonStyles.searchButton.backgroundColor,\r\n    },\r\n    navButton: {\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#efefef',\r\n    },\r\n  });\r\n  return (\r\n    <View style={[headerStyles.container, themedStyles.container]}>\r\n      <View style={commonStyles.flex} />\r\n      {/* Date Display */}\r\n      <View style={headerStyles.dateContainer}>\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            setModal(DatePickerModal, {\r\n              datetime: date,\r\n              markedDateStrings: markedDateRange,\r\n              callback: (datetime?: string) => setDate(datetime || date),\r\n            })\r\n          }\r\n        >\r\n          <Text style={[headerStyles.dateDisplay, themedStyles.dateDisplay]}>{date}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/* Navigation Bar */}\r\n      <View style={headerStyles.navContainer}>\r\n        {/* Previous Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(-1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-left\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n\r\n        {/* Today Button */}\r\n        <TouchableOpacity\r\n          onPress={() => setDate(today())}\r\n          style={[headerStyles.todayButton, themedStyles.todayButton]}\r\n          accessibilityLabel=\"Go to today\"\r\n        >\r\n          <Text style={headerStyles.todayButtonText}>{lang('Today')}</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Next Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-right\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst BUTTON_SIZE = 30;\r\n\r\n// Base styles that don't change based on theme\r\nconst headerStyles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n    borderWidth: 1,\r\n  },\r\n  dateContainer: {\r\n    flex: 1,\r\n    minWidth: 130,\r\n    height: BUTTON_SIZE,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  dateDisplay: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  navContainer: {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  navButton: {\r\n    width: BUTTON_SIZE,\r\n    height: BUTTON_SIZE,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginHorizontal: 8,\r\n    borderRadius: 8,\r\n    padding: 8,\r\n  },\r\n  todayButton: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 6,\r\n  },\r\n  todayButtonText: {\r\n    fontSize: 14,\r\n    color: '#ffffff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { today } from '../../../components/TimerTag';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport { NoteListSection } from '../NoteListSection';\r\nimport DateHeaderSection from './DateHeaderSection';\r\n\r\nexport const TimeLineScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const _window = useResizeContext();\r\n  const [date, setDate] = useState(today());\r\n  const { data, preData, isLoading } = useTimeLine(date);\r\n  const markedDateRange = preData.flatMap((v) => v.dateMatches.flatMap((v2) => v2.matches));\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <View style={[{ ...commonStyles.container, flex: undefined, paddingBottom: 0 }]}>\r\n        <DateHeaderSection date={date} setDate={setDate} markedDateRange={markedDateRange} />\r\n      </View>\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title, paragraph) => navigation.push('NotePage', { title, paragraph })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"There are no notes.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { Auth } from '@blacktokki/account';\r\n\r\nimport { ArchiveScreen } from './main/ArchiveScreen';\r\nimport { EditPageScreen } from './main/EditPageScreen';\r\nimport { MovePageScreen } from './main/MovePageScreen';\r\nimport { NoteViewerScreen } from './main/NoteViewerScreen';\r\nimport { ProblemsScreen } from './main/ProblemScreen';\r\nimport { RecentPagesScreen } from './main/RecentPageScreen';\r\nimport HomeScreen from './main/home/HomeScreen';\r\nimport { NotePageScreen } from './main/notepage/NotePageScreen';\r\nimport { TimeLineScreen } from './main/timeline/TimeLineScreen';\r\n\r\nconst title = (auth: Auth) =>\r\n  !auth.isLocal ? 'Blacktokki Notebook' : 'Blacktokki Notebook - Local';\r\nexport const main = {\r\n  Home: {\r\n    title,\r\n    component: HomeScreen,\r\n    path: 'home',\r\n  },\r\n  NotePage: {\r\n    title,\r\n    component: NotePageScreen,\r\n    path: 'page',\r\n  },\r\n  EditPage: {\r\n    title,\r\n    component: EditPageScreen,\r\n    path: 'edit',\r\n  },\r\n  MovePage: {\r\n    title,\r\n    component: MovePageScreen,\r\n    path: 'move',\r\n  },\r\n  RecentPages: {\r\n    title,\r\n    component: RecentPagesScreen,\r\n    path: 'recent',\r\n  },\r\n  Problem: {\r\n    title,\r\n    component: ProblemsScreen,\r\n    path: 'problem',\r\n  },\r\n  Archive: {\r\n    title,\r\n    component: ArchiveScreen,\r\n    path: 'archive',\r\n  },\r\n  TimeLine: {\r\n    title,\r\n    component: TimeLineScreen,\r\n    path: 'timeline',\r\n  },\r\n  NoteViewer: {\r\n    title,\r\n    component: NoteViewerScreen,\r\n    path: 'viewer',\r\n  },\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window = useResizeContext();\r\n  return (\r\n    <>\r\n      {window === 'portrait' && <SearchBar />}\r\n      <RecentPagesSection />\r\n    </>\r\n  );\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport useProblem from '../../hooks/useProblem';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\n\r\nexport const ProblemsScreen: React.FC = () => {\r\n  const _window = useResizeContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data, isLoading } = useProblem(1);\r\n\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title) => navigation.push('EditPage', { title })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"There are no notes needed to be written.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, ScrollView, TouchableOpacity } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { parseHtmlToParagraphs } from '../../components/HeaderSelectBar';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useNoteViewers } from '../../hooks/useNoteStorage';\r\nimport { paragraphDescription } from '../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\nimport {\r\n  getIconColor,\r\n  NoteBottomSection,\r\n  NotePageHeader,\r\n  NotePageSection,\r\n  pageStyles,\r\n} from './NoteItemSections';\r\n\r\ntype NoteViewerScreenRouteProp = RouteProp<NavigationParamList, 'NoteViewer'>;\r\n\r\nexport const NoteViewerScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NoteViewerScreenRouteProp>();\r\n  const { key, paragraph } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullParagraph, toggleFullParagraph] = useState(false);\r\n  const { data: viewers } = useNoteViewers();\r\n\r\n  const page = viewers?.find((v) => v.key === key);\r\n\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      paragraph\r\n        ? fullParagraph\r\n          ? paragraphDescription(paragraphs, paragraph, true)\r\n          : paragraphs.find((v) => v.title === paragraph)?.description\r\n        : page?.description?.trim()\r\n    );\r\n  }, [page, paragraph, fullParagraph]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const iconColor = getIconColor(theme);\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, pageStyles.container]}\r\n          contentContainerStyle={pageStyles.contentContainer}\r\n        >\r\n          <View style={[commonStyles.header, { zIndex: 1, alignItems: 'flex-start' }]}>\r\n            <NotePageHeader\r\n              title={key}\r\n              paragraph={paragraph}\r\n              pressable={false}\r\n              onPress={(key, hasChild) =>\r\n                (hasChild ? navigation.push : navigation.navigate)('NoteViewer', { key })\r\n              }\r\n            />\r\n            <View style={pageStyles.actionButtons}>\r\n              {!!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullParagraph(!fullParagraph)}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon\r\n                      name={fullParagraph ? 'compress' : 'expand'}\r\n                      size={16}\r\n                      color={iconColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={pageStyles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <NotePageSection active={!toc} description={description} />\r\n            {\r\n              <NoteBottomSection\r\n                toc={toc}\r\n                fullParagraph={fullParagraph}\r\n                root={key}\r\n                paragraph={paragraph}\r\n                paragraphs={paragraphs}\r\n                onPress={(paragraph) =>\r\n                  navigation.navigate(\r\n                    'NoteViewer',\r\n                    paragraph.level === 0 ? { key } : { key, paragraph: paragraph.title }\r\n                  )\r\n                }\r\n              />\r\n            }\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n","import { useLangContext, View } from '@blacktokki/core';\r\nimport { push } from '@blacktokki/navigation';\r\nimport React from 'react';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\n\r\nimport ContentGroupSection, {\r\n  ProblemButton,\r\n  TimeLineButton,\r\n} from '../screens/main/home/ContentGroupSection';\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <List.Item\r\n        left={(_props) => <List.Icon {..._props} icon={'home'} />}\r\n        title={lang('Home')}\r\n        onPress={() => push('Home')}\r\n      />\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n      <ScrollView style={Platform.OS === 'web' ? ({ scrollbarWidth: 'thin' } as any) : {}}>\r\n        <List.Subheader style={{}} selectable={false}>\r\n          {lang('Open Notes')}\r\n        </List.Subheader>\r\n        <ContentGroupSection type={'LAST'} />\r\n        <ContentGroupSection type={'PAGE'} />\r\n        <List.Subheader style={{ flex: 1 }} selectable={false}>\r\n          {lang('Recent Changes')}\r\n        </List.Subheader>\r\n        {/* 최근 변경 */}\r\n        <ContentGroupSection type={'NOTE'} noteCount={10} />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n","import { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { login, Navigation, NavigationConfig } from '@blacktokki/navigation';\r\nimport React, { Suspense } from 'react';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport modals from '../modals';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\n\r\nconst HeaderRight = () => {\r\n  const windowType = useResizeContext();\r\n  return windowType === 'landscape' ? <SearchBar /> : undefined;\r\n};\r\n\r\nconst getConfig = async () => {\r\n  const Linking = await import('expo-linking');\r\n  return {\r\n    main,\r\n    login,\r\n    prefixes: [Linking.makeUrl('/')],\r\n    rootPath: 'blacktokki-notebook',\r\n    documentTitle: {\r\n      formatter: () => {\r\n        return 'blacktokki-notebook';\r\n      },\r\n    },\r\n    rootScreen: {\r\n      main: 'Home',\r\n      login: 'LoginScreen',\r\n    },\r\n    headerLeftIcon: <List.Icon icon=\"backburger\" style={{ left: -18, top: -14 }} />,\r\n    headerRight: <HeaderRight />,\r\n    modals,\r\n    drawer: <Drawer />,\r\n  } as NavigationConfig;\r\n};\r\n\r\nexport default () => {\r\n  const scheme = useColorScheme();\r\n  const preTheme = scheme === 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n  const theme: typeof preTheme = {\r\n    ...preTheme,\r\n    colors: { ...preTheme.colors, primary: Colors[scheme].text },\r\n  };\r\n  const NavigationLazy = React.lazy(() =>\r\n    getConfig().then((config) => ({ default: () => <Navigation config={config} /> }))\r\n  );\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <Suspense fallback={<></>}>\r\n        <NavigationLazy />\r\n      </Suspense>\r\n    </PaperProvider>\r\n  );\r\n};\r\n"],"names":["KEYWORDS_KEY","getKeywords","_ref","_asyncToGenerator","subkey","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","error","_x","apply","arguments","saveKeywords","_ref2","keywords","stringify","setItem","_x2","_x3","useKeywords","_auth$user","auth","useAuthContext","isLocal","user","id","useQuery","queryKey","queryFn","_queryFn","axios","axiosCreate","getContentOne","get","data","getContentList","parentId","types","page","parentIdParam","undefined","typeParam","join","pageParam","value","_x4","postContent","_ref3","post","_x5","patchContent","_ref5","_ref4","updated","patch","ids","_x6","previewUrl","_ref6","delete","_ref7","preview","query","_x8","openDB","_openDB","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","lastPage","RECENT_PAGES_KEY","getContents","isOnline","type","transaction","objectStore","getAll","saveNoteContents","contents","content","find","v","savedId","then","snapshot","_objectSpread","tx","store","contentItem","put","oncomplete","getRecentPages","saveRecentPages","titles","useNotePages","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","c","invalidateQueries","description","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn6","useCreateOrUpdatePage","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","skip","Date","toISOString","map","i","newPage","input","userId","order","option","concat","_toConsumableArray","_x7","onSuccess","_onSuccess","useDeleteRecentPage","_mutationFn4","updatedRecentPages","filter","_title","_x11","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToParagraphs","html","doc","DOMParser","parseFromString","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","push","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","substring","textContent","trim","length","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","paragraph","onLink","navigation","noteLink","window","getLinks","pages","sameTitle","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","normalize","startsWith","RandomButton","useNavigation","randomPages","Math","floor","random","paragraphs","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","flexShrink","numberOfLines","ellipsizeMode","paddingLeft","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","lang","useLangContext","inputRef","useRef","_useKeywords$data","_auth$user2","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","AlertModal","callbacks","setModal","useModalsContext","back","messages","UNSAVED","message","buttons","margin","CommonButton","marginRight","getMarkedDays","dateString","markedDateStrings","date","dayjs","startDate","clone","startOf","add","endDate","endOf","markedDate","dateStart","dateEnd","markedDays","isAfter","isBefore","format","reduce","p","marked","dotColor","selected","DatePickerModal","datetime","callback","_dayjs","m","restMinute","defaultDayjs","_useLangContext","locale","markedDates","setMarkedDates","onSave","minHeight","textAlign","lightColor","darkColor","Suspense","fallback","_Fragment","Calendar","setDate","disableAllTouchEventsForDisabledDays","onMonthChange","NoteListSection","isLoading","emptyMessage","onScrollEnd","subtitles","subtitle","index","onScroll","nativeEvent","contentSize","contentOffset","y","onLayout","layout","selectable","extractDates","currentYear","getFullYear","patterns","regex","match","pattern","s","split","year","month","lastDay","getDate","String","padStart","mm","dd","mm2","dd2","results","usedRanges","RegExp","source","_loop","start","end","lastIndex","some","exec","cleanHtml","cleanAnchors","mergeTds","forEach","code","tr","tdList","mergedText","td","_td$textContent","newTd","document","createElement","innerHTML","appendChild","paragraphsToDatePatterns","dateMatches","toRaw","isHeader","original","matches","matchDateRange","dateNum","dateMatch","getTime","today","ratio","diff","now","toggleExpand","overflow","isExpand","getReadabilityLevel","calculateFleschKincaid","sentenceCount","wordList","wordCount","sum","word","syllables","test","max","countSyllables","score","koRatio","getKoreanRatio","enGrade","enLevel","koLevel","sentences","avgWordsPerSentence","classifyKoreanReadability","findLists","tag","list","items","li","_cloned$textContent","cloned","cloneNode","nested","remove","getSplitTitle","splitTitle","paragraphDescription","rootTitle","_paragraphs$find","replaceAll","problemCache","getDataLinear","existData","record","lists","findLast","duplicates","lastIndexOf","readability","toFixed","parentTitle","raw","matrix","getData","records","existTarget","link","_target","sourceName","getDataMatrix","findIndex","delay","setData","timeoutRef","clearTimeout","setTimeout","notes","preData","TimeLineButton","useTimeLine","List","_props","icon","alignSelf","Badge","navigate","ProblemButton","useProblem","toRecentContents","sort","b","_useNotePages2","_queryFn5","useRecentPages","tabRef","addRecentPage","_mutationFn3","_ref8","direct","recentPages","_x10","useAddRecentPage","deleteRecentPage","lastPageExists","useResizeContext","itemPadding","noteOnPress","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","noteCount","_pages$data2","TouchableRipple","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","React","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","Content","descriptionComponent","opacity","RecentPagesSection","RenderHtml","renderersProps","tagsStyles","contentWidth","ScrollView","contentContainerStyle","flexWrap","key","cancelButton","saveButton","marginLeft","columns","moveButton","NotePageHeader","pressableTextColor","flexGrow","NotePageSection","active","inactiveCard","EditorViewer","autoResize","NoteBottomSection","toc","fullParagraph","idx","iconColor","getIconColor","moveParagraphs","moveParagraph","_paragraphs$idx","reverse","_paragraphs$idx2","pageStyles","scrollbarGutter","contentContainer","actionButtons","actionButton","exportMarkdowns","zip","JSZip","default","_v$description","file","blob","generateAsync","createObjectURL","download","click","revokeObjectURL","importMarkdowns","files","accept","display","multiple","onchange","Error","endsWith","loadAsync","relativePath","dir","replace","async","toString","OptionButton","Colors","TextButton","textStyle","textDecorationLine","_useAuthContext","dispatch","mutation","setSearch","resetKeyword","_auth$user3","_mutationFn2","_onSuccess2","useResetKeyowrd","LanguageConfigSection","SkinConfigSection","ConfigSection","username","NotesTabView","background","ContentGroupSection","RecentChangesTabView","ConfigTabView","replaceDay","newDate","addDay","unit","moved","createOrUpdatePage","v3","setNow","expand","setExpand","timeout","TimerTag","DateHeaderSection","monthly","markedDateRange","moveDate","themedStyles","dateDisplay","todayButton","navButton","headerStyles","dateContainer","navContainer","accessibilityLabel","todayButtonText","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","AntDesign","isWeb","NotePage","isFocused","useIsFocused","useRoute","_route$params","archiveId","_window","toggleToc","toggleFullParagraph","_useNotePage","_useArchivePage","_queryFn4","useArchivePage","archive","handleEdit","_useState5","_useState6","setDescription","hasChild","TimerTagSection","ActivityIndicator","EditPage","_checkedRef$current2","setContent","checkedRef","handleBack","canGoBack","goBack","handleSave","onError","Alert","alert","handleUnsaved","_checkedRef$current","unsaved","isPrevent","currentTitle","addListener","preventDefault","action","payload","setParams","returnValue","addEventListener","removeEventListener","useUnsaveEffect","_checkedRef$current3","Editor","setValue","autoComplete","trigger","getMatchedChars","_getMatchedChars","childrenPages","encodeURI","_getMatchedChars2","protocol","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","setPreview","moveMutation","_useNotePages5$data","oldTitle","_x9","useMovePage","_useMemo","_moveParagraph$","isSplit","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","RecentPages","Problem","_useProblem","Archive","note","_useSnapshotPages","useInfiniteQuery","_queryFn2","getNextPageParam","allPages","refetchOnReconnect","refetchOnWindowFocus","useSnapshotPages","_useSnapshotPages$dat","archives","fetchNextPage","flat","_","TimeLine","_useTimeLine","NoteViewer","_useNoteViewers","_queryFn7","all","_ref9","fetch","process","toHtml","_x12","useNoteViewers","viewers","_page$description","pressable","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider"],"sourceRoot":""}