{"version":3,"file":"static/js/279.518a1479.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/hooks/useKeywordStorage.ts","src/components/SearchBar.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/main/NoteListSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/EmptyPageScreen.tsx","src/screens/main/EmptyContentScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, types?: Content['type'][])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = types !== undefined?`&types=${types.join(',')}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getContents = async (type:\"NOTE\"|\"SNAPSHOT\"): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList(undefined,[type]))\r\n  }\r\n  if(type===\"SNAPSHOT\"){\r\n    return []\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      const savedId = await (id?(patchContent({id, updated:content}).then(()=>id)):postContent(content));\r\n      const snapshot:Content|PostContent = {...content, type:\"SNAPSHOT\", id:undefined, parentId:savedId}\r\n      await postContent(snapshot)\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: async() => await getContents(\"NOTE\"),\r\n    staleTime: 1000\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  return useQuery({\r\n    queryKey: ['snapshotContents'],\r\n    queryFn: async () => await getContents(\"SNAPSHOT\"),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  const { data:contents=[], isLoading } = useNotePages()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title, isLoading],\r\n    queryFn: async () => {\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    const { data:contents=[], isLoading } = useNotePages()\r\n    return useQuery({\r\n      queryKey: ['recentPages', isLoading],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    const { data:contents=[], isLoading } = useNotePages()\r\n    return useQuery({\r\n      queryKey: ['lastPage', isLoading],\r\n      queryFn: async() => {\r\n        console.log(lastPage, )\r\n        return contents.find(v=>v.title === lastPage)\r\n      } \r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    const { data:contents=[] } = useNotePages()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: async (data) => {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { data:contents=[] } = useNotePages()\r\n\r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import { TouchableOpacity, View, FlatList, StyleSheet } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { createCommonStyles } from \"../styles\";\r\nimport { Text, useColorScheme } from \"@blacktokki/core\";\r\n\r\nexport interface NodeData {\r\n    path: string;\r\n    title: string;\r\n    level: number;\r\n    header: string;\r\n    description: string;\r\n  }\r\n  \r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n  \r\n    const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n  \r\n    const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n    const headerStack: { level: number; title: string }[] = [];\r\n  \r\n    let current: NodeData | null = null;\r\n    let cursor = doc.body.firstChild;\r\n  \r\n    const flushCurrent = () => {\r\n      if (current) {\r\n        result.push(current);\r\n        current = null;\r\n      }\r\n    };\r\n  \r\n    while (cursor) {\r\n      if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n        const el = cursor as HTMLElement;\r\n        if (headings.includes(el.tagName)) {\r\n          flushCurrent();\r\n  \r\n          const level = parseInt(el.tagName.substring(1));\r\n          const title = el.textContent?.trim() || \"\";\r\n  \r\n          // 헤더 스택 업데이트\r\n          while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n            headerStack.pop();\r\n          }\r\n          headerStack.push({ level, title });\r\n  \r\n          const path = headerStack.map(h => h.title).join(\" > \");\r\n  \r\n          current = {\r\n            path,\r\n            title,\r\n            level,\r\n            header: el.outerHTML,\r\n            description: \"\",\r\n          };\r\n        } else if (current) {\r\n          current.description += el.outerHTML;\r\n        } else {\r\n          // 헤더 밖의 내용 처리\r\n          result[0].description += el.outerHTML;\r\n        }\r\n      } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n        current.description += cursor.textContent || \"\";\r\n      }\r\n  \r\n      cursor = cursor.nextSibling;\r\n    }\r\n  \r\n    flushCurrent();\r\n    return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props:{root:string, path:string, onPress:(item:NodeData)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.onPress(item)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?[commonStyles.title, {marginBottom:5, marginTop:3}]:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n})","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords';\r\n\r\nexport type KeywordContent = {\r\n  type: \"_NOTELINK\",\r\n  name: string, \r\n  title: string,\r\n  section?: string\r\n} | {\r\n  type:  \"_KEYWORD\",\r\n  title: string\r\n}\r\n\r\nconst getKeywords = async (): Promise<KeywordContent[]> => {\r\ntry {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n} catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n}\r\n};\r\n    \r\nconst saveKeywords = async (keywords: KeywordContent[]): Promise<void> => {\r\ntry {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY, jsonValue);\r\n} catch (e) {\r\n    console.error('Error saving keywords', e);\r\n}\r\n};\r\n\r\nexport const useKeywords = () => {\r\n    return useQuery({\r\n        queryKey: ['keywords'],\r\n        queryFn: async () => {\r\n        return getKeywords()\r\n        },\r\n    });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (keyword:KeywordContent) => {\r\n      const keywords = await getKeywords();\r\n      const newKeywords = [...new Set([JSON.stringify(keyword), ...keywords.map(v=>JSON.stringify(v))])].map(v=>JSON.parse(v))\r\n      await saveKeywords(newKeywords)\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords([])\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { parseHtmlToSections } from './HeaderSelectBar';\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\n\r\nlet _searchText = ''\r\n\r\ntype SearchContent = Content | KeywordContent\r\n\r\nfunction extractHtmlLinksWithQuery(text:string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map(a => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nexport function urlToNoteLink(url:string){\r\n  const newLocation = new URL(url);\r\n  if (location.origin  === newLocation.origin){\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get(\"title\")\r\n    const section = params.get(\"section\") || undefined\r\n    if (title){\r\n      return {title, section}\r\n    }\r\n  }\r\n}\r\n\r\nexport function getNoteLinks(pages:Content[]){\r\n  return pages.flatMap(v=>extractHtmlLinksWithQuery(v.description || '').map((v2)=>{\r\n    const noteLink = urlToNoteLink(v2.url);\r\n    if(noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/){\r\n      return {type: \"_NOTELINK\" as \"_NOTELINK\", name:v2.text, ...noteLink, origin:v.title}\r\n    }\r\n  }).filter(v=>v !==undefined))\r\n}\r\n\r\nexport const getFilteredPages = (pages:Content[], searchText:string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase()\r\n  const noteLinks = getNoteLinks(pages)\r\n  return [\r\n    ...pages.filter(page =>page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter(v=>v.name.toLowerCase().startsWith(lowerCaseSearch))\r\n  ]\r\n}\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter(v=>v.description);\r\n  return randomPages && <TouchableOpacity\r\n    style={commonStyles.searchButton}\r\n    onPress={()=>{\r\n      const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n      const sections = parseHtmlToSections(page.description || '')\r\n      navigation.navigate('NotePage', { title:page.title, section: sections[Math.floor(Math.random() * sections.length)].title });\r\n    }}\r\n>\r\n  <Icon name={\"random\"} size={18} color=\"#FFFFFF\" />\r\n</TouchableOpacity>\r\n}\r\n\r\nexport const titleFormat = (item:{title:string, section?:string}) => `${item.title}${item.section?(\" ▶ \"+item.section):\"\"}`\r\n\r\nexport const SearchList = ({filteredPages, handlePagePress, addKeyword}:{filteredPages:SearchContent[], handlePagePress:(title:string, section?:string)=>void, addKeyword?:(keyword:KeywordContent)=>void})=>{\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item:SearchContent)=>{\r\n    return PanResponder.create({\r\n      onPanResponderStart:() => {\r\n        if (item.type === \"_NOTELINK\" && item.section){\r\n          handlePagePress(item.title, item.section)\r\n          addKeyword?.(item)\r\n        }\r\n        else {\r\n          handlePagePress(item.title)\r\n          addKeyword?.({type:\"_KEYWORD\", title:item.title})\r\n        }\r\n      }\r\n    }).panHandlers\r\n  }, [])\r\n\r\n  return <FlatList\r\n  data={filteredPages}\r\n  keyExtractor={(item:any) => JSON.stringify([item.title, item.name, item.section])}\r\n  renderItem={({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.resultItem}\r\n      {...pagePressHandlers(item)}\r\n    >\r\n      <Text style={[commonStyles.text, styles.resultText]}>{item.type===\"_NOTELINK\"?item.name:item.title}</Text>\r\n      {item.type ===\"_NOTELINK\" && <Text style={[commonStyles.text, styles.resultText, {fontSize:12}]}>{titleFormat(item)}</Text>}\r\n    </TouchableOpacity>\r\n  )}\r\n  ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n/>\r\n}\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void, useRandom?:boolean;}> = ({handlePress, useRandom=true}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput|null>()\r\n  const { data:keywords = []} = useKeywords()\r\n  const addKeyword = useAddKeyowrd()\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages:SearchContent[] = searchText.length > 0\r\n    ? getFilteredPages(pages, searchText).slice(0, 10)\r\n    : keywords.slice(0, 10)\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n      addKeyword.mutate({type:\"_KEYWORD\", title:searchText.trim()})\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?:string) => {\r\n    handlePress?handlePress(title):navigation.navigate('NotePage', { title, section });\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(()=>PanResponder.create({\r\n      onPanResponderStart: handleSearch,\r\n    }).panHandlers\r\n  ,[searchText])\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={ref=>{inputRef.current = ref}}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={()=>setShowResults(true)}\r\n          onBlur={()=>setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton/>}\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList filteredPages={filteredPages} handlePagePress={handlePagePress} addKeyword={addKeyword.mutate}/> \r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              {...searchHandlers}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    if (page?.description === content){\r\n      navigation.navigate('NotePage', { title });\r\n      return;\r\n    }\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n        autoComplete={[{\r\n          trigger: '[',\r\n          getMatchedChars: (pattern) => {\r\n            return [{type:\"_NOTELINK\", name:pattern, title, section:pattern}, ...getFilteredPages(pages, pattern)].map(v=>{\r\n              const text = v.type === '_NOTELINK' ? (v.name + `(${titleFormat(v)})`): v.title;\r\n              const url = encodeURI(v.type === '_NOTELINK' && v.section ? `?title=${v.title}&section=${v.section}`:`?title=${v.title}`);\r\n              return {\r\n                text,\r\n                value:`<a href=${url}>${text}</a>`,\r\n              }})\r\n          }\r\n        }]}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nexport const EmptyPageButton = () => {\r\n  const { lang } = useLangContext()\r\n  return <List.Item left={_props=><List.Icon {..._props} icon={\"note-remove\"} />} title={lang(\"Empty Page\")} onPress={()=>navigate('EmptyPages')} />\r\n}\r\n\r\nexport const EmptyContentButton = () => {\r\n  const { lang } = useLangContext()\r\n  return <List.Item left={_props=><List.Icon {..._props} icon={\"note-edit\"} />} title={lang(\"Empty Content\")} onPress={()=>navigate('EmptyContents')} />\r\n}\r\n\r\nexport const toRecentContents = (data:Content[]) => data.filter(v=>v.description).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'LAST'} | {type:'NOTE', noteCount:number}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?toRecentContents(notes.data):[]:pages.data)\r\n  const lastPageExists = lastPage && (data?.find(v=>v.id===lastPage.id) === undefined);\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return ((props.type !== 'LAST' || lastPageExists) && <List.Section>\r\n        {data && (\r\n         props.type === 'LAST'\r\n         ?(lastPageExists && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n         />)\r\n         :props.type === 'NOTE'\r\n         ?<>{data.slice(0, props.noteCount).map(v=><List.Item \r\n            key={v.id} \r\n            left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n            title={v.title} \r\n            onPress={()=>noteOnPress(v.title)}\r\n            onLongPress={()=>noteOnLongPress(v.title)}\r\n            style={{padding:itemPadding }} \r\n          />)}\r\n          <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}/>\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import React from 'react';\r\nimport { TouchableOpacity, ScrollView } from 'react-native';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext, View, Text } from '@blacktokki/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { Card } from 'react-native-paper';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\nimport RenderHtml from 'react-native-render-html';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\nconst _cardPadding = (isLandscape:boolean) => isLandscape?20:4\r\nconst _cardMaxWidth = (isLandscape:boolean) => isLandscape?250:190\r\n\r\nconst CardPage = React.memo(({data}: {data:Content[]})=>{\r\n  const window  = useResizeContext()\r\n  const cardMaxWidth = _cardMaxWidth(window===\"landscape\")\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window==='landscape'?2:0\r\n  return [...data, null, null]?.map((item, index)=>{\r\n    if (item === null){\r\n      return <View key={index} style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n    }\r\n    const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n    const onPress = ()=>navigation.navigate('NotePage', {title:item.title})\r\n    return <TouchableOpacity key={index} style={{flexBasis:window==='landscape'?'33%':'50%', padding:_cardPadding(window===\"landscape\"), paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n        <Card onPress={onPress} style={[commonStyles.card, {paddingTop:8, aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}]}>\r\n          <Card.Content style={{padding:0}}>\r\n            <RenderHtml source={{html:(item.description || '')}} renderersProps={{ a : {onPress}}} tagsStyles={{body: {color:commonStyles.text.color}}} contentWidth={cardMaxWidth}/>\r\n          </Card.Content>\r\n        </Card>\r\n        <View style={{flexDirection:'row', marginTop:10, padding:0, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n          <Text style={{fontSize:14+fSize}}>{item.title}</Text>\r\n          <Text style={{fontSize:12+fSize, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n  })\r\n}, (prev ,next) => JSON.stringify(prev.data.map(v=>v.id)) === JSON.stringify(next.data.map(v=>v.id)))\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n    const theme = useColorScheme();\r\n    const commonStyles = createCommonStyles(theme);\r\n    const window = useResizeContext();\r\n    const { data: recentPages = [], isLoading } = useNotePages();\r\n    const contents = toRecentContents(recentPages)\r\n    return isLoading ? (\r\n      <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n        <Text style={commonStyles.text}>로딩 중...</Text>\r\n      </View>\r\n    ) : contents.length > 0 ? (\r\n      <ScrollView \r\n        style={{ height:0}} \r\n        contentContainerStyle={{flexDirection:'row', justifyContent:'center'}}\r\n      >\r\n        <View style={{backgroundColor:'transparent', flexBasis:'100%', maxWidth:(_cardMaxWidth(window==='landscape') + 5)  * (window==='landscape'?5:3), flexWrap:'wrap', flexDirection:'row', paddingRight:_cardPadding(window==='landscape'), justifyContent:window==='landscape'?undefined:'center'}}>\r\n          <CardPage data={contents}/>\r\n        </View>\r\n      </ScrollView>\r\n    ) : (\r\n      <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n        <Text style={commonStyles.text}>\r\n          최근 수정한 노트가 없습니다.\r\n        </Text>\r\n      </View>\r\n    );\r\n})","import React, { useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, ContractFooter, Text, TextButton, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections, navigate } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection, { EmptyContentButton, EmptyPageButton } from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar, SearchList } from '../../../components/SearchBar';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\n\r\nconst NotesTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>{lang(\"Problems\")}</List.Subheader>\r\n      <EmptyPageButton/>\r\n      <EmptyContentButton/>\r\n    </ScrollView>\r\n}\r\n\r\nconst RecentChangesTabView = ()=>{\r\n  return <RecentPagesSection/>\r\n}\r\n\r\nconst CommonConfigButton = (props:{title:string, onPress?:()=>void})=>{\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  return <TouchableOpacity style={[commonStyles.header, {marginBottom:0}]} onPress={props.onPress} disabled={!props.onPress}>\r\n    <Text style={{ fontSize: 20, color, fontWeight: '600' }}>{props.title}</Text>\r\n    {props.onPress && <Text>{\">\"}</Text>}\r\n  </TouchableOpacity>\r\n}\r\n\r\nconst ConfigCommonView = () => {\r\n  const { lang } = useLangContext()\r\n  const { dispatch } = useAuthContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  const [search, setSearch] = useState(false)\r\n  const { data:keywords = []} = useKeywords()\r\n  const resetKeyword = useResetKeyowrd()\r\n  return <View>\r\n    <View style={commonStyles.card}>\r\n      <ConfigSections/>\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Search History')}/>\r\n      <View style={{flexDirection:'row'}}>\r\n        <TextButton\r\n          title={search?\"Hide History\":\"Show History\"}\r\n          textStyle={{\r\n            fontSize: 16,\r\n            color,\r\n          }}\r\n          style={{ borderRadius: 20 }}\r\n          onPress={() => setSearch(!search)}\r\n        />\r\n        <TextButton\r\n          title={\"Reset\"}\r\n          textStyle={{\r\n            fontSize: 16,\r\n            color,\r\n          }}\r\n          style={{ borderRadius: 20 }}\r\n          onPress={() => resetKeyword.mutate()}\r\n        />\r\n      </View>\r\n      {search && <View style={[commonStyles.card, {padding:0}]}>\r\n        <SearchList filteredPages={keywords} handlePagePress={(title, section)=>navigate('NotePage', { title, section })}/>\r\n      </View>}\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Archive')} onPress={()=>navigate('Archive', {})}/>\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Logout')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n    </View>\r\n  </View>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  return <ScrollView style={{flex:1}} contentContainerStyle={[commonStyles.container, {backgroundColor:Colors[theme].background}]}>\r\n    <ConfigCommonView/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Discovery'), component:NotesTabView, icon:<List.Icon icon={'compass'}/>, headerRight:()=><></>},\r\n    {title: lang('All Notes'), component:RecentChangesTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%', justifyContent:'space-between'}]}>\r\n      <ConfigCommonView/>\r\n      <ContractFooter buttons={[\r\n        {icon:<AntDesign name=\"github\" size={24} color={Colors[theme].iconColor}/>, url:'https://github.com/blacktokki/blacktokki-notebook', isWeb:true},\r\n        {icon:<AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor}/>, url:'mailto:ydh051541@naver.com', isWeb:false}\r\n      ]}/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const path = paragraph.find(v=>v.title === section)?.path || ''\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const [preview, setPreview] = useState<boolean>()\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const moveDescription = moveParagraph.map(v=>v.header + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map(v=>(v.path===path && v.description===''?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title);\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    if (!isLoading){\r\n      setNewPath(path)\r\n    }\r\n  }, [section, isLoading])\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:window==='landscape'?'row':'column', zIndex:1}}>\r\n          <View style={{zIndex:1}}>\r\n            <Text style={commonStyles.text}>{section?\"현재 노트 제목 및 문단:\":\"현재 노트 제목:\"}</Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>{titleFormat({title, section})}</Text>\r\n            <Text style={commonStyles.text}>새 노트 제목 및 문단:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false}/>\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar path={newPath} onPress={(item)=>setNewPath(item.path)} root={newPage?.title || ''} data={newParagraph}/>\r\n            </View>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[commonStyles.button, styles.moveButton, {flex:0, flexDirection:'row', alignItems:'center', paddingTop:24, paddingBottom:16}]} \r\n              onPress={()=>setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat({title, section:paragraphItem?.title})}</Text>\r\n              <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ➜  </Text>\r\n              <Text style={commonStyles.title}>{titleFormat({title:newTitle, section:newParagraphItem?.title})}</Text>   \r\n            </TouchableOpacity>\r\n              {preview!==undefined && <View style={{display:preview?'flex':'none'}}>\r\n              <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  autoResize\r\n                />\r\n              </View>}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: { \r\n    marginTop: 8, \r\n    marginBottom: 16 \r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar, titleFormat, urlToNoteLink } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const sectionDescription = (paragraph:NodeData[], section:string, rootTitle:boolean) => {\r\n  const path = paragraph.find(v=>v.title===section)?.path\r\n  return path?paragraph.filter(v=>v.path.startsWith(path)).map(v=>((rootTitle || v.path!==path)?v.header:\"\") + v.description).join(\"\"):\"\"\r\n}\r\n\r\nexport const getSplitTitle = (title:string) => {\r\n  const splitTitle = title.split(\"/\")\r\n  if (splitTitle.length<2) {\r\n    return [title]\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length -1).join(\"/\"), splitTitle[splitTitle.length -1]]\r\n}\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false)\r\n  \r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data:archives } = useSnapshotPages()\r\n  const archive = archiveId?archives?.find(v=>v.id===archiveId &&v.description !== page?.description):undefined\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description||'');\r\n  const [description, setDescription] = useState<string>()\r\n  useEffect(()=>{\r\n    if(description === undefined) {\r\n      setDescription(archive?archive.description:section?sectionDescription(paragraph, section, true) :page?.description)\r\n    }\r\n    else {\r\n      return () => setDescription(undefined);\r\n    }\r\n  }, [page, archive, section, description])\r\n\r\n  useEffect(()=>{\r\n    toggleToc(false)\r\n  }, [route])\r\n  const splitTitle = getSplitTitle(title)\r\n\r\n  return (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <ScrollView style={[\r\n      commonStyles.container, \r\n      //@ts-ignore\r\n      {paddingRight:12, scrollbarGutter: 'stable'}]}>\r\n      <View style={commonStyles.header}>\r\n        <View style={{flexDirection:'row'}}>\r\n          <TouchableOpacity onPress={()=>navigation.navigate('NotePage', { title:splitTitle[0] })}>\r\n            <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>{splitTitle[0]}</Text>\r\n          </TouchableOpacity>\r\n          {splitTitle.length === 2 && <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>{\"/\"+splitTitle[1]}</Text>}\r\n          {section && <Text style={[commonStyles.title, styles.pageTitle, {marginLeft:5}]} numberOfLines={1}>{titleFormat({title:\"\", section})}</Text>}\r\n          {archive && <Text style={[commonStyles.text, {marginLeft:5, fontStyle:'italic'}]}>{\"(\" + archive.updated + \")\"}</Text>}\r\n        </View>\r\n        <View style={styles.actionButtons}>\r\n          {!section && <>\r\n            <TouchableOpacity onPress={()=>navigation.navigate(\"Archive\", { title })} style={styles.actionButton}>\r\n              <Icon name=\"history\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!description && !archive && <>\r\n            <TouchableOpacity onPress={()=>toggleToc(!toc)} style={styles.actionButton}>\r\n              <Icon name=\"list\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n              <Icon name=\"exchange\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!description && !archive && !section && <>\r\n            <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n              <Icon name=\"pencil\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n          </>}\r\n        </View>\r\n      </View>\r\n      <View style={commonStyles.flex}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={!toc && description?[commonStyles.card, {flex:1, padding:0}]:{flex:1, position:'absolute'}}>\r\n            <EditorViewer\r\n              active\r\n              value={description || ''}\r\n              theme={theme}\r\n              onLink={(url)=>{\r\n                const noteLink = urlToNoteLink(url);\r\n                if(noteLink){\r\n                  navigation.navigate(\"NotePage\", noteLink)\r\n                }\r\n                else{\r\n                  window.open(url, '_blank');\r\n                }\r\n              }}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {toc? <HeaderSelectBar data={paragraph} path={section || ''} root={title} onPress={(item)=>navigation.navigate('NotePage', {title, section:item.title})}/>\r\n          :page?.description ? undefined : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar, titleFormat } from '../../components/SearchBar';\r\n\r\nexport const NoteListSection = ({contents, isLoading, onPress, emptyMessage}:{contents:{title:string, section?:string, subtitle?:string, id?:number}[], isLoading:boolean, onPress:(title:string, section?:string, id?:number)=>void, emptyMessage:string}) => {\r\n    const theme = useColorScheme();\r\n    const commonStyles = createCommonStyles(theme);\r\n    const window = useResizeContext();\r\n    return (<>\r\n        {window === 'portrait' && <SearchBar/>}\r\n        <View style={commonStyles.container}>      \r\n          {isLoading ? (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>로딩 중...</Text>\r\n            </View>\r\n          ) : contents.length > 0 ? (\r\n            <FlatList\r\n              data={contents}\r\n              keyExtractor={(item) => JSON.stringify([item.title, item.section, item.id])}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={commonStyles.card}\r\n                  onPress={() => onPress(item.title, item.section, item.id)}\r\n                >\r\n                  <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n                  {item.subtitle!==undefined && <Text style={commonStyles.smallText}>\r\n                    {item.subtitle}\r\n                  </Text>}\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n            />\r\n          ) : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                {emptyMessage}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </>);\r\n}","import React from 'react';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { NavigationParamList } from '../../types';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>()\r\n  const { title } = route.params\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return <NoteListSection \r\n    contents={recentPages.filter(v=>title===undefined || title===v.title).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime()).map(v=>({...v, subtitle:`최근 수정: ${updatedFormat(v.updated as string)}`}))} \r\n    isLoading={isLoading}\r\n    onPress={(title, _, id)=>navigation.navigate('NotePage', { title, archiveId:id })}\r\n    emptyMessage='최근 수정한 노트가 없습니다.'/>\r\n};\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\nimport { EmptyPagesScreen } from \"./main/EmptyPageScreen\";\r\nimport { EmptyContentsScreen } from \"./main/EmptyContentScreen\";\r\nimport { ArchiveScreen } from \"./main/ArchiveScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n    EmptyPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:EmptyPagesScreen,\r\n      path:'need',\r\n    },\r\n    EmptyContents:{\r\n      title:'Blacktokki Notebook',\r\n      component:EmptyContentsScreen,\r\n      path:'empty',\r\n    },\r\n    Archive:{\r\n      title:'Blacktokki Notebook',\r\n      component:ArchiveScreen,\r\n      path:'archive',\r\n    },\r\n  };\r\n  ","import React from 'react';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useResizeContext } from '@blacktokki/core';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window  = useResizeContext()\r\n  return <>\r\n    {window === 'portrait' && <SearchBar/>}\r\n    <RecentPagesSection/>\r\n  </>\r\n};\r\n","import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { getNoteLinks } from '../../components/SearchBar';\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { getSplitTitle } from './NotePageScreen';\r\n\r\nexport const EmptyPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const unknownData = getNoteLinks(pages).filter((v)=>{\r\n    const page = pages.find(v2=>v2.title===v.title)\r\n    if (page?.description){\r\n      if (v.section === undefined || parseHtmlToSections(page.description).find(v2=>v2.title === v.section)){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }).map(v=>({...v, subtitle:(v.section===undefined?'Unknown note link':'Unknown section link') + `(${v.origin})`}))\r\n  const emptyParentData = pages.map(v=>{\r\n    const splitTitle = getSplitTitle(v.title)\r\n    if (v.description && splitTitle.length === 2 && pages.find(v=>v.title===splitTitle[0]) === undefined){\r\n      return { title:splitTitle[0], subtitle: `Empty parent note(${v.title})`}\r\n    }\r\n    return undefined\r\n  }).filter(v=>v!==undefined)\r\n  return <NoteListSection\r\n    contents={[...unknownData, ...emptyParentData]}\r\n    onPress={(title)=>navigation.navigate('EditPage', { title })}\r\n    isLoading={isLoading}\r\n    emptyMessage='작성이 필요한 노트가 없습니다.'/>\r\n};\r\n","import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { sectionDescription } from './NotePageScreen';\r\n\r\nfunction findEmptyLists(html: string): string[] {\r\n  const regex = /<(ol|ul)\\b[^>]*>([\\s\\n\\r]*)<\\/\\1>/gi;\r\n  const matches: string[] = [];\r\n  let match;\r\n\r\n  while ((match = regex.exec(html)) !== null) {\r\n    matches.push(match[0]); // 전체 태그를 반환\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\nexport const EmptyContentsScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const data = pages.flatMap(v=>{\r\n    const paragraph = parseHtmlToSections(v.description || '')\r\n    const emptyParagraph = paragraph.filter(v2=>v2.level!==0 && sectionDescription(paragraph, v2.title, false).trim() === \"\")\r\n    const emptyList = paragraph.filter(v2=>findEmptyLists(v2.description).length > 0)\r\n    return [\r\n      ...emptyParagraph.map(v2=>({title:v.title, section:v2.level===0?undefined:v2.title, subtitle:'Empty section'})),\r\n      ...emptyList.map(v2=>({title:v.title, section:v2.level===0?undefined:v2.title, subtitle:'Empty list'}))\r\n    ]\r\n  })\r\n  return <NoteListSection \r\n    contents={data}\r\n    onPress={(title)=>navigation.navigate('EditPage', { title })}\r\n    isLoading={isLoading}\r\n    emptyMessage='작성이 필요한 내용이 없습니다.'/>\r\n};\r\n","import React from 'react';\r\nimport ContentGroupSection, { EmptyContentButton, EmptyPageButton } from '../screens/main/home/ContentGroupSection';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <EmptyPageButton/>\r\n        <EmptyContentButton/>\r\n        <ScrollView>\r\n            <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n            <ContentGroupSection type={'LAST'} />\r\n            <ContentGroupSection type={'PAGE'} />\r\n            <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Recent Changes\")}</List.Subheader>{/* 최근 변경 */}\r\n            <ContentGroupSection type={'NOTE'} noteCount={10}/>\r\n        </ScrollView>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst HeaderRight = ()=>{\r\n    const windowType = useResizeContext();\r\n    return windowType==='landscape'?<SearchBar/>:undefined\r\n}\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <HeaderRight/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","types","parentIdParam","undefined","typeParam","join","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getContents","type","_x","saveNoteContents","contents","content","find","savedId","then","snapshot","_objectSpread","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","_queryFn","staleTime","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isLoading","_queryFn3","page","c","invalidateQueries","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","log","useCreateOrUpdatePage","auth","useAuthContext","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x6","useDeleteRecentPage","_mutationFn4","updatedRecentPages","_title","_x9","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","textContent","trim","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","KEYWORDS_KEY","getKeywords","saveKeywords","keywords","useKeywords","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","section","getNoteLinks","pages","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","noteLink","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","noteLinks","startsWith","RandomButton","navigation","useNavigation","randomPages","Math","floor","random","sections","navigate","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useKeywords$data","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","cancelButton","marginRight","saveButton","marginLeft","EmptyPageButton","lang","useLangContext","List","_props","icon","EmptyContentButton","toRecentContents","sort","b","Date","getTime","notes","_useNotePages2","_queryFn4","useRecentPages","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x8","useAddRecentPage","deleteRecentPage","lastPageExists","window","useResizeContext","itemPadding","noteOnPress","clearTimeout","setTimeout","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","_Fragment","noteCount","_pages$data2","TouchableRipple","margin","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","_cardPadding","isLandscape","_cardMaxWidth","CardPage","cardMaxWidth","fSize","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","overflow","Content","RenderHtml","source","renderersProps","tagsStyles","contentWidth","opacity","textAlign","prev","next","RecentPagesSection","ScrollView","contentContainerStyle","flexWrap","NotesTabView","Colors","background","selectable","ContentGroupSection","RecentChangesTabView","CommonConfigButton","ConfigCommonView","dispatch","setSearch","resetKeyword","_mutationFn2","_onSuccess2","useResetKeyowrd","ConfigSections","TextButton","textStyle","ConfigTabView","columns","moveButton","sectionDescription","paragraph","rootTitle","_paragraph$find","getSplitTitle","splitTitle","split","pageTitle","actionButtons","actionButton","NoteListSection","emptyMessage","subtitle","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","buttons","AntDesign","iconColor","isWeb","NotePage","useRoute","_route$params","archiveId","_window","toc","toggleToc","_useNotePage","archives","archive","handleEdit","setDescription","scrollbarGutter","numberOfLines","ActivityIndicator","EditorViewer","active","onLink","open","autoResize","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","pattern","encodeURI","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","_useState5","_useState6","setPreview","moveMutation","_useNotePages5$data","oldTitle","Error","some","_x7","useMovePage","_useMemo","moveParagraph","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","display","RecentPages","EmptyPages","unknownData","emptyParentData","EmptyContents","emptyParagraph","emptyList","regex","matches","findEmptyLists","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}