{"version":3,"file":"static/js/710.b6249390.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/components/HeaderSelectBar.tsx","src/hooks/useKeywordStorage.ts","src/components/SearchBar.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/RecentPageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/index.ts","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getNoteContents = async (): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList()).filter(v=>(v.type==='NOTE'|| v.type==='BOOKMARK'))\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      await (id?patchContent({id, updated:content}):postContent(content));\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: getNoteContents,\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const contents = await getNoteContents();\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        const contents = await getNoteContents();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        const contents = await getNoteContents();\r\n        return contents.find(v=>v.title === lastPage)\r\n      } \r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: async (data) => {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    \r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'LAST'} | {type:'NOTE', noteCount:number}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?.filter(v=>v.description).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() ):pages.data)\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return (\r\n    <List.Section>\r\n        {data && (\r\n         props.type === 'LAST'\r\n         ?(lastPage && (data?.find(v=>v.id===lastPage.id) === undefined) && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n         />)\r\n         :props.type === 'NOTE'\r\n         ?<>{data.slice(0, props.noteCount).map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n          title={v.title} \r\n          onPress={()=>noteOnPress(v.title)}\r\n          onLongPress={()=>noteOnLongPress(v.title)}\r\n          style={{padding:itemPadding }} \r\n        />)}\r\n        {((data?.length || 0) > props.noteCount) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}  />}\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import { TouchableOpacity, View, FlatList, StyleSheet } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { createCommonStyles } from \"../styles\";\r\nimport { Text, useColorScheme } from \"@blacktokki/core\";\r\n\r\nexport interface NodeData {\r\n    path: string;\r\n    title: string;\r\n    level: number;\r\n    header: string;\r\n    description: string;\r\n  }\r\n  \r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n  \r\n    const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n  \r\n    const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n    const headerStack: { level: number; title: string }[] = [];\r\n  \r\n    let current: NodeData | null = null;\r\n    let cursor = doc.body.firstChild;\r\n  \r\n    const flushCurrent = () => {\r\n      if (current) {\r\n        result.push(current);\r\n        current = null;\r\n      }\r\n    };\r\n  \r\n    while (cursor) {\r\n      if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n        const el = cursor as HTMLElement;\r\n        if (headings.includes(el.tagName)) {\r\n          flushCurrent();\r\n  \r\n          const level = parseInt(el.tagName.substring(1));\r\n          const title = el.textContent?.trim() || \"\";\r\n  \r\n          // 헤더 스택 업데이트\r\n          while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n            headerStack.pop();\r\n          }\r\n          headerStack.push({ level, title });\r\n  \r\n          const path = headerStack.map(h => h.title).join(\" > \");\r\n  \r\n          current = {\r\n            path,\r\n            title,\r\n            level,\r\n            header: el.outerHTML,\r\n            description: \"\",\r\n          };\r\n        } else if (current) {\r\n          current.description += el.outerHTML;\r\n        } else {\r\n          // 헤더 밖의 내용 처리\r\n          result[0].description += el.outerHTML;\r\n        }\r\n      } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n        current.description += cursor.textContent || \"\";\r\n      }\r\n  \r\n      cursor = cursor.nextSibling;\r\n    }\r\n  \r\n    flushCurrent();\r\n    return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props:{root:string, path:string, onPress:(item:NodeData)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.onPress(item)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?[commonStyles.title, {marginBottom:5, marginTop:3}]:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n})","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords';\r\n\r\n\r\nconst getKeywords = async (): Promise<string[]> => {\r\ntry {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n} catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n}\r\n};\r\n    \r\nconst saveKeywords = async (keywords: string[]): Promise<void> => {\r\ntry {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY, jsonValue);\r\n} catch (e) {\r\n    console.error('Error saving keywords', e);\r\n}\r\n};\r\n\r\nexport const useKeywords = () => {\r\n    return useQuery({\r\n        queryKey: ['keywords'],\r\n        queryFn: async () => {\r\n        return getKeywords()\r\n        },\r\n    });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (keyword:string) => {\r\n      const keywords = await getKeywords();\r\n      const newKeywords = [...new Set([...keywords, keyword])].filter(v=>v.trim()).slice(0, 10)\r\n      await saveKeywords(newKeywords)\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { parseHtmlToSections } from './HeaderSelectBar';\r\nimport { useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\n\r\nlet _searchText = ''\r\n\r\ntype SearchContent = Content | {\r\n  type: \"_NOTELINK\",\r\n  name: string, \r\n  title: string,\r\n  section?: string\r\n} | {\r\n  type:  \"_KEYWORD\",\r\n  title: string\r\n}\r\n\r\nfunction extractMarkdownLinksWithQuery(text:string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map(a => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nexport function urlToNoteLink(url:string){\r\n  const newLocation = new URL(url);\r\n  if (location.origin  === newLocation.origin){\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get(\"title\")\r\n    const section = params.get(\"section\") || undefined\r\n    if (title){\r\n      return {title, section}\r\n    }\r\n  }\r\n}\r\n\r\nfunction extractMarkdownNoteLink(contents:Content[]){\r\n  return contents.flatMap(v=>extractMarkdownLinksWithQuery(v.description || '').map((v2)=>{\r\n    const noteLink = urlToNoteLink(v2.url);\r\n    if(noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/){\r\n      return {type: \"_NOTELINK\" as \"_NOTELINK\", name:v2.text, ...noteLink}\r\n    }\r\n  }).filter(v=>v !==undefined))\r\n  \r\n}\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter(v=>v.description);\r\n  return randomPages && <TouchableOpacity\r\n    style={commonStyles.searchButton}\r\n    onPress={()=>{\r\n      const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n      const sections = parseHtmlToSections(page.description || '')\r\n      navigation.navigate('NotePage', { title:page.title, section: sections[Math.floor(Math.random() * sections.length)].title });\r\n    }}\r\n>\r\n  <Icon name={\"random\"} size={18} color=\"#FFFFFF\" />\r\n</TouchableOpacity>\r\n}\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void,renderExtra?:(input:string, isFind:boolean)=>React.ReactNode, useRandom?:boolean;}> = ({handlePress, renderExtra, useRandom=true}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput|null>()\r\n\r\n  const { data: pages = [] } = useNotePages();\r\n  const { data:keywords = []} = useKeywords()\r\n  const addKeyword = useAddKeyowrd()\r\n  const lowerCaseSearch = searchText.toLowerCase()\r\n  const filteredPages:SearchContent[] = searchText.length > 0\r\n    ? [\r\n      ...pages.filter(page =>page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n      ...extractMarkdownNoteLink(pages).filter(v=>v.name.toLowerCase().startsWith(lowerCaseSearch))\r\n    ].slice(0, 10)\r\n    : keywords.map(v=>({type:\"_KEYWORD\", title:v}))\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?:string) => {\r\n    handlePress?handlePress(title):navigation.navigate('NotePage', { title, section });\r\n    addKeyword.mutate(searchText)\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(()=>PanResponder.create({\r\n      onPanResponderStart: handleSearch,\r\n    }).panHandlers\r\n  ,[searchText])\r\n\r\n  const pagePressHandlers = useCallback((item:SearchContent)=>{\r\n    return PanResponder.create({\r\n      onPanResponderStart:() => {\r\n        if (item.type === \"_KEYWORD\"){\r\n          setSearchText(item.title)\r\n          setTimeout(()=>inputRef.current?.focus(), 50)\r\n        }\r\n        else if (item.type === \"_NOTELINK\" && item.section){\r\n          handlePagePress(item.title, item.section)\r\n        }\r\n        else {\r\n          handlePagePress(item.title)\r\n        }\r\n      }\r\n    }).panHandlers\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={ref=>{inputRef.current = ref}}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={()=>setShowResults(true)}\r\n          onBlur={()=>setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={renderExtra?\"search-plus\":\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton/>}\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <FlatList\r\n              data={filteredPages}\r\n              keyExtractor={(item:any) => JSON.stringify([item.title, item.name, item.section])}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.resultItem}\r\n                  {...pagePressHandlers(item)}\r\n                >\r\n                  <Text style={[commonStyles.text, styles.resultText]}>{item.type===\"_NOTELINK\"?item.name:item.title}</Text>\r\n                  {item.type ===\"_NOTELINK\" && <Text style={[commonStyles.text, styles.resultText, {fontSize:12}]}>{item.title}{item.section?(\" > \"+item.section):\"\"}</Text>}\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              {...searchHandlers}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n          {renderExtra?.(searchText, filteredPages.length > 0)}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FlatList, ScrollView, StyleSheet, TextInput, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\n\r\n\r\nconst OpenedEditorsTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst NoteTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'NOTE'} noteCount={15}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Open Pages'), component:OpenedEditorsTabView, icon:<List.Icon icon={'file-document'}/>, headerRight:()=><></>},\r\n    {title: lang('Notes'), component:NoteTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%'}]}>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections/>\r\n      </View>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 16,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#3498DB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 48,\r\n    borderRadius: 4,\r\n    marginLeft: 8,\r\n  },\r\n  recentButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const [path,setPath] = useState('')\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const [preview, setPreview] = useState<boolean>()\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const moveDescription = moveParagraph.map(v=>v.header + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map(v=>(v.path===path && v.description===''?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title);\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    if (!isLoading){\r\n      const _path = paragraph.find(v=>v.title === section)?.path || ''\r\n      setPath(_path)\r\n      setNewPath(_path)\r\n    }\r\n  }, [section, isLoading])\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:window==='landscape'?'row':'column', zIndex:1}}>\r\n          <View style={{zIndex:1}}>\r\n            <Text style={commonStyles.text}>현재 노트 제목:</Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>{title}</Text>\r\n            <Text style={commonStyles.text}>현재 노트 문단:</Text>\r\n            { section!==undefined?\r\n              <Text style={[commonStyles.title, styles.columns]}>{section}</Text>:\r\n              <View style={styles.columns}>\r\n                <HeaderSelectBar path={path} onPress={(item)=>setPath(item.path)} root={page?.title || ''} data={paragraph}/>\r\n              </View>}\r\n            <Text style={commonStyles.text}>새 노트 제목:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false}/>\r\n            <Text style={commonStyles.text}>새 노트 문단:</Text>\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar path={newPath} onPress={(item)=>setNewPath(item.path)} root={newPage?.title || ''} data={newParagraph}/>\r\n            </View>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[commonStyles.button, styles.moveButton, {flex:0, flexDirection:'row', alignItems:'center', paddingTop:24, paddingBottom:16}]} \r\n              onPress={()=>setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>{title}{paragraphItem?.level!==0?( \"/\"+paragraphItem?.title):\"\"}</Text>\r\n              <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ▶  </Text>\r\n              <Text style={commonStyles.title}>{newTitle}{newParagraphItem?.level!==0?( \"/\"+(newParagraphItem?.title || \"?\")):\"\"}</Text>   \r\n            </TouchableOpacity>\r\n              {preview!==undefined && <View style={{display:preview?'flex':'none'}}>\r\n              <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  autoResize\r\n                />\r\n              </View>}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: { \r\n    marginTop: 8, \r\n    marginBottom: 16 \r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages, useRecentPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar } from '../../components/SearchBar';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  \r\n  const handlePagePress = (title: string) => {\r\n    navigation.navigate('NotePage', { title });\r\n  };\r\n  \r\n\r\n  return (<>\r\n    {window === 'portrait' && <SearchBar/>}\r\n    <View style={commonStyles.container}>      \r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : recentPages.length > 0 ? (\r\n        <FlatList\r\n          data={recentPages.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() )}\r\n          keyExtractor={(item) => item.title}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => handlePagePress(item.title)}\r\n            >\r\n              <Text style={commonStyles.title}>{item.title}</Text>\r\n              <Text style={commonStyles.smallText}>\r\n                최근 수정: {updatedFormat(item.updated)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>\r\n            최근 수정한 노트가 없습니다.\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar, urlToNoteLink } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nconst sectionDescription = (paragraph:NodeData[], section:string) => {\r\n  const path = paragraph.find(v=>v.title===section)?.path\r\n  return path?paragraph.filter(v=>v.path.startsWith(path)).map(v=>v.header + v.description).join(\"\"):\"\"\r\n}\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false)\r\n  \r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description||'');\r\n  const description = section?sectionDescription(paragraph, section) :page?.description\r\n\r\n  useEffect(()=>{\r\n    toggleToc(false)\r\n  }, [route])\r\n\r\n  return (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <ScrollView style={[\r\n      commonStyles.container, \r\n      //@ts-ignore\r\n      {paddingRight:12, scrollbarGutter: 'stable'}]}>\r\n      <View style={commonStyles.header}>\r\n        <TouchableOpacity onPress={()=>navigation.navigate('NotePage', { title })}>\r\n          <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>\r\n            {title}{section?\" ▶ \"+section:\"\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        {!!page?.description && <View style={styles.actionButtons}>\r\n          <TouchableOpacity onPress={()=>toggleToc(!toc)} style={styles.actionButton}>\r\n            <Icon name=\"list\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n            <Icon name=\"exchange\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          {section\r\n          ?undefined\r\n          :<>\r\n            <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n              <Icon name=\"pencil\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n          </>}\r\n        </View>}\r\n      </View>\r\n      <View style={commonStyles.flex}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={!toc && description?[commonStyles.card, {flex:1, padding:0}]:{flex:1, position:'absolute'}}>\r\n            <EditorViewer\r\n              active\r\n              value={description || ''}\r\n              theme={theme}\r\n              onLink={(url)=>{\r\n                const noteLink = urlToNoteLink(url);\r\n                if(noteLink){\r\n                  navigation.navigate(\"NotePage\", noteLink)\r\n                }\r\n                else{\r\n                  window.open(url, '_blank');\r\n                }\r\n              }}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {toc? <HeaderSelectBar data={paragraph} path={section || ''} root={title} onPress={(item)=>navigation.navigate('NotePage', {title, section:item.title})}/>\r\n          :page?.description ? undefined : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n\r\n  };\r\n  ","import React from 'react';\r\nimport ContentGroupSection from '../screens/main/home/ContentGroupSection';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <ScrollView>\r\n            <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n            <ContentGroupSection type={'LAST'} />\r\n            <ContentGroupSection type={'PAGE'} />\r\n            <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>{/* 최근 변경 */}\r\n            <ContentGroupSection type={'NOTE'} noteCount={10}/>\r\n        </ScrollView>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst HeaderRight = ()=>{\r\n    const windowType = useResizeContext();\r\n    return windowType==='landscape'?<SearchBar/>:undefined\r\n}\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <HeaderRight/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","type","parentIdParam","undefined","typeParam","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getNoteContents","saveNoteContents","contents","content","find","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","_x","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","useNotePage","title","queryClient","useQueryClient","_queryFn","page","c","invalidateQueries","useLastPage","_queryFn3","useCreateOrUpdatePage","auth","useAuthContext","useMutation","mutationFn","_mutationFn","updatedContents","_objectSpread","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","useDeleteRecentPage","_mutationFn4","updatedRecentPages","_title","_x8","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","styles","buttonContainer","cancelButton","marginRight","saveButton","marginLeft","props","_notes$data","lang","useLangContext","notes","pages","_queryFn2","recentTitles","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x7","useAddRecentPage","deleteRecentPage","sort","a","b","Date","getTime","window","useResizeContext","itemPadding","noteOnPress","current","clearTimeout","mutate","setTimeout","navigate","noteOnLongPress","_pages$data","_jsx","List","children","left","_props","icon","onPress","onLongPress","style","titleStyle","fontStyle","_jsxs","_Fragment","slice","noteCount","_pages$data2","v2","right","TouchableRipple","margin","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","cursor","body","firstChild","flushCurrent","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","textContent","trim","pop","h","join","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","useColorScheme","commonStyles","View","resultsContainer","darkResults","lightResults","FlatList","keyExtractor","item","renderItem","TouchableOpacity","resultItem","Icon","name","size","Text","marginTop","resultText","root","ItemSeparatorComponent","backButton","KEYWORDS_KEY","getKeywords","saveKeywords","keywords","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","section","extractMarkdownNoteLink","flatMap","links","querySelectorAll","Array","from","_a$textContent","href","extractMarkdownLinksWithQuery","noteLink","RandomButton","navigation","useNavigation","_useNotePages$data","randomPages","Math","floor","random","sections","SearchBar","handlePress","renderExtra","_ref$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useNotePages2$data","_useKeywords","_useKeywords$data","addKeyword","keyword","newKeywords","Set","useAddKeyowrd","lowerCaseSearch","toLowerCase","filteredPages","startsWith","handleSearch","handlePagePress","searchHandlers","useMemo","PanResponder","onPanResponderStart","panHandlers","pagePressHandlers","useCallback","_inputRef$current","focus","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","maxHeight","OpenedEditorsTabView","ScrollView","Colors","background","ContentGroupSection","NoteTabView","ConfigTabView","ConfigSections","recentButton","columns","moveButton","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","pageTitle","actionButtons","actionButton","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","NotePage","useRoute","_route$params","_window","toc","toggleToc","_useNotePage","isLoading","handleEdit","paragraph","_paragraph$find","sectionDescription","paddingRight","scrollbarGutter","numberOfLines","ActivityIndicator","EditorViewer","active","onLink","open","autoResize","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","setPath","newParagraph","_useState5","_useState6","newPath","setNewPath","_useState7","_useState8","setPreview","moveMutation","_mutationFn2","oldTitle","Error","some","_x6","useMovePage","_useMemo","moveParagraph","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","_path","paragraphItem","newParagraphItem","moveDisabled","paddingTop","paddingBottom","display","RecentPages","_useNotePages","selectable","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","then","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}