{"version":3,"file":"static/js/232.6a37d5c4.chunk.js","mappings":"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","sources":["src/hooks/useKeywordStorage.ts","src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/modals/DatePikcerModal.tsx","src/screens/main/NoteListSection.tsx","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/main/TimeLineScreen.tsx","src/screens/main/home/ExtraConfigSections.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/ProblemScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords:';\r\n\r\nexport type KeywordContent =\r\n  | {\r\n      type: '_NOTELINK';\r\n      name: string;\r\n      title: string;\r\n      section?: string;\r\n    }\r\n  | {\r\n      type: '_KEYWORD';\r\n      title: string;\r\n    };\r\n\r\nconst getKeywords = async (subkey: string | undefined): Promise<KeywordContent[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY + subkey);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveKeywords = async (\r\n  subkey: string | undefined,\r\n  keywords: KeywordContent[]\r\n): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY + subkey, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving keywords', e);\r\n  }\r\n};\r\n\r\nexport const useKeywords = () => {\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n  return useQuery({\r\n    queryKey: ['keywords', subkey],\r\n    queryFn: async () => {\r\n      return await getKeywords(subkey);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async (keyword: KeywordContent) => {\r\n      const keywords = await getKeywords(subkey);\r\n      const newKeywords = [\r\n        ...new Set([JSON.stringify(keyword), ...keywords.map((v) => JSON.stringify(v))]),\r\n      ].map((v) => JSON.parse(v));\r\n      await saveKeywords(subkey, newKeywords);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords(subkey, []);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n","import { axiosCreate } from '@blacktokki/account';\r\n\r\nimport { Content, PostContent, Link } from '../types';\r\n\r\nconst axios = axiosCreate('notebook');\r\n\r\nexport const getContentOne = async (id: number) => {\r\n  return (await axios.get(`/api/v1/content/${id}`)).data as Content;\r\n};\r\n\r\nexport const getContentList = async (parentId?: number, types?: Content['type'][]) => {\r\n  const parentIdParam = parentId !== undefined ? `&parentId=${parentId}` : '';\r\n  const typeParam = types !== undefined ? `&types=${types.join(',')}` : '';\r\n  return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data\r\n    .value as Content[];\r\n};\r\n\r\nexport const postContent = async (postContent: PostContent) => {\r\n  return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id;\r\n};\r\n\r\nexport const patchContent = async ({ id, updated }: { id: number; updated: PostContent }) => {\r\n  await axios.patch(`/api/v1/content`, { ids: [id], updated });\r\n};\r\n\r\nexport const deleteContent = async (id: number) => {\r\n  await axios.delete(`/api/v1/content/${id}`);\r\n};\r\n\r\nexport const previewUrl = async (preview: { query: string }) => {\r\n  return (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data as Link;\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\n\r\nimport { getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { Content, PostContent } from '../types';\r\n\r\nconst DB_NAME = '@Blacktokki:notebook';\r\nconst DB_VERSION = 1;\r\n\r\nexport async function openDB(): Promise<IDBDatabase> {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = (event.target as IDBOpenDBRequest).result;\r\n      if (!db.objectStoreNames.contains('NOTE')) {\r\n        db.createObjectStore('NOTE', { keyPath: 'title' }); // id 필드로 고유 식별\r\n      }\r\n      if (!db.objectStoreNames.contains('SNAPSHOT')) {\r\n        db.createObjectStore('SNAPSHOT', { keyPath: ['title', 'updated'] }); // id 필드로 고유 식별\r\n      }\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\n\r\nlet lastPage: string | undefined;\r\n\r\nconst getContents = async (isOnline: boolean, type: 'NOTE' | 'SNAPSHOT'): Promise<Content[]> => {\r\n  if (isOnline) {\r\n    return await getContentList(undefined, [type]);\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = db.transaction(type, 'readonly');\r\n      const store = transaction.objectStore(type);\r\n\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result as Content[]);\r\n      };\r\n      request.onerror = () => {\r\n        console.error('Error loading contents from IndexedDB:', request.error);\r\n        throw request.error;\r\n      };\r\n    });\r\n  } catch (e) {\r\n    console.error('Error opening IndexedDB', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (\r\n  isOnline: boolean,\r\n  contents: (Content | PostContent)[],\r\n  id?: number\r\n): Promise<void> => {\r\n  const content = contents.find((v) => id === (v as { id?: number }).id);\r\n  if (isOnline) {\r\n    if (content) {\r\n      const savedId = await (id\r\n        ? patchContent({ id, updated: content }).then(() => id)\r\n        : postContent(content));\r\n      const snapshot: Content | PostContent = {\r\n        ...content,\r\n        type: 'SNAPSHOT',\r\n        id: undefined,\r\n        parentId: savedId,\r\n      };\r\n      await postContent(snapshot);\r\n    }\r\n    return;\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(['NOTE', 'SNAPSHOT'], 'readwrite');\r\n    const store = tx.objectStore('NOTE');\r\n    const archive = tx.objectStore('SNAPSHOT');\r\n\r\n    for (const contentItem of contents) {\r\n      store.put(contentItem); // id를 기준으로 덮어씌움 (없으면 추가)\r\n    }\r\n    if (content) {\r\n      const snapshot: Content | PostContent = {\r\n        ...content,\r\n        type: 'SNAPSHOT',\r\n      };\r\n      archive.put(snapshot);\r\n    }\r\n    await new Promise((resolve, reject) => {\r\n      tx.oncomplete = () => resolve(undefined);\r\n      tx.onerror = () => reject(tx.error);\r\n    });\r\n  } catch (e) {\r\n    console.error('Error saving contents to IndexedDB', e);\r\n  }\r\n};\r\n\r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n\r\nexport const useNotePages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['pageContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'NOTE'),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['snapshotContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'SNAPSHOT'),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find((v) => v === title) === undefined) {\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '', id: undefined };\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useRecentPages = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['recentPages'],\r\n    queryFn: async () => {\r\n      const recentTitles = await getRecentPages();\r\n      return recentTitles\r\n        .map((title) => contents.find((c) => c.title === title))\r\n        .filter((c) => c !== undefined) as Content[];\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useLastPage = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['lastPage'],\r\n    queryFn: async () => {\r\n      return contents.find((v) => v.title === lastPage);\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useCreateOrUpdatePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const { data: contents = [] } = useNotePages();\r\n  return useMutation({\r\n    mutationFn: async ({ title, description }: { title: string; description: string }) => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      let updatedContents: (Content | PostContent)[];\r\n      const updated = auth.isLocal ? new Date().toISOString() : undefined;\r\n      if (page) {\r\n        updatedContents = contents.map((c, i) =>\r\n          c.id === page.id ? ({ ...c, description, updated } as PostContent) : c\r\n        );\r\n      } else {\r\n        const newPage = {\r\n          title,\r\n          description,\r\n          input: title,\r\n          userId: auth.user?.id || 0,\r\n          parentId: 0,\r\n          type: 'NOTE',\r\n          order: 0,\r\n          updated,\r\n          option: {},\r\n        } as PostContent;\r\n        updatedContents = [...contents, newPage];\r\n      }\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page?.id);\r\n      return { title, description };\r\n    },\r\n    onSuccess: async (data) => {\r\n      await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n      await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useMovePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [] } = useNotePages();\r\n  const { auth } = useAuthContext();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({\r\n      oldTitle,\r\n      newTitle,\r\n      description,\r\n    }: {\r\n      oldTitle: string;\r\n      newTitle: string;\r\n      description?: string;\r\n    }) => {\r\n      const page = contents.find((c) => c.title === oldTitle);\r\n\r\n      if (!page) {\r\n        throw new Error('Page not found');\r\n      }\r\n\r\n      if (contents.some((c) => c.title === newTitle)) {\r\n        throw new Error('Page with new title already exists');\r\n      }\r\n\r\n      const updatedContents = contents.map((c) =>\r\n        c.title === oldTitle\r\n          ? { ...c, title: newTitle, description: description || page.description }\r\n          : c\r\n      );\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page.id);\r\n\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.map((title) =>\r\n        title === oldTitle ? newTitle : title\r\n      );\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { oldTitle, newTitle };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({ title, direct }: { title: string; direct?: boolean }) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find((v) => v === title) === undefined || direct) {\r\n        const updatedRecentPages = [title, ...recentPages];\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async (title: string) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter((_title) => title !== _title);\r\n      lastPage = undefined;\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n    },\r\n  });\r\n};\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};\r\n","import { Text, useColorScheme } from '@blacktokki/core';\r\nimport { TouchableOpacity, View, FlatList, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { createCommonStyles } from '../styles';\r\n\r\nexport interface NodeData {\r\n  path: string;\r\n  title: string;\r\n  level: number;\r\n  header: string;\r\n  description: string;\r\n}\r\n\r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  const result: NodeData[] = [{ path: '', title: '', header: '', level: 0, description: '' }];\r\n\r\n  const headings: string[] = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\r\n  const headerStack: { level: number; title: string }[] = [];\r\n\r\n  let current: NodeData | null = null;\r\n  let cursor = doc.body.firstChild;\r\n\r\n  const flushCurrent = () => {\r\n    if (current) {\r\n      result.push(current);\r\n      current = null;\r\n    }\r\n  };\r\n\r\n  while (cursor) {\r\n    if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n      const el = cursor as HTMLElement;\r\n      if (headings.includes(el.tagName)) {\r\n        flushCurrent();\r\n\r\n        const level = parseInt(el.tagName.substring(1), 10);\r\n        const title = el.textContent?.trim() || '';\r\n\r\n        // 헤더 스택 업데이트\r\n        while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n          headerStack.pop();\r\n        }\r\n        headerStack.push({ level, title });\r\n\r\n        const path = headerStack.map((h) => h.title).join(' > ');\r\n\r\n        current = {\r\n          path,\r\n          title,\r\n          level,\r\n          header: el.outerHTML,\r\n          description: '',\r\n        };\r\n      } else if (current) {\r\n        current.description += el.outerHTML;\r\n      } else {\r\n        // 헤더 밖의 내용 처리\r\n        result[0].description += el.outerHTML;\r\n      }\r\n    } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n      current.description += cursor.textContent || '';\r\n    }\r\n\r\n    cursor = cursor.nextSibling;\r\n  }\r\n\r\n  flushCurrent();\r\n  return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props: {\r\n  root: string;\r\n  path: string;\r\n  onPress: (item: NodeData) => void;\r\n  data: NodeData[];\r\n}) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item: NodeData) => (\r\n    <TouchableOpacity style={styles.resultItem} onPress={() => props.onPress(item)}>\r\n      {item.level === 0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\" />}\r\n      <Text\r\n        style={[\r\n          props.path === item.path\r\n            ? [commonStyles.title, { marginBottom: 5, marginTop: 3 }]\r\n            : commonStyles.text,\r\n          styles.resultText,\r\n          { left: item.level * 10 + 10 },\r\n        ]}\r\n      >\r\n        {item.level === 0 ? props.root : item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View\r\n      style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}\r\n    >\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(item) => item.path}\r\n        renderItem={({ item }) => renderItem(item)}\r\n        ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n});\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Text,\r\n  StyleSheet,\r\n  PanResponder,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { parseHtmlToSections } from './HeaderSelectBar';\r\n\r\nlet _searchText = '';\r\n\r\ntype SearchContent = Content | KeywordContent;\r\n\r\nfunction extractHtmlLinksWithQuery(text: string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map((a) => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href,\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nfunction urlToNoteLink(url: string) {\r\n  const newLocation = new URL(url);\r\n  if (location.origin === newLocation.origin) {\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get('title');\r\n    const section = params.get('section') || undefined;\r\n    if (title) {\r\n      return { title, section };\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLink(url: string, navigation: StackNavigationProp<NavigationParamList>) {\r\n  const noteLink = urlToNoteLink(url);\r\n  if (noteLink) {\r\n    navigation.push('NotePage', noteLink);\r\n  } else {\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nexport function getNoteLinks(pages: Content[]) {\r\n  return pages.flatMap((v) =>\r\n    extractHtmlLinksWithQuery(v.description || '')\r\n      .map((v2) => {\r\n        const noteLink = urlToNoteLink(v2.url);\r\n        if (noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/) {\r\n          return { type: '_NOTELINK' as '_NOTELINK', name: v2.text, ...noteLink, origin: v.title };\r\n        }\r\n      })\r\n      .filter((v) => v !== undefined)\r\n  );\r\n}\r\n\r\nexport const getFilteredPages = (pages: Content[], searchText: string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase();\r\n  const noteLinks = getNoteLinks(pages);\r\n  return [\r\n    ...pages.filter((page) => page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter((v) => v.name.toLowerCase().startsWith(lowerCaseSearch)),\r\n  ];\r\n};\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter((v) => v.description);\r\n  return (\r\n    randomPages && (\r\n      <TouchableOpacity\r\n        style={commonStyles.searchButton}\r\n        onPress={() => {\r\n          const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n          const sections = parseHtmlToSections(page.description || '');\r\n          navigation.push('NotePage', {\r\n            title: page.title,\r\n            section: sections[Math.floor(Math.random() * sections.length)].title,\r\n          });\r\n        }}\r\n      >\r\n        <Icon name={'random'} size={18} color=\"#FFFFFF\" />\r\n      </TouchableOpacity>\r\n    )\r\n  );\r\n};\r\n\r\nexport const titleFormat = (item: { title: string; section?: string }) =>\r\n  `${item.title}${item.section ? ' ▶ ' + item.section : ''}`;\r\n\r\nexport const SearchList = ({\r\n  filteredPages,\r\n  handlePagePress,\r\n  addKeyword,\r\n}: {\r\n  filteredPages: SearchContent[];\r\n  handlePagePress: (title: string, section?: string) => void;\r\n  addKeyword?: (keyword: KeywordContent) => void;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item: SearchContent) => {\r\n    return PanResponder.create({\r\n      onPanResponderStart: () => {\r\n        if (item.type === '_NOTELINK' && item.section) {\r\n          handlePagePress(item.title, item.section);\r\n          addKeyword?.(item);\r\n        } else {\r\n          handlePagePress(item.title);\r\n          addKeyword?.({ type: '_KEYWORD', title: item.title });\r\n        }\r\n      },\r\n    }).panHandlers;\r\n  }, []);\r\n\r\n  return (\r\n    <FlatList\r\n      data={filteredPages}\r\n      keyExtractor={(item: any) => JSON.stringify([item.title, item.name, item.section])}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity style={styles.resultItem} {...pagePressHandlers(item)}>\r\n          <Text style={[commonStyles.text, styles.resultText]}>\r\n            {item.type === '_NOTELINK' ? item.name : item.title}\r\n          </Text>\r\n          {item.type === '_NOTELINK' && (\r\n            <Text style={[commonStyles.text, styles.resultText, { fontSize: 12 }]}>\r\n              {titleFormat(item)}\r\n            </Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SearchBar: React.FC<{\r\n  handlePress?: (title: string) => void;\r\n  useRandom?: boolean;\r\n}> = ({ handlePress, useRandom = true }) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput | null>();\r\n  const { data: keywords = [] } = useKeywords();\r\n  const addKeyword = useAddKeyowrd();\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages: SearchContent[] =\r\n    searchText.length > 0\r\n      ? getFilteredPages(pages, searchText).slice(0, 10)\r\n      : keywords.slice(0, 10);\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim());\r\n      addKeyword.mutate({ type: '_KEYWORD', title: searchText.trim() });\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?: string) => {\r\n    if (handlePress) {\r\n      handlePress(title);\r\n    } else {\r\n      navigation.push('NotePage', { title, section });\r\n    }\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(\r\n    () =>\r\n      PanResponder.create({\r\n        onPanResponderStart: handleSearch,\r\n      }).panHandlers,\r\n    [searchText]\r\n  );\r\n\r\n  useEffect(() => {\r\n    _searchText = searchText;\r\n  }, [searchText]);\r\n\r\n  useFocusEffect(() => {\r\n    if (searchText !== _searchText) {\r\n      setSearchText(_searchText);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={(ref) => {\r\n            inputRef.current = ref;\r\n          }}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={() => setShowResults(true)}\r\n          onBlur={() => setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={'search'} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton />}\r\n      </View>\r\n\r\n      {showResults && (\r\n        <View\r\n          style={[\r\n            styles.resultsContainer,\r\n            theme === 'dark' ? styles.darkResults : styles.lightResults,\r\n          ]}\r\n        >\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList\r\n              filteredPages={filteredPages}\r\n              handlePagePress={handlePagePress}\r\n              addKeyword={addKeyword.mutate}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity style={styles.resultItem} {...searchHandlers}>\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import {\r\n  Calendar,\r\n  useLangContext,\r\n  useModalsContext,\r\n  View,\r\n  Text,\r\n  CommonButton,\r\n} from '@blacktokki/core';\r\nimport dayjs from 'dayjs';\r\nimport React, { Suspense, useState } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\n// import useModalEffect from '../hooks/useModalEffect';\r\n\r\nconst getDisableDays = (date: dayjs.Dayjs) => {\r\n  const result: string[] = [];\r\n  // let startDate = date.clone().startOf('month').add(-1, 'month');\r\n  // const endDate = date.clone().endOf('month').add(1, 'month');\r\n  // const today = dayjs().startOf('day');\r\n  // while (startDate <= endDate && startDate < today) {\r\n  //   result.push(startDate.format('YYYY-MM-DD'));\r\n  //   startDate = startDate.add(1, 'day');\r\n  // }\r\n  return result;\r\n};\r\n\r\nconst defaultDayjs = () => {\r\n  const m = dayjs();\r\n  const restMinute = parseInt(m.format('mm'), 10) % 5;\r\n  return m.add(5 - restMinute, 'minute');\r\n};\r\n\r\nexport default function DatePickerModal({\r\n  datetime,\r\n  callback,\r\n}: {\r\n  datetime?: string;\r\n  callback: (datetime?: string) => void;\r\n}) {\r\n  const _dayjs = datetime ? dayjs(datetime) : defaultDayjs();\r\n  const { lang, locale } = useLangContext();\r\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\r\n  const [disableDays, setDisableDays] = useState<string[]>(getDisableDays(_dayjs));\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(DatePickerModal, null);\r\n  };\r\n  // useModalEffect(back, []);\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ alignItems: 'center', minHeight: 450 }}>\r\n        <View style={{ flexDirection: 'row', width: '100%' }}>\r\n          <View style={{ flex: 1, flexDirection: 'row' }}>\r\n            <TouchableOpacity onPress={back}>\r\n              <Text>{lang('back')}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={{ fontSize: 20, textAlign: 'center' }}>{lang('Date')}</Text>\r\n          </View>\r\n          <View style={{ flex: 1 }} />\r\n        </View>\r\n        <View\r\n          style={{ marginBottom: 20, height: 1, width: '100%' }}\r\n          lightColor=\"#ddd\"\r\n          darkColor=\"rgba(255,255,255, 0.3)\"\r\n        />\r\n        <Suspense fallback={<></>}>\r\n          <Calendar\r\n            locale={locale}\r\n            style={undefined}\r\n            setDate={setDate}\r\n            disableAllTouchEventsForDisabledDays={true}\r\n            onMonthChange={(v) => setDisableDays(getDisableDays(dayjs(v.dateString)))}\r\n            markedDates={{\r\n              ...disableDays.reduce((p, c) => {\r\n                p[c] = { disabled: true };\r\n                return p;\r\n              }, {} as Record<string, any>),\r\n              ...(date ? [date] : []).reduce((p, c) => {\r\n                p[c] = { selected: true };\r\n                return p;\r\n              }, {} as Record<string, any>),\r\n            }}\r\n          />\r\n        </Suspense>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <CommonButton\r\n            title={lang('save')}\r\n            onPress={() => {\r\n              callback?.(date);\r\n              back();\r\n            }}\r\n          />\r\n          <CommonButton\r\n            title={lang('cancel')}\r\n            onPress={() => {\r\n              callback?.(undefined);\r\n              back();\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport { titleFormat } from '../../components/SearchBar';\r\nimport { createCommonStyles } from '../../styles';\r\n\r\nexport const NoteListSection = ({\r\n  contents,\r\n  isLoading,\r\n  onPress,\r\n  emptyMessage,\r\n}: {\r\n  contents: {\r\n    title: string;\r\n    section?: string;\r\n    subtitle?: string;\r\n    subtitles?: string[];\r\n    id?: number;\r\n  }[];\r\n  isLoading: boolean;\r\n  onPress: (title: string, section?: string, id?: number) => void;\r\n  emptyMessage: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : contents.length > 0 ? (\r\n        <FlatList\r\n          data={contents}\r\n          keyExtractor={(item) => JSON.stringify([item.title, item.section, item.id])}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => onPress(item.title, item.section, item.id)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n              {[...(item.subtitle ? [item.subtitle] : []), ...(item.subtitles || [])].map(\r\n                (subtitle) => (\r\n                  <Text style={[commonStyles.smallText]}>{subtitle}</Text>\r\n                )\r\n              )}\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text selectable={false} style={commonStyles.text}>\r\n            {emptyMessage}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n","import { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { navigate, push } from '@blacktokki/navigation';\r\nimport * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\n\r\nimport {\r\n  useRecentPages,\r\n  useNotePages,\r\n  useDeleteRecentPage,\r\n  useLastPage,\r\n  useAddRecentPage,\r\n} from '../../../hooks/useNoteStorage';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape: boolean) => {\r\n  return isLandscape ? 5 : 8;\r\n};\r\n\r\nexport const TimeLineButton = () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'clock'} />}\r\n      title={lang('TimeLine')}\r\n      onPress={() => navigate('TimeLine')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ProblemButton = () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'note-alert'} />}\r\n      title={lang('Problems')}\r\n      onPress={() => push('Problem')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const toRecentContents = (data: Content[]) =>\r\n  data\r\n    .filter((v) => v.description)\r\n    .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime());\r\n\r\nconst ContentGroupSection = (\r\n  props: { type: 'PAGE' | 'LAST' } | { type: 'NOTE'; noteCount: number }\r\n) => {\r\n  const { lang } = useLangContext();\r\n  const notes = useNotePages();\r\n  const pages = useRecentPages();\r\n  const { data: lastPage } = useLastPage();\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage();\r\n  const deleteRecentPage = useDeleteRecentPage();\r\n  const data =\r\n    props.type === 'NOTE' ? (notes.data ? toRecentContents(notes.data) : []) : pages.data;\r\n  const lastPageExists = lastPage && data?.find((v) => v.id === lastPage.id) === undefined;\r\n  const window = useResizeContext();\r\n  const itemPadding = getItemPadding(window === 'landscape');\r\n  const noteOnPress = (title: string) => {\r\n    if (title === lastPage?.title) {\r\n      if (tabRef.current) {\r\n        clearTimeout(tabRef.current);\r\n        tabRef.current = undefined;\r\n        addRecentPage.mutate({ title });\r\n      } else {\r\n        tabRef.current = setTimeout(() => {\r\n          tabRef.current = undefined;\r\n        }, 500);\r\n      }\r\n    }\r\n    navigate('NotePage', { title });\r\n  };\r\n  const noteOnLongPress = (title: string) => {\r\n    if (tabRef.current) {\r\n      clearTimeout(tabRef.current);\r\n      tabRef.current = undefined;\r\n    }\r\n    if (pages.data?.find((v) => v.title === title) === undefined) {\r\n      addRecentPage.mutate({ title, direct: true });\r\n    } else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  };\r\n  return (\r\n    (props.type !== 'LAST' || lastPageExists) && (\r\n      <List.Section>\r\n        {data &&\r\n          (props.type === 'LAST' ? (\r\n            lastPageExists && (\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document'} />}\r\n                title={lastPage.title}\r\n                onPress={() => noteOnPress(lastPage.title)}\r\n                onLongPress={() => noteOnLongPress(lastPage.title)}\r\n                style={{ padding: itemPadding }}\r\n                titleStyle={{ fontStyle: 'italic' }}\r\n              />\r\n            )\r\n          ) : props.type === 'NOTE' ? (\r\n            <>\r\n              {data.slice(0, props.noteCount).map((v) => (\r\n                <List.Item\r\n                  key={v.title}\r\n                  left={(_props) => (\r\n                    <List.Icon\r\n                      {..._props}\r\n                      icon={\r\n                        pages.data?.find((v2) => v2.title === v.title) === undefined\r\n                          ? 'notebook'\r\n                          : 'notebook-edit'\r\n                      }\r\n                    />\r\n                  )}\r\n                  title={v.title}\r\n                  onPress={() => noteOnPress(v.title)}\r\n                  onLongPress={() => noteOnLongPress(v.title)}\r\n                  style={{ padding: itemPadding }}\r\n                />\r\n              ))}\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'notebook-multiple'} />}\r\n                title={lang('more...')}\r\n                onPress={() => push('RecentPages')}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            </>\r\n          ) : (\r\n            data.map((v) => (\r\n              <List.Item\r\n                key={v.title}\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document-edit'} />}\r\n                right={(_props) => (\r\n                  <TouchableRipple\r\n                    style={{\r\n                      justifyContent: 'center',\r\n                      borderRadius: itemPadding,\r\n                      width: 40 + itemPadding * 2,\r\n                      height: 40 + itemPadding * 2,\r\n                      margin: -itemPadding,\r\n                    }}\r\n                    onPress={() => deleteRecentPage.mutate(v.title)}\r\n                  >\r\n                    <List.Icon style={{ left: itemPadding - 7 }} icon={'close'} />\r\n                  </TouchableRipple>\r\n                )}\r\n                title={v.title}\r\n                onPress={() => navigate('NotePage', { title: v.title })}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            ))\r\n          ))}\r\n      </List.Section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;\r\n","import { useColorScheme, useResizeContext, View, Text } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\n\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset();\r\n\r\nexport const updatedFormat = (_updated: string) => {\r\n  const _date = new Date(_updated);\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset);\r\n  const updated = _date.toISOString().slice(0, 16);\r\n  const date = updated.slice(0, 10);\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  return date === today ? updated.slice(11) : date;\r\n};\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape: boolean) => (isLandscape ? 20 : 4);\r\nconst _cardMaxWidth = (isLandscape: boolean) => (isLandscape ? 250 : 190);\r\n\r\ntype Item = (Content & { descriptionComponent: JSX.Element }) | null;\r\n\r\nconst CardPage = React.memo(({ item, index }: { item: Item; index: number }) => {\r\n  const window = useResizeContext();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window === 'landscape' ? 2 : 0;\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null) {\r\n    return (\r\n      <View style={{ flexBasis: window === 'landscape' ? '33%' : '50%', maxWidth: cardMaxWidth }} />\r\n    );\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = () => navigation.push('NotePage', { title: item.title });\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexBasis: window === 'landscape' ? '33%' : '50%',\r\n        padding: _cardPadding(window === 'landscape'),\r\n        paddingRight: 0,\r\n        minWidth: cardMaxWidth,\r\n        maxWidth: cardMaxWidth,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Card\r\n        onPress={onPress}\r\n        style={[\r\n          commonStyles.card,\r\n          {\r\n            paddingTop: 8,\r\n            aspectRatio: 1 / Math.sqrt(2),\r\n            borderRadius: 6,\r\n            marginVertical: 10,\r\n            marginHorizontal: 8,\r\n            overflow: 'hidden',\r\n          },\r\n        ]}\r\n      >\r\n        <Card.Content style={{ padding: 0 }}>{mounted && item.descriptionComponent}</Card.Content>\r\n      </Card>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          marginTop: 10,\r\n          padding: 0,\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 14 + fSize, overflow: 'hidden' }}>{item.title}</Text>\r\n        <Text style={{ fontSize: 12 + fSize, opacity: 0.4, textAlign: 'right' }}>\r\n          {updatedFormat(item.updated)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n});\r\n\r\nconst renderItem = ({ item, index }: { item: Item; index: number }) => (\r\n  <CardPage key={index} index={index} item={item} />\r\n);\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const RenderHtml = useMemo(() => React.lazy(() => import('react-native-render-html')), []);\r\n  const contents = useMemo(\r\n    () => [\r\n      ...toRecentContents(recentPages).map((v) => ({\r\n        ...v,\r\n        descriptionComponent: (\r\n          <RenderHtml\r\n            source={{ html: removeAllAttributesFromHTML(v.description || '').slice(0, 300) || '' }}\r\n            renderersProps={{\r\n              a: { onPress: () => navigation.push('NotePage', { title: v.title }) },\r\n            }}\r\n            tagsStyles={{ body: { color: commonStyles.text.color } }}\r\n            contentWidth={cardMaxWidth}\r\n          />\r\n        ),\r\n      })),\r\n      null,\r\n      null,\r\n    ],\r\n    [recentPages]\r\n  );\r\n  const maxWidth = (cardMaxWidth + 5) * (window === 'landscape' ? 5 : 3);\r\n  return isLoading ? (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>로딩 중...</Text>\r\n    </View>\r\n  ) : contents.length > 2 ? (\r\n    <ScrollView\r\n      key={window}\r\n      contentContainerStyle={{\r\n        alignSelf: 'center',\r\n        backgroundColor: 'transparent',\r\n        flexBasis: '100%',\r\n        maxWidth,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        paddingRight: _cardPadding(window === 'landscape'),\r\n        justifyContent: window === 'landscape' ? undefined : 'center',\r\n      }}\r\n    >\r\n      <Suspense>{contents.map((item, index) => renderItem({ item, index }))}</Suspense>\r\n    </ScrollView>\r\n  ) : (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>최근 수정한 노트가 없습니다.</Text>\r\n    </View>\r\n  );\r\n});\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>();\r\n  const _window = useResizeContext();\r\n  const title = route.params?.title;\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={recentPages\r\n          .filter((v) => title === undefined || title === v.title)\r\n          .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n          .map((v, i) => ({\r\n            ...v,\r\n            subtitle: `최근 수정: ${updatedFormat(v.updated as string)}`,\r\n            id: v.id || i,\r\n          }))}\r\n        isLoading={isLoading}\r\n        onPress={(title, _, id) =>\r\n          (title === undefined ? navigation.push : navigation.navigate)('NotePage', {\r\n            title,\r\n            archiveId: id,\r\n          })\r\n        }\r\n        emptyMessage=\"최근 수정한 노트가 없습니다.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport {\r\n  RouteProp,\r\n  useFocusEffect,\r\n  useIsFocused,\r\n  useNavigation,\r\n  useRoute,\r\n} from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet } from 'react-native';\r\n\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport { previewUrl } from '../../services/notebook';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const isFocused = useIsFocused();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword: string) =>\r\n    pages\r\n      .filter((v) => v.title.startsWith(title + '/'))\r\n      .map((v) => ({\r\n        type: '_CHILDNOTE' as '_CHILDNOTE',\r\n        name: v.title.split(title + '/')[1],\r\n        title: v.title,\r\n      }))\r\n      .filter((v) => v.name.toLowerCase().startsWith(keyword.toLowerCase()));\r\n  const [content, setContent] = useState('');\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    if (page?.description === content) {\r\n      navigation.navigate('NotePage', { title });\r\n      return;\r\n    }\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error: any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && page?.description) {\r\n      setContent(page?.description);\r\n    }\r\n  }, [isLoading, page]);\r\n\r\n  useFocusEffect(() => {\r\n    const callback = (event: any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  });\r\n  return (\r\n    isFocused && (\r\n      <View style={commonStyles.container}>\r\n        <View style={commonStyles.header}>\r\n          <Text style={[commonStyles.title, { flex: 1 }]}>{title} - 편집</Text>\r\n        </View>\r\n        <Editor\r\n          active\r\n          value={content}\r\n          setValue={setContent}\r\n          theme={theme}\r\n          autoComplete={[\r\n            {\r\n              trigger: '[',\r\n              getMatchedChars: async (pattern) => {\r\n                const childrenPages = getChildrenPages(pattern);\r\n                return [\r\n                  { type: '_NOTELINK', name: pattern, title, section: pattern },\r\n                  ...(childrenPages.length\r\n                    ? childrenPages\r\n                    : [{ type: '_CHILDNOTE', name: pattern, title: title + '/' + pattern }]),\r\n                  ...getFilteredPages(pages, pattern),\r\n                ].map((v) => {\r\n                  const text =\r\n                    v.type === '_NOTELINK'\r\n                      ? v.name + `(${titleFormat(v)})`\r\n                      : v.type === '_CHILDNOTE'\r\n                      ? v.name\r\n                      : v.title;\r\n                  const url = encodeURI(\r\n                    v.type === '_NOTELINK' && v.section\r\n                      ? `?title=${v.title}&section=${v.section}`\r\n                      : `?title=${v.title}`\r\n                  );\r\n                  return {\r\n                    text,\r\n                    value: `<a href=${url}>${text}</a>`,\r\n                  };\r\n                });\r\n              },\r\n            },\r\n            {\r\n              trigger: 'http',\r\n              getMatchedChars: async (pattern) => {\r\n                const query = 'http' + pattern;\r\n                const url = new URL(query);\r\n                if (url.protocol !== 'http:' && url.protocol !== 'https:') {\r\n                  return [];\r\n                }\r\n                const preview = await previewUrl({ query });\r\n                if (!preview.title) {\r\n                  return [];\r\n                }\r\n                return [\r\n                  {\r\n                    text: preview.title,\r\n                    value: `<a href=${preview.url}>${preview.title}</a>`,\r\n                  },\r\n                  // {\r\n                  //   text:preview.title + '...',\r\n                  //   value:`<a href=${preview.url}>${preview.title}</a><p>${preview.description}...</p>`,\r\n                  // }\r\n                ];\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[commonStyles.button, styles.saveButton]} onPress={handleSave}>\r\n            <Text style={commonStyles.buttonText}>저장</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\n\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description || '');\r\n  const path = paragraph.find((v) => v.title === section)?.path || '';\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(\r\n    (v) => title !== newTitle || path === v.path || !v.path.startsWith(path)\r\n  );\r\n  const [newPath, setNewPath] = useState('');\r\n  const [preview, setPreview] = useState<boolean>();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const moveMutation = useMovePage();\r\n  const { sourceDescription, targetDescription } = useMemo(() => {\r\n    const moveParagraph = paragraph.filter((v) => v.path.startsWith(path));\r\n    const isSplit = newPage?.title === page?.title + '/' + moveParagraph[0]?.title;\r\n    const moveDescription = moveParagraph\r\n      .map((v, i) => (isSplit && i === 0 ? '' : v.header) + v.description)\r\n      .join('');\r\n    const sourceParagraph = paragraph.filter((v) => !v.path.startsWith(path));\r\n    const sourceDescription = sourceParagraph.map((v) => v.header + v.description).join('');\r\n    const targetParagraph = page?.title === newPage?.title ? sourceParagraph : newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex((v) => v.path.startsWith(newPath));\r\n    const targetDescription =\r\n      newPage?.id === undefined\r\n        ? moveDescription\r\n        : [\r\n            ...targetParagraph.slice(0, targetIndex + 1).map((v) => v.header + v.description),\r\n            ...moveParagraph.map(\r\n              (v, i) =>\r\n                ((v.path === path && v.description === '') || (isSplit && i === 0)\r\n                  ? ''\r\n                  : v.header) + v.description\r\n            ),\r\n            ...targetParagraph.slice(targetIndex + 1).map((v) => v.header + v.description),\r\n          ].join('');\r\n    return { sourceDescription, targetDescription };\r\n  }, [paragraph, newParagraph, path, newPath]);\r\n\r\n  const handleMove = () => {\r\n    if (newPage?.id === undefined) {\r\n      moveMutation.mutate(\r\n        {\r\n          oldTitle: title,\r\n          newTitle: newTitle.trim(),\r\n          description: path === '' ? undefined : targetDescription,\r\n        },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      if (page?.title === newPage.title && path === newPath) {\r\n        handleCancel();\r\n      }\r\n      mutation.mutate(\r\n        { title: newPage.title, description: targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title) {\r\n              mutation.mutate({ title, description: sourceDescription });\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !page) {\r\n      handleCancel();\r\n    }\r\n    page && setNewTitle(page.title + (section ? `/${section}` : ''));\r\n  }, [page, isLoading]);\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setNewPath(section ? '' : path);\r\n    }\r\n  }, [section, isLoading]);\r\n  const paragraphItem = paragraph.find((v) => v.path === path);\r\n  const newParagraphItem = newParagraph.find((v) => v.path === newPath);\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined;\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: _window === 'landscape' ? 'row' : 'column', zIndex: 1 }}>\r\n          <View style={{ zIndex: 1 }}>\r\n            <Text style={commonStyles.text}>\r\n              {section ? '현재 노트 제목 및 문단:' : '현재 노트 제목:'}\r\n            </Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>\r\n              {titleFormat({ title, section })}\r\n            </Text>\r\n            <Text style={commonStyles.text}>새 노트 제목 및 문단:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false} />\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar\r\n                path={newPath}\r\n                onPress={(item) => setNewPath(item.path)}\r\n                root={newPage?.title || ''}\r\n                data={newParagraph}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                commonStyles.button,\r\n                styles.moveButton,\r\n                {\r\n                  flex: 0,\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  paddingTop: 24,\r\n                  paddingBottom: 16,\r\n                },\r\n              ]}\r\n              onPress={() => setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title, section: paragraphItem?.title })}\r\n              </Text>\r\n              <Text style={[commonStyles.text, { marginBottom: 8, fontSize: 14 }]}> ➜ </Text>\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title: newTitle, section: newParagraphItem?.title })}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {preview !== undefined && (\r\n              <View style={{ display: preview ? 'flex' : 'none' }}>\r\n                <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  onLink={(url) => onLink(url, navigation)}\r\n                  autoResize\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, moveDisabled ? styles.cancelButton : styles.moveButton]}\r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: {\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const sectionDescription = (paragraph: NodeData[], section: string, rootTitle: boolean) => {\r\n  const path = paragraph.find((v) => v.title === section)?.path;\r\n  return path\r\n    ? paragraph\r\n        .filter((v) => v.path.startsWith(path))\r\n        .map((v) => (rootTitle || v.path !== path ? v.header : '') + v.description)\r\n        .join('')\r\n    : '';\r\n};\r\n\r\nexport const getSplitTitle = (title: string) => {\r\n  const splitTitle = title.split('/');\r\n  if (splitTitle.length < 2) {\r\n    return [title];\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length - 1).join('/'), splitTitle[splitTitle.length - 1]];\r\n};\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullSection, toggleFullSection] = useState(false);\r\n\r\n  const { data: page, isFetching } = useNotePage(title);\r\n  const { data: archives } = useSnapshotPages();\r\n  const archive = archiveId\r\n    ? archives?.find((v) => v.id === archiveId && v.description !== page?.description)\r\n    : undefined;\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n\r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description || '');\r\n  const idx = paragraph.findIndex((v) => v.title === section);\r\n  const moveSections = [\r\n    {\r\n      icon: 'arrow-left',\r\n      moveSection: paragraph.findLast(\r\n        (v, i) => i < idx && (fullSection ? paragraph[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: false,\r\n    },\r\n    {\r\n      icon: 'arrow-right',\r\n      moveSection: paragraph.find(\r\n        (v, i) => i > idx && (fullSection ? paragraph[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: true,\r\n    },\r\n  ];\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      archive\r\n        ? archive.description\r\n        : (section\r\n            ? fullSection\r\n              ? sectionDescription(paragraph, section, true)\r\n              : paragraph.find((v) => v.title === section)?.description\r\n            : page?.description\r\n          )?.trim()\r\n    );\r\n  }, [page, archive, section, fullSection]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const splitTitle = getSplitTitle(title);\r\n  const iconColor = theme === 'dark' ? '#E4E4E4' : '#333333';\r\n  const pressableTextColor = theme === 'dark' ? '#FFFFFF88' : '#00000088';\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, { paddingRight: 12, scrollbarGutter: 'stable' }]}\r\n          contentContainerStyle={{ flexGrow: 1 }}\r\n        >\r\n          <View style={commonStyles.header}>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  (splitTitle.length === 2 ? navigation.push : navigation.navigate)('NotePage', {\r\n                    title: splitTitle[0],\r\n                  })\r\n                }\r\n              >\r\n                <Text\r\n                  style={[\r\n                    commonStyles.title,\r\n                    styles.pageTitle,\r\n                    section || splitTitle.length === 2 ? { color: pressableTextColor } : {},\r\n                  ]}\r\n                  numberOfLines={1}\r\n                >\r\n                  {splitTitle[0]}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              {splitTitle.length === 2 && (\r\n                <>\r\n                  <Text style={[commonStyles.title, styles.pageTitle, { flex: 0 }]}>/</Text>\r\n                  <TouchableOpacity onPress={() => navigation.navigate('NotePage', { title })}>\r\n                    <Text\r\n                      style={[\r\n                        commonStyles.title,\r\n                        styles.pageTitle,\r\n                        section ? { color: pressableTextColor } : {},\r\n                      ]}\r\n                      numberOfLines={1}\r\n                    >\r\n                      {splitTitle[1]}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!section && (\r\n                <Text\r\n                  style={[commonStyles.title, styles.pageTitle, { marginLeft: 5 }]}\r\n                  numberOfLines={1}\r\n                >\r\n                  {titleFormat({ title: '', section })}\r\n                </Text>\r\n              )}\r\n              {archive && (\r\n                <Text style={[commonStyles.text, { marginLeft: 5, fontStyle: 'italic' }]}>\r\n                  {'(' + archive.updated + ')'}\r\n                </Text>\r\n              )}\r\n            </View>\r\n            <View style={styles.actionButtons}>\r\n              {!section && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Archive', { title })}\r\n                    style={styles.actionButton}\r\n                  >\r\n                    <Icon name=\"history\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!section && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullSection(!fullSection)}\r\n                    style={styles.actionButton}\r\n                  >\r\n                    <Icon name={fullSection ? 'compress' : 'expand'} size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(section || description) && !archive && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={styles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n                    <Icon name=\"exchange\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(section || description) && !archive && !section && (\r\n                <>\r\n                  <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n                    <Icon name=\"pencil\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <View\r\n              style={\r\n                !toc && description\r\n                  ? [commonStyles.card, { padding: 0, marginBottom: 0 }]\r\n                  : { flex: 1, position: 'absolute' }\r\n              }\r\n            >\r\n              <EditorViewer\r\n                active\r\n                value={description || ''}\r\n                theme={theme}\r\n                onLink={(url) => onLink(url, navigation)}\r\n                autoResize\r\n              />\r\n            </View>\r\n            {isFetching || description === undefined ? (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n              </View>\r\n            ) : toc ? (\r\n              <HeaderSelectBar\r\n                data={paragraph}\r\n                path={section || ''}\r\n                root={title}\r\n                onPress={(item) => navigation.navigate('NotePage', { title, section: item.title })}\r\n              />\r\n            ) : page?.description ? (\r\n              !!section && (\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'flex-end',\r\n                  }}\r\n                >\r\n                  {moveSections.map(\r\n                    ({ moveSection, icon, reverse }) =>\r\n                      moveSection !== undefined && (\r\n                        <TouchableOpacity\r\n                          key={icon}\r\n                          onPress={() =>\r\n                            navigation.navigate(\r\n                              'NotePage',\r\n                              moveSection.level === 0\r\n                                ? { title }\r\n                                : { title, section: moveSection.title }\r\n                            )\r\n                          }\r\n                          style={[\r\n                            { flexDirection: reverse ? 'row-reverse' : 'row', paddingVertical: 16 },\r\n                          ]}\r\n                        >\r\n                          <Icon\r\n                            name={icon}\r\n                            size={16}\r\n                            color={iconColor}\r\n                            style={{ alignSelf: 'center' }}\r\n                          />\r\n                          <Text\r\n                            style={[\r\n                              commonStyles.text,\r\n                              { fontWeight: 'bold', marginHorizontal: 16 },\r\n                            ]}\r\n                          >\r\n                            {moveSection.level === 0 ? title : moveSection.title}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )\r\n                  )}\r\n                </View>\r\n              )\r\n            ) : (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <Text style={commonStyles.text}>\r\n                  아직 내용이 없는 문서입니다. '편집' 버튼을 눌러 내용을 추가해보세요.\r\n                </Text>\r\n                <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                  <Text style={commonStyles.buttonText}>편집하기</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import {\r\n  CommonButton,\r\n  useColorScheme,\r\n  useModalsContext,\r\n  useResizeContext,\r\n  Text,\r\n} from '@blacktokki/core';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport dayjs from 'dayjs';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { View, TouchableOpacity } from 'react-native';\r\n\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport DatePickerModal from '../../modals/DatePikcerModal';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\n\r\ntype DateHeaderSectionProps = {\r\n  date: string;\r\n  setDate: (date: string) => void;\r\n  monthly?: boolean;\r\n};\r\n\r\nconst today = () => dayjs().format('YYYY-MM-DD');\r\n\r\nfunction DateHeaderSection({ date, setDate, monthly }: DateHeaderSectionProps) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { setModal } = useModalsContext();\r\n  const window = useResizeContext();\r\n\r\n  return (\r\n    <View style={[commonStyles.card, { flexDirection: 'row', justifyContent: 'center' }]}>\r\n      <CommonButton\r\n        title=\"<<\"\r\n        onPress={() =>\r\n          setDate(\r\n            dayjs(date)\r\n              .add(-1, monthly ? 'year' : 'month')\r\n              .format('YYYY-MM-DD')\r\n          )\r\n        }\r\n        style={{ paddingVertical: 8, backgroundColor: 'transparent' }}\r\n      />\r\n      <CommonButton\r\n        title=\"<\"\r\n        onPress={() =>\r\n          setDate(\r\n            dayjs(date)\r\n              .add(-1, monthly ? 'month' : 'day')\r\n              .format('YYYY-MM-DD')\r\n          )\r\n        }\r\n        style={{ paddingVertical: 8, backgroundColor: 'transparent' }}\r\n      />\r\n      <View style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\r\n        <TouchableOpacity\r\n          style={[\r\n            {\r\n              flex: 1,\r\n              borderWidth: 1,\r\n              borderRadius: 8,\r\n              height: 30,\r\n              paddingHorizontal: 10,\r\n              paddingVertical: 3,\r\n              borderColor: 'rgba(27,31,36,0.15)',\r\n              minWidth: window === 'landscape' ? 210 : 150,\r\n              minHeight: 37,\r\n              paddingTop: 0,\r\n            },\r\n          ]}\r\n          onPress={() =>\r\n            setModal(DatePickerModal, {\r\n              datetime: date,\r\n              callback: (datetime?: string) => setDate(datetime || date),\r\n            })\r\n          }\r\n        >\r\n          <Text style={{ textAlign: 'center', fontWeight: '700', fontSize: 28 }}>\r\n            {monthly && date ? date.substring(0, 7) : date}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        {/* {date !== today() && <CommonButton title='x' onPress={()=>setDate(today())}/>} */}\r\n      </View>\r\n      <CommonButton\r\n        title=\">\"\r\n        onPress={() =>\r\n          setDate(\r\n            dayjs(date)\r\n              .add(1, monthly ? 'month' : 'day')\r\n              .format('YYYY-MM-DD')\r\n          )\r\n        }\r\n        style={{ paddingVertical: 8, backgroundColor: 'transparent' }}\r\n      />\r\n      <CommonButton\r\n        title=\">>\"\r\n        onPress={() =>\r\n          setDate(\r\n            dayjs(date)\r\n              .add(1, monthly ? 'year' : 'month')\r\n              .format('YYYY-MM-DD')\r\n          )\r\n        }\r\n        style={{ paddingVertical: 8, backgroundColor: 'transparent' }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst addMonth = (dateStr: string): string => {\r\n  const [year, month] = dateStr\r\n    .split('-')\r\n    .filter((v, i) => i < 2)\r\n    .map((v) => parseInt(v, 10));\r\n  if (month === 12) {\r\n    return `${year + 1}-01`;\r\n  }\r\n  return `${year}-${month + 1}`;\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst addDays = (dateStr: string, days: number): string => {\r\n  const date = new Date(dateStr);\r\n  date.setDate(date.getDate() + days);\r\n  return date.toISOString().slice(0, 10);\r\n};\r\n\r\nfunction extractDates(input: string) {\r\n  const now = new Date();\r\n  const currentYear = now.getFullYear();\r\n  // 정규식 패턴들\r\n  const patterns: {\r\n    regex: RegExp;\r\n    parse: (match: RegExpExecArray) => {\r\n      text: string;\r\n      dateStart: string;\r\n      dateEnd: string;\r\n    };\r\n  }[] = [\r\n    // YYYY-MM-DD/YYYY-MM-DD\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\/(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[2],\r\n      }),\r\n    },\r\n    // YYYY-MM-DD\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[1],\r\n      }),\r\n    },\r\n    // YYYY-MM\r\n    {\r\n      regex: /\\b(\\d{4})-(\\d{2})\\b/g,\r\n      parse: (match) => {\r\n        const year = parseInt(match[1], 10);\r\n        const month = parseInt(match[2], 10);\r\n        const lastDay = new Date(year, month, 0).getDate();\r\n        return {\r\n          text: match[0],\r\n          dateStart: `${year}-${String(month).padStart(2, '0')}-01`,\r\n          dateEnd: `${year}-${String(month).padStart(2, '0')}-${String(lastDay).padStart(2, '0')}`,\r\n        };\r\n      },\r\n    },\r\n    // MM/DD\r\n    {\r\n      regex: /(?<!\\d)(\\d{2})\\/(\\d{2})(?!\\d)/g,\r\n      parse: (match) => {\r\n        const mm = parseInt(match[1], 10);\r\n        const dd = parseInt(match[2], 10);\r\n        return {\r\n          text: match[0],\r\n          dateStart: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          dateEnd: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n        };\r\n      },\r\n    },\r\n  ];\r\n\r\n  const results: {\r\n    text: string;\r\n    dateStart: string;\r\n    dateEnd: string;\r\n  }[] = [];\r\n\r\n  const usedRanges: [number, number][] = [];\r\n\r\n  for (const pattern of patterns) {\r\n    const regex = new RegExp(pattern.regex.source, 'g');\r\n    let match: RegExpExecArray | null;\r\n\r\n    while ((match = regex.exec(input)) !== null) {\r\n      const start = match.index;\r\n      const end = regex.lastIndex;\r\n\r\n      // 이미 처리된 범위에 속하면 skip\r\n      if (usedRanges.some(([s, e]) => start < e && end > s)) continue;\r\n\r\n      results.push(pattern.parse(match));\r\n      usedRanges.push([start, end]);\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport const TimeLineScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const _window = useResizeContext();\r\n  const [date, setDate] = useState(today());\r\n  const dateNum = new Date(date).getTime();\r\n\r\n  const { data: notes = [], isLoading } = useNotePages();\r\n  const preData = useMemo(\r\n    () =>\r\n      notes.flatMap((v) => {\r\n        return parseHtmlToSections(v.description || '')\r\n          .map((section) => {\r\n            const dateMatches = toRaw(section.header + section.description)\r\n              .split('\\n')\r\n              .map((v2) => ({ original: v2, matches: extractDates(v2) }));\r\n            return { ...v, section: section.title, dateMatches };\r\n          })\r\n          .filter((v) => v.dateMatches.length > 0);\r\n      }),\r\n    [notes]\r\n  );\r\n  const data = preData\r\n    .map((v) => {\r\n      return {\r\n        ...v,\r\n        subtitles: v.dateMatches\r\n          .filter((dateMatch) =>\r\n            dateMatch.matches.find(\r\n              (match) =>\r\n                new Date(match.dateStart).getTime() <= dateNum &&\r\n                dateNum <= new Date(match.dateEnd).getTime()\r\n            )\r\n          )\r\n          .map((dateMatch) => dateMatch.original),\r\n      };\r\n    })\r\n    .filter((v2) => v2.subtitles.length > 0);\r\n\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <View style={[{ ...commonStyles.container, flex: undefined, paddingBottom: 0 }]}>\r\n        <DateHeaderSection date={date} setDate={setDate} />\r\n      </View>\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title, section) => navigation.push('NotePage', { title, section })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"노트가 없습니다.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, TextButton, useColorScheme, useLangContext, Text } from '@blacktokki/core';\r\nimport { ConfigSections } from '@blacktokki/navigation';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { TouchableOpacity, View } from 'react-native';\r\n\r\nimport { SearchList } from '../../../components/SearchBar';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\n\r\nconst ConfigButton = (props: { title: string; onPress?: () => void }) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TouchableOpacity\r\n      style={[commonStyles.header, { marginBottom: 0 }]}\r\n      onPress={props.onPress}\r\n      disabled={!props.onPress}\r\n    >\r\n      <Text style={{ fontSize: 20, color, fontWeight: '600' }}>{props.title}</Text>\r\n      {props.onPress && <Text>{'>'}</Text>}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst OptionButton = (props: { title: string; onPress: () => void; active: boolean }) => {\r\n  const theme = useColorScheme();\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TextButton\r\n      title={props.title}\r\n      textStyle={{\r\n        fontSize: 16,\r\n        color,\r\n        textDecorationLine: props.active ? 'underline' : 'none',\r\n      }}\r\n      style={{ borderRadius: 20 }}\r\n      onPress={props.onPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  const { auth, dispatch } = useAuthContext();\r\n  const theme = useColorScheme();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [search, setSearch] = useState(false);\r\n  const { data: keywords = [] } = useKeywords();\r\n  const resetKeyword = useResetKeyowrd();\r\n  return (\r\n    <View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigButton title={lang('* Search Settings')} />\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <OptionButton\r\n            title={'Search History'}\r\n            onPress={() => setSearch(!search)}\r\n            active={search}\r\n          />\r\n          {search && !!keywords.length && (\r\n            <OptionButton title={'Clear'} onPress={() => resetKeyword.mutate()} active={false} />\r\n          )}\r\n        </View>\r\n        {search && (\r\n          <View style={[commonStyles.card, { padding: 0 }]}>\r\n            <SearchList\r\n              filteredPages={keywords}\r\n              handlePagePress={(title, section) => navigation.push('NotePage', { title, section })}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigButton title={lang('* Archive')} onPress={() => navigation.push('Archive', {})} />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <ConfigButton title={lang('* Account Settings')} />\r\n          {!auth.isLocal && (\r\n            <Text numberOfLines={1} ellipsizeMode=\"tail\" style={{ marginLeft: 4 }}>\r\n              - {auth.user?.username}\r\n            </Text>\r\n          )}\r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {!!auth.user && (\r\n            <OptionButton\r\n              title={'My Account'}\r\n              onPress={() => auth.isLocal && dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={!auth.isLocal}\r\n            />\r\n          )}\r\n          <OptionButton\r\n            title={'Local Account'}\r\n            onPress={() => !auth.isLocal && dispatch({ type: 'LOGIN_LOCAL' })}\r\n            active={!!auth.isLocal}\r\n          />\r\n          {auth.user ? (\r\n            <OptionButton\r\n              title={'Logout'}\r\n              onPress={() => dispatch({ type: 'LOGOUT_REQUEST' })}\r\n              active={false}\r\n            />\r\n          ) : (\r\n            <OptionButton\r\n              title={'Login'}\r\n              onPress={() => dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, ContractFooter, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, TabViewOption } from '@blacktokki/navigation';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport ContentGroupSection, { ProblemButton, TimeLineButton } from './ContentGroupSection';\r\nimport ExtraConfigSections from './ExtraConfigSections';\r\n\r\nconst NotesTabView = () => {\r\n  const theme = useColorScheme();\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <ScrollView style={{ flex: 1, backgroundColor: Colors[theme].background }}>\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Open Pages')}\r\n      </List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Event Pages')}\r\n      </List.Subheader>\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst RecentChangesTabView = () => {\r\n  return <RecentPagesSection />;\r\n};\r\n\r\nconst ConfigTabView = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <ScrollView\r\n      style={{ flex: 1 }}\r\n      contentContainerStyle={[\r\n        commonStyles.container,\r\n        { backgroundColor: Colors[theme].background },\r\n      ]}\r\n    >\r\n      <ExtraConfigSections />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default function HomeScreen({ navigation, route }: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { auth } = useAuthContext();\r\n  const title = auth.isLocal ? 'Blacktokki Notebook - Local' : 'Blacktokki Notebook';\r\n  const tabViews: TabViewOption[] = [\r\n    {\r\n      title: lang('Discovery'),\r\n      component: NotesTabView,\r\n      icon: <List.Icon icon={'compass'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n    {\r\n      title: lang('All Notes'),\r\n      component: RecentChangesTabView,\r\n      icon: <List.Icon icon={'notebook'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n    {\r\n      title: lang('Config'),\r\n      component: ConfigTabView,\r\n      icon: <List.Icon icon={'dots-horizontal'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n  ];\r\n  return (\r\n    <HomeSection\r\n      tabViews={tabViews}\r\n      homeView={{ title, headerRight: () => <SearchBar /> }}\r\n      headerTitle={title}\r\n    >\r\n      <View style={[commonStyles.container, { width: '100%', justifyContent: 'space-between' }]}>\r\n        <ExtraConfigSections />\r\n        <ContractFooter\r\n          buttons={[\r\n            {\r\n              icon: <AntDesign name=\"github\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'https://github.com/blacktokki/blacktokki-notebook',\r\n              isWeb: true,\r\n            },\r\n            {\r\n              icon: <AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'mailto:ydh051541@naver.com',\r\n              isWeb: false,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n    </HomeSection>\r\n  );\r\n}\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { Auth } from '@blacktokki/account';\r\n\r\nimport { ArchiveScreen } from './main/ArchiveScreen';\r\nimport { EditPageScreen } from './main/EditPageScreen';\r\nimport { MovePageScreen } from './main/MovePageScreen';\r\nimport { NotePageScreen } from './main/NotePageScreen';\r\nimport { ProblemsScreen } from './main/ProblemScreen';\r\nimport { RecentPagesScreen } from './main/RecentPageScreen';\r\nimport { TimeLineScreen } from './main/TimeLineScreen';\r\nimport HomeScreen from './main/home/HomeScreen';\r\n\r\nconst title = (auth: Auth) =>\r\n  !auth.isLocal ? 'Blacktokki Notebook' : 'Blacktokki Notebook - Local';\r\nexport const main = {\r\n  Home: {\r\n    title,\r\n    component: HomeScreen,\r\n    path: 'home',\r\n  },\r\n  NotePage: {\r\n    title,\r\n    component: NotePageScreen,\r\n    path: 'page',\r\n  },\r\n  EditPage: {\r\n    title,\r\n    component: EditPageScreen,\r\n    path: 'edit',\r\n  },\r\n  MovePage: {\r\n    title,\r\n    component: MovePageScreen,\r\n    path: 'move',\r\n  },\r\n  RecentPages: {\r\n    title,\r\n    component: RecentPagesScreen,\r\n    path: 'recent',\r\n  },\r\n  Problem: {\r\n    title,\r\n    component: ProblemsScreen,\r\n    path: 'problem',\r\n  },\r\n  Archive: {\r\n    title,\r\n    component: ArchiveScreen,\r\n    path: 'archive',\r\n  },\r\n  TimeLine: {\r\n    title,\r\n    component: TimeLineScreen,\r\n    path: 'timeline',\r\n  },\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window = useResizeContext();\r\n  return (\r\n    <>\r\n      {window === 'portrait' && <SearchBar />}\r\n      <RecentPagesSection />\r\n    </>\r\n  );\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { getNoteLinks, SearchBar } from '../../components/SearchBar';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { getSplitTitle, sectionDescription } from './NotePageScreen';\r\n\r\nfunction findEmptyLists(html: string): string[] {\r\n  const regex = /<(ol|ul)\\b[^>]*>([\\s\\n\\r]*)<\\/\\1>/gi;\r\n  const matches: string[] = [];\r\n  let match;\r\n\r\n  while ((match = regex.exec(html)) !== null) {\r\n    matches.push(match[0]); // 전체 태그를 반환\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\nexport const ProblemsScreen: React.FC = () => {\r\n  const _window = useResizeContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const unknownData = getNoteLinks(pages)\r\n    .filter((v) => {\r\n      const page = pages.find((v2) => v2.title === v.title);\r\n      if (page?.description) {\r\n        if (\r\n          v.section === undefined ||\r\n          parseHtmlToSections(page.description).find((v2) => v2.title === v.section)\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    })\r\n    .map((v) => ({\r\n      ...v,\r\n      subtitle:\r\n        (v.section === undefined ? 'Unknown note link' : 'Unknown section link') + `(${v.origin})`,\r\n    }));\r\n  const emptyParentData = pages\r\n    .map((v) => {\r\n      const splitTitle = getSplitTitle(v.title);\r\n      if (\r\n        v.description &&\r\n        splitTitle.length === 2 &&\r\n        pages.find((v) => v.title === splitTitle[0]) === undefined\r\n      ) {\r\n        return { title: splitTitle[0], subtitle: `Empty parent note(${v.title})` };\r\n      }\r\n      return undefined;\r\n    })\r\n    .filter((v) => v !== undefined);\r\n\r\n  const emptyContentdata = pages.flatMap((v) => {\r\n    const paragraph = parseHtmlToSections(v.description || '');\r\n    const emptyParagraph = paragraph.filter(\r\n      (v2) => v2.level !== 0 && sectionDescription(paragraph, v2.title, false).trim() === ''\r\n    );\r\n    const emptyList = paragraph.filter((v2) => findEmptyLists(v2.description).length > 0);\r\n    return [\r\n      ...emptyParagraph.map((v2) => ({\r\n        title: v.title,\r\n        section: v2.level === 0 ? undefined : v2.title,\r\n        subtitle: 'Empty section',\r\n      })),\r\n      ...emptyList.map((v2) => ({\r\n        title: v.title,\r\n        section: v2.level === 0 ? undefined : v2.title,\r\n        subtitle: 'Empty list',\r\n      })),\r\n    ];\r\n  });\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={[...unknownData, ...emptyParentData, ...emptyContentdata]}\r\n        onPress={(title) => navigation.push('EditPage', { title })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"작성이 필요한 노트가 없습니다.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useLangContext, View } from '@blacktokki/core';\r\nimport { push } from '@blacktokki/navigation';\r\nimport React from 'react';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\n\r\nimport ContentGroupSection, {\r\n  ProblemButton,\r\n  TimeLineButton,\r\n} from '../screens/main/home/ContentGroupSection';\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <List.Item\r\n        left={(_props) => <List.Icon {..._props} icon={'home'} />}\r\n        title={lang('Home')}\r\n        onPress={() => push('Home')}\r\n      />\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n      <ScrollView style={Platform.OS === 'web' ? ({ scrollbarWidth: 'thin' } as any) : {}}>\r\n        <List.Subheader style={{}} selectable={false}>\r\n          {lang('Open Pages')}\r\n        </List.Subheader>\r\n        <ContentGroupSection type={'LAST'} />\r\n        <ContentGroupSection type={'PAGE'} />\r\n        <List.Subheader style={{ flex: 1 }} selectable={false}>\r\n          {lang('Recent Changes')}\r\n        </List.Subheader>\r\n        {/* 최근 변경 */}\r\n        <ContentGroupSection type={'NOTE'} noteCount={10} />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n","import { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { login, Navigation, NavigationConfig } from '@blacktokki/navigation';\r\nimport React, { Suspense } from 'react';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport DatePickerModal from '../modals/DatePikcerModal';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\n\r\nconst HeaderRight = () => {\r\n  const windowType = useResizeContext();\r\n  return windowType === 'landscape' ? <SearchBar /> : undefined;\r\n};\r\n\r\nconst getConfig = async () => {\r\n  const Linking = await import('expo-linking');\r\n  return {\r\n    main,\r\n    login,\r\n    prefixes: [Linking.makeUrl('/')],\r\n    rootPath: 'blacktokki-notebook',\r\n    documentTitle: {\r\n      formatter: () => {\r\n        return 'blacktokki-notebook';\r\n      },\r\n    },\r\n    rootScreen: {\r\n      main: 'Home',\r\n      login: 'LoginScreen',\r\n    },\r\n    headerLeftIcon: <List.Icon icon=\"backburger\" style={{ left: -18, top: -14 }} />,\r\n    headerRight: <HeaderRight />,\r\n    modals: [DatePickerModal],\r\n    drawer: <Drawer />,\r\n  } as NavigationConfig;\r\n};\r\n\r\nexport default () => {\r\n  const scheme = useColorScheme();\r\n  const preTheme = scheme === 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n  const theme: typeof preTheme = {\r\n    ...preTheme,\r\n    colors: { ...preTheme.colors, primary: Colors[scheme].text },\r\n  };\r\n  const NavigationLazy = React.lazy(() =>\r\n    getConfig().then((config) => ({ default: () => <Navigation config={config} /> }))\r\n  );\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <Suspense fallback={<></>}>\r\n        <NavigationLazy />\r\n      </Suspense>\r\n    </PaperProvider>\r\n  );\r\n};\r\n"],"names":["KEYWORDS_KEY","getKeywords","_ref","_asyncToGenerator","subkey","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","error","_x","apply","arguments","saveKeywords","_ref2","keywords","stringify","setItem","_x2","_x3","useKeywords","_auth$user","auth","useAuthContext","isLocal","user","id","useQuery","queryKey","queryFn","_queryFn","axios","axiosCreate","getContentList","get","data","parentId","types","parentIdParam","undefined","typeParam","join","value","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","previewUrl","_ref6","delete","_ref7","preview","query","_x7","openDB","_openDB","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","lastPage","RECENT_PAGES_KEY","getContents","isOnline","type","transaction","objectStore","getAll","saveNoteContents","contents","content","find","v","savedId","then","snapshot","_objectSpread","tx","store","archive","contentItem","put","oncomplete","getRecentPages","saveRecentPages","titles","_x6","useNotePages","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","page","c","invalidateQueries","description","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","useCreateOrUpdatePage","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","Date","toISOString","map","i","newPage","input","userId","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x8","useDeleteRecentPage","_mutationFn4","updatedRecentPages","filter","_title","_x11","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToSections","html","doc","DOMParser","parseFromString","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","push","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","substring","textContent","trim","length","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","section","onLink","navigation","noteLink","window","getNoteLinks","pages","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","noteLinks","startsWith","RandomButton","useNavigation","randomPages","Math","floor","random","sections","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useKeywords$data","_auth$user2","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","DatePickerModal","datetime","callback","_dayjs","dayjs","m","restMinute","format","add","defaultDayjs","_useLangContext","useLangContext","lang","locale","date","setDate","disableDays","setDisableDays","setModal","useModalsContext","back","margin","minHeight","textAlign","lightColor","darkColor","Suspense","fallback","_Fragment","Calendar","disableAllTouchEventsForDisabledDays","onMonthChange","dateString","markedDates","reduce","p","selected","CommonButton","NoteListSection","isLoading","emptyMessage","subtitle","subtitles","selectable","TimeLineButton","List","_props","icon","navigate","ProblemButton","toRecentContents","sort","b","getTime","notes","_useNotePages2","_queryFn4","useRecentPages","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x10","useAddRecentPage","deleteRecentPage","lastPageExists","useResizeContext","itemPadding","noteOnPress","clearTimeout","setTimeout","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","noteCount","_pages$data2","TouchableRipple","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","innerHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","index","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","overflow","Content","descriptionComponent","opacity","RecentPagesSection","RenderHtml","source","renderersProps","tagsStyles","contentWidth","ScrollView","contentContainerStyle","alignSelf","flexWrap","cancelButton","marginRight","saveButton","marginLeft","columns","moveButton","sectionDescription","paragraph","rootTitle","_paragraph$find","getSplitTitle","splitTitle","split","pageTitle","actionButtons","actionButton","DateHeaderSection","monthly","extractDates","currentYear","getFullYear","patterns","regex","match","dateStart","dateEnd","year","month","lastDay","getDate","String","padStart","mm","dd","results","usedRanges","pattern","RegExp","_loop","start","end","lastIndex","some","s","exec","ConfigButton","Colors","OptionButton","TextButton","textStyle","textDecorationLine","active","_useAuthContext","dispatch","setSearch","resetKeyword","_auth$user3","_mutationFn2","_onSuccess2","useResetKeyowrd","ConfigSections","numberOfLines","ellipsizeMode","username","NotesTabView","background","ContentGroupSection","RecentChangesTabView","ConfigTabView","ExtraConfigSections","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","buttons","AntDesign","iconColor","isWeb","NotePage","isFocused","useIsFocused","useRoute","_route$params","archiveId","_window","toc","toggleToc","fullSection","toggleFullSection","_useNotePage","archives","handleEdit","idx","findIndex","moveSections","moveSection","findLast","_paragraph$idx","reverse","_paragraph$idx2","_useState5","_useState6","setDescription","_paragraph$find2","pressableTextColor","scrollbarGutter","flexGrow","EditorViewer","autoResize","ActivityIndicator","EditPage","setContent","mutation","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","_getMatchedChars","childrenPages","encodeURI","_getMatchedChars2","protocol","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","setPreview","moveMutation","_useNotePages5$data","oldTitle","Error","_x9","useMovePage","_useMemo","_moveParagraph$","moveParagraph","isSplit","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","display","RecentPages","Problem","unknownData","emptyParentData","emptyContentdata","emptyParagraph","emptyList","matches","findEmptyLists","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","TimeLine","dateNum","dateMatches","toRaw","original","dateMatch","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","default","Navigation","PaperProvider"],"sourceRoot":""}