{"version":3,"file":"static/js/515.9f8f7e65.chunk.js","mappings":"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","sources":["src/hooks/useKeywordStorage.ts","src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/modals/DatePikcerModal.tsx","src/screens/main/NoteListSection.tsx","src/components/TimerTag.tsx","src/screens/main/notepage/TimerTagSection.tsx","src/screens/main/notepage/NotePageScreen.tsx","src/hooks/useProblem.ts","src/hooks/useTimeLine.ts","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/home/ExtraConfigSections.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/timeline/DateHeaderSection.tsx","src/screens/main/timeline/TimeLineScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/ProblemScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords:';\r\n\r\nexport type KeywordContent =\r\n  | {\r\n      type: '_NOTELINK';\r\n      name: string;\r\n      title: string;\r\n      paragraph?: string;\r\n    }\r\n  | {\r\n      type: '_KEYWORD';\r\n      title: string;\r\n    };\r\n\r\nconst getKeywords = async (subkey: string | undefined): Promise<KeywordContent[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY + subkey);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveKeywords = async (\r\n  subkey: string | undefined,\r\n  keywords: KeywordContent[]\r\n): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY + subkey, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving keywords', e);\r\n  }\r\n};\r\n\r\nexport const useKeywords = () => {\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n  return useQuery({\r\n    queryKey: ['keywords', subkey],\r\n    queryFn: async () => {\r\n      return await getKeywords(subkey);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async (keyword: KeywordContent) => {\r\n      const keywords = await getKeywords(subkey);\r\n      const newKeywords = [\r\n        ...new Set([JSON.stringify(keyword), ...keywords.map((v) => JSON.stringify(v))]),\r\n      ].map((v) => JSON.parse(v));\r\n      await saveKeywords(subkey, newKeywords);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords(subkey, []);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n","import { axiosCreate } from '@blacktokki/account';\r\n\r\nimport { Content, PostContent, Link } from '../types';\r\n\r\nconst axios = axiosCreate('notebook');\r\n\r\nexport const getContentOne = async (id: number) => {\r\n  return (await axios.get(`/api/v1/content/${id}`)).data as Content;\r\n};\r\n\r\nexport const getContentList = async (parentId?: number, types?: Content['type'][]) => {\r\n  const parentIdParam = parentId !== undefined ? `&parentId=${parentId}` : '';\r\n  const typeParam = types !== undefined ? `&types=${types.join(',')}` : '';\r\n  return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data\r\n    .value as Content[];\r\n};\r\n\r\nexport const postContent = async (postContent: PostContent) => {\r\n  return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id;\r\n};\r\n\r\nexport const patchContent = async ({ id, updated }: { id: number; updated: PostContent }) => {\r\n  await axios.patch(`/api/v1/content`, { ids: [id], updated });\r\n};\r\n\r\nexport const deleteContent = async (id: number) => {\r\n  await axios.delete(`/api/v1/content/${id}`);\r\n};\r\n\r\nexport const previewUrl = async (preview: { query: string }) => {\r\n  return (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data as Link;\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\n\r\nimport { getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { Content, PostContent } from '../types';\r\n\r\nconst DB_NAME = '@Blacktokki:notebook';\r\nconst DB_VERSION = 1;\r\n\r\nexport async function openDB(): Promise<IDBDatabase> {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = (event.target as IDBOpenDBRequest).result;\r\n      if (!db.objectStoreNames.contains('NOTE')) {\r\n        db.createObjectStore('NOTE', { keyPath: 'title' });\r\n      }\r\n      // if (!db.objectStoreNames.contains('SNAPSHOT')) {\r\n      //   db.createObjectStore('SNAPSHOT', { keyPath: ['title', 'updated'] });\r\n      // }\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\n\r\nlet lastPage: string | undefined;\r\n\r\nconst getContents = async (isOnline: boolean, type: 'NOTE' | 'SNAPSHOT'): Promise<Content[]> => {\r\n  if (isOnline) {\r\n    return await getContentList(undefined, [type]);\r\n  }\r\n  if (type === 'SNAPSHOT') {\r\n    return [];\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    return new Promise((resolve) => {\r\n      const transaction = db.transaction(type, 'readonly');\r\n      const store = transaction.objectStore(type);\r\n\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result as Content[]);\r\n      };\r\n      request.onerror = () => {\r\n        console.error('Error loading contents from IndexedDB:', request.error);\r\n        throw request.error;\r\n      };\r\n    });\r\n  } catch (e) {\r\n    console.error('Error opening IndexedDB', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (\r\n  isOnline: boolean,\r\n  contents: (Content | PostContent)[],\r\n  id?: number\r\n): Promise<void> => {\r\n  const content = contents.find((v) => id === (v as { id?: number }).id);\r\n  if (isOnline) {\r\n    if (content) {\r\n      const savedId = await (id\r\n        ? patchContent({ id, updated: content }).then(() => id)\r\n        : postContent(content));\r\n      const snapshot: Content | PostContent = {\r\n        ...content,\r\n        type: 'SNAPSHOT',\r\n        id: undefined,\r\n        parentId: savedId,\r\n      };\r\n      await postContent(snapshot);\r\n    }\r\n    return;\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(['NOTE' /*, 'SNAPSHOT' */], 'readwrite');\r\n    const store = tx.objectStore('NOTE');\r\n    // const archive = tx.objectStore('SNAPSHOT');\r\n\r\n    for (const contentItem of contents) {\r\n      store.put(contentItem); // id를 기준으로 덮어씌움 (없으면 추가)\r\n    }\r\n    // if (content) {\r\n    //   const snapshot: Content | PostContent = {\r\n    //     ...content,\r\n    //     type: 'SNAPSHOT',\r\n    //   };\r\n    //   archive.put(snapshot);\r\n    // }\r\n    await new Promise((resolve, reject) => {\r\n      tx.oncomplete = () => resolve(undefined);\r\n      tx.onerror = () => reject(tx.error);\r\n    });\r\n  } catch (e) {\r\n    console.error('Error saving contents to IndexedDB', e);\r\n  }\r\n};\r\n\r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n\r\nexport const useNotePages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['pageContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'NOTE'),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['snapshotContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'SNAPSHOT'),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find((v) => v === title) === undefined) {\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '', id: undefined };\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useRecentPages = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['recentPages'],\r\n    queryFn: async () => {\r\n      const recentTitles = await getRecentPages();\r\n      return recentTitles\r\n        .map((title) => contents.find((c) => c.title === title))\r\n        .filter((c) => c !== undefined) as Content[];\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useLastPage = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['lastPage'],\r\n    queryFn: async () => {\r\n      return contents.find((v) => v.title === lastPage);\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useCreateOrUpdatePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const { data: contents = [] } = useNotePages();\r\n  return useMutation({\r\n    mutationFn: async ({ title, description }: { title: string; description: string }) => {\r\n      const page = contents.find((c) => c.title === title);\r\n      if (page?.description === description) {\r\n        return { title, description, skip: true };\r\n      }\r\n      let updatedContents: (Content | PostContent)[];\r\n      const updated = auth.isLocal ? new Date().toISOString() : undefined;\r\n      if (page) {\r\n        updatedContents = contents.map((c, i) =>\r\n          c.id === page.id ? ({ ...c, description, updated } as PostContent) : c\r\n        );\r\n      } else {\r\n        const newPage = {\r\n          title,\r\n          description,\r\n          input: title,\r\n          userId: auth.user?.id || 0,\r\n          parentId: 0,\r\n          type: 'NOTE',\r\n          order: 0,\r\n          updated,\r\n          option: {},\r\n        } as PostContent;\r\n        updatedContents = [...contents, newPage];\r\n      }\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page?.id);\r\n      return { title, description, skip: false };\r\n    },\r\n    onSuccess: async (data) => {\r\n      if (!data.skip) {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      }\r\n    },\r\n  });\r\n};\r\n\r\nexport const useMovePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [] } = useNotePages();\r\n  const { auth } = useAuthContext();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({\r\n      oldTitle,\r\n      newTitle,\r\n      description,\r\n    }: {\r\n      oldTitle: string;\r\n      newTitle: string;\r\n      description?: string;\r\n    }) => {\r\n      const page = contents.find((c) => c.title === oldTitle);\r\n\r\n      if (!page) {\r\n        throw new Error('Page not found');\r\n      }\r\n\r\n      if (contents.some((c) => c.title === newTitle)) {\r\n        throw new Error('Page with new title already exists');\r\n      }\r\n\r\n      const updatedContents = contents.map((c) =>\r\n        c.title === oldTitle\r\n          ? { ...c, title: newTitle, description: description || page.description }\r\n          : c\r\n      );\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page.id);\r\n\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.map((title) =>\r\n        title === oldTitle ? newTitle : title\r\n      );\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { oldTitle, newTitle };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({ title, direct }: { title: string; direct?: boolean }) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find((v) => v === title) === undefined || direct) {\r\n        const updatedRecentPages = [title, ...recentPages];\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async (title: string) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter((_title) => title !== _title);\r\n      lastPage = undefined;\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n    },\r\n  });\r\n};\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};\r\n","import { Text, useColorScheme } from '@blacktokki/core';\r\nimport { TouchableOpacity, View, FlatList, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { createCommonStyles } from '../styles';\r\n\r\nexport interface Paragraph {\r\n  path: string;\r\n  title: string;\r\n  level: number;\r\n  header: string;\r\n  description: string;\r\n}\r\n\r\nexport function parseHtmlToParagraphs(html: string): Paragraph[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  const result: Paragraph[] = [{ path: '', title: '', header: '', level: 0, description: '' }];\r\n\r\n  const headings: string[] = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\r\n  const headerStack: { level: number; title: string }[] = [];\r\n\r\n  let current: Paragraph | null = null;\r\n  let cursor = doc.body.firstChild;\r\n\r\n  const flushCurrent = () => {\r\n    if (current) {\r\n      result.push(current);\r\n      current = null;\r\n    }\r\n  };\r\n\r\n  while (cursor) {\r\n    if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n      const el = cursor as HTMLElement;\r\n      if (headings.includes(el.tagName)) {\r\n        flushCurrent();\r\n\r\n        const level = parseInt(el.tagName.substring(1), 10);\r\n        const title = el.textContent?.trim() || '';\r\n\r\n        // 헤더 스택 업데이트\r\n        while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n          headerStack.pop();\r\n        }\r\n        headerStack.push({ level, title });\r\n\r\n        const path = headerStack.map((h) => h.title).join(' > ');\r\n\r\n        current = {\r\n          path,\r\n          title,\r\n          level,\r\n          header: el.outerHTML,\r\n          description: '',\r\n        };\r\n      } else if (current) {\r\n        current.description += el.outerHTML;\r\n      } else {\r\n        // 헤더 밖의 내용 처리\r\n        result[0].description += el.outerHTML;\r\n      }\r\n    } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n      current.description += cursor.textContent || '';\r\n    }\r\n\r\n    cursor = cursor.nextSibling;\r\n  }\r\n\r\n  flushCurrent();\r\n  return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props: {\r\n  root: string;\r\n  path: string;\r\n  onPress: (item: Paragraph) => void;\r\n  data: Paragraph[];\r\n}) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item: Paragraph) => (\r\n    <TouchableOpacity style={styles.resultItem} onPress={() => props.onPress(item)}>\r\n      {item.level === 0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\" />}\r\n      <Text\r\n        style={[\r\n          props.path === item.path\r\n            ? [commonStyles.title, { marginBottom: 5, marginTop: 3 }]\r\n            : commonStyles.text,\r\n          styles.resultText,\r\n          { left: item.level * 10 + 10 },\r\n        ]}\r\n      >\r\n        {item.level === 0 ? props.root : item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View\r\n      style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}\r\n    >\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(item) => item.path}\r\n        renderItem={({ item }) => renderItem(item)}\r\n        ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n});\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Text,\r\n  StyleSheet,\r\n  PanResponder,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { parseHtmlToParagraphs } from './HeaderSelectBar';\r\n\r\nlet _searchText = '';\r\n\r\ntype SearchContent = Content | KeywordContent;\r\n\r\nfunction extractHtmlLinksWithQuery(text: string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map((a) => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href,\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nfunction urlToNoteLink(url: string) {\r\n  const newLocation = new URL(url);\r\n  if (location.origin === newLocation.origin) {\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get('title');\r\n    const paragraph = params.get('paragraph') || undefined;\r\n    if (title) {\r\n      return { title, paragraph };\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLink(url: string, navigation: StackNavigationProp<NavigationParamList>) {\r\n  const noteLink = urlToNoteLink(url);\r\n  if (noteLink) {\r\n    navigation.push('NotePage', noteLink);\r\n  } else {\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nexport function getNoteLinks(pages: Content[]) {\r\n  return pages.flatMap((v) =>\r\n    extractHtmlLinksWithQuery(v.description || '')\r\n      .map((v2) => {\r\n        const noteLink = urlToNoteLink(v2.url);\r\n        if (noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/) {\r\n          return { type: '_NOTELINK' as '_NOTELINK', name: v2.text, ...noteLink, origin: v.title };\r\n        }\r\n      })\r\n      .filter((v) => v !== undefined)\r\n  );\r\n}\r\n\r\nexport const getFilteredPages = (pages: Content[], searchText: string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase();\r\n  const noteLinks = getNoteLinks(pages);\r\n  return [\r\n    ...pages.filter((page) => page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter((v) => v.name.toLowerCase().startsWith(lowerCaseSearch)),\r\n  ];\r\n};\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter((v) => v.description);\r\n  return (\r\n    randomPages && (\r\n      <TouchableOpacity\r\n        style={commonStyles.searchButton}\r\n        onPress={() => {\r\n          const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n          const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n          navigation.push('NotePage', {\r\n            title: page.title,\r\n            paragraph: paragraphs[Math.floor(Math.random() * paragraphs.length)].title,\r\n          });\r\n        }}\r\n      >\r\n        <Icon name={'random'} size={18} color=\"#FFFFFF\" />\r\n      </TouchableOpacity>\r\n    )\r\n  );\r\n};\r\n\r\nexport const titleFormat = (item: { title: string; paragraph?: string }) =>\r\n  `${item.title}${item.paragraph ? ' ▶ ' + item.paragraph : ''}`;\r\n\r\nexport const SearchList = ({\r\n  filteredPages,\r\n  handlePagePress,\r\n  addKeyword,\r\n}: {\r\n  filteredPages: SearchContent[];\r\n  handlePagePress: (title: string, paragraph?: string) => void;\r\n  addKeyword?: (keyword: KeywordContent) => void;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item: SearchContent) => {\r\n    return PanResponder.create({\r\n      onPanResponderStart: () => {\r\n        if (item.type === '_NOTELINK' && item.paragraph) {\r\n          handlePagePress(item.title, item.paragraph);\r\n          addKeyword?.(item);\r\n        } else {\r\n          handlePagePress(item.title);\r\n          addKeyword?.({ type: '_KEYWORD', title: item.title });\r\n        }\r\n      },\r\n    }).panHandlers;\r\n  }, []);\r\n\r\n  return (\r\n    <FlatList\r\n      data={filteredPages}\r\n      keyExtractor={(item: any) => JSON.stringify([item.title, item.name, item.paragraph])}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity style={styles.resultItem} {...pagePressHandlers(item)}>\r\n          <Text style={[commonStyles.text, styles.resultText]}>\r\n            {item.type === '_NOTELINK' ? item.name : item.title}\r\n          </Text>\r\n          {item.type === '_NOTELINK' && (\r\n            <Text style={[commonStyles.text, styles.resultText, { fontSize: 12 }]}>\r\n              {titleFormat(item)}\r\n            </Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SearchBar: React.FC<{\r\n  handlePress?: (title: string) => void;\r\n  useRandom?: boolean;\r\n}> = ({ handlePress, useRandom = true }) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput | null>();\r\n  const { data: keywords = [] } = useKeywords();\r\n  const addKeyword = useAddKeyowrd();\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages: SearchContent[] =\r\n    searchText.length > 0\r\n      ? getFilteredPages(pages, searchText).slice(0, 10)\r\n      : keywords.slice(0, 10);\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim());\r\n      addKeyword.mutate({ type: '_KEYWORD', title: searchText.trim() });\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, paragraph?: string) => {\r\n    if (handlePress) {\r\n      handlePress(title);\r\n    } else {\r\n      navigation.push('NotePage', { title, paragraph });\r\n    }\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(\r\n    () =>\r\n      PanResponder.create({\r\n        onPanResponderStart: handleSearch,\r\n      }).panHandlers,\r\n    [searchText]\r\n  );\r\n\r\n  useEffect(() => {\r\n    _searchText = searchText;\r\n  }, [searchText]);\r\n\r\n  useFocusEffect(() => {\r\n    if (searchText !== _searchText) {\r\n      setSearchText(_searchText);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={(ref) => {\r\n            inputRef.current = ref;\r\n          }}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={() => setShowResults(true)}\r\n          onBlur={() => setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={'search'} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton />}\r\n      </View>\r\n\r\n      {showResults && (\r\n        <View\r\n          style={[\r\n            styles.resultsContainer,\r\n            theme === 'dark' ? styles.darkResults : styles.lightResults,\r\n          ]}\r\n        >\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList\r\n              filteredPages={filteredPages}\r\n              handlePagePress={handlePagePress}\r\n              addKeyword={addKeyword.mutate}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity style={styles.resultItem} {...searchHandlers}>\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import {\r\n  Calendar,\r\n  useLangContext,\r\n  useModalsContext,\r\n  View,\r\n  Text,\r\n  CommonButton,\r\n} from '@blacktokki/core';\r\nimport { CalendarProps } from '@blacktokki/core/build/typescript/components/Calendar';\r\nimport dayjs from 'dayjs';\r\nimport React, { Suspense, useState } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\nexport type MarkedDateRange = { dateStart: string; dateEnd: string };\r\n\r\nconst DIRECT_PICK = true;\r\n\r\nconst getMarkedDays = (dateString: string, markedDateStrings: MarkedDateRange[]) => {\r\n  const disableDays: string[] = [];\r\n  const date = dayjs(dateString);\r\n  let startDate = date.clone().startOf('month').add(-1, 'month');\r\n  const endDate = date.clone().endOf('month').add(1, 'month');\r\n  const markedDate = markedDateStrings.map((v) => ({\r\n    startDate: dayjs(v.dateStart),\r\n    endDate: dayjs(v.dateEnd),\r\n  }));\r\n  const markedDays: string[] = [];\r\n  // const today = dayjs().startOf('day');\r\n  while (startDate <= endDate) {\r\n    // if (startDate < today) {\r\n    //   disableDays.push(startDate.format('YYYY-MM-DD'));\r\n    // }\r\n    if (markedDate.find((v) => !v.startDate.isAfter(startDate) && !v.endDate.isBefore(startDate))) {\r\n      markedDays.push(startDate.format('YYYY-MM-DD'));\r\n    }\r\n    startDate = startDate.add(1, 'day');\r\n  }\r\n  return {\r\n    ...disableDays.reduce((p, c) => {\r\n      p[c] = { disabled: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...markedDays.reduce((p, c) => {\r\n      p[c] = { marked: true, dotColor: 'red' };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...(dateString ? [dateString] : []).reduce((p, c) => {\r\n      p[c] = { selected: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n  };\r\n};\r\n\r\nconst defaultDayjs = () => {\r\n  const m = dayjs();\r\n  const restMinute = parseInt(m.format('mm'), 10) % 5;\r\n  return m.add(5 - restMinute, 'minute');\r\n};\r\n\r\nexport default function DatePickerModal({\r\n  datetime,\r\n  markedDateStrings,\r\n  callback,\r\n}: {\r\n  datetime?: string;\r\n  markedDateStrings?: MarkedDateRange[];\r\n  callback: (datetime?: string) => void;\r\n}) {\r\n  const _dayjs = datetime ? dayjs(datetime) : defaultDayjs();\r\n  const { lang, locale } = useLangContext();\r\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\r\n  const [markedDates, setMarkedDates] = useState<CalendarProps['markedDates']>(\r\n    getMarkedDays(_dayjs.format('YYYY-MM-DD'), markedDateStrings || [])\r\n  );\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(DatePickerModal, null);\r\n  };\r\n  const onSave = (datetime?: string) => {\r\n    callback?.(datetime);\r\n    back();\r\n  };\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ alignItems: 'center', minHeight: 450 }}>\r\n        <View style={{ flexDirection: 'row', width: '100%' }}>\r\n          <View style={{ flex: 1, flexDirection: 'row' }}>\r\n            <TouchableOpacity onPress={back}>\r\n              <Text>{lang('back')}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={{ fontSize: 20, textAlign: 'center' }}>{lang('Date')}</Text>\r\n          </View>\r\n          <View style={{ flex: 1 }} />\r\n        </View>\r\n        <View\r\n          style={{ marginBottom: 20, height: 1, width: '100%' }}\r\n          lightColor=\"#ddd\"\r\n          darkColor=\"rgba(255,255,255, 0.3)\"\r\n        />\r\n        <Suspense fallback={<></>}>\r\n          <Calendar\r\n            locale={locale}\r\n            style={undefined}\r\n            date={date}\r\n            setDate={DIRECT_PICK ? onSave : setDate}\r\n            disableAllTouchEventsForDisabledDays={true}\r\n            onMonthChange={(v) =>\r\n              setMarkedDates(getMarkedDays(v.dateString, markedDateStrings || []))\r\n            }\r\n            markedDates={markedDates}\r\n          />\r\n        </Suspense>\r\n        {!DIRECT_PICK && (\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <CommonButton title={lang('save')} onPress={() => onSave(date)} />\r\n            <CommonButton title={lang('cancel')} onPress={() => onSave(undefined)} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport { titleFormat } from '../../components/SearchBar';\r\nimport { createCommonStyles } from '../../styles';\r\n\r\nexport const NoteListSection = ({\r\n  contents,\r\n  isLoading,\r\n  onPress,\r\n  emptyMessage,\r\n}: {\r\n  contents: {\r\n    title: string;\r\n    paragraph?: string;\r\n    subtitles?: string[];\r\n    id?: number;\r\n  }[];\r\n  isLoading: boolean;\r\n  onPress: (title: string, paragraph?: string, id?: number) => void;\r\n  emptyMessage: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : contents.length > 0 ? (\r\n        <FlatList\r\n          data={contents}\r\n          keyExtractor={(item) => JSON.stringify([item.title, item.paragraph, item.id])}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => onPress(item.title, item.paragraph, item.id)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n              {(item.subtitles || []).map((subtitle, index) => (\r\n                <Text key={index} style={[commonStyles.smallText]}>\r\n                  {subtitle}\r\n                </Text>\r\n              ))}\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text selectable={false} style={commonStyles.text}>\r\n            {emptyMessage}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n","import { CommonButton } from '@blacktokki/core';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\n\r\nimport { Paragraph } from './HeaderSelectBar';\r\n\r\ntype DatePattern = {\r\n  pattern: string;\r\n  format?: (s: string, e: string) => string;\r\n  text: string;\r\n  dateStart: string;\r\n  dateEnd: string;\r\n  index: number;\r\n};\r\n\r\nfunction extractDates(input: string) {\r\n  const now = new Date();\r\n  const currentYear = now.getFullYear();\r\n  // 정규식 패턴들\r\n  const patterns: {\r\n    regex: RegExp;\r\n    parse: (match: RegExpExecArray) => DatePattern;\r\n  }[] = [\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\/(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        // YYYY-MM-DD/YYYY-MM-DD\r\n        pattern: 'YYYY-MM-DD',\r\n        format: (s, e) => `${s}/${e}`,\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[2],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        pattern: 'YYYY-MM-DD',\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[1],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b\\d{4}-\\d{2}(?!-)\\b/g,\r\n      parse: (match) => {\r\n        const split = match[0].split('-');\r\n        const year = parseInt(split[0], 10);\r\n        const month = parseInt(split[1], 10);\r\n        const lastDay = new Date(year, month, 0).getDate();\r\n        return {\r\n          pattern: 'YYYY-MM',\r\n          text: match[0],\r\n          dateStart: `${year}-${String(month).padStart(2, '0')}-01`,\r\n          dateEnd: `${year}-${String(month).padStart(2, '0')}-${String(lastDay).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      regex: /\\b(?<!\\d)(\\d{2})\\/(\\d{2})(?!\\d)\\b/g,\r\n      parse: (match) => {\r\n        const mm = parseInt(match[1], 10);\r\n        const dd = parseInt(match[2], 10);\r\n        return {\r\n          pattern: 'MM/DD',\r\n          text: match[0],\r\n          dateStart: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          dateEnd: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n  ];\r\n\r\n  const results: DatePattern[] = [];\r\n\r\n  const usedRanges: [number, number][] = [];\r\n\r\n  for (const pattern of patterns) {\r\n    const regex = new RegExp(pattern.regex.source, 'g');\r\n    let match: RegExpExecArray | null;\r\n\r\n    while ((match = regex.exec(input)) !== null) {\r\n      const start = match.index;\r\n      const end = regex.lastIndex;\r\n      // 이미 처리된 범위에 속하면 skip\r\n      if (results.some((result) => start < result.index + result.text.length && end > result.index))\r\n        continue;\r\n      results.push(pattern.parse(match));\r\n      usedRanges.push([start, end]);\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\nexport function cleanAndMergeTDs(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // 1. <code> 태그 내부 비우기\r\n  const codeTags = doc.querySelectorAll('code');\r\n  codeTags.forEach((code) => {\r\n    code.textContent = '';\r\n  });\r\n\r\n  // 2. 각 <tr> 안의 <td> 병합\r\n  const trList = doc.querySelectorAll('tr');\r\n  trList.forEach((tr) => {\r\n    const tdList = tr.querySelectorAll('td');\r\n    if (tdList.length > 1) {\r\n      const mergedText = Array.from(tdList)\r\n        .map((td) => td.textContent?.trim() || '')\r\n        .join(' ');\r\n\r\n      // 첫 td에 병합된 텍스트 설정\r\n      const newTd = document.createElement('td');\r\n      newTd.textContent = mergedText;\r\n\r\n      // 기존 td 모두 제거 후 병합 td 삽입\r\n      tr.innerHTML = '';\r\n      tr.appendChild(newTd);\r\n    }\r\n  });\r\n\r\n  return doc.body.innerHTML;\r\n}\r\n\r\nexport const paragraphsToDatePatterns = (title: string, paragraphs: Paragraph[]) => {\r\n  return paragraphs\r\n    .map((paragraph) => {\r\n      const dateMatches = [\r\n        toRaw(paragraph.header),\r\n        ...toRaw(cleanAndMergeTDs(paragraph.description)).split('\\n'),\r\n      ].map((v2, i) => ({\r\n        path: paragraph.path,\r\n        isHeader: i === 0,\r\n        original: v2,\r\n        matches: extractDates(v2),\r\n      }));\r\n      return { title, paragraph: paragraph.title, dateMatches };\r\n    })\r\n    .filter((v) => v.dateMatches.filter((v2) => v2.matches.length > 0).length > 0);\r\n};\r\n\r\nexport const matchDateRange = (\r\n  dateMatches: { matches: DatePattern[]; original: string; path: string; isHeader: boolean }[],\r\n  dateNum: number\r\n) => {\r\n  return dateMatches.filter((dateMatch) =>\r\n    dateMatch.matches.find(\r\n      (match) =>\r\n        new Date(match.dateStart).getTime() <= dateNum &&\r\n        dateNum <= new Date(match.dateEnd).getTime()\r\n    )\r\n  );\r\n};\r\n\r\nexport const today = () => dayjs().format('YYYY-MM-DD');\r\n\r\nexport type TimerData = DatePattern & { original: string; replace: (a: string) => void };\r\n\r\nconst TimerTag = (props: {\r\n  data: TimerData;\r\n  buttons: (data: TimerData) => { title: string; onPress: () => void }[];\r\n  now: dayjs.Dayjs;\r\n  isExpand: boolean;\r\n  toggleExpand: () => void;\r\n}) => {\r\n  const start = dayjs(props.data.dateStart);\r\n  const end = dayjs(props.data.dateEnd).add(1, 'day');\r\n  const ratio = start.diff(props.now) / start.diff(end);\r\n  return (\r\n    <TouchableOpacity onPress={() => props.toggleExpand()}>\r\n      <View\r\n        style={{ backgroundColor: 'lightgray', borderRadius: 20, overflow: 'hidden', margin: 4 }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: 'darkgray',\r\n            position: 'absolute',\r\n            width: `${ratio * 100}%`,\r\n            height: '100%',\r\n          }}\r\n        />\r\n        {props.isExpand ? (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, maxWidth: 270 }}>\r\n            <View style={{ flexDirection: 'row', alignItems: 'stretch' }}>\r\n              <Text>⌚</Text>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n            <Text>{props.data.original}</Text>\r\n            <View style={{ width: '100%', alignItems: 'center' }}>\r\n              {props.buttons(props.data).map((v) => (\r\n                <CommonButton\r\n                  key={v.title}\r\n                  title={v.title}\r\n                  onPress={() => v.onPress()}\r\n                  style={{ width: '100%', backgroundColor: '#8888', margin: 4, maxWidth: 150 }}\r\n                />\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, flexDirection: 'row' }}>\r\n            <View style={{ paddingHorizontal: 4 }}>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\nexport default TimerTag;\r\n","import dayjs from 'dayjs';\r\nimport { useEffect, useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { Paragraph } from '../../../components/HeaderSelectBar';\r\nimport TimerTag, {\r\n  matchDateRange,\r\n  paragraphsToDatePatterns,\r\n  TimerData,\r\n  today,\r\n} from '../../../components/TimerTag';\r\nimport { useCreateOrUpdatePage } from '../../../hooks/useNoteStorage';\r\n\r\nconst replaceDay = (data: TimerData, newDate: string) => {\r\n  return (\r\n    data.original.substring(0, data.index) +\r\n    newDate +\r\n    data.original.substring(data.index + data.text.length)\r\n  );\r\n};\r\n\r\nconst addDay = (data: TimerData, value: number, unit: 'day' | 'month', moved: boolean) => {\r\n  const s = moved ? dayjs(data.dateStart).add(value, unit).format(data.pattern) : data.dateStart;\r\n  const e = dayjs(data.dateEnd).add(value, unit).format(data.pattern);\r\n  return replaceDay(data, data.format ? data.format(s, e) : e);\r\n};\r\n\r\nconst buttons = (data: TimerData) => {\r\n  const format = data.format;\r\n  return [\r\n    ...(data.pattern.includes('DD')\r\n      ? [\r\n          { title: '+1d', onPress: () => data.replace(addDay(data, 1, 'day', true)) },\r\n          { title: '+2d', onPress: () => data.replace(addDay(data, 2, 'day', true)) },\r\n          { title: '+7d', onPress: () => data.replace(addDay(data, 7, 'day', true)) },\r\n        ]\r\n      : []),\r\n    { title: '+1M', onPress: () => data.replace(addDay(data, 1, 'month', true)) },\r\n    ...(format\r\n      ? [\r\n          {\r\n            title: '+Period',\r\n            onPress: () => {\r\n              const s = dayjs(data.dateStart);\r\n              const e = dayjs(data.dateEnd);\r\n              const diff = e.diff(s, 'day');\r\n              data.replace(\r\n                replaceDay(\r\n                  data,\r\n                  format(\r\n                    s.add(diff + 1, 'day').format(data.pattern),\r\n                    e.add(diff + 1, 'day').format(data.pattern)\r\n                  )\r\n                )\r\n              );\r\n            },\r\n          },\r\n          { title: '+0d/+1d', onPress: () => data.replace(addDay(data, 1, 'day', false)) },\r\n          { title: '+0d/+2d', onPress: () => data.replace(addDay(data, 2, 'day', false)) },\r\n          { title: '+0d/+7d', onPress: () => data.replace(addDay(data, 7, 'day', false)) },\r\n          { title: '+0d/+1M', onPress: () => data.replace(addDay(data, 1, 'month', false)) },\r\n        ]\r\n      : []),\r\n    { title: 'Delete', onPress: () => data.replace(replaceDay(data, '')) },\r\n  ];\r\n};\r\n\r\nexport default (props: { title: string; paragraphs: Paragraph[] }) => {\r\n  const dateNum = new Date(today()).getTime();\r\n  const createOrUpdatePage = useCreateOrUpdatePage();\r\n  const data = paragraphsToDatePatterns(props.title, props.paragraphs)\r\n    .flatMap((v) => matchDateRange(v.dateMatches, dateNum))\r\n    .flatMap((v) =>\r\n      v.matches.map((v2) => ({\r\n        ...v2,\r\n        original: v.original,\r\n        replace: (a: string) =>\r\n          createOrUpdatePage.mutate({\r\n            title: props.title,\r\n            description: props.paragraphs\r\n              .map(\r\n                (v3) =>\r\n                  (v3.path === v.path && v.isHeader\r\n                    ? v3.header.replace(v.original, a)\r\n                    : v3.header) +\r\n                  (v3.path === v.path && !v.isHeader\r\n                    ? v3.description.replace(v.original, a)\r\n                    : v3.description)\r\n              )\r\n              .join(''),\r\n          }),\r\n      }))\r\n    );\r\n\r\n  const [now, setNow] = useState(dayjs());\r\n  const [expand, setExpand] = useState<number>();\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setNow(dayjs());\r\n    }, 30000);\r\n    return () => clearTimeout(timeout);\r\n  }, [now]);\r\n  return (\r\n    <View style={{ height: 0 }}>\r\n      <View style={{ flexDirection: 'row', overflow: 'hidden' }}>\r\n        {data.map((v, i) => (\r\n          <TimerTag\r\n            key={i}\r\n            data={v}\r\n            buttons={buttons}\r\n            now={now}\r\n            isExpand={i === expand}\r\n            toggleExpand={() => setExpand(expand === i ? undefined : i)}\r\n          />\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport HeaderSelectBar, {\r\n  Paragraph,\r\n  parseHtmlToParagraphs,\r\n} from '../../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../../components/SearchBar';\r\nimport { useNotePage, useSnapshotPages } from '../../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport TimerTagSection from './TimerTagSection';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const paragraphDescription = (\r\n  paragraphs: Paragraph[],\r\n  paragraph: string,\r\n  rootTitle: boolean\r\n) => {\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path;\r\n  return path\r\n    ? paragraphs\r\n        .filter((v) => v.path.startsWith(path))\r\n        .map((v) => (rootTitle || v.path !== path ? v.header : '') + v.description)\r\n        .join('')\r\n    : '';\r\n};\r\n\r\nexport const getSplitTitle = (title: string) => {\r\n  const splitTitle = title.split('/');\r\n  if (splitTitle.length < 2) {\r\n    return [title];\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length - 1).join('/'), splitTitle[splitTitle.length - 1]];\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst addMonth = (dateStr: string): string => {\r\n  const [year, month] = dateStr\r\n    .split('-')\r\n    .filter((v, i) => i < 2)\r\n    .map((v) => parseInt(v, 10));\r\n  if (month === 12) {\r\n    return `${year + 1}-01`;\r\n  }\r\n  return `${year}-${month + 1}`;\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst addDays = (dateStr: string, days: number): string => {\r\n  const date = new Date(dateStr);\r\n  date.setDate(date.getDate() + days);\r\n  return date.toISOString().slice(0, 10);\r\n};\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, paragraph, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullParagraph, toggleFullParagraph] = useState(false);\r\n\r\n  const { data: page, isFetching } = useNotePage(title);\r\n  const { data: archives } = useSnapshotPages();\r\n  const archive = archiveId\r\n    ? archives?.find((v) => v.id === archiveId && v.description !== page?.description)\r\n    : undefined;\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n\r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, paragraph });\r\n  };\r\n\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const idx = paragraphs.findIndex((v) => v.title === paragraph);\r\n  const moveParagraphs = [\r\n    {\r\n      icon: 'arrow-left',\r\n      moveParagraph: paragraphs.findLast(\r\n        (v, i) => i < idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: false,\r\n    },\r\n    {\r\n      icon: 'arrow-right',\r\n      moveParagraph: paragraphs.find(\r\n        (v, i) => i > idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: true,\r\n    },\r\n  ];\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      archive\r\n        ? archive.description\r\n        : (paragraph\r\n            ? fullParagraph\r\n              ? paragraphDescription(paragraphs, paragraph, true)\r\n              : paragraphs.find((v) => v.title === paragraph)?.description\r\n            : page?.description\r\n          )?.trim()\r\n    );\r\n  }, [page, archive, paragraph, fullParagraph]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const splitTitle = getSplitTitle(title);\r\n  const iconColor = theme === 'dark' ? '#E4E4E4' : '#333333';\r\n  const pressableTextColor = theme === 'dark' ? '#FFFFFF88' : '#00000088';\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, { paddingRight: 12, scrollbarGutter: 'stable' }]}\r\n          contentContainerStyle={{ flexGrow: 1 }}\r\n        >\r\n          <View style={[commonStyles.header, { zIndex: 1 }]}>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  (splitTitle.length === 2 ? navigation.push : navigation.navigate)('NotePage', {\r\n                    title: splitTitle[0],\r\n                  })\r\n                }\r\n              >\r\n                <Text\r\n                  style={[\r\n                    commonStyles.title,\r\n                    styles.pageTitle,\r\n                    paragraph || splitTitle.length === 2 ? { color: pressableTextColor } : {},\r\n                  ]}\r\n                  numberOfLines={1}\r\n                >\r\n                  {splitTitle[0]}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              {splitTitle.length === 2 && (\r\n                <>\r\n                  <Text style={[commonStyles.title, styles.pageTitle, { flex: 0 }]}>/</Text>\r\n                  <TouchableOpacity onPress={() => navigation.navigate('NotePage', { title })}>\r\n                    <Text\r\n                      style={[\r\n                        commonStyles.title,\r\n                        styles.pageTitle,\r\n                        paragraph ? { color: pressableTextColor } : {},\r\n                      ]}\r\n                      numberOfLines={1}\r\n                    >\r\n                      {splitTitle[1]}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!paragraph && (\r\n                <Text\r\n                  style={[commonStyles.title, styles.pageTitle, { marginLeft: 5 }]}\r\n                  numberOfLines={1}\r\n                >\r\n                  {titleFormat({ title: '', paragraph })}\r\n                </Text>\r\n              )}\r\n              {archive && (\r\n                <Text style={[commonStyles.text, { marginLeft: 5, fontStyle: 'italic' }]}>\r\n                  {'(' + archive.updated + ')'}\r\n                </Text>\r\n              )}\r\n            </View>\r\n            <View style={styles.actionButtons}>\r\n              <TimerTagSection title={page?.title || ''} paragraphs={paragraphs} />\r\n              {!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Archive', { title })}\r\n                    style={styles.actionButton}\r\n                  >\r\n                    <Icon name=\"history\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullParagraph(!fullParagraph)}\r\n                    style={styles.actionButton}\r\n                  >\r\n                    <Icon\r\n                      name={fullParagraph ? 'compress' : 'expand'}\r\n                      size={16}\r\n                      color={iconColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={styles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n                    <Icon name=\"exchange\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && !paragraph && (\r\n                <>\r\n                  <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n                    <Icon name=\"pencil\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <View\r\n              style={\r\n                !toc && description\r\n                  ? [commonStyles.card, { padding: 0, marginBottom: 0 }]\r\n                  : { flex: 1, position: 'absolute' }\r\n              }\r\n            >\r\n              <EditorViewer\r\n                active\r\n                value={description || ''}\r\n                theme={theme}\r\n                onLink={(url) => onLink(url, navigation)}\r\n                autoResize\r\n              />\r\n            </View>\r\n            {isFetching || description === undefined ? (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n              </View>\r\n            ) : toc ? (\r\n              <HeaderSelectBar\r\n                data={paragraphs}\r\n                path={paragraph || ''}\r\n                root={title}\r\n                onPress={(item) =>\r\n                  navigation.navigate('NotePage', { title, paragraph: item.title })\r\n                }\r\n              />\r\n            ) : page?.description ? (\r\n              !!paragraph && (\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'flex-end',\r\n                  }}\r\n                >\r\n                  {moveParagraphs.map(\r\n                    ({ moveParagraph, icon, reverse }) =>\r\n                      moveParagraph !== undefined && (\r\n                        <TouchableOpacity\r\n                          key={icon}\r\n                          onPress={() =>\r\n                            navigation.navigate(\r\n                              'NotePage',\r\n                              moveParagraph.level === 0\r\n                                ? { title }\r\n                                : { title, paragraph: moveParagraph.title }\r\n                            )\r\n                          }\r\n                          style={[\r\n                            { flexDirection: reverse ? 'row-reverse' : 'row', paddingVertical: 16 },\r\n                          ]}\r\n                        >\r\n                          <Icon\r\n                            name={icon}\r\n                            size={16}\r\n                            color={iconColor}\r\n                            style={{ alignSelf: 'center' }}\r\n                          />\r\n                          <Text\r\n                            style={[\r\n                              commonStyles.text,\r\n                              { fontWeight: 'bold', marginHorizontal: 16 },\r\n                            ]}\r\n                          >\r\n                            {moveParagraph.level === 0 ? title : moveParagraph.title}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )\r\n                  )}\r\n                </View>\r\n              )\r\n            ) : (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <Text style={commonStyles.text}>\r\n                  아직 내용이 없는 문서입니다. '편집' 버튼을 눌러 내용을 추가해보세요.\r\n                </Text>\r\n                <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                  <Text style={commonStyles.buttonText}>편집하기</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { toRaw } from '@blacktokki/editor';\r\nimport { useMemo } from 'react';\r\n\r\nimport { parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { getNoteLinks } from '../components/SearchBar';\r\nimport { cleanAndMergeTDs } from '../components/TimerTag';\r\nimport { getSplitTitle, paragraphDescription } from '../screens/main/notepage/NotePageScreen';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nconst getReadabilityLevel = (() => {\r\n  function getKoreanRatio(text: string): number {\r\n    return (text.match(/[가-힣]/g) || []).length / text.length;\r\n  }\r\n\r\n  function countSyllables(word: string): number {\r\n    word = word.toLowerCase();\r\n    if (word.length <= 3) return 1;\r\n    const vowels = /[aeiouy]+/g;\r\n    const trailingE = /e\\b/;\r\n    const matches = word.match(vowels) || [];\r\n    let syllables = matches.length;\r\n    if (trailingE.test(word) && syllables > 1) syllables--;\r\n    return Math.max(syllables, 1);\r\n  }\r\n\r\n  function calculateFleschKincaid(text: string): number {\r\n    const sentenceCount = (text.match(/[.!?]+/g) || []).length || 1;\r\n    const wordList = text.trim().split(/\\s+/);\r\n    const wordCount = wordList.length;\r\n    const syllableCount = wordList.reduce((sum, word) => sum + countSyllables(word), 0);\r\n    return 0.39 * (wordCount / sentenceCount) + 11.8 * (syllableCount / wordCount) - 15.59;\r\n  }\r\n\r\n  function classifyFleschKincaid(score: number): number {\r\n    if (score < 3.0) return 1;\r\n    if (score < 6.0) return 2;\r\n    if (score < 9.0) return 3;\r\n    if (score < 12.0) return 4;\r\n    return 5;\r\n  }\r\n\r\n  function classifyKoreanReadability(text: string): number {\r\n    const sentences = text.split(/[.?!\\r\\n]/).filter((s) => s.trim().length > 0);\r\n    const words = text.trim().split(/\\s+/);\r\n    const wordCount = words.length;\r\n    const sentenceCount = sentences.length || 1;\r\n    const avgWordsPerSentence = wordCount / sentenceCount;\r\n\r\n    if (avgWordsPerSentence <= 7) return 1; // 매우 쉬움\r\n    if (avgWordsPerSentence <= 10) return 2;\r\n    if (avgWordsPerSentence <= 13) return 3;\r\n    if (avgWordsPerSentence <= 16) return 4;\r\n    return 5; // 매우 어려움\r\n  }\r\n\r\n  function _getReadabilityLevel(text: string) {\r\n    const koRatio = getKoreanRatio(text);\r\n    const enGrade = calculateFleschKincaid(text);\r\n    const enLevel = classifyFleschKincaid(enGrade);\r\n    const koLevel = classifyKoreanReadability(text);\r\n    return { koRatio, enLevel, koLevel, level: koLevel * koRatio + enLevel * (1 - koRatio) };\r\n  }\r\n  return _getReadabilityLevel;\r\n})();\r\n\r\nfunction findLists(html: string): { type: 'ul' | 'ol'; items: string[] }[] {\r\n  const results: { type: 'ul' | 'ol'; items: string[] }[] = [];\r\n\r\n  const listRegex = /<(ul|ol)[^>]*?>([\\s\\S]*?)<\\/\\1>/gi;\r\n  const liRegex = /<li[^>]*>([\\s\\S]*?)<\\/li>/gi;\r\n\r\n  let listMatch;\r\n  while ((listMatch = listRegex.exec(html)) !== null) {\r\n    const [, type, innerHTML] = listMatch;\r\n    const items: string[] = [];\r\n\r\n    let liMatch;\r\n    while ((liMatch = liRegex.exec(innerHTML)) !== null) {\r\n      const itemContent = liMatch[1].trim();\r\n      items.push(itemContent);\r\n    }\r\n\r\n    results.push({ type: type as 'ul' | 'ol', items });\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport default () => {\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const data = useMemo(() => {\r\n    const records: Record<\r\n      string,\r\n      {\r\n        subtitles: string[];\r\n        paragraphs: Record<string, string[]>;\r\n      }\r\n    > = {};\r\n    const push = (title: string, paragraph: string | undefined, subtitle: string) => {\r\n      if (records[title] === undefined) {\r\n        records[title] = { subtitles: [], paragraphs: {} };\r\n      }\r\n      const record = records[title];\r\n      if (paragraph !== undefined) {\r\n        if (record.paragraphs[paragraph] === undefined) {\r\n          record.paragraphs[paragraph] = [];\r\n        }\r\n        record.paragraphs[paragraph].push(subtitle);\r\n      } else {\r\n        record.subtitles.push(subtitle);\r\n      }\r\n    };\r\n\r\n    pages.forEach((page) => {\r\n      //unknown note\r\n      getNoteLinks([page]).forEach((link) => {\r\n        const linkPage = pages.find((v) => v.title === link.title);\r\n        if (linkPage?.description) {\r\n          if (\r\n            link.paragraph === undefined ||\r\n            parseHtmlToParagraphs(linkPage.description).find((v2) => v2.title === link.paragraph)\r\n          ) {\r\n            return;\r\n          }\r\n        }\r\n        push(\r\n          link.title,\r\n          link.paragraph,\r\n          (link.paragraph === undefined ? 'Unknown note link' : 'Unknown paragraph link') +\r\n            `(${link.origin})`\r\n        );\r\n      });\r\n\r\n      //empty parent note\r\n      const splitTitle = getSplitTitle(page.title);\r\n      if (\r\n        page.description &&\r\n        splitTitle.length === 2 &&\r\n        pages.find((v) => v.title === splitTitle[0]) === undefined\r\n      ) {\r\n        push(splitTitle[0], undefined, `Empty parent note(${page.title})`);\r\n      }\r\n\r\n      // empty contents\r\n      const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n      const lists = paragraphs\r\n        .map((v) => ({ ...v, lists: findLists(v.description) }))\r\n        .filter((v) => v.lists.length > 0);\r\n\r\n      paragraphs\r\n        .filter(\r\n          (v) => v.level !== 0 && paragraphDescription(paragraphs, v.title, false).trim() === ''\r\n        )\r\n        .forEach((v) => push(page.title, v.level === 0 ? undefined : v.title, 'Empty paragraph'));\r\n      lists\r\n        .filter(\r\n          (v) =>\r\n            v.lists.filter(\r\n              (v2) =>\r\n                v2.items.filter((v2) => v2.replaceAll('&nbsp;', '').trim().length === 0).length > 0\r\n            ).length > 0\r\n        )\r\n        .forEach((v2) => push(page.title, v2.level === 0 ? undefined : v2.title, 'Empty list'));\r\n\r\n      // duplicate contents\r\n      paragraphs\r\n        .filter((v) => v !== paragraphs.findLast((v2) => v2.path === v.path))\r\n        .forEach((v) => push(page.title, undefined, `Duplicate paragraphs(${v})`));\r\n      paragraphs\r\n        .map((v) => {\r\n          const sentences = cleanAndMergeTDs(v.description)\r\n            .split('\\n')\r\n            .map((v2) => toRaw(v2).trim())\r\n            .filter((v) => v.includes(' ') && v.length > 4);\r\n          return {\r\n            ...v,\r\n            duplicates: sentences.filter((v2, i) => i !== sentences.lastIndexOf(v2)),\r\n          };\r\n        })\r\n        .forEach((v) =>\r\n          v.duplicates.forEach((v2) =>\r\n            push(page.title, v.level === 0 ? undefined : v.title, `Duplicate contents(${v2})`)\r\n          )\r\n        );\r\n      const readability = page.description\r\n        ? getReadabilityLevel(\r\n            toRaw(\r\n              page.description\r\n                .replaceAll(/<code\\b[^>]*>[\\s\\S]*?<\\/code>/gi, '<code></code>')\r\n                .replaceAll(/<br\\s*[/]?>/gi, '\\r\\n')\r\n            )\r\n          )\r\n        : { level: 0 };\r\n      if (readability.level > 3.5) {\r\n        push(\r\n          page.title,\r\n          undefined,\r\n          `Too high readability score: ${readability.level.toFixed(4)} > 3.5`\r\n        );\r\n      }\r\n    });\r\n\r\n    return Object.entries(records).flatMap(([title, record]) => {\r\n      return [\r\n        ...(record.subtitles.length > 0 ? [{ title, subtitles: record.subtitles }] : []),\r\n        ...Object.entries(record.paragraphs).map(([paragraph, subtitles]) => ({\r\n          title,\r\n          paragraph,\r\n          subtitles,\r\n        })),\r\n      ];\r\n    });\r\n  }, [pages]);\r\n  return { data, isLoading };\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nimport { parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { matchDateRange, paragraphsToDatePatterns, today } from '../components/TimerTag';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nexport default (date?: string) => {\r\n  const dateNum = new Date(date || today()).getTime();\r\n\r\n  const { data: notes = [], isLoading } = useNotePages();\r\n  const preData = useMemo(\r\n    () =>\r\n      notes.flatMap((v) =>\r\n        paragraphsToDatePatterns(v.title, parseHtmlToParagraphs(v?.description || ''))\r\n      ),\r\n    [notes]\r\n  );\r\n  const data = preData\r\n    .map((v) => {\r\n      return {\r\n        ...v,\r\n        subtitles: matchDateRange(v.dateMatches, dateNum).map((dateMatch) => dateMatch.original),\r\n      };\r\n    })\r\n    .filter((v2) => v2.subtitles.length > 0);\r\n  return { data, isLoading, preData };\r\n};\r\n","import { useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport { navigate, push } from '@blacktokki/navigation';\r\nimport React, { useRef } from 'react';\r\nimport { List, TouchableRipple, Badge } from 'react-native-paper';\r\n\r\nimport {\r\n  useRecentPages,\r\n  useNotePages,\r\n  useDeleteRecentPage,\r\n  useLastPage,\r\n  useAddRecentPage,\r\n} from '../../../hooks/useNoteStorage';\r\nimport useProblem from '../../../hooks/useProblem';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape: boolean) => {\r\n  return isLandscape ? 5 : 8;\r\n};\r\n\r\nexport const TimeLineButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useTimeLine();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'calendar'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('TimeLine')}\r\n      onPress={() => navigate('TimeLine')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ProblemButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useProblem();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'note-alert'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('Problems')}\r\n      onPress={() => push('Problem')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const toRecentContents = (data: Content[]) =>\r\n  data\r\n    .filter((v) => v.description)\r\n    .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime());\r\n\r\nconst ContentGroupSection = (\r\n  props: { type: 'PAGE' | 'LAST' } | { type: 'NOTE'; noteCount: number }\r\n) => {\r\n  const { lang } = useLangContext();\r\n  const notes = useNotePages();\r\n  const pages = useRecentPages();\r\n  const { data: lastPage } = useLastPage();\r\n  const tabRef = useRef<NodeJS.Timeout>(undefined);\r\n  const addRecentPage = useAddRecentPage();\r\n  const deleteRecentPage = useDeleteRecentPage();\r\n  const data =\r\n    props.type === 'NOTE' ? (notes.data ? toRecentContents(notes.data) : []) : pages.data;\r\n  const lastPageExists = lastPage && data?.find((v) => v.id === lastPage.id) === undefined;\r\n  const window = useResizeContext();\r\n  const itemPadding = getItemPadding(window === 'landscape');\r\n  const noteOnPress = (title: string) => {\r\n    if (title === lastPage?.title) {\r\n      if (tabRef.current) {\r\n        clearTimeout(tabRef.current);\r\n        tabRef.current = undefined;\r\n        addRecentPage.mutate({ title });\r\n      } else {\r\n        tabRef.current = setTimeout(() => {\r\n          tabRef.current = undefined;\r\n        }, 500);\r\n      }\r\n    }\r\n    navigate('NotePage', { title });\r\n  };\r\n  const noteOnLongPress = (title: string) => {\r\n    if (tabRef.current) {\r\n      clearTimeout(tabRef.current);\r\n      tabRef.current = undefined;\r\n    }\r\n    if (pages.data?.find((v) => v.title === title) === undefined) {\r\n      addRecentPage.mutate({ title, direct: true });\r\n    } else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  };\r\n  return (\r\n    (props.type !== 'LAST' || lastPageExists) && (\r\n      <List.Section>\r\n        {data &&\r\n          (props.type === 'LAST' ? (\r\n            lastPageExists && (\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document'} />}\r\n                title={lastPage.title}\r\n                onPress={() => noteOnPress(lastPage.title)}\r\n                onLongPress={() => noteOnLongPress(lastPage.title)}\r\n                style={{ padding: itemPadding }}\r\n                titleStyle={{ fontStyle: 'italic' }}\r\n              />\r\n            )\r\n          ) : props.type === 'NOTE' ? (\r\n            <>\r\n              {data.slice(0, props.noteCount).map((v) => (\r\n                <List.Item\r\n                  key={v.title}\r\n                  left={(_props) => (\r\n                    <List.Icon\r\n                      {..._props}\r\n                      icon={\r\n                        pages.data?.find((v2) => v2.title === v.title) === undefined\r\n                          ? 'notebook'\r\n                          : 'notebook-edit'\r\n                      }\r\n                    />\r\n                  )}\r\n                  title={v.title}\r\n                  onPress={() => noteOnPress(v.title)}\r\n                  onLongPress={() => noteOnLongPress(v.title)}\r\n                  style={{ padding: itemPadding }}\r\n                />\r\n              ))}\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'notebook-multiple'} />}\r\n                title={lang('more...')}\r\n                onPress={() => push('RecentPages')}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            </>\r\n          ) : (\r\n            data.map((v) => (\r\n              <List.Item\r\n                key={v.title}\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document-edit'} />}\r\n                right={(_props) => (\r\n                  <TouchableRipple\r\n                    style={{\r\n                      justifyContent: 'center',\r\n                      borderRadius: itemPadding,\r\n                      width: 40 + itemPadding * 2,\r\n                      height: 40 + itemPadding * 2,\r\n                      margin: -itemPadding,\r\n                    }}\r\n                    onPress={() => deleteRecentPage.mutate(v.title)}\r\n                  >\r\n                    <List.Icon style={{ left: itemPadding - 7 }} icon={'close'} />\r\n                  </TouchableRipple>\r\n                )}\r\n                title={v.title}\r\n                onPress={() => navigate('NotePage', { title: v.title })}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            ))\r\n          ))}\r\n      </List.Section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;\r\n","import { useColorScheme, useResizeContext, View, Text } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\n\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset();\r\n\r\nexport const updatedFormat = (_updated: string) => {\r\n  const _date = new Date(_updated);\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset);\r\n  const updated = _date.toISOString().slice(0, 16);\r\n  const date = updated.slice(0, 10);\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  return date === today ? updated.slice(11) : date;\r\n};\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape: boolean) => (isLandscape ? 20 : 4);\r\nconst _cardMaxWidth = (isLandscape: boolean) => (isLandscape ? 250 : 190);\r\n\r\ntype Item = (Content & { descriptionComponent: JSX.Element }) | null;\r\n\r\nconst CardPage = React.memo(({ item, index }: { item: Item; index: number }) => {\r\n  const window = useResizeContext();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window === 'landscape' ? 2 : 0;\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null) {\r\n    return (\r\n      <View style={{ flexBasis: window === 'landscape' ? '33%' : '50%', maxWidth: cardMaxWidth }} />\r\n    );\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = () => navigation.push('NotePage', { title: item.title });\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexBasis: window === 'landscape' ? '33%' : '50%',\r\n        padding: _cardPadding(window === 'landscape'),\r\n        paddingRight: 0,\r\n        minWidth: cardMaxWidth,\r\n        maxWidth: cardMaxWidth,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Card\r\n        onPress={onPress}\r\n        style={[\r\n          commonStyles.card,\r\n          {\r\n            paddingTop: 8,\r\n            aspectRatio: 1 / Math.sqrt(2),\r\n            borderRadius: 6,\r\n            marginVertical: 10,\r\n            marginHorizontal: 8,\r\n            overflow: 'hidden',\r\n          },\r\n        ]}\r\n      >\r\n        <Card.Content style={{ padding: 0 }}>{mounted && item.descriptionComponent}</Card.Content>\r\n      </Card>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          marginTop: 10,\r\n          padding: 0,\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 14 + fSize, overflow: 'hidden' }}>{item.title}</Text>\r\n        <Text style={{ fontSize: 12 + fSize, opacity: 0.4, textAlign: 'right' }}>\r\n          {updatedFormat(item.updated)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n});\r\n\r\nconst renderItem = ({ item, index }: { item: Item; index: number }) => (\r\n  <CardPage key={index} index={index} item={item} />\r\n);\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const RenderHtml = useMemo(() => React.lazy(() => import('react-native-render-html')), []);\r\n  const contents = useMemo(\r\n    () => [\r\n      ...toRecentContents(recentPages).map((v) => ({\r\n        ...v,\r\n        descriptionComponent: (\r\n          <RenderHtml\r\n            source={{ html: removeAllAttributesFromHTML(v.description || '').slice(0, 300) || '' }}\r\n            renderersProps={{\r\n              a: { onPress: () => navigation.push('NotePage', { title: v.title }) },\r\n            }}\r\n            tagsStyles={{ body: { color: commonStyles.text.color } }}\r\n            contentWidth={cardMaxWidth}\r\n          />\r\n        ),\r\n      })),\r\n      null,\r\n      null,\r\n    ],\r\n    [recentPages]\r\n  );\r\n  const maxWidth = (cardMaxWidth + 5) * (window === 'landscape' ? 5 : 3);\r\n  return isLoading ? (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>로딩 중...</Text>\r\n    </View>\r\n  ) : contents.length > 2 ? (\r\n    <ScrollView\r\n      key={window}\r\n      contentContainerStyle={{\r\n        alignSelf: 'center',\r\n        backgroundColor: 'transparent',\r\n        flexBasis: '100%',\r\n        maxWidth,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        paddingRight: _cardPadding(window === 'landscape'),\r\n        justifyContent: window === 'landscape' ? undefined : 'center',\r\n      }}\r\n    >\r\n      <Suspense>{contents.map((item, index) => renderItem({ item, index }))}</Suspense>\r\n    </ScrollView>\r\n  ) : (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>최근 수정한 노트가 없습니다.</Text>\r\n    </View>\r\n  );\r\n});\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>();\r\n  const _window = useResizeContext();\r\n  const title = route.params?.title;\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={recentPages\r\n          .filter((v) => title === undefined || title === v.title)\r\n          .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n          .map((v, i) => ({\r\n            ...v,\r\n            subtitles: [`최근 수정: ${updatedFormat(v.updated as string)}`],\r\n            id: v.id || i,\r\n          }))}\r\n        isLoading={isLoading}\r\n        onPress={(title, _, id) =>\r\n          (title === undefined ? navigation.push : navigation.navigate)('NotePage', {\r\n            title,\r\n            archiveId: id,\r\n          })\r\n        }\r\n        emptyMessage=\"최근 수정한 노트가 없습니다.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport {\r\n  RouteProp,\r\n  useFocusEffect,\r\n  useIsFocused,\r\n  useNavigation,\r\n  useRoute,\r\n} from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet } from 'react-native';\r\n\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport { previewUrl } from '../../services/notebook';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const isFocused = useIsFocused();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword: string) =>\r\n    pages\r\n      .filter((v) => v.title.startsWith(title + '/'))\r\n      .map((v) => ({\r\n        type: '_CHILDNOTE' as '_CHILDNOTE',\r\n        name: v.title.split(title + '/')[1],\r\n        title: v.title,\r\n      }))\r\n      .filter((v) => v.name.toLowerCase().startsWith(keyword.toLowerCase()));\r\n  const [content, setContent] = useState('');\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error: any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && page?.description) {\r\n      setContent(page?.description);\r\n    }\r\n  }, [isLoading, page]);\r\n\r\n  useFocusEffect(() => {\r\n    const callback = (event: any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  });\r\n  return (\r\n    isFocused && (\r\n      <View style={commonStyles.container}>\r\n        <View style={commonStyles.header}>\r\n          <Text style={[commonStyles.title, { flex: 1 }]}>{title} - 편집</Text>\r\n        </View>\r\n        <Editor\r\n          active\r\n          value={content}\r\n          setValue={setContent}\r\n          theme={theme}\r\n          autoComplete={[\r\n            {\r\n              trigger: '[',\r\n              getMatchedChars: async (pattern) => {\r\n                const childrenPages = getChildrenPages(pattern);\r\n                return [\r\n                  { type: '_NOTELINK', name: pattern, title, paragraph: pattern },\r\n                  ...(childrenPages.length\r\n                    ? childrenPages\r\n                    : [{ type: '_CHILDNOTE', name: pattern, title: title + '/' + pattern }]),\r\n                  ...getFilteredPages(pages, pattern),\r\n                ].map((v) => {\r\n                  const text =\r\n                    v.type === '_NOTELINK'\r\n                      ? v.name + `(${titleFormat(v)})`\r\n                      : v.type === '_CHILDNOTE'\r\n                      ? v.name\r\n                      : v.title;\r\n                  const url = encodeURI(\r\n                    v.type === '_NOTELINK' && v.paragraph\r\n                      ? `?title=${v.title}&paragraph=${v.paragraph}`\r\n                      : `?title=${v.title}`\r\n                  );\r\n                  return {\r\n                    text,\r\n                    value: `<a href=${url}>${text}</a>`,\r\n                  };\r\n                });\r\n              },\r\n            },\r\n            {\r\n              trigger: 'http',\r\n              getMatchedChars: async (pattern) => {\r\n                const query = 'http' + pattern;\r\n                const url = new URL(query);\r\n                if (url.protocol !== 'http:' && url.protocol !== 'https:') {\r\n                  return [];\r\n                }\r\n                const preview = await previewUrl({ query });\r\n                if (!preview.title) {\r\n                  return [];\r\n                }\r\n                return [\r\n                  {\r\n                    text: preview.title,\r\n                    value: `<a href=${preview.url}>${preview.title}</a>`,\r\n                  },\r\n                  // {\r\n                  //   text:preview.title + '...',\r\n                  //   value:`<a href=${preview.url}>${preview.title}</a><p>${preview.description}...</p>`,\r\n                  // }\r\n                ];\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[commonStyles.button, styles.saveButton]} onPress={handleSave}>\r\n            <Text style={commonStyles.buttonText}>저장</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\n\r\nimport HeaderSelectBar, { parseHtmlToParagraphs } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, paragraph } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path || '';\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToParagraphs(newPage?.description || '').filter(\r\n    (v) => title !== newTitle || path === v.path || !v.path.startsWith(path)\r\n  );\r\n  const [newPath, setNewPath] = useState('');\r\n  const [preview, setPreview] = useState<boolean>();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const moveMutation = useMovePage();\r\n  const { sourceDescription, targetDescription } = useMemo(() => {\r\n    const moveParagraph = paragraphs.filter((v) => v.path.startsWith(path));\r\n    const isSplit = newPage?.title === page?.title + '/' + moveParagraph[0]?.title;\r\n    const moveDescription = moveParagraph\r\n      .map((v, i) => (isSplit && i === 0 ? '' : v.header) + v.description)\r\n      .join('');\r\n    const sourceParagraph = paragraphs.filter((v) => !v.path.startsWith(path));\r\n    const sourceDescription = sourceParagraph.map((v) => v.header + v.description).join('');\r\n    const targetParagraph = page?.title === newPage?.title ? sourceParagraph : newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex((v) => v.path.startsWith(newPath));\r\n    const targetDescription =\r\n      newPage?.id === undefined\r\n        ? moveDescription\r\n        : [\r\n            ...targetParagraph.slice(0, targetIndex + 1).map((v) => v.header + v.description),\r\n            ...moveParagraph.map(\r\n              (v, i) =>\r\n                ((v.path === path && v.description === '') || (isSplit && i === 0)\r\n                  ? ''\r\n                  : v.header) + v.description\r\n            ),\r\n            ...targetParagraph.slice(targetIndex + 1).map((v) => v.header + v.description),\r\n          ].join('');\r\n    return { sourceDescription, targetDescription };\r\n  }, [paragraphs, newParagraph, path, newPath]);\r\n\r\n  const handleMove = () => {\r\n    if (newPage?.id === undefined) {\r\n      moveMutation.mutate(\r\n        {\r\n          oldTitle: title,\r\n          newTitle: newTitle.trim(),\r\n          description: path === '' ? undefined : targetDescription,\r\n        },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      if (page?.title === newPage.title && path === newPath) {\r\n        handleCancel();\r\n      }\r\n      mutation.mutate(\r\n        { title: newPage.title, description: targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title) {\r\n              mutation.mutate({ title, description: sourceDescription });\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !page) {\r\n      handleCancel();\r\n    }\r\n    page && setNewTitle(page.title + (paragraph ? `/${paragraph}` : ''));\r\n  }, [page, isLoading]);\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setNewPath(paragraph ? '' : path);\r\n    }\r\n  }, [paragraph, isLoading]);\r\n  const paragraphItem = paragraphs.find((v) => v.path === path);\r\n  const newParagraphItem = newParagraph.find((v) => v.path === newPath);\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined;\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: _window === 'landscape' ? 'row' : 'column', zIndex: 1 }}>\r\n          <View style={{ zIndex: 1 }}>\r\n            <Text style={commonStyles.text}>\r\n              {paragraph ? '현재 노트 제목 및 문단:' : '현재 노트 제목:'}\r\n            </Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>\r\n              {titleFormat({ title, paragraph })}\r\n            </Text>\r\n            <Text style={commonStyles.text}>새 노트 제목 및 문단:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false} />\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar\r\n                path={newPath}\r\n                onPress={(item) => setNewPath(item.path)}\r\n                root={newPage?.title || ''}\r\n                data={newParagraph}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                commonStyles.button,\r\n                styles.moveButton,\r\n                {\r\n                  flex: 0,\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  paddingTop: 24,\r\n                  paddingBottom: 16,\r\n                },\r\n              ]}\r\n              onPress={() => setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title, paragraph: paragraphItem?.title })}\r\n              </Text>\r\n              <Text style={[commonStyles.text, { marginBottom: 8, fontSize: 14 }]}> ➜ </Text>\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title: newTitle, paragraph: newParagraphItem?.title })}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {preview !== undefined && (\r\n              <View style={{ display: preview ? 'flex' : 'none' }}>\r\n                <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  onLink={(url) => onLink(url, navigation)}\r\n                  autoResize\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, moveDisabled ? styles.cancelButton : styles.moveButton]}\r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: {\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, TextButton, useColorScheme, useLangContext, Text } from '@blacktokki/core';\r\nimport { ConfigSections } from '@blacktokki/navigation';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { TouchableOpacity, View } from 'react-native';\r\n\r\nimport { SearchList } from '../../../components/SearchBar';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { useCreateOrUpdatePage, useNotePages } from '../../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { Content, NavigationParamList } from '../../../types';\r\n\r\nconst exportMarkdowns = async (contents: Content[]) => {\r\n  const JSZip = (await import('jszip')).default;\r\n  const zip = new JSZip();\r\n  for (const content of contents.filter((v) => (v.description?.length || 0) > 0)) {\r\n    zip.file(content.title + '.md', content.description as string);\r\n  }\r\n  const blob = await zip.generateAsync({ type: 'blob' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = 'notebook.zip';\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  setTimeout(() => {\r\n    window.URL.revokeObjectURL(url);\r\n  }, 500);\r\n  a.remove();\r\n};\r\n\r\nconst importMarkdowns = async () => {\r\n  const files = await new Promise<File[]>((resolve, reject) => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = 'application/zip,.md,.markdown'; // 특정 타입만 허용하고 싶으면 'text/plain', 'image/*' 등으로 설정\r\n    input.style.display = 'none';\r\n    input.multiple = true;\r\n\r\n    input.onchange = () => {\r\n      if (input.files && input.files.length > 0) {\r\n        resolve(Array.from(input.files)); // File은 Blob의 하위 클래스\r\n      } else {\r\n        reject(new Error('파일이 선택되지 않았습니다.'));\r\n      }\r\n    };\r\n\r\n    input.click(); // 파일 선택창 열기\r\n  });\r\n  const contents: { title: string; description: string }[] = [];\r\n  const JSZip = (await import('jszip')).default;\r\n  for (const file of files) {\r\n    if (file.type === 'application/zip' || file.name.endsWith('.zip')) {\r\n      const zip = new JSZip();\r\n      const files = (await zip.loadAsync(file)).files;\r\n      for (const relativePath in files) {\r\n        const file = zip.files[relativePath];\r\n        if (!file.dir) {\r\n          contents.push({\r\n            title: relativePath.replace(/\\.[^/.]+$/, ''),\r\n            description: (await file.async('text')).toString(),\r\n          });\r\n        }\r\n      }\r\n    } else if (file.name.endsWith('.md') || file.name.endsWith('.markdown')) {\r\n      contents.push({ title: file.name.replace(/\\.[^/.]+$/, ''), description: await file.text() });\r\n    }\r\n  }\r\n  return contents;\r\n};\r\n\r\nconst ConfigButton = (props: { title: string; onPress?: () => void }) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TouchableOpacity\r\n      style={[commonStyles.header, { marginBottom: 0 }]}\r\n      onPress={props.onPress}\r\n      disabled={!props.onPress}\r\n    >\r\n      <Text style={{ fontSize: 20, color, fontWeight: '600' }}>{props.title}</Text>\r\n      {props.onPress && <Text>{'>'}</Text>}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst OptionButton = (props: { title: string; onPress: () => void; active: boolean }) => {\r\n  const theme = useColorScheme();\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TextButton\r\n      title={props.title}\r\n      textStyle={{\r\n        fontSize: 16,\r\n        color,\r\n        textDecorationLine: props.active ? 'underline' : 'none',\r\n      }}\r\n      style={{ borderRadius: 20 }}\r\n      onPress={props.onPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  const { auth, dispatch } = useAuthContext();\r\n  const theme = useColorScheme();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { data: contents } = useNotePages();\r\n  const mutation = useCreateOrUpdatePage();\r\n  const [search, setSearch] = useState(false);\r\n  const { data: keywords = [] } = useKeywords();\r\n  const resetKeyword = useResetKeyowrd();\r\n  return (\r\n    <View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigButton title={lang('* Search Settings')} />\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <OptionButton\r\n            title={'Search History'}\r\n            onPress={() => setSearch(!search)}\r\n            active={search}\r\n          />\r\n          {search && !!keywords.length && (\r\n            <OptionButton title={'Clear'} onPress={() => resetKeyword.mutate()} active={false} />\r\n          )}\r\n        </View>\r\n        {search && (\r\n          <View style={[commonStyles.card, { padding: 0 }]}>\r\n            <SearchList\r\n              filteredPages={keywords}\r\n              handlePagePress={(title, paragraph) =>\r\n                navigation.push('NotePage', { title, paragraph })\r\n              }\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigButton title={lang('* Archive')} />\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <OptionButton\r\n            title={'Export'}\r\n            onPress={() => contents && exportMarkdowns(contents)}\r\n            active={false}\r\n          />\r\n          <OptionButton\r\n            title={'Import'}\r\n            onPress={() => importMarkdowns().then((v) => v.forEach((v2) => mutation.mutate(v2)))}\r\n            active={false}\r\n          />\r\n          {!auth.isLocal && (\r\n            <OptionButton\r\n              title={'Changelog'}\r\n              onPress={() => navigation.push('Archive', {})}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <ConfigButton title={lang('* Account Settings')} />\r\n          {!auth.isLocal && (\r\n            <Text numberOfLines={1} ellipsizeMode=\"tail\" style={{ marginLeft: 4 }}>\r\n              - {auth.user?.username}\r\n            </Text>\r\n          )}\r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {!!auth.user && (\r\n            <OptionButton\r\n              title={'My Account'}\r\n              onPress={() => auth.isLocal && dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={!auth.isLocal}\r\n            />\r\n          )}\r\n          <OptionButton\r\n            title={'Local Account'}\r\n            onPress={() => !auth.isLocal && dispatch({ type: 'LOGIN_LOCAL' })}\r\n            active={!!auth.isLocal}\r\n          />\r\n          {auth.user ? (\r\n            <OptionButton\r\n              title={'Logout'}\r\n              onPress={() => dispatch({ type: 'LOGOUT_REQUEST' })}\r\n              active={false}\r\n            />\r\n          ) : (\r\n            <OptionButton\r\n              title={'Login'}\r\n              onPress={() => dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, ContractFooter, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, TabViewOption } from '@blacktokki/navigation';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport ContentGroupSection, { ProblemButton, TimeLineButton } from './ContentGroupSection';\r\nimport ExtraConfigSections from './ExtraConfigSections';\r\n\r\nconst NotesTabView = () => {\r\n  const theme = useColorScheme();\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <ScrollView style={{ flex: 1, backgroundColor: Colors[theme].background }}>\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Open Pages')}\r\n      </List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Event Pages')}\r\n      </List.Subheader>\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst RecentChangesTabView = () => {\r\n  return <RecentPagesSection />;\r\n};\r\n\r\nconst ConfigTabView = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <ScrollView\r\n      style={{ flex: 1 }}\r\n      contentContainerStyle={[\r\n        commonStyles.container,\r\n        { backgroundColor: Colors[theme].background },\r\n      ]}\r\n    >\r\n      <ExtraConfigSections />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default function HomeScreen({ navigation, route }: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { auth } = useAuthContext();\r\n  const title = auth.isLocal ? 'Blacktokki Notebook - Local' : 'Blacktokki Notebook';\r\n  const tabViews: TabViewOption[] = [\r\n    {\r\n      title: lang('Discovery'),\r\n      component: NotesTabView,\r\n      icon: <List.Icon icon={'compass'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n    {\r\n      title: lang('All Notes'),\r\n      component: RecentChangesTabView,\r\n      icon: <List.Icon icon={'notebook'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n    {\r\n      title: lang('Config'),\r\n      component: ConfigTabView,\r\n      icon: <List.Icon icon={'dots-horizontal'} />,\r\n      headerRight: () => <></>,\r\n    },\r\n  ];\r\n  return (\r\n    <HomeSection\r\n      tabViews={tabViews}\r\n      homeView={{ title, headerRight: () => <SearchBar /> }}\r\n      headerTitle={title}\r\n    >\r\n      <View style={[commonStyles.container, { width: '100%', justifyContent: 'space-between' }]}>\r\n        <ExtraConfigSections />\r\n        <ContractFooter\r\n          buttons={[\r\n            {\r\n              icon: <AntDesign name=\"github\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'https://github.com/blacktokki/blacktokki-notebook',\r\n              isWeb: true,\r\n            },\r\n            {\r\n              icon: <AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'mailto:ydh051541@naver.com',\r\n              isWeb: false,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n    </HomeSection>\r\n  );\r\n}\r\n","import { useColorScheme, useModalsContext, Text } from '@blacktokki/core';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nimport { today } from '../../../components/TimerTag';\r\nimport DatePickerModal, { MarkedDateRange } from '../../../modals/DatePikcerModal';\r\nimport { createCommonStyles } from '../../../styles';\r\n\r\ntype DateHeaderSectionProps = {\r\n  date: string;\r\n  setDate: (date: string) => void;\r\n  markedDateRange: MarkedDateRange[];\r\n  monthly?: boolean;\r\n};\r\n\r\nexport default function DateHeaderSection({\r\n  date,\r\n  setDate,\r\n  monthly,\r\n  markedDateRange,\r\n}: DateHeaderSectionProps) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { setModal } = useModalsContext();\r\n  const moveDate = (value: number) =>\r\n    setDate(\r\n      dayjs(date)\r\n        .add(value, monthly ? 'month' : 'day')\r\n        .format('YYYY-MM-DD')\r\n    );\r\n\r\n  const themedStyles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: commonStyles.container.backgroundColor,\r\n      shadowColor: commonStyles.text.color,\r\n      borderColor: commonStyles.card.borderColor,\r\n    },\r\n    dateDisplay: {\r\n      color: commonStyles.text.color,\r\n    },\r\n    todayButton: {\r\n      backgroundColor: commonStyles.searchButton.backgroundColor,\r\n    },\r\n    navButton: {\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#efefef',\r\n    },\r\n  });\r\n  return (\r\n    <View style={[headerStyles.container, themedStyles.container]}>\r\n      <View style={commonStyles.flex} />\r\n      {/* Date Display */}\r\n      <View style={headerStyles.dateContainer}>\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            setModal(DatePickerModal, {\r\n              datetime: date,\r\n              markedDateStrings: markedDateRange,\r\n              callback: (datetime?: string) => setDate(datetime || date),\r\n            })\r\n          }\r\n        >\r\n          <Text style={[headerStyles.dateDisplay, themedStyles.dateDisplay]}>{date}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/* Navigation Bar */}\r\n      <View style={headerStyles.navContainer}>\r\n        {/* Previous Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(-1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-left\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n\r\n        {/* Today Button */}\r\n        <TouchableOpacity\r\n          onPress={() => setDate(today())}\r\n          style={[headerStyles.todayButton, themedStyles.todayButton]}\r\n          accessibilityLabel=\"Go to today\"\r\n        >\r\n          <Text style={headerStyles.todayButtonText}>Today</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Next Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-right\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst BUTTON_SIZE = 30;\r\n\r\n// Base styles that don't change based on theme\r\nconst headerStyles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n    borderWidth: 1,\r\n  },\r\n  dateContainer: {\r\n    flex: 1,\r\n    minWidth: 130,\r\n    height: BUTTON_SIZE,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  dateDisplay: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  navContainer: {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  navButton: {\r\n    width: BUTTON_SIZE,\r\n    height: BUTTON_SIZE,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginHorizontal: 8,\r\n    borderRadius: 8,\r\n    padding: 8,\r\n  },\r\n  todayButton: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 6,\r\n  },\r\n  todayButtonText: {\r\n    fontSize: 14,\r\n    color: '#ffffff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { today } from '../../../components/TimerTag';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport { NoteListSection } from '../NoteListSection';\r\nimport DateHeaderSection from './DateHeaderSection';\r\n\r\nexport const TimeLineScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const _window = useResizeContext();\r\n  const [date, setDate] = useState(today());\r\n  const { data, preData, isLoading } = useTimeLine(date);\r\n  const markedDateRange = preData.flatMap((v) => v.dateMatches.flatMap((v2) => v2.matches));\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <View style={[{ ...commonStyles.container, flex: undefined, paddingBottom: 0 }]}>\r\n        <DateHeaderSection date={date} setDate={setDate} markedDateRange={markedDateRange} />\r\n      </View>\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title, paragraph) => navigation.push('NotePage', { title, paragraph })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"노트가 없습니다.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { Auth } from '@blacktokki/account';\r\n\r\nimport { ArchiveScreen } from './main/ArchiveScreen';\r\nimport { EditPageScreen } from './main/EditPageScreen';\r\nimport { MovePageScreen } from './main/MovePageScreen';\r\nimport { ProblemsScreen } from './main/ProblemScreen';\r\nimport { RecentPagesScreen } from './main/RecentPageScreen';\r\nimport HomeScreen from './main/home/HomeScreen';\r\nimport { NotePageScreen } from './main/notepage/NotePageScreen';\r\nimport { TimeLineScreen } from './main/timeline/TimeLineScreen';\r\n\r\nconst title = (auth: Auth) =>\r\n  !auth.isLocal ? 'Blacktokki Notebook' : 'Blacktokki Notebook - Local';\r\nexport const main = {\r\n  Home: {\r\n    title,\r\n    component: HomeScreen,\r\n    path: 'home',\r\n  },\r\n  NotePage: {\r\n    title,\r\n    component: NotePageScreen,\r\n    path: 'page',\r\n  },\r\n  EditPage: {\r\n    title,\r\n    component: EditPageScreen,\r\n    path: 'edit',\r\n  },\r\n  MovePage: {\r\n    title,\r\n    component: MovePageScreen,\r\n    path: 'move',\r\n  },\r\n  RecentPages: {\r\n    title,\r\n    component: RecentPagesScreen,\r\n    path: 'recent',\r\n  },\r\n  Problem: {\r\n    title,\r\n    component: ProblemsScreen,\r\n    path: 'problem',\r\n  },\r\n  Archive: {\r\n    title,\r\n    component: ArchiveScreen,\r\n    path: 'archive',\r\n  },\r\n  TimeLine: {\r\n    title,\r\n    component: TimeLineScreen,\r\n    path: 'timeline',\r\n  },\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window = useResizeContext();\r\n  return (\r\n    <>\r\n      {window === 'portrait' && <SearchBar />}\r\n      <RecentPagesSection />\r\n    </>\r\n  );\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport useProblem from '../../hooks/useProblem';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\n\r\nexport const ProblemsScreen: React.FC = () => {\r\n  const _window = useResizeContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data, isLoading } = useProblem();\r\n\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title) => navigation.push('EditPage', { title })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"작성이 필요한 노트가 없습니다.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useLangContext, View } from '@blacktokki/core';\r\nimport { push } from '@blacktokki/navigation';\r\nimport React from 'react';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\n\r\nimport ContentGroupSection, {\r\n  ProblemButton,\r\n  TimeLineButton,\r\n} from '../screens/main/home/ContentGroupSection';\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <List.Item\r\n        left={(_props) => <List.Icon {..._props} icon={'home'} />}\r\n        title={lang('Home')}\r\n        onPress={() => push('Home')}\r\n      />\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n      <ScrollView style={Platform.OS === 'web' ? ({ scrollbarWidth: 'thin' } as any) : {}}>\r\n        <List.Subheader style={{}} selectable={false}>\r\n          {lang('Open Pages')}\r\n        </List.Subheader>\r\n        <ContentGroupSection type={'LAST'} />\r\n        <ContentGroupSection type={'PAGE'} />\r\n        <List.Subheader style={{ flex: 1 }} selectable={false}>\r\n          {lang('Recent Changes')}\r\n        </List.Subheader>\r\n        {/* 최근 변경 */}\r\n        <ContentGroupSection type={'NOTE'} noteCount={10} />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n","import { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { login, Navigation, NavigationConfig } from '@blacktokki/navigation';\r\nimport React, { Suspense } from 'react';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport DatePickerModal from '../modals/DatePikcerModal';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\n\r\nconst HeaderRight = () => {\r\n  const windowType = useResizeContext();\r\n  return windowType === 'landscape' ? <SearchBar /> : undefined;\r\n};\r\n\r\nconst getConfig = async () => {\r\n  const Linking = await import('expo-linking');\r\n  return {\r\n    main,\r\n    login,\r\n    prefixes: [Linking.makeUrl('/')],\r\n    rootPath: 'blacktokki-notebook',\r\n    documentTitle: {\r\n      formatter: () => {\r\n        return 'blacktokki-notebook';\r\n      },\r\n    },\r\n    rootScreen: {\r\n      main: 'Home',\r\n      login: 'LoginScreen',\r\n    },\r\n    headerLeftIcon: <List.Icon icon=\"backburger\" style={{ left: -18, top: -14 }} />,\r\n    headerRight: <HeaderRight />,\r\n    modals: [DatePickerModal],\r\n    drawer: <Drawer />,\r\n  } as NavigationConfig;\r\n};\r\n\r\nexport default () => {\r\n  const scheme = useColorScheme();\r\n  const preTheme = scheme === 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n  const theme: typeof preTheme = {\r\n    ...preTheme,\r\n    colors: { ...preTheme.colors, primary: Colors[scheme].text },\r\n  };\r\n  const NavigationLazy = React.lazy(() =>\r\n    getConfig().then((config) => ({ default: () => <Navigation config={config} /> }))\r\n  );\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <Suspense fallback={<></>}>\r\n        <NavigationLazy />\r\n      </Suspense>\r\n    </PaperProvider>\r\n  );\r\n};\r\n"],"names":["KEYWORDS_KEY","getKeywords","_ref","_asyncToGenerator","subkey","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","error","_x","apply","arguments","saveKeywords","_ref2","keywords","stringify","setItem","_x2","_x3","useKeywords","_auth$user","auth","useAuthContext","isLocal","user","id","useQuery","queryKey","queryFn","_queryFn","axios","axiosCreate","getContentList","get","data","parentId","types","parentIdParam","undefined","typeParam","join","value","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","previewUrl","_ref6","delete","_ref7","preview","query","_x7","openDB","_openDB","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","lastPage","RECENT_PAGES_KEY","getContents","isOnline","type","transaction","objectStore","getAll","saveNoteContents","contents","content","find","v","savedId","then","snapshot","_objectSpread","tx","store","contentItem","put","oncomplete","getRecentPages","saveRecentPages","titles","_x6","useNotePages","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","page","c","invalidateQueries","description","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","useCreateOrUpdatePage","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","skip","Date","toISOString","map","i","newPage","input","userId","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x8","useDeleteRecentPage","_mutationFn4","updatedRecentPages","filter","_title","_x11","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToParagraphs","html","doc","DOMParser","parseFromString","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","push","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","substring","textContent","trim","length","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","paragraph","onLink","navigation","noteLink","window","getNoteLinks","pages","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","noteLinks","startsWith","RandomButton","useNavigation","randomPages","Math","floor","random","paragraphs","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useKeywords$data","_auth$user2","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","getMarkedDays","dateString","markedDateStrings","date","dayjs","startDate","clone","startOf","add","endDate","endOf","markedDate","dateStart","dateEnd","markedDays","isAfter","isBefore","format","reduce","p","marked","dotColor","selected","DatePickerModal","datetime","callback","_dayjs","m","restMinute","defaultDayjs","_useLangContext","useLangContext","lang","locale","markedDates","setMarkedDates","setModal","useModalsContext","back","onSave","margin","minHeight","textAlign","lightColor","darkColor","Suspense","fallback","_Fragment","Calendar","setDate","disableAllTouchEventsForDisabledDays","onMonthChange","NoteListSection","isLoading","emptyMessage","subtitles","subtitle","index","selectable","extractDates","currentYear","getFullYear","patterns","regex","match","pattern","s","split","year","month","lastDay","getDate","String","padStart","mm","dd","results","usedRanges","RegExp","source","_loop","start","end","lastIndex","some","exec","cleanAndMergeTDs","forEach","code","tr","tdList","mergedText","td","_td$textContent","newTd","document","createElement","innerHTML","appendChild","paragraphsToDatePatterns","dateMatches","toRaw","isHeader","original","matches","matchDateRange","dateNum","dateMatch","getTime","today","ratio","diff","now","toggleExpand","overflow","isExpand","buttons","CommonButton","replaceDay","newDate","addDay","unit","moved","replace","createOrUpdatePage","v3","setNow","expand","setExpand","timeout","setTimeout","clearTimeout","TimerTag","paragraphDescription","rootTitle","_paragraphs$find","getSplitTitle","splitTitle","pageTitle","actionButtons","actionButton","marginLeft","getReadabilityLevel","calculateFleschKincaid","sentenceCount","wordList","wordCount","sum","word","syllables","test","max","countSyllables","score","koRatio","getKoreanRatio","enGrade","enLevel","koLevel","sentences","avgWordsPerSentence","classifyKoreanReadability","findLists","listMatch","listRegex","liRegex","_listMatch","_listMatch2","items","liMatch","itemContent","records","record","link","linkPage","lists","replaceAll","findLast","duplicates","lastIndexOf","readability","toFixed","Object","entries","notes","preData","TimeLineButton","useTimeLine","List","_props","icon","alignSelf","Badge","navigate","ProblemButton","useProblem","toRecentContents","sort","b","_useNotePages2","_queryFn4","useRecentPages","tabRef","addRecentPage","_mutationFn3","direct","recentPages","_x10","useAddRecentPage","deleteRecentPage","lastPageExists","useResizeContext","itemPadding","noteOnPress","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","noteCount","_pages$data2","TouchableRipple","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","React","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","Content","descriptionComponent","opacity","RecentPagesSection","RenderHtml","renderersProps","tagsStyles","contentWidth","ScrollView","contentContainerStyle","flexWrap","cancelButton","marginRight","saveButton","columns","moveButton","exportMarkdowns","zip","JSZip","default","_v$description","file","blob","generateAsync","createObjectURL","download","click","revokeObjectURL","remove","importMarkdowns","files","accept","display","multiple","onchange","Error","endsWith","loadAsync","relativePath","dir","async","toString","ConfigButton","Colors","OptionButton","TextButton","textStyle","textDecorationLine","active","_useAuthContext","dispatch","mutation","setSearch","resetKeyword","_auth$user3","_mutationFn2","_onSuccess2","useResetKeyowrd","ConfigSections","numberOfLines","ellipsizeMode","username","NotesTabView","background","ContentGroupSection","RecentChangesTabView","ConfigTabView","ExtraConfigSections","DateHeaderSection","monthly","markedDateRange","moveDate","themedStyles","dateDisplay","todayButton","navButton","headerStyles","dateContainer","navContainer","accessibilityLabel","todayButtonText","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","AntDesign","iconColor","isWeb","NotePage","isFocused","useIsFocused","useRoute","_route$params","archiveId","_window","toc","toggleToc","fullParagraph","toggleFullParagraph","_useNotePage","archives","archive","handleEdit","idx","findIndex","moveParagraphs","moveParagraph","_paragraphs$idx","reverse","_paragraphs$idx2","_useState5","_useState6","setDescription","_paragraphs$find2","pressableTextColor","scrollbarGutter","flexGrow","TimerTagSection","EditorViewer","autoResize","ActivityIndicator","EditPage","setContent","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","_getMatchedChars","childrenPages","encodeURI","_getMatchedChars2","protocol","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","setPreview","moveMutation","_useNotePages5$data","oldTitle","_x9","useMovePage","_useMemo","_moveParagraph$","isSplit","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","RecentPages","Problem","_useProblem","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","TimeLine","_useTimeLine","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider"],"sourceRoot":""}