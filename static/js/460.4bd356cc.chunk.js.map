{"version":3,"file":"static/js/460.4bd356cc.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/components/SearchBar.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/RecentPageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/index.ts","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getNoteContents = async (): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList()).filter(v=>(v.type==='NOTE'|| v.type==='BOOKMARK'))\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      await (id?patchContent({id, updated:content}):postContent(content));\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: getNoteContents,\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const contents = await getNoteContents();\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        const contents = await getNoteContents();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        const contents = await getNoteContents();\r\n        return contents.find(v=>v.title === lastPage)\r\n      } \r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    \r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      padding: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst RECENT_COUNT = 5\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'NOTE'}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() ):pages.data)\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return (\r\n    <List.Section>\r\n        {props.type==='PAGE' && lastPage && (data?.find(v=>v.id===lastPage.id) === undefined) && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n          />}\r\n        {data && (\r\n         props.type === 'NOTE'\r\n         ?<>{data.slice(0, RECENT_COUNT).map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n          title={v.title} \r\n          onPress={()=>noteOnPress(v.title)}\r\n          onLongPress={()=>noteOnLongPress(v.title)}\r\n          style={{padding:itemPadding }} \r\n        />)}\r\n        {((data?.length || 0) > RECENT_COUNT) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}  />}\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import React, { useEffect, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet } from 'react-native';\r\n//@ts-ignore\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\n\r\nlet _searchText = ''\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void,renderExtra?:(input:string, isFind:boolean)=>React.ReactNode}> = ({handlePress, renderExtra}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: pages = [] } = useNotePages();\r\n  \r\n  const filteredPages = searchText.length > 0\r\n    ? pages.filter(page => \r\n        page.title.toLowerCase().startsWith(searchText.toLowerCase())\r\n      ).slice(0, 5)\r\n    : [];\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string) => {\r\n    handlePress?handlePress(title):navigation.navigate('NotePage', { title });\r\n    setSearchText('');\r\n    setShowResults(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n            setShowResults(text.length > 0);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={renderExtra?\"search-plus\":\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <FlatList\r\n              data={filteredPages}\r\n              keyExtractor={(item) => item.title}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.resultItem}\r\n                  onPress={() => handlePagePress(item.title)}\r\n                >\r\n                  <Text style={[commonStyles.text, styles.resultText]}>{item.title}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              onPress={handleSearch}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n          {renderExtra?.(searchText, filteredPages.length > 0)}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 200,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FlatList, ScrollView, StyleSheet, TextInput, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\n\r\n\r\nconst OpenedEditorsTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst NoteTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'NOTE'}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Open Pages'), component:OpenedEditorsTabView, icon:<List.Icon icon={'file-document'}/>, headerRight:()=><></>},\r\n    {title: lang('Notes'), component:NoteTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%'}]}>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections/>\r\n      </View>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 16,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#3498DB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 48,\r\n    borderRadius: 4,\r\n    marginLeft: 8,\r\n  },\r\n  recentButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput, Alert, StyleSheet, FlatList, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\n//@ts-ignore\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar } from '../../components/SearchBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\ninterface NodeData {\r\n  path: string;\r\n  title: string;\r\n  level: number;\r\n  header: string;\r\n  description: string;\r\n}\r\n\r\nfunction parseHtmlToSections(html: string): NodeData[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, \"text/html\");\r\n\r\n  const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n\r\n  const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n  const headerStack: { level: number; title: string }[] = [];\r\n\r\n  let current: NodeData | null = null;\r\n  let cursor = doc.body.firstChild;\r\n\r\n  const flushCurrent = () => {\r\n    if (current) {\r\n      result.push(current);\r\n      current = null;\r\n    }\r\n  };\r\n\r\n  while (cursor) {\r\n    if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n      const el = cursor as HTMLElement;\r\n      if (headings.includes(el.tagName)) {\r\n        flushCurrent();\r\n\r\n        const level = parseInt(el.tagName.substring(1));\r\n        const title = el.textContent?.trim() || \"\";\r\n\r\n        // 헤더 스택 업데이트\r\n        while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n          headerStack.pop();\r\n        }\r\n        headerStack.push({ level, title });\r\n\r\n        const path = headerStack.map(h => h.title).join(\" > \");\r\n\r\n        current = {\r\n          path,\r\n          title,\r\n          level,\r\n          header: el.outerHTML,\r\n          description: \"\",\r\n        };\r\n      } else if (current) {\r\n        current.description += el.outerHTML;\r\n      } else {\r\n        // 헤더 밖의 내용 처리\r\n        result[0].description += el.outerHTML;\r\n      }\r\n    } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n      current.description += cursor.textContent || \"\";\r\n    }\r\n\r\n    cursor = cursor.nextSibling;\r\n  }\r\n\r\n  flushCurrent();\r\n  return result;\r\n}\r\n\r\n\r\nfunction HeaderSelectBar(props:{root:string, path:string, setPath:(path:string)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.setPath(item.path)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?commonStyles.title:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const [path,setPath] = useState('')\r\n  const { data: newPage, isLoading:isNewLoading } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const moveDescription = moveParagraph.map(v=>v.header + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map(v=>(v.path===path && v.description===''?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title);\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    setNewPath('')\r\n  }, [newTitle])\r\n\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:window==='landscape'?'row':'column'}}>\r\n          <View>\r\n            <Text style={commonStyles.text}>현재 노트 제목:</Text>\r\n            <Text style={[commonStyles.title, { marginTop: 8, marginBottom: 16 }]}>{title}</Text>\r\n            <Text style={commonStyles.text}>현재 노트 문단:</Text>\r\n            <HeaderSelectBar path={path} setPath={setPath} root={page?.title || ''} data={paragraph}/>\r\n            <Text style={commonStyles.text}>새 노트 제목:</Text>\r\n            <SearchBar handlePress={setNewTitle}/>\r\n            <Text style={commonStyles.text}>새 노트 문단:</Text>\r\n            <HeaderSelectBar path={newPath} setPath={setNewPath} root={newPage?.title || ''} data={newParagraph}/>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <View style={{flexDirection:'row', alignItems:'center'}}>\r\n            <Text style={commonStyles.title}>{title}{paragraphItem?.level!==0?( \"/\"+paragraphItem?.title):\"\"}</Text>\r\n            <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ▶  </Text>\r\n            <Text style={commonStyles.title}>{newTitle}{newParagraphItem?.level!==0?( \"/\"+(newParagraphItem?.title || \"?\")):\"\"}</Text>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            \r\n            </View>\r\n            <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  autoResize\r\n                /> \r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    marginTop: 8,\r\n    marginBottom: 16\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row'\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n//@ts-ignore\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages, useRecentPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  \r\n  const handlePagePress = (title: string) => {\r\n    navigation.navigate('NotePage', { title });\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={commonStyles.container}>      \r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : recentPages.length > 0 ? (\r\n        <FlatList\r\n          data={recentPages.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() )}\r\n          keyExtractor={(item) => item.title}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => handlePagePress(item.title)}\r\n            >\r\n              <Text style={commonStyles.title}>{item.title}</Text>\r\n              <Text style={commonStyles.smallText}>\r\n                최근 수정: {updatedFormat(item.updated)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>\r\n            최근 수정한 노트가 없습니다.\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n//@ts-ignore\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { EditorViewer, toMarkdown } from '@blacktokki/editor';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title });\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>\r\n          {title}\r\n        </Text>\r\n        <View style={styles.actionButtons}>\r\n          <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n            <Icon name=\"exchange\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n            <Icon name=\"pencil\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      \r\n      <View style={commonStyles.flex}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={page?.description?[commonStyles.card, {flex:1, padding:0}]:{flex:0}}>\r\n            <EditorViewer\r\n              active\r\n              value={page?.description || ''}\r\n              theme={theme}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {page?.description ? undefined : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n\r\n  };\r\n  ","import React from 'react';\r\nimport ContentGroupSection from '../screens/main/home/ContentGroupSection';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <View style={{flex:1}}>\r\n            <View style={{minHeight:'35%', maxHeight:'65%', flexShrink:1, flexGrow:0.1}}>\r\n                <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n                <ScrollView>\r\n                    <ContentGroupSection type={'PAGE'} />\r\n                </ScrollView>\r\n            </View>\r\n            <View style={{minHeight:'35%', maxHeight:'65%', flexShrink:0.1, flexGrow:1}}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>{/* 최근 변경 */}\r\n                </View>\r\n                <ScrollView >\r\n                    <ContentGroupSection type={'NOTE'} />\r\n                </ScrollView>\r\n            </View>\r\n        </View>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <SearchBar/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","type","parentIdParam","undefined","typeParam","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getNoteContents","saveNoteContents","contents","content","find","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","_x","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","useNotePage","title","queryClient","useQueryClient","_queryFn","page","c","invalidateQueries","useLastPage","_queryFn3","useCreateOrUpdatePage","auth","useAuthContext","useMutation","mutationFn","_mutationFn","updatedContents","_objectSpread","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","useDeleteRecentPage","_mutationFn4","updatedRecentPages","_title","_x7","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","padding","card","borderRadius","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","styles","buttonContainer","cancelButton","marginRight","saveButton","marginLeft","props","_notes$data","lang","useLangContext","notes","pages","_queryFn2","recentTitles","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x6","useAddRecentPage","deleteRecentPage","sort","a","b","Date","getTime","window","useResizeContext","itemPadding","noteOnPress","current","clearTimeout","mutate","setTimeout","navigate","noteOnLongPress","_pages$data","_jsxs","List","children","_jsx","left","_props","icon","onPress","onLongPress","style","titleStyle","fontStyle","_Fragment","slice","_pages$data2","v2","right","TouchableRipple","margin","_searchText","SearchBar","handlePress","renderExtra","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","showResults","setShowResults","navigation","useNavigation","useColorScheme","commonStyles","_useNotePages$data","filteredPages","toLowerCase","startsWith","handleSearch","trim","handlePagePress","useEffect","useFocusEffect","View","searchContainer","TextInput","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","TouchableOpacity","disabled","Icon","name","size","resultsContainer","darkResults","lightResults","FlatList","keyExtractor","item","renderItem","resultItem","Text","resultText","ItemSeparatorComponent","position","maxWidth","zIndex","paddingVertical","top","maxHeight","OpenedEditorsTabView","ScrollView","Colors","background","ContentGroupSection","NoteTabView","ConfigTabView","ConfigSections","recentButton","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","cursor","body","firstChild","flushCurrent","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","textContent","pop","h","join","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","setPath","root","backButton","marginTop","moveButton","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","pageTitle","actionButtons","actionButton","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","NotePage","useRoute","params","_useNotePage","isLoading","handleEdit","numberOfLines","ActivityIndicator","EditorViewer","active","autoResize","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","paragraph","_useNotePage2","newParagraph","_useState5","_useState6","newPath","setNewPath","moveMutation","_mutationFn2","oldTitle","Error","some","useMovePage","_useMemo","useMemo","moveParagraph","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","RecentPages","_useNotePages","minHeight","flexShrink","flexGrow","selectable","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","then","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}