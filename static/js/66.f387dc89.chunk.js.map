{"version":3,"file":"static/js/66.f387dc89.chunk.js","mappings":"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","sources":["src/components/LinkPreview.tsx","src/services/notebook.ts","src/hooks/useContentList.ts","src/components/ContentList.tsx","src/components/DndSortableList.tsx","src/components/DynamicTextInput.tsx","src/components/Cell/common.ts","src/components/Cell/index.tsx","src/screens/main/NoteSection.tsx","src/hooks/useNotebookContext.tsx","src/screens/main/NoteScreen.tsx","src/components/ContentGroupList.tsx","src/screens/main/HomeScreen.tsx","src/screens/index.ts","src/hooks/useContent.ts","src/screens/main/ContentListScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking, TouchableOpacity } from \"react-native\"\r\nimport { View, Text } from \"@blacktokki/core\";\r\nimport { Link } from \"../types\"\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nexport const toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <View style={{borderRadius:6, marginVertical:10, marginHorizontal:8}}>\r\n            <TouchableOpacity\r\n                onPress={()=>Linking.openURL(link.url)}\r\n                onLongPress={()=>{}}\r\n                style={{width:'100%', flexDirection:'row'}}\r\n            >\r\n                {link.imageUrl?<Image source={{uri:link.imageUrl}} resizeMode=\"cover\" style={{ borderRadius:6, width:'100%', maxWidth:isMobile?120:160, maxHeight:isMobile?120:160, borderWidth:1}}/>:undefined}\r\n                <View style={{flex:1, marginHorizontal:20, overflow:'hidden', minHeight:isMobile?90:120}}>\r\n                    <Text style={{fontSize:18}} numberOfLines={1}>{link.title}</Text>\r\n                    <Text style={{fontSize:14}} numberOfLines={7} ellipsizeMode='head'>{link.description}</Text>\r\n                    <Text style={{fontSize:12}} numberOfLines={1}>{link.url}</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n}","import { toUrls } from '../components/LinkPreview';\r\nimport { Content, PostContent, CellType, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const postCells = async (contents:{created:(PostContent & {type:CellType})[], deleted:{parentId:number}}) => {\r\n    await axios.post(`/api/v1/content/bulk`, contents)\r\n}\r\n\r\nexport const executeCells = async (cells:({type: CellType |'OUTPUT'} & ({query:string} | {id:number}))[]) => { // TBA\r\n    return (await axios.post(`/api/v1/cell/`, cells)).data\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getContentList, patchContent, postCells, postContent } from \"../services/notebook\";\r\nimport { Content } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useContentList(parentId?:number, type?: Content['type']){\r\n  const { data } = useQuery([\"ContentList\", parentId, type] , async()=> (parentId!==undefined || type!==undefined)?await getContentList(parentId, type):undefined)\r\n  return data\r\n}\r\n\r\n\r\nexport function useContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postContent, {\r\n    onSuccess: async()=>{\r\n      await queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const update = useMutation(patchContent, {\r\n    onSuccess: async () => {\r\n      await Promise.all([\r\n        queryClient.invalidateQueries(\"ContentList\"),\r\n        queryClient.invalidateQueries(\"Content\")\r\n      ])\r\n    }\r\n  })\r\n  const _delete = useMutation(deleteContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const updateCells = useMutation(postCells, {\r\n    onSuccess: () =>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n  }, [])\r\n\r\n  return {create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutateAsync, updateCells:updateCells.mutateAsync}\r\n}","import * as React from 'react';\r\nimport { Content } from '../types';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Text } from '@blacktokki/core';\r\nimport { ScrollView, TouchableOpacity, View } from 'react-native';\r\nimport useContentList from '../hooks/useContentList';\r\nimport { toRaw } from '@blacktokki/editor';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nconst ContentList = ({ parentContent } : { parentContent:Content }) => {\r\n  const data = useContentList(parentContent.id)\r\n  return data && (\r\n    <ScrollView style={{flex:1}}>\r\n      {data.map((item, index)=>{\r\n        return <TouchableOpacity\r\n          key={index}\r\n          style={{flexDirection:'row', justifyContent:'space-between', padding:10, borderBottomWidth:1, borderColor:'gray'}}\r\n          onPress={()=>navigate('NoteScreen', {id:item.id})}\r\n        >\r\n          <View style={{flexShrink:1}}>\r\n              <Text style={{fontSize:18}}>{item.title}</Text>\r\n              <Text style={{fontSize:16, opacity: 0.4}} numberOfLines={1} ellipsizeMode='head'>{toRaw(item.description||'')}</Text>\r\n          </View>\r\n          <View>\r\n              <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n              <Text style={{fontSize:14, textAlign:'right'}}></Text>\r\n          </View>\r\n        </TouchableOpacity>})}\r\n    </ScrollView>)\r\n};\r\n\r\nexport default ContentList;","import React, { useEffect, useState } from 'react';\r\nimport { Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\n// @ts-ignore\r\nimport { MaterialIcons as Icon } from 'react-native-vector-icons';\r\nimport { RenderItem, SortableListProps } from './SortableListBase';\r\n// Import platform-specific components\r\nlet DraggableFlatList: any;\r\nlet ScaleDecorator: any;\r\n\r\n// For web, import specific versions of dnd-kit components\r\n// @dnd-kit/core@3.0.3, @dnd-kit/sortable@3.0.1, @dnd-kit/utilities@2.0.0\r\nlet DndCore: any;\r\nlet DndSortable: any;\r\nlet DndUtilities: any;\r\n\r\n// Handle platform-specific imports\r\nif (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n  // For native platforms, import react-native-draggable-flatlist\r\n  const DraggableImport = {} as any; // require('react-native-draggable-flatlist');\r\n  DraggableFlatList = DraggableImport.default;\r\n  ScaleDecorator = DraggableImport.ScaleDecorator;\r\n} else {\r\n  // For web, import dnd-kit with specific versions\r\n  DndCore = require('@dnd-kit/core');\r\n  DndSortable = require('@dnd-kit/sortable');\r\n  DndUtilities = require('@dnd-kit/utilities');\r\n}\r\n\r\n// Web environment Draggable Cell Item using dnd-kit\r\nconst DraggableCellItem = <T, >({ \r\n  item, \r\n  code,\r\n  renderCellContent,\r\n}: { \r\n  item: T, \r\n  code: string,\r\n  renderCellContent: RenderItem<T>,\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = DndSortable.useSortable({ id:code });\r\n\r\n  const style = {\r\n    transform: DndUtilities.CSS.Transform.toString(transform ? {\r\n      x: transform.x,\r\n      y: transform.y,\r\n      scaleX: 1,\r\n      scaleY: 1\r\n    } : null),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    position: 'relative' as const,\r\n    flex: 1,\r\n    zIndex: isDragging ? 1 : 0\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n    >\r\n      <div \r\n        {...attributes}\r\n        {...listeners}\r\n        style={{ \r\n          cursor: 'move', \r\n          width: 40, \r\n          position: 'absolute', \r\n          height: '100%', \r\n          zIndex: 10,\r\n          left: 0,\r\n          top: 0\r\n        }}\r\n      />\r\n      {renderCellContent({item})}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Web Sortable List using dnd-kit\r\nconst SortableCellsList = <T, >({ \r\n  items, \r\n  onSortEnd, \r\n  renderCellContent,\r\n  getId\r\n}: { \r\n  items: T[], \r\n  onSortEnd: (items: T[]) => void, \r\n  renderCellContent: RenderItem<T>,\r\n  getId:(item:T)=>string,\r\n}) => {\r\n  const [codes, setCodes] = useState(items.map(v=>''+ getId(v)))\r\n  const [tempCodes, setTempCodes] = useState<string[]>()\r\n  useEffect(()=>{\r\n    if (tempCodes){\r\n      setCodes(tempCodes)\r\n      setTempCodes(undefined)\r\n    }\r\n    else if (items.length !== codes.length || items.filter((v, i)=>!codes[i].endsWith(getId(v))).length>0){\r\n      setCodes((codes)=>{\r\n        return items.map((v, i)=>i<codes.length && codes[i].endsWith(getId(v))?codes[i]:Date.now().toString() + '@'+getId(v)).slice(0, items.length)\r\n      })\r\n    }\r\n  }, [items])\r\n  const sensors = DndCore.useSensors(\r\n    DndCore.useSensor(DndCore.PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    DndCore.useSensor(DndCore.TouchSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      }\r\n    }),\r\n    DndCore.useSensor(DndCore.KeyboardSensor, {\r\n      coordinateGetter: DndSortable.sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const handleDragEnd = (event: any) => {\r\n    const { active, over } = event;\r\n    \r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = codes.findIndex((item) => item === active.id);\r\n      const newIndex = codes.findIndex((item) => item === over.id);\r\n      const idx = DndSortable.arrayMove(Array.from(Array(items.length).keys()), oldIndex, newIndex)\r\n      setTempCodes(DndSortable.arrayMove(codes, oldIndex, newIndex).map((v:string, i:number)=>i>idx[i]?'@'+v:v))\r\n      onSortEnd(DndSortable.arrayMove(items, oldIndex, newIndex));\r\n    }\r\n  };\r\n  return (\r\n    <DndCore.DndContext\r\n      sensors={sensors}\r\n      collisionDetection={DndCore.closestCenter}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <DndSortable.SortableContext\r\n        items={tempCodes || codes}\r\n        strategy={DndSortable.verticalListSortingStrategy}\r\n      >\r\n        <View style={commonStyles.cellsList}>\r\n          {items.map((item, i) => {\r\n            const code = (tempCodes || codes)[i]\r\n            return <DraggableCellItem\r\n              key={code || '' + getId(item)}\r\n              code={code}\r\n              item={item}\r\n              renderCellContent={renderCellContent}\r\n            />\r\n})}\r\n        </View>\r\n      </DndSortable.SortableContext>\r\n    </DndCore.DndContext>\r\n  );\r\n};\r\n\r\n// Choose the appropriate list component based on platform\r\nconst SortableList = <T, >({data, setData:setItems, getId, renderItem:renderContent}:SortableListProps<T>) => {\r\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n    return (\r\n      <DraggableFlatList\r\n        data={data}\r\n        onDragEnd={({ data }: { data: T[] }) => setItems(data)}\r\n        keyExtractor={(item: any) => item.id.toString()}\r\n        renderItem={({ item, drag, isActive }: any) => {\r\n          return (\r\n            <ScaleDecorator>\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <TouchableOpacity\r\n                  onLongPress={drag} \r\n                  style={{ \r\n                    width: 40,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n                </TouchableOpacity>\r\n                <View style={{ flex: 1 }}>\r\n                  {renderContent(item)}\r\n                </View>\r\n              </View>\r\n            </ScaleDecorator>\r\n          );\r\n        }}\r\n        contentContainerStyle={commonStyles.cellsList}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <SortableCellsList\r\n        items={data}\r\n        getId={getId}\r\n        onSortEnd={setItems}\r\n        renderCellContent={renderContent}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst commonStyles = StyleSheet.create({\r\n  cellsList: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 5,\r\n  }\r\n});\r\n\r\nexport default SortableList;\r\n","import React, { useState } from \"react\";\r\nimport { TextInput } from \"react-native\";\r\n\r\n// 동적 높이 TextInput 컴포넌트\r\nexport default ({\r\n    value,\r\n    onChangeText,\r\n    style,\r\n    placeholder,\r\n    autoCapitalize = 'none',\r\n    autoCorrect = false,\r\n    minHeight = 40,\r\n    maxHeight = 200,\r\n  }: {\r\n    value: string;\r\n    onChangeText: (text: string) => void;\r\n    style?: any;\r\n    placeholder?: string;\r\n    autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters';\r\n    autoCorrect?: boolean;\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n  }) => {\r\n    const [height, setHeight] = useState(minHeight);\r\n  \r\n    const handleContentSizeChange = (event: any) => {\r\n      const contentHeight = event.nativeEvent.contentSize.height;\r\n      \r\n      // 높이를 minHeight와 maxHeight 사이로 제한\r\n      const newHeight = Math.max(\r\n        minHeight, \r\n        Math.min(contentHeight, maxHeight)\r\n      );\r\n  \r\n      setHeight(newHeight);\r\n    };\r\n  \r\n    return (\r\n      <TextInput\r\n        multiline\r\n        value={value}\r\n        onChangeText={onChangeText}\r\n        onContentSizeChange={handleContentSizeChange}\r\n        style={[\r\n          style, \r\n          { \r\n            height: height,\r\n            textAlignVertical: 'top',\r\n          }\r\n        ]}\r\n        scrollEnabled={height >= maxHeight}\r\n        placeholder={placeholder}\r\n        autoCapitalize={autoCapitalize}\r\n        autoCorrect={autoCorrect}\r\n      />\r\n    );\r\n  };","import { StyleSheet } from \"react-native\";\r\nimport { CellType } from \"../../types\";\r\n\r\n// Cell execution status\r\nexport enum ExecutionStatus {\r\n    IDLE = 'idle',\r\n    RUNNING = 'running',\r\n    COMPLETED = 'completed',\r\n    ERROR = 'error',\r\n}\r\n  \r\n// Structure for a cell\r\nexport interface CellItem {\r\n  id: string;\r\n  type: CellType;\r\n  content: string;\r\n  output: string;\r\n  executionCount: number | null;\r\n  status: ExecutionStatus;\r\n  inputVisible: boolean;\r\n  outputVisible: boolean;\r\n}\r\n\r\nexport const typeDetail = {\r\n    'EDITOR':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'',\r\n      iconName: \"edit\",\r\n      iconSize: 18,\r\n      light:'goldenrod',\r\n      dark: 'darkgoldenrod'\r\n    },\r\n    'LINK': {\r\n      executable:true,\r\n      init:(cells:CellItem[])=>'https://',\r\n      iconName: 'link',\r\n      iconSize: 20,\r\n      light: '#4CAF50',\r\n      dark: '#2E7D32'// 어두운 녹색\r\n    },\r\n    'MARKDOWN':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'# Welcome to Jupyter Notebook in React Native\\n\\nThis is a basic implementation of Jupyter Notebook using React Native and TypeScript.',\r\n      iconName: 'text-fields',\r\n      iconSize: 20,\r\n      light: '#2196F3',\r\n      dark: '#1565C0'// 어두운 블루\r\n    }\r\n}\r\n\r\nexport const createUseStyle = <T extends StyleSheet.NamedStyles<T>, >(styles:(theme:'light'|'dark')=>(T | StyleSheet.NamedStyles<T>)) => {\r\n    const _styles = (theme:'light'|'dark') => StyleSheet.create(styles(theme))\r\n    const lightStyles = _styles('light')\r\n    const darkStyles = _styles('dark')\r\n    return (theme:'light'|'dark')=>theme==='dark'?darkStyles:lightStyles\r\n}\r\n","// App.tsx\r\nimport React, { MutableRefObject } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  TouchableOpacity,\r\n  Platform, \r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport Markdown from 'react-native-markdown-display';\r\nimport { Editor, EditorViewer } from '@blacktokki/editor';\r\nimport { Link } from '../../types';\r\nimport LinkPreview from '../LinkPreview';\r\nimport DynamicTextInput from '../DynamicTextInput';\r\nimport { CellItem, ExecutionStatus, createUseStyle, typeDetail} from './common';\r\n\r\nexport { ExecutionStatus, typeDetail } from './common';\r\nexport type { CellItem } from './common';\r\nexport default React.memo(({theme, item, isSelected, heightRef, setCells, executeCell, setSelectedCellId}:{theme:'light'|'dark', item:CellItem, isSelected:boolean, heightRef:MutableRefObject<Record<string, number>>, setCells:(func:(cells:CellItem[])=>CellItem[])=>void, executeCell:(id:string)=>void, setSelectedCellId:(id:string)=>void})=>{\r\n  const styles = useStyles(theme)\r\n  const markdownStyles = useMarkdownStyles(theme)\r\n  // Update cell content\r\n  const updateCellContent = (id: string, content: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, content } : cell\r\n      )\r\n    );\r\n  };\r\n  // Delete a cell\r\n  const deleteCell = (id: string) => {\r\n    setCells(prevCells => prevCells.filter(cell => cell.id !== id));\r\n  };\r\n\r\n  // Toggle input visibility\r\n  const toggleInputVisibility = (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, inputVisible: !cell.inputVisible } : cell\r\n      )\r\n    );\r\n  };\r\n  \r\n  // Toggle output visibility\r\n  const toggleOutputVisibility = (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, outputVisible: !cell.outputVisible } : cell\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={[\r\n      styles.cellContainer,\r\n      item.inputVisible && item.type==='EDITOR' && {minHeight: heightRef.current[item.id]},\r\n      isSelected && styles.selectedCell,\r\n      // isDragging && styles.draggingCell\r\n    ]}\r\n    onLayout={e=>{heightRef.current[item.id]=e.nativeEvent.layout.height}}\r\n    >\r\n      {/* Cell sidebar with execution count and drag handle */}\r\n      <View style={styles.cellHandle}>\r\n        {typeDetail[item.type].executable && (\r\n          <View style={styles.executionCount}>\r\n            <Text style={styles.executionCountText}>\r\n              {item.executionCount ? `[${item.executionCount}]` : '[ ]'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n        <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n      </View>\r\n      \r\n      <View style={styles.cellContent}>\r\n        {/* Cell input area */}\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={() => setSelectedCellId(item.id)}\r\n          style={styles.cellInputContainer}\r\n        >\r\n          {/* New toggle button for input */}\r\n          <TouchableOpacity \r\n            style={styles.visibleToggleContainer}\r\n            onPress={() => toggleInputVisibility(item.id)}\r\n          >\r\n            <View style={styles.visibleToggle}/>\r\n          </TouchableOpacity>\r\n          <View style={{flex:1, paddingHorizontal:5}}>\r\n            {/* Cell toolbar */}\r\n            <View style={styles.cellToolbar}>\r\n              <TouchableOpacity \r\n                style={styles.toolbarButton}\r\n                onPress={() => setSelectedCellId(item.id)}\r\n              >\r\n                <Icon\r\n                  name={typeDetail[item.type].iconName} \r\n                  size={typeDetail[item.type].iconSize} \r\n                  color=\"#2196F3\" \r\n                />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={styles.toolbarButton}\r\n                onPress={() => executeCell(item.id)}\r\n                disabled={!typeDetail[item.type].executable}\r\n              >\r\n                <Icon \r\n                  name=\"play-arrow\" \r\n                  size={20} \r\n                  color={typeDetail[item.type].executable ? \"#4CAF50\" : \"#ccc\"} \r\n                />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={styles.toolbarButton}\r\n                onPress={() => deleteCell(item.id)}\r\n              >\r\n                <Icon name=\"delete\" size={20} color=\"#F44336\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n            {/* SUMMARY CELL */}\r\n            {!item.inputVisible && <TouchableOpacity style={styles.summaryButton} onPress={() => toggleInputVisibility(item.id)}>\r\n              <Text style={styles.summaryText}>● ● ●</Text>\r\n            </TouchableOpacity>}\r\n            {/* EDITOR CELL */}\r\n            {<View style={{display:item.inputVisible && item.type === 'EDITOR'?'flex':'none'}}>\r\n              <EditorViewer theme={theme} value={item.content} autoResize active={!isSelected} onPress={()=>setSelectedCellId(item.id)}/>\r\n              <Editor       theme={theme} value={item.content} autoResize active={isSelected} setValue={item.type === 'EDITOR'?(text) => updateCellContent(item.id, text):()=>{}}/>\r\n            </View>}\r\n            {/* LINK CELL */}\r\n            {item.inputVisible && item.type === 'LINK' && <DynamicTextInput\r\n                style={styles.codeInput}\r\n                value={item.content}\r\n                onChangeText={(text) => updateCellContent(item.id, text)}\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n              />\r\n            }\r\n            {/* MARKDOWN CELL */}\r\n            {item.inputVisible && item.type === \"MARKDOWN\" && (\r\n            isSelected ? (\r\n              <DynamicTextInput\r\n                style={styles.markdownInput}\r\n                value={item.content}\r\n                onChangeText={(text) => updateCellContent(item.id, text)}\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n              />\r\n              ) : (\r\n                <Markdown style={markdownStyles}>\r\n                  {item.content}\r\n                </Markdown>\r\n              )\r\n            )}\r\n          </View>\r\n        </TouchableOpacity>\r\n        {/* Output area for code cells */}\r\n        {<View style={{flexDirection:'row'}}> \r\n          {(item.status === ExecutionStatus.COMPLETED || item.status === ExecutionStatus.ERROR) && <TouchableOpacity \r\n            style={styles.visibleToggleContainer}\r\n            onPress={() => toggleOutputVisibility(item.id)}\r\n          >\r\n            <View style={styles.visibleToggle}/>\r\n          </TouchableOpacity>}\r\n          {!item.outputVisible ? (item.inputVisible && <TouchableOpacity style={styles.summaryButton} onPress={() => toggleOutputVisibility(item.id)}>\r\n            <Text style={styles.summaryText}>● ● ●</Text>\r\n          </TouchableOpacity>):\r\n          <View style={{flex:1}}>\r\n            {item.status === ExecutionStatus.COMPLETED  ? <>\r\n              {typeDetail[item.type].executable && (JSON.parse(item.output) as Link[]).map((link, i)=><LinkPreview key={i} link={link} isMobile={false} />)}\r\n            </>:\r\n            item.status === ExecutionStatus.ERROR && <View style={[styles.outputContainer, styles.errorOutput]}>\r\n              <Text style={styles.outputText}>{item.output}</Text>\r\n            </View>}\r\n          </View>}\r\n        </View>}\r\n      </View>\r\n    </View>\r\n  );\r\n})\r\n\r\nconst Colors = {\r\n    light:{\r\n      background: '#f8f8f8',\r\n      text: '#111',\r\n      codeText: '#333',\r\n      codeBackground: '#f8f8f8',\r\n      outerBackground: '#fff',\r\n      border: '#e0e0e0',\r\n      selectedBorder: '#3F51B5',\r\n      error:  'rgba(244, 67, 54, 0.1)',\r\n      markdownHead: '#2C3E50',\r\n      markdownCode: '#f5f5f5',\r\n    },\r\n    dark:{\r\n      background:'#1E1E1E',  // 어두운 헤더 배경\r\n      text: '#E0E0E0',  // 연한 회색 텍스트\r\n      codeText: '#B0B0B0',// 회색 텍스트\r\n      codeBackground: '#2A2A2A',  // 어두운 출력 배경\r\n      outerBackground: '#121212', // 다크 모드 배경색\r\n      border: '#3A3A3A',  // 어두운 구분선\r\n      selectedBorder: '#4A90E2', // 밝은 블루 선택 강조\r\n      error:  'rgba(244, 67, 54, 0.2)', // 오류 출력 배경 (반투명 레드)\r\n      markdownHead: '#A0B9D0',\r\n      markdownCode: '#1E1E1E',\r\n    }\r\n}\r\n\r\nconst useStyles = createUseStyle((theme)=>({\r\n    header: {\r\n      backgroundColor: Colors[theme].background,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      padding: 15,\r\n      ...(Platform.OS !== 'web' && { elevation: 4 }),\r\n    },\r\n    title: {\r\n      color: Colors[theme].text,\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n    },\r\n    headerButtonText: {\r\n      color: Colors[theme].codeText,\r\n      marginLeft: 5,\r\n      fontWeight: '500',\r\n    },\r\n    cellContainer: {\r\n      flexDirection: 'row',\r\n      borderTopLeftRadius: 6,\r\n      borderBottomLeftRadius: 6,\r\n      backgroundColor: Colors[theme].background,\r\n      overflow: 'hidden',\r\n      borderColor: Colors[theme].border,\r\n      padding:1,\r\n    },\r\n    selectedCell: {\r\n      borderColor: Colors[theme].selectedBorder,\r\n      borderWidth: 2,\r\n      padding:0,\r\n    },\r\n    draggingCell: {\r\n      opacity: 0.7,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    cellHandle: {\r\n      width: 40,\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      alignItems: 'center',\r\n      paddingTop: 15,\r\n    },\r\n    cellContent: {\r\n      flex: 1,\r\n      borderWidth: 1,\r\n      margin: 10,\r\n      marginVertical: 5,\r\n      borderColor: Colors[theme].border,\r\n    },\r\n    cellToolbar: {\r\n      flexDirection: 'row',\r\n      padding: 0,\r\n      paddingVertical: 0,\r\n      borderBottomColor: Colors[theme].border,\r\n    },\r\n    codeInput: {\r\n      fontFamily: 'monospace',\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    markdownInput: {\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    outputContainer: {\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      padding: 10,\r\n      borderTopWidth: 1,\r\n      borderTopColor: Colors[theme].border,\r\n    },\r\n    errorOutput: {\r\n      backgroundColor: Colors[theme].error,\r\n    },\r\n    outputText: {\r\n      fontFamily: 'monospace',\r\n      color: Colors[theme].codeText,\r\n    },\r\n    // common styles\r\n    headerButtons: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingHorizontal: 12,\r\n      paddingVertical: 6,\r\n      borderRadius: 4,\r\n    },\r\n    executionCount: {\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n    },\r\n    toolbarButton: {\r\n      padding: 5,\r\n      paddingVertical:0,\r\n      marginRight: 10,\r\n    },\r\n    cellInputContainer: {\r\n      //padding: 10,\r\n      flexDirection:'row',\r\n      padding:0,\r\n      flex:1,\r\n      // paddingHorizontal:5,\r\n    },\r\n    executionCountText: {\r\n      color: '#888',\r\n      fontSize: 12,\r\n    },\r\n    visibleToggleContainer: {\r\n      width:12, \r\n      height:'100%', \r\n    },\r\n    visibleToggle: {\r\n      flex:1,\r\n      marginLeft:4,\r\n      marginVertical:4,\r\n      borderRadius:4,\r\n      backgroundColor: Colors[theme].border,\r\n    },\r\n    summaryButton: {\r\n      padding:10, \r\n      width:'100%'\r\n    },\r\n    summaryText: {\r\n      minHeight: 20,\r\n      color: 'gray',\r\n      backgroundColor: Colors[theme].background,\r\n      fontSize:10\r\n    },\r\n}))\r\n\r\nconst useMarkdownStyles = createUseStyle((theme)=>({\r\n    body: {\r\n      fontSize: 14,\r\n      color: Colors[theme].codeText,\r\n    },\r\n    heading1: {\r\n      fontSize: 24,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    heading2: {\r\n      fontSize: 20,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    code_inline: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 2,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n    code_block: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 10,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n}))","// App.tsx\r\nimport React, { useState, useCallback, MutableRefObject, useEffect, useRef, useMemo } from 'react';\r\nimport { \r\n  SafeAreaView, \r\n  StyleSheet, \r\n  View, \r\n  Text, \r\n  TouchableOpacity, \r\n  StyleProp,\r\n  ViewStyle,\r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { CellType } from '../../types';\r\nimport { previewScrap } from '../../services/notebook';\r\nimport SortableList from '../../components/DndSortableList';\r\nimport Cell, { CellItem, ExecutionStatus, typeDetail } from '../../components/Cell';\r\n\r\nconst execute = (type:CellType, query: string): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (type==='LINK'){\r\n        resolve(previewScrap({query}).then(v=>JSON.stringify(v)))\r\n      }\r\n      else if(type==='MARKDOWN'){\r\n        console.log(\"TEMP\")\r\n      }\r\n      else {\r\n        resolve(\"\")\r\n      }\r\n    } catch (error) {\r\n      reject(`Error: ${error}`);\r\n    }\r\n  });\r\n};\r\n\r\nexport type CellHistory = {past:string[][], present:string[], future:string[][], cells:Record<string,CellItem>}\r\n\r\nconst App = (props: {cellsHistory:CellHistory, setHistory:(data:CellHistory)=>void, cellRef:MutableRefObject<{executeAllCells:()=>Promise<void>}|undefined>}) => {\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const cellsHistory = props.cellsHistory\r\n  const cells = cellsHistory?.present.map(v=>cellsHistory.cells[v])\r\n  const _setCells = (_cells:CellItem[]) => {\r\n    if (JSON.stringify(cells) === JSON.stringify(_cells)){\r\n      return;\r\n    }\r\n    const newCells = cellsHistory?.cells || {}\r\n    _cells.forEach(v=>{newCells[v.id] = v})\r\n    props.setHistory({\r\n      past: cellsHistory?[ ...cellsHistory.past, cellsHistory.present]:[],\r\n      present:_cells.map(v=>v.id),\r\n      future: [],\r\n      cells:newCells,\r\n    })\r\n  }\r\n  const undo = () =>{\r\n    if(cellsHistory && cellsHistory.past.length>0){\r\n      const previous = cellsHistory.past[cellsHistory.past.length - 1];\r\n      const newPast = cellsHistory.past.slice(0, cellsHistory.past.length - 1);\r\n      props.setHistory({\r\n        past: newPast,\r\n        present:previous,\r\n        future: [cellsHistory.present, ...cellsHistory.future],\r\n        cells:cellsHistory.cells,\r\n      })\r\n    }\r\n  }\r\n  const redo = () => {\r\n    if(cellsHistory && cellsHistory.future.length>0){\r\n      const next = cellsHistory.future[0];\r\n      const newFuture = cellsHistory.future.slice(1);\r\n      props.setHistory({\r\n        past: [...cellsHistory.past, cellsHistory.present],\r\n        present:next,\r\n        future: newFuture,\r\n        cells:cellsHistory.cells,\r\n      })\r\n    }\r\n  }\r\n  const setCells = (func:(c:CellItem[])=>CellItem[])=>_setCells(func(cells))\r\n\r\n  const [selectedCellId, setSelectedCellId] = useState<string | null>(null);\r\n  const heightRef = useRef<Record<string, number>>({})\r\n  const nextExecutionCount = useMemo(()=>{\r\n    const counts = cells.map(v=>v.executionCount).filter(v=>v!==null)\r\n    return counts.length>0?counts.sort((a,b)=>b-a)[0]+1:1\r\n  }, [cells])\r\n  useEffect(()=>{\r\n    props.cellRef.current = {\r\n      executeAllCells: async () => {\r\n        for (const cell of cells) {\r\n          if (typeDetail[cell.type].executable) {\r\n            await executeCell(cell.id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [cells])\r\n  \r\n  // Add a new cell\r\n  const addCell = (type: CellType) => {\r\n    const newCell: CellItem = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      content: typeDetail[type].init(cells),\r\n      output: '',\r\n      executionCount: null,\r\n      status: ExecutionStatus.IDLE,\r\n      inputVisible: true,\r\n      outputVisible: true\r\n    };\r\n    \r\n    setCells(prevCells => [...prevCells, newCell]);\r\n  };\r\n  \r\n  // Execute code in a cell\r\n  const executeCell = async (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id \r\n          ? { ...cell, status: ExecutionStatus.RUNNING } \r\n          : cell\r\n      )\r\n    );\r\n    \r\n    const cell = cells.find(c => c.id === id);\r\n    if (!cell || typeDetail[cell.type].executable === false) return;\r\n    \r\n    try {\r\n      const result = await execute(cell.type, cell.content);\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: result, \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.COMPLETED\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    } catch (error) {\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: String(error), \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.ERROR\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Render a single cell (shared between platform implementations)\r\n  const renderCellContent = useCallback(({item}:{item: CellItem}) => {\r\n    return <Cell\r\n      theme={theme}\r\n      item={item}\r\n      isSelected={selectedCellId === item.id}\r\n      heightRef={heightRef}\r\n      setCells={setCells} \r\n      executeCell={executeCell} \r\n      setSelectedCellId={setSelectedCellId}\r\n    />\r\n  }, [selectedCellId, cells]);\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <SortableList data={cells} setData={_setCells} getId={v=>v.id} renderItem={renderCellContent}/>\r\n      \r\n      <View style={styles.addCellContainer}>\r\n        {Object.entries(typeDetail).map(([k, v], i)=>{\r\n          const buttonStyle:StyleProp<ViewStyle> = {\r\n            backgroundColor: v[theme]\r\n          }\r\n          return <TouchableOpacity\r\n          key={i}\r\n          style={[styles.addCellButton, buttonStyle]}\r\n          onPress={() => addCell(k as CellType)}\r\n        >\r\n          <Icon name={v.iconName} size={v.iconSize} color=\"#fff\" />\r\n          <Text style={styles.addCellButtonText}>{lang(k)}</Text>\r\n        </TouchableOpacity>\r\n        })}\r\n        <TouchableOpacity\r\n          key={'undo'}\r\n          style={[styles.addCellButton, {backgroundColor:'gray'}]}\r\n          onPress={() => undo()}\r\n        >\r\n          <Icon name={'undo'} size={18} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          key={'redo'}\r\n          style={[styles.addCellButton, {backgroundColor:'gray'}]}\r\n          onPress={() => redo()}\r\n        >\r\n          <Icon name={'redo'} size={18} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  addCellContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 15,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#888',\r\n    zIndex: -1\r\n  },\r\n  addCellButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 4,\r\n    marginHorizontal: 5,\r\n  },\r\n  addCellButtonText: {\r\n    color: '#fff',\r\n    marginLeft: 5,\r\n    fontWeight: '500',\r\n  },\r\n})\r\n\r\n\r\nexport default App;","import { useAuthContext } from \"@blacktokki/account\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\ntype Opened = Record<string, {created:boolean}>\r\n\r\nconst NotebookContext = createContext<{\r\n  opened: Opened; setOpened: (func:(newOpened:Opened)=>void, created:boolean) => void;\r\n}>(\r\n  { opened: {}, setOpened:()=>{} }\r\n);\r\n\r\nexport const NotebookProvider = (props: { children: React.ReactNode; }) => {\r\n  const [complete, setComplete] = useState(false);\r\n  const [opened, setOpened] = useState<Opened>({});\r\n  const { auth } = useAuthContext()\r\n  const loadOpened = async () =>{\r\n    const v = await AsyncStorage.getItem('opened')\r\n    return (v?JSON.parse(v):{}) as Record<string, number[]>\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOpened().then((v) => {\r\n      if (auth){\r\n        if (auth.user){\r\n          const ids:number[] = v[`${auth.user.id}`] || []\r\n          setOpened(Object.fromEntries(ids.map(v=>[`${v}`, {created:false}])));\r\n        }\r\n        setComplete(true);\r\n      }\r\n    });\r\n  }, [auth]);\r\n  const _setOpened = useCallback((func:(newOpened:Opened)=>void, created:boolean)=>{\r\n    const newOpened = {...opened}\r\n    func(newOpened)\r\n    if(created){\r\n      setOpened(newOpened)\r\n    }\r\n    else if(auth.user?.id){\r\n      loadOpened().then(v=>{\r\n        if (auth.user){\r\n          v[`${auth.user.id}`] = Object.keys(newOpened).filter(v => !newOpened[v].created).map(v=>parseInt(v, 10));\r\n          AsyncStorage.setItem('opened', JSON.stringify(v)).then(()=>{\r\n            setOpened(newOpened)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }, [opened])\r\n\r\n  return complete ? (\r\n    <NotebookContext.Provider value={{ opened, setOpened:_setOpened }}>\r\n      {props.children}\r\n    </NotebookContext.Provider>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport const useOpenedContext = () => {\r\n  const { opened, setOpened } = useContext(NotebookContext);\r\n  const openedIds = Object.entries(opened).map(([k, v])=>(v.created?{created:true, parentId:parseInt(k, 10)}:{created:false, id:parseInt(k, 10)}))\r\n  const addOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      newOpenIds[`${id}`] = {created}\r\n    }, created)\r\n  }\r\n\r\n  const deleteOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      delete newOpenIds[`${id}`]\r\n    }, created)\r\n  }\r\n  \r\n  return {\r\n    openedIds,\r\n    addOpenedIds:addOpened, \r\n    deleteOpenedIds:deleteOpened\r\n  }\r\n};\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView,  useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useMemo,useRef,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport useContent from '../../hooks/useContent';\r\nimport NoteSection, { CellHistory } from './NoteSection';\r\nimport { CellType } from '../../types';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport { useOpenedContext } from '../../hooks/useNotebookContext';\r\nimport { CellItem } from '../../components/Cell';\r\n\r\nconst unsaved:Record<number, CellHistory> = {}\r\n\r\nconst useIsSaved = (init:CellItem[]|undefined, cells:CellItem[]|undefined)=>{\r\n  const original = useMemo(()=>JSON.stringify(init?.map(v=>({...v, id:undefined}))), [init])\r\n  const isSaved = useMemo(()=>cells===undefined || original===JSON.stringify(cells?.map(v=>({...v, id:undefined}))), [original, cells])\r\n  return isSaved\r\n}\r\n\r\nexport default function NoteScreen({ navigation, route }: StackScreenProps<any, 'Editor'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId!==undefined?parseInt(route?.params?.parentId):undefined\r\n  } as { created:true, parentId:number } | { created:false, id:number }\r\n  const cellRef: Parameters<typeof NoteSection>[0]['cellRef'] = useRef()\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n  const { openedIds, addOpenedIds, deleteOpenedIds } = useOpenedContext()\r\n\r\n  const content = useContent(params.created?undefined:params.id)\r\n  const contents = useContentList(params.created?undefined:params.id)\r\n  const init = useMemo(()=>{\r\n    return (params.created?[]:contents)?.map(v=>({\r\n      id: `${v.id}`, \r\n      type:v.type as CellType, \r\n      content:v.title, \r\n      output:v.description || '', \r\n      executionCount:v.option.EXECUTION_COUNT?parseInt(v.option.EXECUTION_COUNT, 10):null, \r\n      status:(v.option.EXECUTION_STATUS || 'idle') as any, \r\n      inputVisible: v.option.INPUT_VISIBLE!==undefined?v.option.INPUT_VISIBLE:true,\r\n      outputVisible:v.option.OUTPUT_VISIBLE!==undefined?v.option.OUTPUT_VISIBLE:true}))\r\n  }, [contents])\r\n  const unsavedKey = params.created?params.parentId:params.id\r\n  const [cellsHistory, _setHistory] = useState<CellHistory | undefined>()\r\n  const setHistory = (history?:CellHistory)=>{\r\n    if (history){\r\n      unsaved[unsavedKey] = history\r\n    }\r\n    else{\r\n      delete unsaved[unsavedKey]\r\n    }\r\n    _setHistory(history)\r\n  }\r\n  const cells = cellsHistory?.present.map(v=>cellsHistory.cells[v])\r\n  const contentMutation = useContentMutation()\r\n  const [title, setTitle] = useState<string>()\r\n  const [editPage, setEditPage] = useState(false)\r\n  const isSaved = useIsSaved(init, cells)\r\n  const onSaveTitle = () => {\r\n        if (!auth.user){\r\n          return;\r\n      }\r\n      let promise\r\n      const description = cells?cells.map((v, i)=>{\r\n        let str = toRaw(v.content).replaceAll(/\\r\\n/g, '');\r\n        if(str.length > 64){\r\n          str = str.substring(0, 64 - 2) + '...';\r\n        }\r\n        return str\r\n      }).join('\\r\\n'):''\r\n      if (params.created){\r\n          promise = contentMutation.create({userId:auth.user.id, parentId:params.parentId, type:'PAGE', order: 0, title:title || '', description, option:{}}).then((v)=>{\r\n            navigate(\"NoteScreen\", {id:v});\r\n            return v\r\n          })\r\n      }\r\n      else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, title:title || content.title, description}}).then(()=>params.id)\r\n      }\r\n      return promise\r\n  }\r\n\r\n  const onSave = ()=>{\r\n    const promise = onSaveTitle()\r\n    promise?.then((parentId)=>{\r\n      const userId = auth.user?.id\r\n      const created = userId && cells ? cells.map((v, i)=>({\r\n        userId, \r\n        parentId, \r\n        type:v.type, \r\n        order:i, \r\n        description:v.output, \r\n        title:v.content, \r\n        option:{\r\n          EXECUTION_COUNT:v.executionCount!==null?`${v.executionCount}`:undefined, \r\n          EXECUTION_STATUS: v.status,\r\n          INPUT_VISIBLE:v.inputVisible,\r\n          OUTPUT_VISIBLE:v.outputVisible\r\n        }})):[]\r\n      return contentMutation.updateCells({created, deleted:{parentId}})\r\n    })\r\n  }\r\n\r\n  useLayoutEffect(()=>{\r\n    const history =  unsaved[unsavedKey]\r\n    if(init){\r\n        if(params.created){\r\n          setEditPage(false)\r\n          setTitle(lang(\"New Page\"))\r\n          addOpenedIds(params.parentId, true)\r\n          setHistory(history || {\r\n            past: [],\r\n            present: [],\r\n            future: [],\r\n            cells: {}\r\n          })\r\n        }\r\n        else if (content){\r\n          setEditPage(false)\r\n          setTitle(content.title)\r\n          addOpenedIds(content.id, false)\r\n          setHistory(history || {\r\n            past: [],\r\n            present: init.map(v=>v.id),\r\n            future: [],\r\n            cells: Object.fromEntries(init.map(v=>[v.id, v]))\r\n          })\r\n        }\r\n    }\r\n    }, [init, content])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created || content){\r\n        navigation.setOptions({\r\n            title:isSaved?title:`${title}*`,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {!isSaved && <CommonButton title={'💾'} onPress={onSave} style={{paddingTop:8, marginRight:10}}/>}\r\n              <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>setEditPage(true)}/>\r\n              <CommonButton title={'❌'} onPress={exit} style={{paddingTop:8, marginRight:10}}/>\r\n            </View>,\r\n            headerShown: !editPage\r\n          });\r\n      }\r\n  }, [navigation, content, contents, title, editPage, cells]);\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else {\r\n      let nextId:any = undefined;\r\n      if(openedIds.length > 0){\r\n        const values = [...openedIds.values()]\r\n        const i = values.findIndex(v=>params.created?v.parentId===params.parentId:v.id===content?.id)\r\n        nextId = values[i>=0?(i===values.length-1?i-1:i+1):(values.length-1)]\r\n      }\r\n      if (nextId!==undefined){\r\n        navigation.navigate('NoteScreen', nextId.created?{parentId:nextId.parentId}:{id:nextId.id})\r\n      }\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n    }\r\n  }\r\n  const exit = ()=> {\r\n    deleteOpenedIds(unsavedKey, params.created)\r\n    setHistory(undefined)\r\n    back()\r\n  }\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\"}}>\r\n     <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n     {editPage ? <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSaveTitle} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={()=>setEditPage(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>exit())}/>}\r\n      </>:\r\n      cellsHistory !==undefined && cellsHistory === unsaved[unsavedKey] && <NoteSection cellsHistory={cellsHistory} setHistory={setHistory} cellRef={cellRef}/>}\r\n    </ScrollView>\r\n  </ThemedView>\r\n}\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport MaterialCommunityIcon from 'react-native-paper/src/components/MaterialCommunityIcon';\r\nimport { Colors, useColorScheme, useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\nimport {useOpenedContext} from '../hooks/useNotebookContext';\r\nimport { Content } from '../types';\r\nimport { I18nManager } from 'react-native';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentSubGroupList = (props:{note:Content}) => {\r\n  const theme = useColorScheme()\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const window = useResizeContext()\r\n  const data = useContentList(expanded?props.note.id:undefined);\r\n  const handlePress = () => setExpanded(!expanded);\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const Left = ({isExpanded}:{isExpanded:boolean}) => {\r\n    return <MaterialCommunityIcon\r\n        name={isExpanded ? 'chevron-down' : 'chevron-right'}\r\n        color={Colors[theme].text}\r\n        size={24}\r\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\r\n      />\r\n  }\r\n  return <View>\r\n      <List.Accordion\r\n        title={props.note.title}\r\n        expanded={expanded && data!==undefined}\r\n        style={{padding:itemPadding}}\r\n        onPress={()=>navigate('ContentListScreen', {id:props.note.id})}\r\n        left={(_props)=><List.Icon {..._props} icon={expanded?'chevron-down' : 'chevron-right'} />}\r\n        right={()=>undefined}\r\n      >\r\n        {data && data.slice(0, 10).map(v=><List.Item key={v.id} left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />} title={v.title} onPress={()=>navigate('NoteScreen', {id:v.id})} style={{padding:itemPadding}} />)}\r\n        {(data?.length || 0 > 10) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"file-document-multiple\"} />} title={\"more...\"} onPress={()=>navigate(\"ContentListScreen\", {id: props.note.id})} style={{padding:itemPadding}}  />}\r\n      </List.Accordion>\r\n      <TouchableRipple style={{position:'absolute', justifyContent:'center', paddingLeft: 8 + itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2 }} onPress={handlePress}>\r\n          <Left isExpanded={expanded}/>\r\n      </TouchableRipple>\r\n    </View>\r\n}\r\n\r\n\r\nconst ContentGroupList = ( props : {type:'PAGE'}| {type:'NOTEV2', extra:boolean}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useContentList(undefined, 'NOTEV2');\r\n  const pages = useContentList(undefined, props.type==='PAGE'?'PAGE':undefined);\r\n  const { openedIds } = useOpenedContext()\r\n  const data = props.type === 'NOTEV2'? notes:openedIds.map((v)=>v.created?{\r\n    parentId:v.parentId,\r\n    title:lang(\"New Page\") + `(${notes?.find(v2=>v2.id===v.parentId)?.title})`\r\n  }:{\r\n    id:v.id,\r\n    title:pages?.find(v2=>v2.id===v.id)?.title\r\n  })\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  return (\r\n    <List.Section>\r\n      <View style={{flexDirection:'row'}}>\r\n        <List.Subheader style={{flex:1}} selectable={false}>{props.type==='NOTEV2'?lang(\"Notes\"):lang(\"Open Editors\")}</List.Subheader>\r\n        {props.type==='NOTEV2' && <TouchableRipple style={{position:'absolute', right:0}} onPress={()=>navigate('ContentListScreen', {type:'NOTEV2'})}><List.Icon icon='plus' style={{margin:itemPadding}}/></TouchableRipple>}\r\n      </View>\r\n        {data && data.map(v=>\r\n          (props.type==='NOTEV2' && props.extra)?\r\n          <ContentSubGroupList key={v.id} note={v as Content}/>:\r\n          <List.Item key={v.id || v.parentId} left={(_props)=><List.Icon {..._props} icon={props.type==='NOTEV2'?\"notebook\":\"file-document-edit\"} />} title={v.title} onPress={()=>navigate(props.type==='NOTEV2'?'ContentListScreen':'NoteScreen', v.id!==undefined?{id:v.id}:{parentId:v.parentId})} style={{padding:itemPadding }} />\r\n        )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupList;","import React, {} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupList from '../../components/ContentGroupList';\r\nimport { List } from 'react-native-paper';\r\n\r\nconst ContentTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'PAGE'} />\r\n      <ContentGroupList type={'NOTEV2'} extra={false}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Contents'), component:ContentTabView, icon:<List.Icon icon={'table-of-contents'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  return <HomeSection tabViews={tabViews} title={lang('home')}>\r\n    <View style={{flexGrow:1, width:'80%', marginTop:72}}>\r\n      <Text style={{fontSize:32, color}}>Blacktokki Notebook</Text>\r\n      <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n      {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n      <View style={{height:24}}/>\r\n      <ConfigSections/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import ContentListScreen from \"./main/ContentListScreen\";\r\nimport NoteScreen from \"./main/NoteScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n      title:'home',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NoteScreen: {\r\n      path: 'notes',\r\n      title: 'notes',\r\n      component: NoteScreen\r\n    },\r\n    ContentListScreen: {\r\n      path: 'contents',\r\n      title: 'contents',\r\n      component: ContentListScreen\r\n    }\r\n  };\r\n  ","import { useQuery } from \"react-query\";\r\nimport { getContentOne } from \"../services/notebook\";\r\n\r\nexport default function useContent(id?:number){\r\n  const { data } = useQuery([\"Content\", id] , async()=> (id?await getContentOne(id):undefined))\r\n  return data\r\n}","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView,  View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport ContentList from '../../components/ContentList';\r\n\r\nexport default function ContentListScreen({ navigation, route }: StackScreenProps<any, 'ContentList'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id:  route?.params?.id===\"*\"?\"*\":parseInt(route?.params?.id),\r\n    type: route?.params?.type\r\n  } as { created:true, type:'NOTEV2' } | { created:false, id:number| \"*\" }\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const rootlist = useContentList(0);\r\n  const list = rootlist\r\n  const contentMutation = useContentMutation()\r\n  const content = params.created?undefined:list?.find(v=>v.id===params.id)\r\n  const [title, setTitle] = useState<string>()\r\n  const [editable, setEditable] = useState(false)\r\n  const type = params.created?params.type:content?.type\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else{\r\n      navigation.navigate('HomeScreen', {tab:1})\r\n    }\r\n  }\r\n  const onSave = ()=>{\r\n    if (!auth.user || (title===undefined) || (content?.title === title) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    if (params.created){\r\n        const typedList = list?.filter(v=>v.type == params.type)\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:0, type, order: (typedList?.length || 0) + 1, title, option:{}}).then(v=>{\r\n            navigate(\"ContentListScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, title}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'NOTEV2': lang('New Note'),\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}  \r\n  useLayoutEffect(()=>{\r\n    if(params.created){\r\n      setEditable(false)\r\n      setTitle(defaultTitle[params.type])\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setTitle(content.title)\r\n    }\r\n  }, [content, type])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else {\r\n        navigation.setOptions({\r\n            title: content?.title || lang(\"All Timelines\"),\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content?.type==='NOTEV2' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('NoteScreen', {parentId:content.id})}/>}\r\n              {(content && !params.created) && <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>}\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, type, editable]);\r\n\r\n  const editableExact = (params.created || editable)\r\n\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\", backgroundColor:'transparent'}}>\r\n    {editableExact?\r\n      <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={params.created?back:()=>setEditable(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>}\r\n      </>:\r\n      <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n        {content && <ContentList parentContent={content}/>}\r\n      </ScrollView>}\r\n    </ThemedView>\r\n}\r\n","import React from 'react';\r\nimport ContentGroupList from '../components/ContentGroupList';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <ScrollView style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('HomeScreen')} />\r\n        <ContentGroupList type={'PAGE'} />\r\n        <ContentGroupList type={'NOTEV2'} extra={true} />\r\n    </ScrollView>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { NotebookProvider } from '../hooks/useNotebookContext';\r\n\r\nconst getConfig = async () => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'HomeScreen',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <></>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig().then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n        <NotebookProvider>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n        </NotebookProvider>\r\n    </PaperProvider>\r\n}"],"names":["re","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref","link","isMobile","_jsx","View","style","borderRadius","marginVertical","marginHorizontal","children","_jsxs","TouchableOpacity","onPress","Linking","openURL","url","onLongPress","width","flexDirection","imageUrl","Image","source","uri","resizeMode","maxWidth","maxHeight","borderWidth","undefined","flex","overflow","minHeight","Text","fontSize","numberOfLines","title","ellipsizeMode","axios","axiosCreate","getContentOne","_asyncToGenerator","id","get","data","_x","apply","arguments","getContentList","_ref2","parentId","type","parentIdParam","typeParam","value","_x2","_x3","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","deleteContent","_ref6","delete","_x6","postCells","_ref7","contents","_x7","previewScrap","_ref8","cells","_ref9","preview","query","_x9","useContentList","useQuery","useContentMutation","queryClient","useQueryClient","create","useMutation","onSuccess","_onSuccess","invalidateQueries","update","_onSuccess2","Promise","all","_delete","updateCells","useEffect","mutateAsync","updatedOffset","Date","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","slice","date","parentContent","ScrollView","item","justifyContent","padding","borderBottomWidth","borderColor","navigate","flexShrink","opacity","toRaw","textAlign","DraggableFlatList","ScaleDecorator","DndCore","DndSortable","DndUtilities","Platform","OS","DraggableImport","default","require","DraggableCellItem","code","renderCellContent","_DndSortable$useSorta","useSortable","attributes","listeners","setNodeRef","transform","transition","isDragging","CSS","Transform","toString","x","y","scaleX","scaleY","position","zIndex","ref","_objectSpread","cursor","height","left","top","SortableCellsList","items","onSortEnd","getId","_useState","useState","_useState2","_slicedToArray","codes","setCodes","_useState3","_useState4","tempCodes","setTempCodes","endsWith","now","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","TouchSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","findIndex","newIndex","idx","arrayMove","Array","from","keys","SortableContext","strategy","verticalListSortingStrategy","commonStyles","cellsList","StyleSheet","paddingVertical","paddingHorizontal","setItems","setData","renderContent","renderItem","keyExtractor","drag","isActive","alignItems","Icon","name","size","color","contentContainerStyle","onChangeText","placeholder","_ref$autoCapitalize","autoCapitalize","_ref$autoCorrect","autoCorrect","_ref$minHeight","_ref$maxHeight","setHeight","TextInput","multiline","onContentSizeChange","contentHeight","nativeEvent","contentSize","newHeight","Math","max","min","textAlignVertical","scrollEnabled","ExecutionStatus","typeDetail","executable","init","iconName","iconSize","light","dark","createUseStyle","styles","_styles","theme","lightStyles","darkStyles","React","isSelected","heightRef","setCells","executeCell","setSelectedCellId","useStyles","markdownStyles","useMarkdownStyles","updateCellContent","content","prevCells","cell","toggleInputVisibility","inputVisible","toggleOutputVisibility","outputVisible","cellContainer","current","selectedCell","onLayout","e","layout","cellHandle","executionCount","executionCountText","cellContent","activeOpacity","cellInputContainer","visibleToggleContainer","visibleToggle","cellToolbar","toolbarButton","disabled","summaryButton","summaryText","display","EditorViewer","autoResize","Editor","setValue","text","DynamicTextInput","codeInput","markdownInput","Markdown","status","COMPLETED","ERROR","_Fragment","JSON","parse","output","LinkPreview","outputContainer","errorOutput","outputText","Colors","background","codeText","codeBackground","outerBackground","border","selectedBorder","error","markdownHead","markdownCode","header","backgroundColor","elevation","fontWeight","headerButtonText","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","draggingCell","paddingTop","margin","borderBottomColor","fontFamily","borderTopWidth","borderTopColor","headerButtons","marginBottom","marginRight","body","heading1","marginTop","heading2","code_inline","code_block","container","addCellContainer","addCellButton","addCellButtonText","props","useColorScheme","lang","useLangContext","cellsHistory","present","_setCells","_cells","stringify","newCells","forEach","setHistory","past","concat","_toConsumableArray","future","func","selectedCellId","useRef","nextExecutionCount","useMemo","counts","sort","a","b","cellRef","executeAllCells","_executeAllCells","RUNNING","find","c","result","resolve","reject","then","console","log","String","useCallback","Cell","SafeAreaView","SortableList","Object","entries","k","buttonStyle","newCell","IDLE","addCell","previous","newPast","undo","next","newFuture","redo","NotebookContext","createContext","opened","setOpened","NotebookProvider","complete","setComplete","auth","useAuthContext","loadOpened","AsyncStorage","getItem","user","fromEntries","created","_setOpened","_auth$user","newOpened","parseInt","setItem","Provider","useOpenedContext","_useContext","useContext","openedIds","addOpenedIds","newOpenIds","deleteOpenedIds","unsaved","getItemPadding","isLandscape","ContentSubGroupList","_React$useState","_React$useState2","expanded","setExpanded","window","useResizeContext","note","itemPadding","List","_props","icon","right","TouchableRipple","paddingLeft","isExpanded","MaterialCommunityIcon","direction","I18nManager","getConstants","isRTL","notes","pages","_notes$find","_pages$find","v2","selectable","extra","ContentTabView","ContentGroupList","ConfigTabView","ConfigSections","main","HomeScreen","component","navigation","route","tabViews","headerRight","HomeSection","flexGrow","path","NoteScreen","_route$params","_route$params2","_route$params3","_route$params4","params","_useOpenedContext","option","EXECUTION_COUNT","EXECUTION_STATUS","INPUT_VISIBLE","OUTPUT_VISIBLE","unsavedKey","_setHistory","history","contentMutation","setTitle","_useState5","_useState6","editPage","setEditPage","isSaved","original","useIsSaved","onSaveTitle","promise","replaceAll","join","userId","order","onSave","deleted","useLayoutEffect","setOptions","CommonButton","exit","headerShown","canGoBack","goBack","nextId","values","tab","back","ThemedView","mode","textStyle","NoteSection","ContentListScreen","list","editable","setEditable","defaultTitle","onEdit","editableExact","_promise","typedList","ContentList","getConfig","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}