{"version":3,"file":"static/js/66.f5eac6a8.chunk.js","mappings":"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","sources":["src/components/LinkPreview.tsx","src/services/notebook.ts","src/hooks/useContentList.ts","src/components/ContentList.tsx","src/components/DndSortableList.tsx","src/components/DynamicTextInput.tsx","src/components/Cell/common.ts","src/components/Cell/index.tsx","src/screens/main/NoteSection.tsx","src/hooks/useNotebookContext.tsx","src/components/ContentGroupList.tsx","src/screens/main/HomeScreen.tsx","src/screens/index.ts","src/screens/main/NoteScreen.tsx","src/hooks/useContent.ts","src/screens/main/ContentListScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking, TouchableOpacity } from \"react-native\"\r\nimport { View, Text } from \"@blacktokki/core\";\r\nimport { Link } from \"../types\"\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nexport const toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\n\r\nexport default ({link, isMobile}:{link:Link, isMobile:boolean})=>{\r\n    return <View style={{borderRadius:6, marginVertical:10, marginHorizontal:8}}>\r\n            <TouchableOpacity\r\n                onPress={()=>Linking.openURL(link.url)}\r\n                onLongPress={()=>{}}\r\n                style={{width:'100%', flexDirection:'row'}}\r\n            >\r\n                {link.imageUrl?<Image source={{uri:link.imageUrl}} resizeMode=\"cover\" style={{ borderRadius:6, width:'100%', maxWidth:isMobile?120:160, maxHeight:isMobile?120:160, borderWidth:1}}/>:undefined}\r\n                <View style={{flex:1, marginHorizontal:20, overflow:'hidden', minHeight:isMobile?90:120}}>\r\n                    <Text style={{fontSize:18}} numberOfLines={1}>{link.title}</Text>\r\n                    <Text style={{fontSize:14}} numberOfLines={7} ellipsizeMode='head'>{link.description}</Text>\r\n                    <Text style={{fontSize:12}} numberOfLines={1}>{link.url}</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n}","import { toUrls } from '../components/LinkPreview';\r\nimport { Content, PostContent, CellType, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const postCells = async (contents:{created:(PostContent & {type:CellType})[], deleted:{parentId:number}}) => {\r\n    await axios.post(`/api/v1/content/bulk`, contents)\r\n}\r\n\r\nexport const executeCells = async (cells:({type: CellType |'OUTPUT'} & ({query:string} | {id:number}))[]) => { // TBA\r\n    return (await axios.post(`/api/v1/cell/`, cells)).data\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getContentList, patchContent, postCells, postContent } from \"../services/notebook\";\r\nimport { Content } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useContentList(parentId?:number, type?: Content['type']){\r\n  const { data } = useQuery([\"ContentList\", parentId, type] , async()=> (parentId!==undefined || type!==undefined)?await getContentList(parentId, type):undefined)\r\n  return data\r\n}\r\n\r\n\r\nexport function useContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postContent, {\r\n    onSuccess: async()=>{\r\n      await queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const update = useMutation(patchContent, {\r\n    onSuccess: async () => {\r\n      await Promise.all([\r\n        queryClient.invalidateQueries(\"ContentList\"),\r\n        queryClient.invalidateQueries(\"Content\")\r\n      ])\r\n    }\r\n  })\r\n  const _delete = useMutation(deleteContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const updateCells = useMutation(postCells, {\r\n    onSuccess: () =>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n  }, [])\r\n\r\n  return {create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutateAsync, updateCells:updateCells.mutateAsync}\r\n}","import * as React from 'react';\r\nimport { Content } from '../types';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Text, useResizeContext } from '@blacktokki/core';\r\nimport { ScrollView, TouchableOpacity, View } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\nimport useContentList from '../hooks/useContentList';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\nconst _cardPadding = (isLandscape:boolean) => isLandscape?20:4\r\nconst _cardMaxWidth = (isLandscape:boolean) => isLandscape?230:190\r\n\r\n\r\nconst CardPage = React.memo(({data}: {data:Content[]})=>{\r\n  const window  = useResizeContext()\r\n  const cardMaxWidth = _cardMaxWidth(window===\"landscape\")\r\n  const fSize = window==='landscape'?2:0\r\n\r\n  return [...data.sort((a, b)=>a.updated < b.updated?1:-1), null, null]?.map((item, index)=>{\r\n    if (item === null){\r\n      return <View key={index} style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n    }\r\n    const content = item.description\r\n    const onPress = ()=>navigate('NoteScreen', {id:item.id})\r\n    return <TouchableOpacity key={index} style={{flexBasis:window==='landscape'?'33%':'50%', padding:_cardPadding(window==='landscape'), paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n        <Card onPress={onPress} style={{aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}}>\r\n          <Card.Content>\r\n          <Text style={{fontSize:12+fSize, opacity: 0.4}}>{content}</Text>\r\n          </Card.Content>\r\n        </Card>\r\n        <View style={{flexDirection:'row', marginTop:10, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n          <Text style={{fontSize:14+fSize}}>{item.title}</Text>\r\n          <Text style={{fontSize:12+fSize, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n            \r\n        </View>\r\n    </TouchableOpacity>\r\n  })\r\n})\r\n\r\nconst ContentList = ({ parentContent } : { parentContent:Content }) => {\r\n  const data = useContentList(parentContent.id)\r\n  const window  = useResizeContext()\r\n  return data && (\r\n    <ScrollView \r\n      style={{ height:0}} \r\n      contentContainerStyle={{flexDirection:'row', justifyContent:'center'}}\r\n    >\r\n      <View style={{backgroundColor:'transparent', flexBasis:'100%', maxWidth:(_cardMaxWidth(window==='landscape') + 5)  * (window==='landscape'?5:3), flexWrap:'wrap', flexDirection:'row', paddingRight:_cardPadding(window==='landscape'), justifyContent:window==='landscape'?undefined:'center'}}>\r\n        <CardPage data={data}/>\r\n      </View>\r\n      {/* {window === 'landscape' && <View style={{backgroundColor:'transparent', flexBasis:'0%', flexGrow:1, maxWidth:240}}></View>} */}\r\n    </ScrollView>)\r\n};\r\n\r\nexport default ContentList;","import React, { useEffect, useState } from 'react';\r\nimport { Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\n// @ts-ignore\r\nimport { MaterialIcons as Icon } from 'react-native-vector-icons';\r\nimport { RenderItem, SortableListProps } from './SortableListBase';\r\n\r\n// Import platform-specific components\r\nlet DraggableFlatList: any;\r\nlet ScaleDecorator: any;\r\n\r\n// For web, import specific versions of dnd-kit components\r\n// @dnd-kit/core@3.0.3, @dnd-kit/sortable@3.0.1, @dnd-kit/utilities@2.0.0\r\nlet DndCore: any;\r\nlet DndSortable: any;\r\nlet DndUtilities: any;\r\n\r\n// Handle platform-specific imports\r\nif (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n  // For native platforms, import react-native-draggable-flatlist\r\n  const DraggableImport = {} as any; // require('react-native-draggable-flatlist');\r\n  DraggableFlatList = DraggableImport.default;\r\n  ScaleDecorator = DraggableImport.ScaleDecorator;\r\n} else {\r\n  // For web, import dnd-kit with specific versions\r\n  DndCore = require('@dnd-kit/core');\r\n  DndSortable = require('@dnd-kit/sortable');\r\n  DndUtilities = require('@dnd-kit/utilities');\r\n}\r\n\r\n// Web environment Draggable Cell Item using dnd-kit\r\nconst DraggableCellItem = <T, >({ \r\n  item, \r\n  code,\r\n  renderCellContent,\r\n}: { \r\n  item: T, \r\n  code: string,\r\n  renderCellContent: RenderItem<T>,\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = DndSortable.useSortable({ id:code });\r\n\r\n  const style = {\r\n    transform: DndUtilities.CSS.Transform.toString(transform ? {\r\n      x: transform.x,\r\n      y: transform.y,\r\n      scaleX: 1,\r\n      scaleY: 1\r\n    } : null),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    position: 'relative' as const,\r\n    flex: 1,\r\n    zIndex: isDragging ? 1 : 0\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n    >\r\n      <div \r\n        {...attributes}\r\n        {...listeners}\r\n        style={{ \r\n          cursor: 'move', \r\n          width: 40, \r\n          position: 'absolute', \r\n          height: '100%', \r\n          zIndex: 10,\r\n          left: 0,\r\n          top: 0\r\n        }}\r\n      />\r\n      {renderCellContent({item})}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Web Sortable List using dnd-kit\r\nconst SortableCellsList = <T, >({ \r\n  items, \r\n  onSortEnd, \r\n  renderCellContent,\r\n  getId\r\n}: { \r\n  items: T[], \r\n  onSortEnd: (items: T[]) => void, \r\n  renderCellContent: RenderItem<T>,\r\n  getId:(item:T)=>string,\r\n}) => {\r\n  const [codes, setCodes] = useState(items.map(v=>''+ getId(v)))\r\n  const [tempCodes, setTempCodes] = useState<string[]>()\r\n  useEffect(()=>{\r\n    if (tempCodes){\r\n      setCodes(tempCodes)\r\n      setTempCodes(undefined)\r\n    }\r\n    else if (items.length !== codes.length || items.filter((v, i)=>!codes[i].endsWith(getId(v))).length>0){\r\n      setCodes((codes)=>{\r\n        return items.map((v, i)=>i<codes.length && codes[i].endsWith(getId(v))?codes[i]:Date.now().toString() + '@'+getId(v)).slice(0, items.length)\r\n      })\r\n    }\r\n  }, [items])\r\n  const sensors = DndCore.useSensors(\r\n    DndCore.useSensor(DndCore.PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    DndCore.useSensor(DndCore.KeyboardSensor, {\r\n      coordinateGetter: DndSortable.sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const handleDragEnd = (event: any) => {\r\n    const { active, over } = event;\r\n    \r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = codes.findIndex((item) => item === active.id);\r\n      const newIndex = codes.findIndex((item) => item === over.id);\r\n      const idx = DndSortable.arrayMove(Array.from(Array(items.length).keys()), oldIndex, newIndex)\r\n      setTempCodes(DndSortable.arrayMove(codes, oldIndex, newIndex).map((v:string, i:number)=>i>idx[i]?'@'+v:v))\r\n      onSortEnd(DndSortable.arrayMove(items, oldIndex, newIndex));\r\n    }\r\n  };\r\n  return (\r\n    <DndCore.DndContext\r\n      sensors={sensors}\r\n      collisionDetection={DndCore.closestCenter}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <DndSortable.SortableContext\r\n        items={tempCodes || codes}\r\n        strategy={DndSortable.verticalListSortingStrategy}\r\n      >\r\n        <View style={commonStyles.cellsList}>\r\n          {items.map((item, i) => {\r\n            const code = (tempCodes || codes)[i]\r\n            return <DraggableCellItem\r\n              key={code || '' + getId(item)}\r\n              code={code}\r\n              item={item}\r\n              renderCellContent={renderCellContent}\r\n            />\r\n})}\r\n        </View>\r\n      </DndSortable.SortableContext>\r\n    </DndCore.DndContext>\r\n  );\r\n};\r\n\r\n// Choose the appropriate list component based on platform\r\nconst SortableList = <T, >({data, setData:setItems, getId, renderItem:renderContent}:SortableListProps<T>) => {\r\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n    return (\r\n      <DraggableFlatList\r\n        data={data}\r\n        onDragEnd={({ data }: { data: T[] }) => setItems(data)}\r\n        keyExtractor={(item: any) => item.id.toString()}\r\n        renderItem={({ item, drag, isActive }: any) => {\r\n          return (\r\n            <ScaleDecorator>\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <TouchableOpacity\r\n                  onLongPress={drag} \r\n                  style={{ \r\n                    width: 40,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n                </TouchableOpacity>\r\n                <View style={{ flex: 1 }}>\r\n                  {renderContent(item)}\r\n                </View>\r\n              </View>\r\n            </ScaleDecorator>\r\n          );\r\n        }}\r\n        contentContainerStyle={commonStyles.cellsList}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <SortableCellsList\r\n        items={data}\r\n        getId={getId}\r\n        onSortEnd={setItems}\r\n        renderCellContent={renderContent}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst commonStyles = StyleSheet.create({\r\n  cellsList: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 5,\r\n  }\r\n});\r\n\r\nexport default SortableList;\r\n","import React, { useState } from \"react\";\r\nimport { TextInput } from \"react-native\";\r\n\r\n// 동적 높이 TextInput 컴포넌트\r\nexport default ({\r\n    value,\r\n    onChangeText,\r\n    style,\r\n    placeholder,\r\n    autoCapitalize = 'none',\r\n    autoCorrect = false,\r\n    minHeight = 40,\r\n    maxHeight = 200,\r\n  }: {\r\n    value: string;\r\n    onChangeText: (text: string) => void;\r\n    style?: any;\r\n    placeholder?: string;\r\n    autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters';\r\n    autoCorrect?: boolean;\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n  }) => {\r\n    const [height, setHeight] = useState(minHeight);\r\n  \r\n    const handleContentSizeChange = (event: any) => {\r\n      const contentHeight = event.nativeEvent.contentSize.height;\r\n      \r\n      // 높이를 minHeight와 maxHeight 사이로 제한\r\n      const newHeight = Math.max(\r\n        minHeight, \r\n        Math.min(contentHeight, maxHeight)\r\n      );\r\n  \r\n      setHeight(newHeight);\r\n    };\r\n  \r\n    return (\r\n      <TextInput\r\n        multiline\r\n        value={value}\r\n        onChangeText={onChangeText}\r\n        onContentSizeChange={handleContentSizeChange}\r\n        style={[\r\n          style, \r\n          { \r\n            height: height,\r\n            textAlignVertical: 'top',\r\n          }\r\n        ]}\r\n        scrollEnabled={height >= maxHeight}\r\n        placeholder={placeholder}\r\n        autoCapitalize={autoCapitalize}\r\n        autoCorrect={autoCorrect}\r\n      />\r\n    );\r\n  };","import { StyleSheet } from \"react-native\";\r\nimport { CellType } from \"../../types\";\r\n\r\n// Cell execution status\r\nexport enum ExecutionStatus {\r\n    IDLE = 'idle',\r\n    RUNNING = 'running',\r\n    COMPLETED = 'completed',\r\n    ERROR = 'error',\r\n}\r\n  \r\n// Structure for a cell\r\nexport interface CellItem {\r\n  id: string;\r\n  type: CellType;\r\n  content: string;\r\n  output: string;\r\n  executionCount: number | null;\r\n  status: ExecutionStatus;\r\n  inputVisible: boolean;\r\n  outputVisible: boolean;\r\n}\r\n\r\nexport const typeDetail = {\r\n    'EDITOR':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'',\r\n      iconName: \"edit\",\r\n      iconSize: 18,\r\n      light:'goldenrod',\r\n      dark: 'darkgoldenrod'\r\n    },\r\n    'LINK': {\r\n      executable:true,\r\n      init:(cells:CellItem[])=>'https://',\r\n      iconName: 'link',\r\n      iconSize: 20,\r\n      light: '#4CAF50',\r\n      dark: '#2E7D32'// 어두운 녹색\r\n    },\r\n    'MARKDOWN':{\r\n      executable:false,\r\n      init:(cells:CellItem[])=>'# Welcome to Jupyter Notebook in React Native\\n\\nThis is a basic implementation of Jupyter Notebook using React Native and TypeScript.',\r\n      iconName: 'text-fields',\r\n      iconSize: 20,\r\n      light: '#2196F3',\r\n      dark: '#1565C0'// 어두운 블루\r\n    }\r\n}\r\n\r\nexport const createUseStyle = <T extends StyleSheet.NamedStyles<T>, >(styles:(theme:'light'|'dark')=>(T | StyleSheet.NamedStyles<T>)) => {\r\n    const _styles = (theme:'light'|'dark') => StyleSheet.create(styles(theme))\r\n    const lightStyles = _styles('light')\r\n    const darkStyles = _styles('dark')\r\n    return (theme:'light'|'dark')=>theme==='dark'?darkStyles:lightStyles\r\n}\r\n","// App.tsx\r\nimport React, { MutableRefObject } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  TouchableOpacity,\r\n  Platform, \r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport Markdown from 'react-native-markdown-display';\r\nimport { Editor, EditorViewer } from '@blacktokki/editor';\r\nimport { Link } from '../../types';\r\nimport LinkPreview from '../LinkPreview';\r\nimport DynamicTextInput from '../DynamicTextInput';\r\nimport { CellItem, ExecutionStatus, createUseStyle, typeDetail} from './common';\r\n\r\nexport { ExecutionStatus, typeDetail } from './common';\r\nexport type { CellItem } from './common';\r\nexport default React.memo(({theme, item, isSelected, heightRef, setCells, executeCell, setSelectedCellId}:{theme:'light'|'dark', item:CellItem, isSelected:boolean, heightRef:MutableRefObject<Record<string, number>>, setCells:(func:(cells:CellItem[])=>CellItem[])=>void, executeCell:(id:string)=>void, setSelectedCellId:(id:string)=>void})=>{\r\n  const styles = useStyles(theme)\r\n  const markdownStyles = useMarkdownStyles(theme)\r\n  // Update cell content\r\n  const updateCellContent = (id: string, content: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, content } : cell\r\n      )\r\n    );\r\n  };\r\n  // Delete a cell\r\n  const deleteCell = (id: string) => {\r\n    setCells(prevCells => prevCells.filter(cell => cell.id !== id));\r\n  };\r\n\r\n  // Toggle input visibility\r\n  const toggleInputVisibility = (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, inputVisible: !cell.inputVisible } : cell\r\n      )\r\n    );\r\n  };\r\n  \r\n  // Toggle output visibility\r\n  const toggleOutputVisibility = (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id ? { ...cell, outputVisible: !cell.outputVisible } : cell\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={[\r\n      styles.cellContainer,\r\n      item.inputVisible && item.type==='EDITOR' && {minHeight: heightRef.current[item.id]},\r\n      isSelected && styles.selectedCell,\r\n      // isDragging && styles.draggingCell\r\n    ]}\r\n    onLayout={e=>{heightRef.current[item.id]=e.nativeEvent.layout.height}}\r\n    >\r\n      {/* Cell sidebar with execution count and drag handle */}\r\n      <View style={styles.cellHandle}>\r\n        {typeDetail[item.type].executable && (\r\n          <View style={styles.executionCount}>\r\n            <Text style={styles.executionCountText}>\r\n              {item.executionCount ? `[${item.executionCount}]` : '[ ]'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n        <Icon name=\"drag-handle\" size={20} color=\"#888\" />\r\n      </View>\r\n      \r\n      <View style={styles.cellContent}>\r\n        {/* Cell toolbar */}\r\n        {<View style={styles.cellToolbar}>\r\n        <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => setSelectedCellId(item.id)}\r\n          >\r\n            <Icon\r\n              name={typeDetail[item.type].iconName} \r\n              size={typeDetail[item.type].iconSize} \r\n              color=\"#2196F3\" \r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => executeCell(item.id)}\r\n            disabled={!typeDetail[item.type].executable}\r\n          >\r\n            <Icon \r\n              name=\"play-arrow\" \r\n              size={20} \r\n              color={typeDetail[item.type].executable ? \"#4CAF50\" : \"#ccc\"} \r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={styles.toolbarButton}\r\n            onPress={() => deleteCell(item.id)}\r\n          >\r\n            <Icon name=\"delete\" size={20} color=\"#F44336\" />\r\n          </TouchableOpacity>\r\n        </View>}\r\n        \r\n        {/* Cell input area */}\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={() => setSelectedCellId(item.id)}\r\n          style={styles.cellInputContainer}\r\n        >\r\n        {/* New toggle button for input */}\r\n        <TouchableOpacity \r\n          style={styles.visibleToggle}\r\n          onPress={() => toggleInputVisibility(item.id)}\r\n        />\r\n        <View style={{flex:1, paddingHorizontal:5}}>\r\n          {/* SUMMARY CELL */}\r\n          {!item.inputVisible && <TouchableOpacity style={styles.summaryButton}>\r\n            <Text style={styles.summaryText}>● ● ●</Text>\r\n          </TouchableOpacity>}\r\n          {/* EDITOR CELL */}\r\n          {<View style={{display:item.inputVisible && item.type === 'EDITOR'?'flex':'none'}}>\r\n            <EditorViewer theme={theme} value={item.content} autoResize active={!isSelected} onPress={()=>setSelectedCellId(item.id)}/>\r\n            <Editor       theme={theme} value={item.content} autoResize active={isSelected} setValue={item.type === 'EDITOR'?(text) => updateCellContent(item.id, text):()=>{}}/>\r\n          </View>}\r\n          {/* LINK CELL */}\r\n          {item.inputVisible && item.type === 'LINK' && <DynamicTextInput\r\n              style={styles.codeInput}\r\n              value={item.content}\r\n              onChangeText={(text) => updateCellContent(item.id, text)}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n          }\r\n          {/* MARKDOWN CELL */}\r\n          {item.inputVisible && item.type === \"MARKDOWN\" && (\r\n          isSelected ? (\r\n            <DynamicTextInput\r\n              style={styles.markdownInput}\r\n              value={item.content}\r\n              onChangeText={(text) => updateCellContent(item.id, text)}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n            ) : (\r\n              <Markdown style={markdownStyles}>\r\n                {item.content}\r\n              </Markdown>\r\n            )\r\n          )}\r\n        </View>\r\n        </TouchableOpacity>\r\n        {/* Output area for code cells */}\r\n        {<View style={{flexDirection:'row'}}> \r\n          <TouchableOpacity \r\n            style={styles.visibleToggle}\r\n            onPress={() => toggleOutputVisibility(item.id)}\r\n          />\r\n          {!item.outputVisible ? (item.inputVisible && <TouchableOpacity style={styles.summaryButton}>\r\n            <Text style={styles.summaryText}>● ● ●</Text>\r\n          </TouchableOpacity>):\r\n          <View style={{flex:1}}>\r\n            {item.status === ExecutionStatus.COMPLETED  ? <>\r\n              {typeDetail[item.type].executable && (JSON.parse(item.output) as Link[]).map((link, i)=><LinkPreview key={i} link={link} isMobile={false} />)}\r\n            </>:\r\n            item.status === ExecutionStatus.ERROR && <View style={[styles.outputContainer, styles.errorOutput]}>\r\n              <Text style={styles.outputText}>{item.output}</Text>\r\n            </View>}\r\n          </View>}\r\n        </View>}\r\n      </View>\r\n    </View>\r\n  );\r\n})\r\n\r\nconst Colors = {\r\n    light:{\r\n      background: '#f8f8f8',\r\n      text: '#111',\r\n      codeText: '#333',\r\n      codeBackground: '#f8f8f8',\r\n      outerBackground: '#fff',\r\n      border: '#e0e0e0',\r\n      selectedBorder: '#3F51B5',\r\n      error:  'rgba(244, 67, 54, 0.1)',\r\n      markdownHead: '#2C3E50',\r\n      markdownCode: '#f5f5f5',\r\n    },\r\n    dark:{\r\n      background:'#1E1E1E',  // 어두운 헤더 배경\r\n      text: '#E0E0E0',  // 연한 회색 텍스트\r\n      codeText: '#B0B0B0',// 회색 텍스트\r\n      codeBackground: '#2A2A2A',  // 어두운 출력 배경\r\n      outerBackground: '#121212', // 다크 모드 배경색\r\n      border: '3A3A3A',  // 어두운 구분선\r\n      selectedBorder: '#4A90E2', // 밝은 블루 선택 강조\r\n      error:  'rgba(244, 67, 54, 0.2)', // 오류 출력 배경 (반투명 레드)\r\n      markdownHead: '#A0B9D0',\r\n      markdownCode: '#1E1E1E',\r\n    }\r\n}\r\n\r\nconst useStyles = createUseStyle((theme)=>({\r\n    header: {\r\n      backgroundColor: Colors[theme].background,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      padding: 15,\r\n      ...(Platform.OS !== 'web' && { elevation: 4 }),\r\n    },\r\n    title: {\r\n      color: Colors[theme].text,\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n    },\r\n    headerButtonText: {\r\n      color: Colors[theme].codeText,\r\n      marginLeft: 5,\r\n      fontWeight: '500',\r\n    },\r\n    cellContainer: {\r\n      flexDirection: 'row',\r\n      borderTopLeftRadius: 6,\r\n      borderBottomLeftRadius: 6,\r\n      backgroundColor: Colors[theme].background,\r\n      overflow: 'hidden',\r\n      borderColor: Colors[theme].border,\r\n      padding:1,\r\n    },\r\n    selectedCell: {\r\n      borderColor: Colors[theme].selectedBorder,\r\n      borderWidth: 2,\r\n      padding:0,\r\n    },\r\n    draggingCell: {\r\n      opacity: 0.7,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    cellHandle: {\r\n      width: 40,\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      alignItems: 'center',\r\n      paddingTop: 15,\r\n    },\r\n    cellContent: {\r\n      flex: 1,\r\n      borderWidth: 1,\r\n      margin: 10,\r\n      marginVertical: 5,\r\n      borderColor: Colors[theme].border,\r\n    },\r\n    cellToolbar: {\r\n      flexDirection: 'row',\r\n      padding: 10,\r\n      paddingVertical: 0,\r\n      borderBottomColor: Colors[theme].border,\r\n    },\r\n    codeInput: {\r\n      fontFamily: 'monospace',\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    markdownInput: {\r\n      minHeight: 40,\r\n      color: Colors[theme].text,\r\n      backgroundColor: Colors[theme].background,\r\n    },\r\n    outputContainer: {\r\n      backgroundColor: Colors[theme].codeBackground,\r\n      padding: 10,\r\n      borderTopWidth: 1,\r\n      borderTopColor: Colors[theme].border,\r\n    },\r\n    errorOutput: {\r\n      backgroundColor: Colors[theme].error,\r\n    },\r\n    outputText: {\r\n      fontFamily: 'monospace',\r\n      color: Colors[theme].codeText,\r\n    },\r\n    // common styles\r\n    headerButtons: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingHorizontal: 12,\r\n      paddingVertical: 6,\r\n      borderRadius: 4,\r\n    },\r\n    executionCount: {\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n    },\r\n    toolbarButton: {\r\n      padding: 5,\r\n      marginRight: 10,\r\n    },\r\n    cellInputContainer: {\r\n      //padding: 10,\r\n      flexDirection:'row',\r\n      padding:0,\r\n      // paddingHorizontal:5,\r\n    },\r\n    executionCountText: {\r\n      color: '#888',\r\n      fontSize: 12,\r\n    },\r\n    visibleToggle: {\r\n      width:10, height:'100%', backgroundColor:'#2196F3',borderRadius:5\r\n    },\r\n    summaryButton: {padding:10, width:'100%'},\r\n    summaryText: {\r\n      minHeight: 20,\r\n      color: 'gray',\r\n      backgroundColor: Colors[theme].background,\r\n      fontSize:10\r\n    },\r\n}))\r\n\r\nconst useMarkdownStyles = createUseStyle((theme)=>({\r\n    body: {\r\n      fontSize: 14,\r\n      color: Colors[theme].codeText,\r\n    },\r\n    heading1: {\r\n      fontSize: 24,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    heading2: {\r\n      fontSize: 20,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontWeight: 'bold',\r\n      color: Colors[theme].markdownHead\r\n    },\r\n    code_inline: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 2,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n    code_block: {\r\n      backgroundColor: Colors[theme].markdownCode,\r\n      padding: 10,\r\n      borderRadius: 3,\r\n      fontFamily: 'monospace',\r\n    },\r\n}))","// App.tsx\r\nimport React, { useState, useCallback, MutableRefObject, useEffect, useRef, useMemo } from 'react';\r\nimport { \r\n  SafeAreaView, \r\n  StyleSheet, \r\n  View, \r\n  Text, \r\n  TouchableOpacity, \r\n  StyleProp,\r\n  ViewStyle,\r\n} from 'react-native';\r\n// @ts-ignore\r\nimport {MaterialIcons as Icon} from 'react-native-vector-icons';\r\nimport { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { CellType } from '../../types';\r\nimport { previewScrap } from '../../services/notebook';\r\nimport SortableList from '../../components/DndSortableList';\r\nimport Cell, { CellItem, ExecutionStatus, typeDetail } from '../../components/Cell';\r\n\r\nconst execute = (type:CellType, query: string): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (type==='LINK'){\r\n        resolve(previewScrap({query}).then(v=>JSON.stringify(v)))\r\n      }\r\n      else if(type==='MARKDOWN'){\r\n        console.log(\"TEMP\")\r\n      }\r\n      else {\r\n        resolve(\"\")\r\n      }\r\n    } catch (error) {\r\n      reject(`Error: ${error}`);\r\n    }\r\n  });\r\n};\r\n\r\nexport type CellHistory = {past:string[][], present:string[], future:string[][], cells:Record<string,CellItem>}\r\n\r\nconst App = (props: {cellsHistory:CellHistory, setHistory:(data:CellHistory)=>void, cellRef:MutableRefObject<{executeAllCells:()=>Promise<void>}|undefined>}) => {\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const cellsHistory = props.cellsHistory\r\n  const cells = cellsHistory?.present.map(v=>cellsHistory.cells[v])\r\n  const _setCells = (_cells:CellItem[]) => {\r\n    if (JSON.stringify(cells) === JSON.stringify(_cells)){\r\n      return;\r\n    }\r\n    const newCells = cellsHistory?.cells || {}\r\n    _cells.forEach(v=>{newCells[v.id] = v})\r\n    props.setHistory({\r\n      past: cellsHistory?[ ...cellsHistory.past, cellsHistory.present]:[],\r\n      present:_cells.map(v=>v.id),\r\n      future: [],\r\n      cells:newCells,\r\n    })\r\n  }\r\n  const undo = () =>{\r\n    if(cellsHistory && cellsHistory.past.length>0){\r\n      const previous = cellsHistory.past[cellsHistory.past.length - 1];\r\n      const newPast = cellsHistory.past.slice(0, cellsHistory.past.length - 1);\r\n      props.setHistory({\r\n        past: newPast,\r\n        present:previous,\r\n        future: [cellsHistory.present, ...cellsHistory.future],\r\n        cells:cellsHistory.cells,\r\n      })\r\n    }\r\n  }\r\n  const redo = () => {\r\n    if(cellsHistory && cellsHistory.future.length>0){\r\n      const next = cellsHistory.future[0];\r\n      const newFuture = cellsHistory.future.slice(1);\r\n      props.setHistory({\r\n        past: [...cellsHistory.past, cellsHistory.present],\r\n        present:next,\r\n        future: newFuture,\r\n        cells:cellsHistory.cells,\r\n      })\r\n    }\r\n  }\r\n  const setCells = (func:(c:CellItem[])=>CellItem[])=>_setCells(func(cells))\r\n\r\n  const [selectedCellId, setSelectedCellId] = useState<string | null>(null);\r\n  const heightRef = useRef<Record<string, number>>({})\r\n  const nextExecutionCount = useMemo(()=>{\r\n    const counts = cells.map(v=>v.executionCount).filter(v=>v!==null)\r\n    return counts.length>0?counts.sort((a,b)=>b-a)[0]+1:1\r\n  }, [cells])\r\n  useEffect(()=>{\r\n    props.cellRef.current = {\r\n      executeAllCells: async () => {\r\n        for (const cell of cells) {\r\n          if (typeDetail[cell.type].executable) {\r\n            await executeCell(cell.id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [cells])\r\n  \r\n  // Add a new cell\r\n  const addCell = (type: CellType) => {\r\n    const newCell: CellItem = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      content: typeDetail[type].init(cells),\r\n      output: '',\r\n      executionCount: null,\r\n      status: ExecutionStatus.IDLE,\r\n      inputVisible: true,\r\n      outputVisible: true\r\n    };\r\n    \r\n    setCells(prevCells => [...prevCells, newCell]);\r\n  };\r\n  \r\n  // Execute code in a cell\r\n  const executeCell = async (id: string) => {\r\n    setCells(prevCells => \r\n      prevCells.map(cell => \r\n        cell.id === id \r\n          ? { ...cell, status: ExecutionStatus.RUNNING } \r\n          : cell\r\n      )\r\n    );\r\n    \r\n    const cell = cells.find(c => c.id === id);\r\n    if (!cell || typeDetail[cell.type].executable === false) return;\r\n    \r\n    try {\r\n      const result = await execute(cell.type, cell.content);\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: result, \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.COMPLETED\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    } catch (error) {\r\n      setCells(prevCells => \r\n        prevCells.map(cell => \r\n          cell.id === id \r\n            ? { \r\n                ...cell, \r\n                output: String(error), \r\n                executionCount: nextExecutionCount,\r\n                status: ExecutionStatus.ERROR\r\n              } \r\n            : cell\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Render a single cell (shared between platform implementations)\r\n  const renderCellContent = useCallback(({item}:{item: CellItem}) => {\r\n    return <Cell\r\n      theme={theme}\r\n      item={item}\r\n      isSelected={selectedCellId === item.id}\r\n      heightRef={heightRef}\r\n      setCells={setCells} \r\n      executeCell={executeCell} \r\n      setSelectedCellId={setSelectedCellId}\r\n    />\r\n  }, [selectedCellId, cells]);\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <SortableList data={cells} setData={_setCells} getId={v=>v.id} renderItem={renderCellContent}/>\r\n      \r\n      <View style={styles.addCellContainer}>\r\n        {Object.entries(typeDetail).map(([k, v], i)=>{\r\n          const buttonStyle:StyleProp<ViewStyle> = {\r\n            backgroundColor: v[theme]\r\n          }\r\n          return <TouchableOpacity\r\n          key={i}\r\n          style={[styles.addCellButton, buttonStyle]}\r\n          onPress={() => addCell(k as CellType)}\r\n        >\r\n          <Icon name={v.iconName} size={v.iconSize} color=\"#fff\" />\r\n          <Text style={styles.addCellButtonText}>{lang(k)}</Text>\r\n        </TouchableOpacity>\r\n        })}\r\n        <TouchableOpacity\r\n          key={'undo'}\r\n          style={[styles.addCellButton, {backgroundColor:'gray'}]}\r\n          onPress={() => undo()}\r\n        >\r\n          <Icon name={'undo'} size={18} color=\"#fff\" />\r\n          <Text style={styles.addCellButtonText}>{lang('undo')}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          key={'redo'}\r\n          style={[styles.addCellButton, {backgroundColor:'gray'}]}\r\n          onPress={() => redo()}\r\n        >\r\n          <Icon name={'redo'} size={18} color=\"#fff\" />\r\n          <Text style={styles.addCellButtonText}>{lang('redo')}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  addCellContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 15,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#888',\r\n    zIndex: -1\r\n  },\r\n  addCellButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 4,\r\n    marginHorizontal: 5,\r\n  },\r\n  addCellButtonText: {\r\n    color: '#fff',\r\n    marginLeft: 5,\r\n    fontWeight: '500',\r\n  },\r\n})\r\n\r\n\r\nexport default App;","import { useAuthContext } from \"@blacktokki/account\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\ntype Opened = Record<string, {created:boolean}>\r\n\r\nconst NotebookContext = createContext<{\r\n  opened: Opened; setOpened: (func:(newOpened:Opened)=>void, created:boolean) => void;\r\n}>(\r\n  { opened: {}, setOpened:()=>{} }\r\n);\r\n\r\nexport const NotebookProvider = (props: { children: React.ReactNode; }) => {\r\n  const [complete, setComplete] = useState(false);\r\n  const [opened, setOpened] = useState<Opened>({});\r\n  const { auth } = useAuthContext()\r\n  const loadOpened = async () =>{\r\n    const v = await AsyncStorage.getItem('opened')\r\n    return (v?JSON.parse(v):{}) as Record<string, number[]>\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOpened().then((v) => {\r\n      if (auth){\r\n        if (auth.user){\r\n          const ids:number[] = v[`${auth.user.id}`] || []\r\n          setOpened(Object.fromEntries(ids.map(v=>[`${v}`, {created:false}])));\r\n        }\r\n        setComplete(true);\r\n      }\r\n    });\r\n  }, [auth]);\r\n  const _setOpened = useCallback((func:(newOpened:Opened)=>void, created:boolean)=>{\r\n    const newOpened = {...opened}\r\n    func(newOpened)\r\n    if(created){\r\n      setOpened(newOpened)\r\n    }\r\n    else if(auth.user?.id){\r\n      loadOpened().then(v=>{\r\n        if (auth.user){\r\n          v[`${auth.user.id}`] = Object.keys(newOpened).filter(v => !newOpened[v].created).map(v=>parseInt(v, 10));\r\n          AsyncStorage.setItem('opened', JSON.stringify(v)).then(()=>{\r\n            setOpened(newOpened)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }, [opened])\r\n\r\n  return complete ? (\r\n    <NotebookContext.Provider value={{ opened, setOpened:_setOpened }}>\r\n      {props.children}\r\n    </NotebookContext.Provider>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport const useOpenedContext = () => {\r\n  const { opened, setOpened } = useContext(NotebookContext);\r\n  const openedIds = Object.entries(opened).map(([k, v])=>(v.created?{created:true, parentId:parseInt(k, 10)}:{created:false, id:parseInt(k, 10)}))\r\n  const addOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      newOpenIds[`${id}`] = {created}\r\n    }, created)\r\n  }\r\n\r\n  const deleteOpened = (id:number, created:boolean)=>{\r\n    setOpened((newOpenIds)=>{\r\n      delete newOpenIds[`${id}`]\r\n    }, created)\r\n  }\r\n  \r\n  return {\r\n    openedIds,\r\n    addOpenedIds:addOpened, \r\n    deleteOpenedIds:deleteOpened\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\nimport {useOpenedContext} from '../hooks/useNotebookContext';\r\n\r\nconst ContentGroupList = ( props : {type:'NOTEV2'|'PAGE'}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useContentList(undefined, 'NOTEV2');\r\n  const pages = useContentList(undefined, props.type==='PAGE'?'PAGE':undefined);\r\n  const { openedIds } = useOpenedContext()\r\n  const data = props.type === 'NOTEV2'? notes:openedIds.map((v)=>v.created?{\r\n    parentId:v.parentId,\r\n    title:lang(\"New Page\") + `(${notes?.find(v2=>v2.id===v.parentId)?.title})`\r\n  }:{\r\n    id:v.id,\r\n    title:pages?.find(v2=>v2.id===v.id)?.title\r\n  })\r\n  const window = useResizeContext()\r\n  const itemPadding = window==='landscape'?5:8\r\n  return (\r\n    <List.Section>\r\n      <View style={{flexDirection:'row'}}>\r\n        <List.Subheader style={{flex:1}} selectable={false}>{props.type==='NOTEV2'?lang(\"Notes\"):lang(\"Open Editors\")}</List.Subheader>\r\n        {props.type==='NOTEV2' && <TouchableRipple style={{position:'absolute', right:0}} onPress={()=>navigate('ContentListScreen', {type:'NOTEV2'})}><List.Icon icon='plus' style={{margin:itemPadding}}/></TouchableRipple>}\r\n      </View>\r\n        {data && data.map(v=>\r\n          <List.Item key={v.id || v.parentId} left={(_props)=><List.Icon {..._props} icon={props.type==='NOTEV2'?\"notebook\":\"file-document\"} />} title={v.title} onPress={()=>navigate(props.type==='NOTEV2'?'ContentListScreen':'NoteScreen', v.id!==undefined?{id:v.id}:{parentId:v.parentId})} style={{padding:itemPadding }} />\r\n        )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupList;","import React, {} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupList from '../../components/ContentGroupList';\r\nimport { List } from 'react-native-paper';\r\n\r\nconst ContentTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'NOTEV2'} />\r\n      <ContentGroupList type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Contents'), component:ContentTabView, icon:<List.Icon icon={'table-of-contents'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  return <HomeSection tabViews={tabViews} title={lang('home')}>\r\n    <View style={{flexGrow:1, width:'80%', marginTop:72}}>\r\n      <Text style={{fontSize:32, color}}>Blacktokki Notebook</Text>\r\n      <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n      {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n      <View style={{height:24}}/>\r\n      <ConfigSections/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import ContentListScreen from \"./main/ContentListScreen\";\r\nimport NoteScreen from \"./main/NoteScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n      title:'home',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NoteScreen: {\r\n      path: 'notes',\r\n      title: 'notes',\r\n      component: NoteScreen\r\n    },\r\n    ContentListScreen: {\r\n      path: 'contents',\r\n      title: 'contents',\r\n      component: ContentListScreen\r\n    }\r\n  };\r\n  ","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView,  useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useMemo,useRef,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport useContent from '../../hooks/useContent';\r\nimport NoteSection, { CellHistory } from './NoteSection';\r\nimport { CellType } from '../../types';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport { useOpenedContext } from '../../hooks/useNotebookContext';\r\nimport { CellItem } from '../../components/Cell';\r\n\r\nconst useIsSaved = (init:CellItem[]|undefined, cells:CellItem[]|undefined)=>{\r\n  const original = useMemo(()=>JSON.stringify(init?.map(v=>({...v, id:undefined}))), [init])\r\n  const isSaved = useMemo(()=>cells===undefined || original===JSON.stringify(cells?.map(v=>({...v, id:undefined}))), [original, cells])\r\n  return isSaved\r\n}\r\n\r\n\r\n\r\nexport default function NoteScreen({ navigation, route }: StackScreenProps<any, 'Editor'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId!==undefined?parseInt(route?.params?.parentId):undefined\r\n  } as { created:true, parentId:number } | { created:false, id:number }\r\n  const cellRef: Parameters<typeof NoteSection>[0]['cellRef'] = useRef()\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n  const { openedIds, addOpenedIds, deleteOpenedIds } = useOpenedContext()\r\n\r\n  const content = useContent(params.created?undefined:params.id)\r\n  const contents = useContentList(params.created?undefined:params.id)\r\n  const init = useMemo(()=>{\r\n    return (params.created?[]:contents)?.map(v=>({\r\n      id: `${v.id}`, \r\n      type:v.type as CellType, \r\n      content:v.title, \r\n      output:v.description || '', \r\n      executionCount:v.option.EXECUTION_COUNT?parseInt(v.option.EXECUTION_COUNT, 10):null, \r\n      status:(v.option.EXECUTION_STATUS || 'idle') as any, \r\n      inputVisible: v.option.INPUT_VISIBLE!==undefined?v.option.INPUT_VISIBLE:true,\r\n      outputVisible:v.option.OUTPUT_VISIBLE!==undefined?v.option.OUTPUT_VISIBLE:true}))\r\n  }, [contents])\r\n  const [unsaved, _setUnsaved] = useState<Record<number, CellHistory>>({})\r\n  const unsavedKey = params.created?params.parentId:params.id\r\n  const cellsHistory = unsaved[unsavedKey] as (CellHistory | undefined)\r\n  const setHistory = (history?:CellHistory)=>{\r\n    const u = {...unsaved};\r\n    if (history){\r\n      u[unsavedKey] = history\r\n    }\r\n    else{\r\n      delete u[unsavedKey]\r\n    }\r\n    _setUnsaved(u)\r\n  }\r\n  const cells = cellsHistory?.present.map(v=>cellsHistory.cells[v])\r\n  const contentMutation = useContentMutation()\r\n  const [title, setTitle] = useState<string>()\r\n  const [editPage, setEditPage] = useState(false)\r\n  const isSaved = useIsSaved(init, cells)\r\n  const onSaveTitle = () => {\r\n        if (!auth.user){\r\n          return;\r\n      }\r\n      let promise\r\n      const description = cells?cells.map((v, i)=>{\r\n        let str = toRaw(v.content).replaceAll(/\\r\\n/g, '');\r\n        if(str.length > 32){\r\n          str = str.substring(0, 32 - 2) + '...';\r\n        }\r\n        return str\r\n      }).join('\\r\\n'):''\r\n      if (params.created){\r\n          promise = contentMutation.create({userId:auth.user.id, parentId:params.parentId, type:'PAGE', order: 0, title:title || '', description, option:{}}).then((v)=>{\r\n            navigate(\"NoteScreen\", {id:v});\r\n            return v\r\n          })\r\n      }\r\n      else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, title:title || content.title, description}}).then(()=>params.id)\r\n      }\r\n      return promise\r\n  }\r\n\r\n  const onSave = ()=>{\r\n    const promise = onSaveTitle()\r\n    promise?.then((parentId)=>{\r\n      const userId = auth.user?.id\r\n      const created = userId && cells ? cells.map((v, i)=>({\r\n        userId, \r\n        parentId, \r\n        type:v.type, \r\n        order:i, \r\n        description:v.output, \r\n        title:v.content, \r\n        option:{\r\n          EXECUTION_COUNT:v.executionCount!==null?`${v.executionCount}`:undefined, \r\n          EXECUTION_STATUS: v.status,\r\n          INPUT_VISIBLE:v.inputVisible,\r\n          OUTPUT_VISIBLE:v.outputVisible\r\n        }})):[]\r\n      return contentMutation.updateCells({created, deleted:{parentId}})\r\n    })\r\n  }\r\n\r\n  useLayoutEffect(()=>{\r\n    if(init){\r\n        if(params.created){\r\n          setEditPage(false)\r\n          setTitle(lang(\"New Page\"))\r\n          addOpenedIds(params.parentId, true)\r\n          cellsHistory === undefined && setHistory({\r\n            past: [],\r\n            present: [],\r\n            future: [],\r\n            cells: {}\r\n          })\r\n        }\r\n        else if (content){\r\n          setEditPage(false)\r\n          setTitle(content.title)\r\n          addOpenedIds(content.id, false)\r\n          cellsHistory === undefined && setHistory({\r\n            past: [],\r\n            present: init.map(v=>v.id),\r\n            future: [],\r\n            cells: Object.fromEntries(init.map(v=>[v.id, v]))\r\n          })\r\n        }\r\n    }\r\n    }, [init, content])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created || content){\r\n        navigation.setOptions({\r\n            title:isSaved?title:`${title}*`,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {!isSaved && <CommonButton title={'💾'} onPress={onSave} style={{paddingTop:8, marginRight:10}}/>}\r\n              <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>setEditPage(true)}/>\r\n              <CommonButton title={'❌'} onPress={exit} style={{paddingTop:8, marginRight:10}}/>\r\n            </View>,\r\n            headerShown: !editPage\r\n          });\r\n      }\r\n  }, [navigation, content, contents, title, editPage, isSaved]);\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else {\r\n      let nextId:any = undefined;\r\n      if(openedIds.length > 0){\r\n        const values = [...openedIds.values()]\r\n        const i = values.findIndex(v=>params.created?v.parentId===params.parentId:v.id===content?.id)\r\n        nextId = values[i>=0?(i===values.length-1?i-1:i+1):(values.length-1)]\r\n      }\r\n      if (nextId!==undefined){\r\n        navigation.navigate('NoteScreen', nextId.created?{parentId:nextId.parentId}:{id:nextId.id})\r\n      }\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n    }\r\n  }\r\n  const exit = ()=> {\r\n    deleteOpenedIds(unsavedKey, params.created)\r\n    setHistory(undefined)\r\n    back()\r\n  }\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\"}}>\r\n     <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n     {editPage ? <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSaveTitle} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={()=>setEditPage(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>exit())}/>}\r\n      </>:\r\n      cellsHistory !==undefined && <NoteSection cellsHistory={cellsHistory} setHistory={setHistory} cellRef={cellRef}/>}\r\n    </ScrollView>\r\n  </ThemedView>\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { getContentOne } from \"../services/notebook\";\r\n\r\nexport default function useContent(id?:number){\r\n  const { data } = useQuery([\"Content\", id] , async()=> (id?await getContentOne(id):undefined))\r\n  return data\r\n}","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView,  View } from 'react-native';\r\nimport  { CommonButton, View as ThemedView, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport ContentList from '../../components/ContentList';\r\n\r\nexport default function ContentListScreen({ navigation, route }: StackScreenProps<any, 'ContentList'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id:  route?.params?.id===\"*\"?\"*\":parseInt(route?.params?.id),\r\n    type: route?.params?.type\r\n  } as { created:true, type:'NOTEV2' } | { created:false, id:number| \"*\" }\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const rootlist = useContentList(0);\r\n  const list = rootlist\r\n  const contentMutation = useContentMutation()\r\n  const content = params.created?undefined:list?.find(v=>v.id===params.id)\r\n  const [title, setTitle] = useState<string>()\r\n  const [editable, setEditable] = useState(false)\r\n  const type = params.created?params.type:content?.type\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n      navigation.goBack()\r\n    else{\r\n      navigation.navigate('HomeScreen', {tab:1})\r\n    }\r\n  }\r\n  const onSave = ()=>{\r\n    if (!auth.user || (title===undefined) || (content?.title === title) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    if (params.created){\r\n        const typedList = list?.filter(v=>v.type == params.type)\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:0, type, order: (typedList?.length || 0) + 1, title, option:{}}).then(v=>{\r\n            navigate(\"ContentListScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, title}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'NOTEV2': lang('New Note'),\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}  \r\n  useLayoutEffect(()=>{\r\n    if(params.created){\r\n      setEditable(false)\r\n      setTitle(defaultTitle[params.type])\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setTitle(content.title)\r\n    }\r\n  }, [content, type])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else {\r\n        navigation.setOptions({\r\n            title: content?.title || lang(\"All Timelines\"),\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content?.type==='NOTEV2' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('NoteScreen', {parentId:content.id})}/>}\r\n              {(content && !params.created) && <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>}\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, type, editable]);\r\n\r\n  const editableExact = (params.created || editable)\r\n\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\", backgroundColor:'transparent'}}>\r\n    {editableExact?\r\n      <>\r\n        {title!==undefined && <TextInput mode='outlined' value={title} onChangeText={setTitle} style={{borderRadius:20, margin:1}}/>}\r\n        <CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>\r\n        <CommonButton title={lang('cancel')} onPress={params.created?back:()=>setEditable(false)} style={{height:65, paddingVertical:20}}/>\r\n        {content && <CommonButton title={lang('delete')} textStyle={{color:'red'}} style={{height:65, paddingVertical:20}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>}\r\n      </>:\r\n      <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n        {content && <ContentList parentContent={content}/>}\r\n      </ScrollView>}\r\n    </ThemedView>\r\n}\r\n","import React from 'react';\r\nimport ContentGroupList from '../components/ContentGroupList';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <ScrollView style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('HomeScreen')} />\r\n        <ContentGroupList type={'PAGE'} />\r\n        <ContentGroupList type={'NOTEV2'} />\r\n    </ScrollView>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { NotebookProvider } from '../hooks/useNotebookContext';\r\n\r\nconst getConfig = async () => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'HomeScreen',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <></>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig().then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n        <NotebookProvider>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n        </NotebookProvider>\r\n    </PaperProvider>\r\n}"],"names":["re","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref","link","isMobile","_jsx","View","style","borderRadius","marginVertical","marginHorizontal","children","_jsxs","TouchableOpacity","onPress","Linking","openURL","url","onLongPress","width","flexDirection","imageUrl","Image","source","uri","resizeMode","maxWidth","maxHeight","borderWidth","undefined","flex","overflow","minHeight","Text","fontSize","numberOfLines","title","ellipsizeMode","axios","axiosCreate","getContentOne","_asyncToGenerator","id","get","data","_x","apply","arguments","getContentList","_ref2","parentId","type","parentIdParam","typeParam","value","_x2","_x3","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","deleteContent","_ref6","delete","_x6","postCells","_ref7","contents","_x7","previewScrap","_ref8","cells","_ref9","preview","query","_x9","useContentList","useQuery","useContentMutation","queryClient","useQueryClient","create","useMutation","onSuccess","_onSuccess","invalidateQueries","update","_onSuccess2","Promise","all","_delete","updateCells","useEffect","mutateAsync","updatedOffset","Date","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","slice","date","_cardPadding","isLandscape","_cardMaxWidth","CardPage","React","window","useResizeContext","cardMaxWidth","fSize","concat","_toConsumableArray","sort","a","b","item","flexBasis","content","navigate","padding","paddingRight","minWidth","Card","aspectRatio","Math","sqrt","Content","opacity","marginTop","justifyContent","alignItems","textAlign","parentContent","ScrollView","height","contentContainerStyle","backgroundColor","flexWrap","DraggableFlatList","ScaleDecorator","DndCore","DndSortable","DndUtilities","Platform","OS","DraggableImport","default","require","DraggableCellItem","code","renderCellContent","_DndSortable$useSorta","useSortable","attributes","listeners","setNodeRef","transform","transition","isDragging","CSS","Transform","toString","x","y","scaleX","scaleY","position","zIndex","ref","_objectSpread","cursor","left","top","SortableCellsList","items","onSortEnd","getId","_useState","useState","_useState2","_slicedToArray","codes","setCodes","_useState3","_useState4","tempCodes","setTempCodes","endsWith","now","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","findIndex","newIndex","idx","arrayMove","Array","from","keys","SortableContext","strategy","verticalListSortingStrategy","commonStyles","cellsList","StyleSheet","paddingVertical","paddingHorizontal","setItems","setData","renderContent","renderItem","keyExtractor","drag","isActive","Icon","name","size","color","onChangeText","placeholder","_ref$autoCapitalize","autoCapitalize","_ref$autoCorrect","autoCorrect","_ref$minHeight","_ref$maxHeight","setHeight","TextInput","multiline","onContentSizeChange","contentHeight","nativeEvent","contentSize","newHeight","max","min","textAlignVertical","scrollEnabled","ExecutionStatus","typeDetail","executable","init","iconName","iconSize","light","dark","createUseStyle","styles","_styles","theme","lightStyles","darkStyles","isSelected","heightRef","setCells","executeCell","setSelectedCellId","useStyles","markdownStyles","useMarkdownStyles","updateCellContent","prevCells","cell","cellContainer","inputVisible","current","selectedCell","onLayout","e","layout","cellHandle","executionCount","executionCountText","cellContent","cellToolbar","toolbarButton","disabled","activeOpacity","cellInputContainer","visibleToggle","summaryButton","summaryText","display","EditorViewer","autoResize","Editor","setValue","text","DynamicTextInput","codeInput","markdownInput","Markdown","outputVisible","status","COMPLETED","_Fragment","JSON","parse","output","LinkPreview","ERROR","outputContainer","errorOutput","outputText","Colors","background","codeText","codeBackground","outerBackground","border","selectedBorder","error","markdownHead","markdownCode","header","elevation","fontWeight","headerButtonText","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","borderColor","draggingCell","paddingTop","margin","borderBottomColor","fontFamily","borderTopWidth","borderTopColor","headerButtons","marginBottom","marginRight","body","heading1","heading2","code_inline","code_block","container","addCellContainer","addCellButton","addCellButtonText","props","useColorScheme","lang","useLangContext","cellsHistory","present","_setCells","_cells","stringify","newCells","forEach","setHistory","past","future","func","selectedCellId","useRef","nextExecutionCount","useMemo","counts","cellRef","executeAllCells","_executeAllCells","RUNNING","find","c","result","resolve","reject","then","console","log","String","useCallback","Cell","SafeAreaView","SortableList","Object","entries","k","buttonStyle","newCell","IDLE","addCell","previous","newPast","undo","next","newFuture","redo","NotebookContext","createContext","opened","setOpened","NotebookProvider","complete","setComplete","auth","useAuthContext","loadOpened","AsyncStorage","getItem","user","fromEntries","created","_setOpened","_auth$user","newOpened","parseInt","setItem","Provider","useOpenedContext","_useContext","useContext","openedIds","addOpenedIds","newOpenIds","deleteOpenedIds","notes","pages","_notes$find","_pages$find","v2","itemPadding","List","selectable","TouchableRipple","right","icon","_props","ContentTabView","ContentGroupList","ConfigTabView","ConfigSections","main","HomeScreen","component","navigation","route","tabViews","headerRight","HomeSection","flexGrow","path","NoteScreen","_route$params","_route$params2","_route$params3","_route$params4","params","_useOpenedContext","option","EXECUTION_COUNT","EXECUTION_STATUS","INPUT_VISIBLE","OUTPUT_VISIBLE","unsaved","_setUnsaved","unsavedKey","history","u","contentMutation","setTitle","_useState5","_useState6","editPage","setEditPage","isSaved","original","useIsSaved","onSaveTitle","promise","toRaw","replaceAll","join","userId","order","onSave","deleted","useLayoutEffect","setOptions","CommonButton","exit","headerShown","canGoBack","goBack","nextId","values","tab","back","ThemedView","mode","textStyle","NoteSection","ContentListScreen","list","editable","setEditable","defaultTitle","onEdit","editableExact","_promise","typedList","ContentList","getConfig","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}