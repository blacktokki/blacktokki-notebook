{"version":3,"file":"static/js/594.9046b4b9.chunk.js","mappings":"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","sources":["src/services/feedynote.ts","src/hooks/useContentList.ts","src/components/TimeLine.tsx","src/components/ContentList.tsx","src/hooks/useInfiniteContentList.ts","src/hooks/usePreview.ts","src/screens/main/EditorScreen.tsx","src/components/ContentGroupList.tsx","src/screens/main/HomeScreen.tsx","src/screens/index.ts","src/hooks/useContent.ts","src/screens/main/ContentListScreen.tsx","src/navigation/index.tsx","src/navigation/Drawer.tsx","web/editor-config.js"],"sourcesContent":["import { Content, PostContent, PreviewRequest, ScrapPreview, FeedPreview } from '../types';\r\nimport axios from './axios';\r\n\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const getInfiniteContentList = async (parentId:number, type:'TIMELINE'|'LIBRARY'|'FEED', page:number)=>{\r\n    const parentIdParam = type==='TIMELINE' ? `&grandParentId=${parentId}`: `&parentId=${parentId}`\r\n    const size = type ===\"LIBRARY\"?\"256\":\"20\"\r\n    return { current: (await axios.get(`/api/v1/content?self=true&sort=id,DESC&size=${size}&page=${page}${parentIdParam}`) ).data.value as Content[] }\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const pullFeed = async () =>{\r\n    await axios.get('/api/v1/feed/pull')\r\n}\r\n\r\nexport const previewScrap = async (preview: PreviewRequest) => {\r\n    const data = (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data\r\n    return {type:\"SCRAP\", ...data} as ScrapPreview\r\n}\r\n\r\nexport const previewFeed = async (preview: PreviewRequest) => {\r\n    const data =  (await axios.get(`/api/v1/feed/autocomplete?query=${preview.query}`)).data\r\n    return {type:\"FEED\", ...data} as FeedPreview\r\n}","import { QueryKey, useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getContentList, patchContent, postContent, pullFeed } from \"../services/feedynote\";\r\nimport { Content } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useContentList(parentId?:number, type?: Content['type']){\r\n  const { data } = useQuery([\"ContentList\", parentId, type] , async()=> (parentId!==undefined || type!==undefined)?await getContentList(parentId, type):undefined)\r\n  return data\r\n}\r\n\r\nlet feedInterval:NodeJS.Timer\r\n\r\nexport function useContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postContent, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const update = useMutation(patchContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n      queryClient.invalidateQueries(\"Content\")\r\n    }\r\n  })\r\n  const _delete = useMutation(deleteContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const _pullFeed = useMutation(async (key:QueryKey)=>{\r\n    console.log('pulling feed: ' + key)\r\n    const querykey = [\"ContentList\", ...key]\r\n    await queryClient.setQueryData(querykey, undefined)\r\n    await pullFeed()\r\n    return querykey\r\n  }, {\r\n    onSuccess: (key)=>{\r\n      queryClient.invalidateQueries(key)\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    if(feedInterval===undefined){\r\n      _pullFeed.mutateAsync([])\r\n      feedInterval = setInterval(()=>_pullFeed.mutateAsync([]), 20 * 60 * 1000)\r\n    }\r\n  }, [])\r\n\r\n  return {create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutateAsync, pullFeed:_pullFeed.mutateAsync}\r\n}","import React from \"react\";\r\nimport { View, FlatList, TouchableOpacity, StyleSheet, I18nManager, Platform, Image } from \"react-native\";\r\nimport { Text } from \"@blacktokki/core\"\r\nimport { List } from \"react-native-paper\";\r\n\r\nconst EventTime = ({ time: { content, style: timeStyle } = {}, style }:any) => {\r\n  return (\r\n    <View style={[styles.timeContainer, style]}>\r\n      <Text style={[styles.time, timeStyle]}>{content}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst EventIcon = ({ icon: OriginalIcon = {}, iconStyle, lineStyle }:any) => {\r\n  // Determines whether we are trying to render a custom icon component, or use the default\r\n  const iconIsComponent = typeof OriginalIcon === \"function\";\r\n  let iconToBeRendered = iconIsComponent ? (\r\n    <OriginalIcon styles={[styles.icon, iconStyle]} />\r\n  ) : (<List.Icon\r\n      icon={OriginalIcon.content}\r\n      style={[\r\n        styles.icon,\r\n        OriginalIcon.style ? OriginalIcon.style : null\r\n      ]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <View style={[styles.iconContainer, iconStyle]}>\r\n      {iconToBeRendered}\r\n      <View style={[styles.verticalLine, lineStyle]} />\r\n    </View>\r\n  );\r\n};\r\n\r\n/*\r\nEvent component, is the component in which you can render whatever the event is about,\r\ne.g. Title, description, or even render a custom template by sending a render-prop with whatsoever\r\ncontent you need.\r\n*/\r\nconst Event = ({ children, style }:any) => {\r\n  return <View style={[styles.eventContainer, style]}>{children}</View>;\r\n};\r\n\r\n/*\r\nRow component, is the component that combines all the sub-components (EventIcon, Event, EventTime) and\r\ngets each 'event' as an argument of type object\r\n*/\r\nexport const TimeLineRow = ({\r\n  event = {},\r\n  eventStyle,\r\n  timeContainerStyle,\r\n  iconContainerStyle,\r\n  lineStyle,\r\n  contentContainerStyle\r\n}: any) => {\r\n  const {\r\n    title: OriginalTitle = {},\r\n    description: OriginalDescription = {},\r\n    imageUrl,\r\n    time,\r\n    icon,\r\n    pressAction\r\n  } = event;\r\n\r\n  // Determines whether or not the Row is clickable, and acts accordingly\r\n  const RowComp:React.ComponentType<any> = pressAction ? TouchableOpacity : View\r\n\r\n  // Determines whether the title is just a text and its style, or a render-prop function, and acts accrodingly\r\n  const titleIsComponent = OriginalTitle && typeof OriginalTitle === \"function\";\r\n  const title = titleIsComponent ? (\r\n    <OriginalTitle styles={styles.title} />\r\n  ) : (\r\n      <Text style={[styles.title, {fontSize:14}]}>\r\n        {OriginalTitle}\r\n      </Text>\r\n  );\r\n\r\n  // Determines whether the description is just a text and its style, or a render-prop function, and acts accrodingly\r\n  const descriptionIsComponent =\r\n    OriginalDescription && typeof OriginalDescription === \"function\";\r\n  const description = descriptionIsComponent ? (\r\n    <OriginalDescription styles={styles.description} />\r\n  ) : (\r\n    <View style={{flexDirection:'row'}}>\r\n      {imageUrl?<Image source={{uri:imageUrl}} resizeMode=\"cover\" style={{ width:'33%', maxWidth:150, minHeight:120, borderWidth:1}}/>:undefined}\r\n      <Text style={[styles.description, {fontSize:12}]}>\r\n        {OriginalDescription}\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <RowComp style={[styles.row, eventStyle]} onPress={pressAction}>\r\n      <EventTime time={time} style={timeContainerStyle} />\r\n      <EventIcon\r\n        icon={icon}\r\n        iconStyle={iconContainerStyle}\r\n        lineStyle={lineStyle}\r\n      />\r\n      <Event style={contentContainerStyle}>\r\n        {title}\r\n        {description}\r\n      </Event>\r\n    </RowComp>\r\n  );\r\n};\r\n\r\nexport default ({\r\n  data = [], // The actual event's array, array of objects, each object represents a single event\r\n  eventStyle = {}, // Each event's whole row's style\r\n  timeContainerStyle = {}, // The style object of the container that holds the time\r\n  iconContainerStyle = {}, // The style object of the container that holds the icon\r\n  lineStyle = {}, // The vertical line's style object\r\n  contentContainerStyle = {}, // The style object of the container that holds the content i.e. title and description\r\n  onEndReachedThreshold,\r\n  onEndReached,\r\n  TimelineFooter,\r\n  TimelineHeader,\r\n  ...rest\r\n}: any) => {\r\n  const events = (\r\n    <FlatList\r\n      data={data}\r\n      renderItem={({ item }) => (\r\n        <TimeLineRow\r\n          event={item}\r\n          eventStyle={eventStyle}\r\n          timeContainerStyle={timeContainerStyle}\r\n          iconContainerStyle={iconContainerStyle}\r\n          lineStyle={lineStyle}\r\n          contentContainerStyle={contentContainerStyle}\r\n        />\r\n      )}\r\n      keyExtractor={(_, ndx) => ndx.toString()}\r\n      onEndReached={onEndReached}\r\n      onEndReachedThreshold={onEndReachedThreshold || 0}\r\n      ListFooterComponent={TimelineFooter}\r\n      ListHeaderComponent={TimelineHeader}\r\n      {...rest}\r\n    />\r\n  );\r\n\r\n  return <View style={styles.container}>{events}</View>;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      width: \"100%\"\r\n    },\r\n    row: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"flex-start\",\r\n      marginVertical: 5\r\n    },\r\n    timeContainer: {\r\n      flexBasis: \"15%\",\r\n      paddingTop:10,\r\n    },\r\n    time: {\r\n      fontSize: 12,\r\n      color: \"#888\",\r\n      fontStyle: \"italic\",\r\n      textAlign: 'center'\r\n    },\r\n    iconContainer: {\r\n      flexBasis: \"5%\",\r\n      alignItems: \"center\",\r\n      alignSelf: \"stretch\",\r\n      marginHorizontal: \"5%\"\r\n    },\r\n    verticalLine: {\r\n      flex: 1,\r\n      width: 1,\r\n      backgroundColor: \"#ccc\"\r\n    },\r\n    eventContainer: {\r\n      flexBasis: \"65%\",\r\n      flexGrow:1,\r\n      alignItems: \"flex-start\",\r\n      padding: 16,\r\n      borderRadius: 15,\r\n      shadowOffset: { width: I18nManager.isRTL ? 8 : -8, height: 0 },\r\n      shadowColor: \"#888\",\r\n      shadowOpacity: 0.2,\r\n      marginBottom: 10,\r\n      borderTopLeftRadius: 0,\r\n    },\r\n    icon: {\r\n      textAlign: \"center\",\r\n      width: 20,\r\n      height: 20,\r\n      backgroundColor: \"#6F98FA\",\r\n      paddingTop: Platform.OS === \"ios\" ? 2.5 : 5,\r\n      borderRadius: 10,\r\n      fontSize: 9,\r\n      overflow: \"hidden\",\r\n      borderWidth: 3,\r\n      borderColor: '#e0e9ff'\r\n    },\r\n    title: {\r\n      fontSize: 12,\r\n      fontWeight: \"bold\",\r\n      textAlign: \"left\",\r\n      marginBottom: 5,\r\n      lineHeight: 20\r\n    },\r\n    description: {\r\n      textAlign: \"left\",\r\n      fontSize: 11,\r\n      lineHeight: 18,\r\n      paddingBottom: 10,\r\n    }\r\n  });","import * as React from 'react';\r\nimport { Content } from '../types';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Text, useResizeContext, View as ThemedView } from '@blacktokki/core';\r\nimport { FlatList, ScrollView, TouchableOpacity, View } from 'react-native';\r\nimport { TimeLineRow } from './TimeLine';\r\nimport { Card } from 'react-native-paper';\r\nimport useInfiniteContentList from '../hooks/useInfiniteContentList';\r\n\r\nconst regexForStripHTML = /<\\/?[^>]*>/gi;\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nconst TimelinePage = React.memo(({data}: {data:Content[]})=>{\r\n  return data.map(v=>({...v, time:{content:updatedFormat(v.updated)}, pressAction: ()=>navigate('EditorScreen', {id:v.id})})).map((item, index)=>{\r\n    return <TimeLineRow \r\n      key={index}\r\n      event={item}\r\n    /> \r\n  })\r\n})\r\n\r\nconst _cardPadding = (isLandscape:boolean) => isLandscape?20:5\r\nconst _cardMaxWidth = (isLandscape:boolean) => isLandscape?230:205\r\n\r\n\r\nconst CardPage = React.memo(({data}: {data:Content[]})=>{\r\n  const window  = useResizeContext()\r\n  const cardMaxWidth = _cardMaxWidth(window===\"landscape\")\r\n\r\n  return [...data.sort((a, b)=>a.updated < b.updated?1:-1), null, null]?.map((item, index)=>{\r\n    if (item === null){\r\n      return <ThemedView key={index} style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n    }\r\n    const content = item.description?.replaceAll(/\\n/g, \"\").replaceAll(/<hr\\s*[\\/]?>\\n/gi, '').replaceAll(/&nbsp;/gi, ' ').replaceAll(/<br\\s*[\\/]?>/gi, '\\r\\n').replaceAll(regexForStripHTML, '')\r\n    const onPress = ()=>navigate('EditorScreen', {id:item.id})\r\n    return <TouchableOpacity key={index} style={{flexBasis:window==='landscape'?'33%':'50%', padding:_cardPadding(window==='landscape'), paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n        <Card onPress={onPress} style={{aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}}>\r\n          <Card.Content>\r\n          <Text style={{fontSize:16, opacity: 0.4}}>{content}</Text>\r\n          </Card.Content>\r\n        </Card>\r\n        <View style={{flexDirection:'row', marginTop:10, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n          <Text style={{fontSize:18}}>{item.title}</Text>\r\n          <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n            \r\n        </View>\r\n    </TouchableOpacity>\r\n  })\r\n})\r\n\r\nconst ContentList = ({ parentContent } : { parentContent:Content }) => {\r\n  const {data, fetchNextPage} = useInfiniteContentList(parentContent.id, parentContent.type as \"TIMELINE\" |\"LIBRARY\"| \"FEED\" )\r\n  const window  = useResizeContext()\r\n  return data && (\r\n    parentContent.type!=='LIBRARY'?\r\n    <FlatList\r\n      data={data.pages}\r\n      renderItem={({item})=><TimelinePage data={item.current}/>}\r\n      style={{height:0}}\r\n      onEndReached={()=>{\r\n        fetchNextPage()\r\n      }}\r\n    />:\r\n    <ScrollView \r\n      style={{ height:0}} \r\n      contentContainerStyle={{flexDirection:'row', justifyContent:'center'}}\r\n    >\r\n      <View style={{backgroundColor:'transparent', flexBasis:'100%', maxWidth:(_cardMaxWidth(window==='landscape') + 5)  * (window==='landscape'?5:3), flexWrap:'wrap', flexDirection:'row', paddingRight:_cardPadding(window==='landscape'), justifyContent:window==='landscape'?undefined:'center'}}>\r\n        {data.pages.map((item, index)=><CardPage key={index} data={item.current}/>)}\r\n      </View>\r\n      {/* {window === 'landscape' && <View style={{backgroundColor:'transparent', flexBasis:'0%', flexGrow:1, maxWidth:240}}></View>} */}\r\n    </ScrollView>)\r\n};\r\n\r\nexport default ContentList;","import { QueryKey, useInfiniteQuery, useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getInfiniteContentList, patchContent, postContent, pullFeed } from \"../services/feedynote\";\r\nimport { Content } from \"../types\";\r\n\r\nexport type ContentPage = {\r\n  next?:ContentPage\r\n  current:Content[]\r\n}\r\n\r\nexport default function useInfiniteContentList(parentId:number, type:'TIMELINE'|'LIBRARY'|'FEED'){\r\n  const { data, fetchNextPage } = useInfiniteQuery<ContentPage>(\r\n    [\"ContentList\", parentId], \r\n    async({pageParam})=>await getInfiniteContentList(parentId, type,  pageParam), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage, allPages)=>allPages.length,\r\n      refetchOnReconnect:false,\r\n      //refetchOnWindowFocus:refetch\r\n    }\r\n  )\r\n  \r\n  return { data, fetchNextPage }\r\n}","import { useQuery } from \"react-query\";\r\nimport { previewFeed, previewScrap } from \"../services/feedynote\";\r\nimport { ScrapPreview, FeedPreview } from \"../types\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nlet _cache:Record<string, { title:string, description:string }> = {}\r\n\r\n\r\nexport const renderDescription = (preview:{title:string, url:string, description?:string, imageUrl?:string})=>{\r\n  return `<div class=\"scrap mceNonEditable\" style=\"border:1px solid #ddd; padding:10px; display:flex; align-items:center;\">\r\n  ${preview.imageUrl!==undefined?`<img src=\"${preview.imageUrl}\" alt=\"preview\" style=\"width:80px; height:80px; margin-right:10px;\">`:''}\r\n  <div style=\"word-break:break-word;\">\r\n    <strong>${preview.title}</strong><br>\r\n    <a href=\"${preview.url}\" target=\"_blank\">${preview.url}</a>\r\n    ${preview.description ? `<p>${preview.description}</p>`: \"\"}\r\n  </div>\r\n</div>`\r\n}\r\n\r\nconst callback = async(type:(ScrapPreview|FeedPreview)['type'], query:string)=> {\r\n  try {\r\n    new URL(query)\r\n  }\r\n  catch (_){\r\n    return undefined;\r\n  }\r\n  if (_cache[query]){\r\n    return _cache[query]\r\n  }\r\n  else{\r\n    const preview = type==='FEED'?await previewFeed({query}):await previewScrap({query})\r\n    if (preview && preview.title !==null){\r\n      const description =  renderDescription({...preview, url:query});\r\n        const _preview = {title:preview.title, description}\r\n        _cache[query] = _preview\r\n        return _preview;\r\n    }\r\n    else {\r\n      return undefined\r\n    }\r\n  }\r\n}\r\n\r\nexport default <T extends ScrapPreview|FeedPreview>(type:T['type'], query?:string)=>{\r\n  const [_query, setQuery] = useState<string>()\r\n  const { data } = useQuery([\"Preview\", type, _query] , async()=> _query?await callback(type, _query):undefined)\r\n\r\n  useEffect(()=>{\r\n    const timeout = setTimeout(()=>setQuery(query), 320)\r\n    return () => clearTimeout(timeout)\r\n  }, [query])\r\n  return data\r\n};;\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { Linking, ScrollView, View } from 'react-native';\r\nimport { Editor, EditorViewer } from '@blacktokki/editor';\r\nimport  { CommonButton, View as ThemedView, useColorScheme, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport useContent from '../../hooks/useContent';\r\nimport usePreview, { renderDescription } from '../../hooks/usePreview';\r\n\r\n\r\nconst Scrap = React.memo((props:{url:string, replacer:(template:string)=>void})=>{\r\n  const preview = usePreview('SCRAP', props.url)\r\n  return preview?.description && <View style={{height:155, flexDirection:'row'}}>\r\n    <EditorViewer content={preview.description}/>\r\n    <CommonButton title={'✨'} onPress={()=>props.replacer(preview.description)} style={{height:155, paddingTop:65}}/>\r\n  </View>\r\n})\r\n\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n  let str = description;\r\n  let index = 0;\r\n  let match;\r\n  let arr = []\r\n  while ((match = new RegExp(re).exec(str)) != null) {\r\n    arr.push({index, str:str.substring(0, match.index)})\r\n    const end = match.index + match[0].length\r\n    arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n    index += end;\r\n    str = str.substring(end)\r\n  }\r\n  arr.push({index, str})\r\n  return arr\r\n}\r\n\r\n\r\nconst _extractUrl = (description:string)=>{\r\n  const arr:{pos:number, url:string}[] = []\r\n  const re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n  _tmp(/(<a .*?href=\"(.*?)\".*?>(.*)<\\/a>|<img .*?src=\"(.*?)\".*?\\/>)/, description).forEach((v, i)=>{\r\n    if (i % 2 == 1){\r\n      return;\r\n    }\r\n    _tmp(re, v.str).forEach((v2, i2)=>{\r\n      if( i2 % 2 == 1){\r\n        arr.push({pos:v.index + v2.index, url:v2.str})\r\n      }\r\n    })\r\n  })\r\n  return arr\r\n}\r\n\r\nconst renderScrap = (setDescription:(d:string)=>void, description?:string) => {\r\n  if (description === undefined){\r\n    return undefined\r\n  }\r\n  return _extractUrl(description).map((v, k)=><Scrap key={k} url={v.url} replacer={(template)=>{\r\n    setDescription(description.substring(0, v.pos) + template + description.substring(v.pos + v.url.length))\r\n  }}/>)\r\n}\r\n\r\n\r\nexport default function EditorScreen({ navigation, route }: StackScreenProps<any, 'Editor'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId!==undefined?parseInt(route?.params?.parentId):0\r\n  } as { created:true, parentId:number } | { created:false, id:number }\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const content = useContent(params.created?undefined:params.id)\r\n  const list = useContentList(content?.parentId)\r\n\r\n  const contentMutation = useContentMutation()\r\n  const [input, setInput] = useState<string>()\r\n  const [description, setDescription] = useState<string>()\r\n  const [type, setType] = useState<Content['type']>()\r\n  const [editable, setEditable] = useState(false)\r\n  const onSave = ()=>{\r\n    if (!auth.user || (content?.input == input && content?.description == description) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    if (params.created){\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:params.parentId, type, order: (list?.length || 0) + 1, input:input || '', title:input || '', description}).then(v=>{\r\n            navigate(\"EditorScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, input:input || '', title:input || '', description}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'NOTE': lang('New Note')\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}\r\n  useLayoutEffect(()=>{\r\n    console.log(content?.id)\r\n    if(params.created){\r\n      const _type = 'NOTE'\r\n      setEditable(false)\r\n      setInput(defaultTitle[_type])\r\n      setDescription('')\r\n      setType(_type)\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setInput(content.input)\r\n      setDescription(content.description)\r\n      setType(content.type)\r\n    }\r\n  }, [content?.id])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else if (content){\r\n        navigation.setOptions({\r\n            title: content.title,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content.type === 'FEEDCONTENT'?\r\n                <CommonButton title={'🌐'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>Linking.openURL(content.input)}/>:\r\n                <>\r\n                  <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>\r\n                  <CommonButton title={'🗑️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>\r\n                </>}\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, editable]);\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n  }\r\n  const editableExact = (params.created || editable)\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\"}}>\r\n    {editableExact && input!==undefined && <TextInput mode='outlined' value={input} onChangeText={setInput} style={{borderRadius:20, margin:1}}/>}\r\n    {type === 'NOTE' && <Editor theme={theme} active={editableExact} value={description || ''} setValue={editableExact?setDescription:()=>{}}/>}\r\n    {editableExact && <>\r\n      {renderScrap(setDescription, description)}\r\n      <CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>\r\n    </>}\r\n    <ScrollView style={{flex:editableExact?0:1}} contentContainerStyle={{flexGrow:1}}>\r\n      <EditorViewer content={content?.type==='FEEDCONTENT'?renderDescription({...content, url:content.input}): description || ''} onPress={content?.type==='FEEDCONTENT'?undefined:onEdit}/>\r\n    </ScrollView>\r\n    </ThemedView>\r\n}\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Colors, Text, useColorScheme, useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\nimport { Content } from '../types';\r\nimport MaterialCommunityIcon from 'react-native-paper/src/components/MaterialCommunityIcon';\r\nimport { I18nManager } from 'react-native';\r\n\r\n\r\ntype ContentSubGroupProps = {\r\n  timeline: Content\r\n}\r\n\r\ntype ContentGroupListProps = {\r\n  type: 'LIBRARY' | 'TIMELINE'\r\n}\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentSubGroupList = (props:ContentSubGroupProps) => {\r\n  const theme = useColorScheme()\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const window = useResizeContext()\r\n  const data = useContentList(expanded?props.timeline.id:undefined);\r\n  const handlePress = () => setExpanded(!expanded);\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const Left = ({isExpanded}:{isExpanded:boolean}) => {\r\n    return <MaterialCommunityIcon\r\n        name={isExpanded ? 'chevron-down' : 'chevron-right'}\r\n        color={Colors[theme].text}\r\n        size={24}\r\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\r\n      />\r\n  }\r\n  return <View>\r\n      <List.Accordion\r\n        title={props.timeline.title}\r\n        expanded={expanded && data!==undefined}\r\n        style={{padding:itemPadding}}\r\n        onPress={()=>navigate('ContentListScreen', {id:props.timeline.id})}\r\n        left={(_props)=><List.Icon {..._props} icon={expanded?'chevron-down' : 'chevron-right'} />}\r\n        right={()=>undefined}\r\n      >\r\n        {data && data.map(v=><List.Item key={v.id} left={(_props)=><List.Icon {..._props} icon={\"rss\"} />} title={v.title} onPress={()=>navigate('ContentListScreen', {id:v.id})} style={{padding:itemPadding}} />)}\r\n      </List.Accordion>\r\n      <TouchableRipple style={{position:'absolute', justifyContent:'center', paddingLeft: 8 + itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2 }} onPress={handlePress}>\r\n          <Left isExpanded={expanded}/>\r\n      </TouchableRipple>\r\n    </View>\r\n}\r\n\r\nconst ContentGroupList = ( props : ContentGroupListProps) => {\r\n  const data = useContentList(0, props.type);\r\n  const { lang } = useLangContext()\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  return (\r\n    <List.Section>\r\n      <View style={{flexDirection:'row'}}>\r\n        <List.Subheader style={{flex:1}} selectable={false}>{lang(props.type==='LIBRARY'?\"Libraries\":\"Timelines\")}</List.Subheader>\r\n        <TouchableRipple onPress={()=>navigate('ContentListScreen', {type:props.type})}><List.Icon icon='plus' style={{margin:itemPadding}}/></TouchableRipple>\r\n      </View>\r\n        {data && data.map(v=>props.type == 'TIMELINE'?\r\n            <ContentSubGroupList key={v.id} timeline={v}/>:\r\n            <List.Item key={v.id} left={(_props)=><List.Icon {..._props} icon={\"library\"} />} title={v.title} onPress={()=>navigate('ContentListScreen', {id:v.id})} style={{padding:itemPadding }} />\r\n        )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupList;","import React, {} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation/build/typescript/screens/main/HomeScreen/HomeSection';\r\nimport ContentGroupList from '../../components/ContentGroupList';\r\nimport { List } from 'react-native-paper';\r\n\r\nconst ContentTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'TIMELINE'} />\r\n      <ContentGroupList type={'LIBRARY'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Contents'), component:ContentTabView, icon:<List.Icon icon={'table-of-contents'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  return <HomeSection tabViews={tabViews} title={lang('home')}>\r\n    <View style={{flexGrow:1, width:'80%', marginTop:72}}>\r\n      <Text style={{fontSize:32, color}}>feedynote</Text>\r\n      <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n      {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n      <View style={{height:24}}/>\r\n      <ConfigSections/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import ContentListScreen from \"./main/ContentListScreen\";\r\nimport EditorScreen from \"./main/EditorScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n      title:'home',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    EditorScreen: {\r\n      path: 'editor',\r\n      title: 'editor',\r\n      component: EditorScreen\r\n    },\r\n    ContentListScreen: {\r\n      path: 'contents',\r\n      title: 'contents',\r\n      component: ContentListScreen\r\n    }\r\n  };\r\n  ","import { useQuery } from \"react-query\";\r\nimport { getContentOne } from \"../services/feedynote\";\r\n\r\nexport default function useContent(id?:number){\r\n  const { data } = useQuery([\"Content\", id] , async()=> (id?await getContentOne(id):undefined))\r\n  return data\r\n}","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView,  View } from 'react-native';\r\nimport  { CommonButton, Text, View as ThemedView, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport ContentList from '../../components/ContentList';\r\nimport usePreview from '../../hooks/usePreview';\r\n\r\nexport default function ContentListScreen({ navigation, route }: StackScreenProps<any, 'ContentList'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId?parseInt(route.params.parentId):undefined,\r\n    type: route?.params?.type\r\n  } as { created:true, type:'LIBRARY'|'TIMELINE' } | {created:true, type: 'FEED', parentId?:number} | { created:false, id:number }\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const rootlist = useContentList(0);\r\n  const feedlist = useContentList(undefined, \"FEED\")\r\n  const list = rootlist!==undefined && feedlist!==undefined ? [...rootlist, ...feedlist]: undefined\r\n  const contentMutation = useContentMutation()\r\n  const content = params.created?undefined:list?.find(v=>v.id===params.id)\r\n  const [input, setInput] = useState<string>()\r\n  const [type, setType] = useState<Content['type']>()\r\n  const [editable, setEditable] = useState(false)\r\n  const preview = usePreview('FEED', params.created && params.type==='FEED'?input:undefined)\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n  }\r\n  if (params.created && params.type === 'FEED' && params.parentId ===undefined){\r\n    back()\r\n  }\r\n  const onSave = ()=>{\r\n    if (!auth.user || (content?.input == input) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    const title = preview?.title?preview.title:input || ''\r\n    if (params.created){\r\n        const typedList = list?.filter(v=>v.type == params.type)\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:params.type==='FEED'?params.parentId as number:0, type, order: (typedList?.length || 0) + 1, input:input || '', title}).then(v=>{\r\n            navigate(\"ContentListScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, input:input || '', title}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'LIBRARY': lang('New Library'),\r\n    'TIMELINE': lang('New Timelines'),\r\n    'FEED': \"https://\"\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}\r\n  useLayoutEffect(()=>{\r\n    if(params.created){\r\n      setEditable(false)\r\n      setInput(defaultTitle[params.type])\r\n      setType(params.type)\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setInput(content.input)\r\n      setType(content.type)\r\n    }\r\n  }, [content])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else if (content){\r\n        navigation.setOptions({\r\n            title: content.title,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content.type==='LIBRARY' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('EditorScreen', {parentId:content.id})}/>}\r\n              {content.type==='TIMELINE' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('ContentListScreen', {type:\"FEED\", parentId:content.id})}/>}\r\n              {content.type!=='LIBRARY' && <CommonButton title={'🔄'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>contentMutation.pullFeed(content.type===\"TIMELINE\"?[undefined, 'FEEDCONTENT']:[content.id, undefined])}/>}\r\n              <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>\r\n              <CommonButton title={'🗑️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, editable]);\r\n\r\n  const editableExact = (params.created || editable)\r\n\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\", backgroundColor:'transparent'}}>\r\n    {editableExact?\r\n      <>\r\n        {input!==undefined && <TextInput mode='outlined' value={input} onChangeText={setInput} style={{borderRadius:20, margin:1}}/>}\r\n        {preview?.description &&<Text>{preview.description}</Text>}\r\n        {(type!=='FEED' || preview!==undefined) &&<CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>}\r\n        <CommonButton title={lang('cancel')} onPress={params.created?back:()=>setEditable(false)} style={{height:65, paddingVertical:20}}/>\r\n      </>:\r\n      <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n        {content && <ContentList parentContent={content}/>}\r\n      </ScrollView>}\r\n    </ThemedView>\r\n}\r\n","import React from 'react';\r\nimport * as Linking from 'expo-linking';\r\nimport { login, Navigation } from \"@blacktokki/navigation\"\r\nimport { NavigationConfig } from '@blacktokki/navigation/build/typescript/types';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { Icon, List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nconst config:NavigationConfig = {\r\n    main,\r\n    login,\r\n    prefixes: [ Linking.makeUrl('/') ],\r\n    rootPath: 'feedynote',\r\n    documentTitle: {\r\n        formatter: ()=>{\r\n            return 'feedynote'\r\n        }\r\n    },\r\n    rootScreen: {\r\n        main: 'HomeScreen',\r\n        login: 'LoginScreen'\r\n    },\r\n    headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n    headerRight: <></>,\r\n    modals: [],\r\n    drawer: <Drawer/>\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    return <PaperProvider theme={theme}>\r\n        <Navigation config={config}/>\r\n    </PaperProvider>\r\n}","import React from 'react';\r\nimport ContentGroupList from '../components/ContentGroupList';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <ScrollView style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('HomeScreen')} />\r\n        <ContentGroupList type={'TIMELINE'}/>\r\n        <ContentGroupList type={'LIBRARY'}/>\r\n    </ScrollView>\r\n}","editorConfig = {\r\n    plugins: 'image link charmap advlist lists paste hr noneditable', //autoresize textcolor imagetools,\r\n    toolbar: 'fontsizeselect | bold italic underline strikethrough | undo redo | alignleft aligncenter alignright | bullist numlist | hr link', // charmap removeformat\r\n    setup: (editor)=>{\r\n    }\r\n}\r\nif (typeof module !== 'undefined') {\r\n    module.exports = editorConfig\r\n}\r\n"],"names":["feedInterval","getContentOne","_ref","_asyncToGenerator","id","axios","get","data","_x","apply","arguments","getContentList","_ref2","parentId","type","parentIdParam","undefined","typeParam","value","_x2","_x3","getInfiniteContentList","_ref3","page","size","current","_x4","_x5","_x6","postContent","_ref4","post","_x7","patchContent","_ref6","_ref5","updated","patch","ids","_x8","deleteContent","_ref7","delete","_x9","pullFeed","_ref8","previewScrap","_ref9","preview","_objectSpread","query","_x10","previewFeed","_ref10","_x11","useContentList","useQuery","useContentMutation","queryClient","useQueryClient","create","useMutation","onSuccess","invalidateQueries","update","_delete","_pullFeed","key","console","log","querykey","concat","_toConsumableArray","setQueryData","useEffect","mutateAsync","setInterval","EventTime","_ref$time","time","content","timeStyle","style","_jsx","View","styles","timeContainer","children","Text","EventIcon","_ref2$icon","icon","OriginalIcon","iconStyle","lineStyle","iconToBeRendered","List","_jsxs","iconContainer","verticalLine","Event","eventContainer","TimeLineRow","_ref4$event","event","eventStyle","timeContainerStyle","iconContainerStyle","contentContainerStyle","_event$title","title","OriginalTitle","_event$description","description","OriginalDescription","imageUrl","pressAction","RowComp","TouchableOpacity","fontSize","flexDirection","Image","source","uri","resizeMode","width","maxWidth","minHeight","borderWidth","row","onPress","StyleSheet","container","flex","alignItems","marginVertical","flexBasis","paddingTop","color","fontStyle","textAlign","alignSelf","marginHorizontal","backgroundColor","flexGrow","padding","borderRadius","shadowOffset","I18nManager","isRTL","height","shadowColor","shadowOpacity","marginBottom","borderTopLeftRadius","Platform","OS","overflow","borderColor","fontWeight","lineHeight","paddingBottom","regexForStripHTML","updatedOffset","Date","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","slice","date","TimelinePage","React","map","v","navigate","item","index","_cardPadding","isLandscape","_cardMaxWidth","CardPage","window","useResizeContext","cardMaxWidth","sort","a","b","_item$description","ThemedView","replaceAll","paddingRight","minWidth","Card","aspectRatio","Math","sqrt","Content","opacity","marginTop","justifyContent","parentContent","_useInfiniteContentLi","_useInfiniteQuery","useInfiniteQuery","pageParam","select","pages","length","next","getNextPageParam","lastPage","allPages","refetchOnReconnect","fetchNextPage","useInfiniteContentList","FlatList","renderItem","onEndReached","ScrollView","flexWrap","_cache","renderDescription","url","callback","URL","_","_preview","_useState","useState","_useState2","_slicedToArray","_query","setQuery","timeout","setTimeout","clearTimeout","Scrap","props","usePreview","EditorViewer","CommonButton","replacer","_tmp","re","match","str","arr","RegExp","exec","push","substring","end","renderScrap","setDescription","forEach","i","v2","i2","pos","_extractUrl","k","template","getItemPadding","ContentSubGroupList","theme","useColorScheme","_React$useState","_React$useState2","expanded","setExpanded","timeline","itemPadding","left","_props","right","TouchableRipple","position","paddingLeft","isExpanded","MaterialCommunityIcon","name","Colors","text","direction","getConstants","lang","useLangContext","selectable","margin","ContentTabView","background","ContentGroupList","ConfigTabView","ConfigSections","main","HomeScreen","component","navigation","route","tabViews","headerRight","_Fragment","HomeSection","path","EditorScreen","_route$params","_route$params2","_route$params3","_route$params4","params","created","parseInt","auth","useAuthContext","list","contentMutation","input","setInput","_useState3","_useState4","_useState5","_useState6","setType","_useState7","_useState8","editable","setEditable","defaultTitle","onEdit","useLayoutEffect","_type","setOptions","headerShown","marginRight","Linking","openURL","then","back","canGoBack","goBack","tab","editableExact","TextInput","mode","onChangeText","Editor","active","setValue","_promise","promise","user","userId","order","paddingVertical","ContentListScreen","rootlist","feedlist","find","typedList","filter","ContentList","config","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","top","modals","drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","PaperProvider","Navigation","editorConfig","plugins","toolbar","setup","editor","module","exports"],"sourceRoot":""}