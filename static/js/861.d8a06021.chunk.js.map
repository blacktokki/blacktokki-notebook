{"version":3,"file":"static/js/861.d8a06021.chunk.js","mappings":"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","sources":["src/hooks/useKeywordStorage.ts","src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/modals/AlertModal.tsx","src/modals/DatePikcerModal.tsx","src/modals/index.ts","src/screens/main/NoteListSection.tsx","src/components/TimerTag.tsx","src/hooks/useProblem.ts","src/hooks/useTimeLine.ts","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/NoteItemSections.tsx","src/screens/main/home/ExtraConfigSections.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/notepage/TimerTagSection.tsx","src/screens/main/notepage/NotePageScreen.tsx","src/screens/main/timeline/DateHeaderSection.tsx","src/screens/main/timeline/TimeLineScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/ProblemScreen.tsx","src/screens/main/NoteViewerScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { useAuthContext } from '@blacktokki/account';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords:';\r\n\r\nexport type KeywordContent =\r\n  | {\r\n      type: '_NOTELINK';\r\n      name: string;\r\n      title: string;\r\n      paragraph?: string;\r\n    }\r\n  | {\r\n      type: '_KEYWORD';\r\n      title: string;\r\n    };\r\n\r\nconst getKeywords = async (subkey: string | undefined): Promise<KeywordContent[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY + subkey);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveKeywords = async (\r\n  subkey: string | undefined,\r\n  keywords: KeywordContent[]\r\n): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY + subkey, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving keywords', e);\r\n  }\r\n};\r\n\r\nexport const useKeywords = () => {\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n  return useQuery({\r\n    queryKey: ['keywords', subkey],\r\n    queryFn: async () => {\r\n      return await getKeywords(subkey);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async (keyword: KeywordContent) => {\r\n      const keywords = await getKeywords(subkey);\r\n      const newKeywords = [\r\n        ...new Set([JSON.stringify(keyword), ...keywords.map((v) => JSON.stringify(v))]),\r\n      ].map((v) => JSON.parse(v));\r\n      await saveKeywords(subkey, newKeywords);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const subkey = auth.isLocal ? '' : `${auth.user?.id}`;\r\n\r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords(subkey, []);\r\n    },\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords', subkey] });\r\n    },\r\n  });\r\n};\r\n","import { axiosCreate } from '@blacktokki/account';\r\n\r\nimport { Content, PostContent, Link } from '../types';\r\n\r\nconst axios = axiosCreate('notebook');\r\n\r\nexport const getContentOne = async (id: number) => {\r\n  return (await axios.get(`/api/v1/content/${id}`)).data as Content;\r\n};\r\n\r\nexport const getContentList = async (parentId?: number, types?: Content['type'][]) => {\r\n  const parentIdParam = parentId !== undefined ? `&parentId=${parentId}` : '';\r\n  const typeParam = types !== undefined ? `&types=${types.join(',')}` : '';\r\n  return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data\r\n    .value as Content[];\r\n};\r\n\r\nexport const postContent = async (postContent: PostContent) => {\r\n  return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id;\r\n};\r\n\r\nexport const patchContent = async ({ id, updated }: { id: number; updated: PostContent }) => {\r\n  await axios.patch(`/api/v1/content`, { ids: [id], updated });\r\n};\r\n\r\nexport const deleteContent = async (id: number) => {\r\n  await axios.delete(`/api/v1/content/${id}`);\r\n};\r\n\r\nexport const previewUrl = async (preview: { query: string }) => {\r\n  return (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data as Link;\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { toHtml } from '@blacktokki/editor';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\n\r\nimport { getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { Content, PostContent } from '../types';\r\n\r\nconst DB_NAME = '@Blacktokki:notebook';\r\nconst DB_VERSION = 1;\r\n\r\nexport async function openDB(): Promise<IDBDatabase> {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = (event.target as IDBOpenDBRequest).result;\r\n      if (!db.objectStoreNames.contains('NOTE')) {\r\n        db.createObjectStore('NOTE', { keyPath: 'title' });\r\n      }\r\n      // if (!db.objectStoreNames.contains('SNAPSHOT')) {\r\n      //   db.createObjectStore('SNAPSHOT', { keyPath: ['title', 'updated'] });\r\n      // }\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\n\r\nlet lastPage: string | undefined;\r\n\r\nconst getContents = async (isOnline: boolean, type: 'NOTE' | 'SNAPSHOT'): Promise<Content[]> => {\r\n  if (isOnline) {\r\n    return await getContentList(undefined, [type]);\r\n  }\r\n  if (type === 'SNAPSHOT') {\r\n    return [];\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    return new Promise((resolve) => {\r\n      const transaction = db.transaction(type, 'readonly');\r\n      const store = transaction.objectStore(type);\r\n\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result as Content[]);\r\n      };\r\n      request.onerror = () => {\r\n        console.error('Error loading contents from IndexedDB:', request.error);\r\n        throw request.error;\r\n      };\r\n    });\r\n  } catch (e) {\r\n    console.error('Error opening IndexedDB', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (\r\n  isOnline: boolean,\r\n  contents: (Content | PostContent)[],\r\n  id?: number\r\n): Promise<void> => {\r\n  const content = contents.find((v) => id === (v as { id?: number }).id);\r\n  if (isOnline) {\r\n    if (content) {\r\n      const savedId = await (id\r\n        ? patchContent({ id, updated: content }).then(() => id)\r\n        : postContent(content));\r\n      const snapshot: Content | PostContent = {\r\n        ...content,\r\n        type: 'SNAPSHOT',\r\n        id: undefined,\r\n        parentId: savedId,\r\n      };\r\n      await postContent(snapshot);\r\n    }\r\n    return;\r\n  }\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(['NOTE' /*, 'SNAPSHOT' */], 'readwrite');\r\n    const store = tx.objectStore('NOTE');\r\n    // const archive = tx.objectStore('SNAPSHOT');\r\n\r\n    for (const contentItem of contents) {\r\n      store.put(contentItem); // id를 기준으로 덮어씌움 (없으면 추가)\r\n    }\r\n    // if (content) {\r\n    //   const snapshot: Content | PostContent = {\r\n    //     ...content,\r\n    //     type: 'SNAPSHOT',\r\n    //   };\r\n    //   archive.put(snapshot);\r\n    // }\r\n    await new Promise((resolve, reject) => {\r\n      tx.oncomplete = () => resolve(undefined);\r\n      tx.onerror = () => reject(tx.error);\r\n    });\r\n  } catch (e) {\r\n    console.error('Error saving contents to IndexedDB', e);\r\n  }\r\n};\r\n\r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent notes', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent notes', e);\r\n  }\r\n};\r\n\r\nexport const useNotePages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['pageContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'NOTE'),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  const { auth } = useAuthContext();\r\n  return useQuery({\r\n    queryKey: ['snapshotContents', !auth.isLocal],\r\n    queryFn: async () => await getContents(!auth.isLocal, 'SNAPSHOT'),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find((c) => c.title === title);\r\n\r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find((v) => v === title) === undefined) {\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '', id: undefined };\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useRecentPages = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['recentPages'],\r\n    queryFn: async () => {\r\n      const recentTitles = await getRecentPages();\r\n      return recentTitles\r\n        .map((title) => contents.find((c) => c.title === title))\r\n        .filter((c) => c !== undefined) as Content[];\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useLastPage = () => {\r\n  const { data: contents = [], isFetching } = useNotePages();\r\n  return useQuery({\r\n    queryKey: ['lastPage'],\r\n    queryFn: async () => {\r\n      return contents.find((v) => v.title === lastPage);\r\n    },\r\n    enabled: !isFetching,\r\n  });\r\n};\r\n\r\nexport const useCreateOrUpdatePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { auth } = useAuthContext();\r\n  const { data: contents = [] } = useNotePages();\r\n  return useMutation({\r\n    mutationFn: async ({ title, description }: { title: string; description: string }) => {\r\n      const page = contents.find((c) => c.title === title);\r\n      if (page?.description === description) {\r\n        return { title, description, skip: true };\r\n      }\r\n      let updatedContents: (Content | PostContent)[];\r\n      const updated = auth.isLocal ? new Date().toISOString() : undefined;\r\n      if (page) {\r\n        updatedContents = contents.map((c, i) =>\r\n          c.id === page.id ? ({ ...c, description, updated } as PostContent) : c\r\n        );\r\n      } else {\r\n        const newPage = {\r\n          title,\r\n          description,\r\n          input: title,\r\n          userId: auth.user?.id || 0,\r\n          parentId: 0,\r\n          type: 'NOTE',\r\n          order: 0,\r\n          updated,\r\n          option: {},\r\n        } as PostContent;\r\n        updatedContents = [...contents, newPage];\r\n      }\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page?.id);\r\n      return { title, description, skip: false };\r\n    },\r\n    onSuccess: async (data) => {\r\n      if (!data.skip) {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      }\r\n    },\r\n  });\r\n};\r\n\r\nexport const useMovePage = () => {\r\n  const queryClient = useQueryClient();\r\n  const { data: contents = [] } = useNotePages();\r\n  const { auth } = useAuthContext();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({\r\n      oldTitle,\r\n      newTitle,\r\n      description,\r\n    }: {\r\n      oldTitle: string;\r\n      newTitle: string;\r\n      description?: string;\r\n    }) => {\r\n      const page = contents.find((c) => c.title === oldTitle);\r\n\r\n      if (!page) {\r\n        throw new Error('Page not found');\r\n      }\r\n\r\n      if (contents.some((c) => c.title === newTitle)) {\r\n        throw new Error('Page with new title already exists');\r\n      }\r\n\r\n      const updatedContents = contents.map((c) =>\r\n        c.title === oldTitle\r\n          ? { ...c, title: newTitle, description: description || page.description }\r\n          : c\r\n      );\r\n\r\n      await saveNoteContents(!auth.isLocal, updatedContents, page.id);\r\n\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.map((title) =>\r\n        title === oldTitle ? newTitle : title\r\n      );\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { oldTitle, newTitle };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async ({ title, direct }: { title: string; direct?: boolean }) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find((v) => v === title) === undefined || direct) {\r\n        const updatedRecentPages = [title, ...recentPages];\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: async (title: string) => {\r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter((_title) => title !== _title);\r\n      lastPage = undefined;\r\n      await saveRecentPages(updatedRecentPages);\r\n\r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useNoteViewers = () => {\r\n  const { lang, locale } = useLangContext();\r\n  return useQuery({\r\n    queryKey: ['viewerContents', locale],\r\n    queryFn: async () => {\r\n      return await Promise.all(\r\n        ['Usage'].map(async (key) => {\r\n          const title = lang(key);\r\n          const v2 = await fetch(process.env.PUBLIC_URL + '/' + title + '.md');\r\n          const description = toHtml(await v2.text());\r\n          return { key, description };\r\n        })\r\n      );\r\n    },\r\n  });\r\n};\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};\r\n","import { Text, useColorScheme } from '@blacktokki/core';\r\nimport { TouchableOpacity, View, FlatList, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { createCommonStyles } from '../styles';\r\n\r\nexport interface Paragraph {\r\n  path: string;\r\n  title: string;\r\n  level: number;\r\n  header: string;\r\n  description: string;\r\n}\r\n\r\nexport function parseHtmlToParagraphs(html: string): Paragraph[] {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  const result: Paragraph[] = [{ path: '', title: '', header: '', level: 0, description: '' }];\r\n\r\n  const headings: string[] = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\r\n  const headerStack: { level: number; title: string }[] = [];\r\n\r\n  let current: Paragraph | null = null;\r\n  let cursor = doc.body.firstChild;\r\n\r\n  const flushCurrent = () => {\r\n    if (current) {\r\n      result.push(current);\r\n      current = null;\r\n    }\r\n  };\r\n\r\n  while (cursor) {\r\n    if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n      const el = cursor as HTMLElement;\r\n      if (headings.includes(el.tagName)) {\r\n        flushCurrent();\r\n\r\n        const level = parseInt(el.tagName.substring(1), 10);\r\n        const title = el.textContent?.trim() || '';\r\n\r\n        // 헤더 스택 업데이트\r\n        while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n          headerStack.pop();\r\n        }\r\n        headerStack.push({ level, title });\r\n\r\n        const path = headerStack.map((h) => h.title).join(' > ');\r\n\r\n        current = {\r\n          path,\r\n          title,\r\n          level,\r\n          header: el.outerHTML,\r\n          description: '',\r\n        };\r\n      } else if (current) {\r\n        current.description += el.outerHTML;\r\n      } else {\r\n        // 헤더 밖의 내용 처리\r\n        result[0].description += el.outerHTML;\r\n      }\r\n    } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n      current.description += cursor.textContent || '';\r\n    }\r\n\r\n    cursor = cursor.nextSibling;\r\n  }\r\n\r\n  flushCurrent();\r\n  return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props: {\r\n  root: string;\r\n  path: string;\r\n  onPress: (item: Paragraph) => void;\r\n  data: Paragraph[];\r\n}) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item: Paragraph) => (\r\n    <TouchableOpacity style={styles.resultItem} onPress={() => props.onPress(item)}>\r\n      {item.level === 0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\" />}\r\n      <Text\r\n        style={[\r\n          props.path === item.path\r\n            ? [commonStyles.title, { marginBottom: 5, marginTop: 3 }]\r\n            : commonStyles.text,\r\n          styles.resultText,\r\n          { left: item.level * 10 + 10 },\r\n        ]}\r\n      >\r\n        {item.level === 0 ? props.root : item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View\r\n      style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}\r\n    >\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(item) => item.path}\r\n        renderItem={({ item }) => renderItem(item)}\r\n        ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n});\r\n","import { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Text,\r\n  StyleSheet,\r\n  PanResponder,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { parseHtmlToParagraphs } from './HeaderSelectBar';\r\n\r\nlet _searchText = '';\r\n\r\ntype SearchContent = Content | KeywordContent;\r\n\r\nfunction extractHtmlLinksWithQuery(text: string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map((a) => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href,\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nfunction urlToNoteLink(url: string) {\r\n  const newLocation = new URL(url);\r\n  if (location.origin === newLocation.origin) {\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get('title');\r\n    const paragraph = params.get('paragraph') || params.get('section') || undefined;\r\n    if (title) {\r\n      return { title, paragraph };\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLink(url: string, navigation: StackNavigationProp<NavigationParamList>) {\r\n  const noteLink = urlToNoteLink(url);\r\n  if (noteLink) {\r\n    navigation.push('NotePage', noteLink);\r\n  } else {\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nexport function getNoteLinks(pages: Content[]) {\r\n  return pages.flatMap((v) =>\r\n    extractHtmlLinksWithQuery(v.description || '')\r\n      .map((v2) => {\r\n        const noteLink = urlToNoteLink(v2.url);\r\n        if (noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/) {\r\n          return { type: '_NOTELINK' as '_NOTELINK', name: v2.text, ...noteLink, origin: v.title };\r\n        }\r\n      })\r\n      .filter((v) => v !== undefined)\r\n  );\r\n}\r\n\r\nexport const getFilteredPages = (pages: Content[], searchText: string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase();\r\n  const noteLinks = getNoteLinks(pages);\r\n  return [\r\n    ...pages.filter((page) => page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter((v) => v.name.toLowerCase().startsWith(lowerCaseSearch)),\r\n  ];\r\n};\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter((v) => v.description);\r\n  return (\r\n    randomPages && (\r\n      <TouchableOpacity\r\n        style={commonStyles.searchButton}\r\n        onPress={() => {\r\n          const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n          const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n          navigation.push('NotePage', {\r\n            title: page.title,\r\n            paragraph: paragraphs[Math.floor(Math.random() * paragraphs.length)].title,\r\n          });\r\n        }}\r\n      >\r\n        <Icon name={'random'} size={18} color=\"#FFFFFF\" />\r\n      </TouchableOpacity>\r\n    )\r\n  );\r\n};\r\n\r\nexport const titleFormat = (item: { title: string; paragraph?: string }) =>\r\n  `${item.title}${item.paragraph ? ' ▶ ' + item.paragraph : ''}`;\r\n\r\nexport const SearchList = ({\r\n  filteredPages,\r\n  handlePagePress,\r\n  addKeyword,\r\n}: {\r\n  filteredPages: SearchContent[];\r\n  handlePagePress: (title: string, paragraph?: string) => void;\r\n  addKeyword?: (keyword: KeywordContent) => void;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item: SearchContent) => {\r\n    return PanResponder.create({\r\n      onPanResponderStart: () => {\r\n        if (item.type === '_NOTELINK' && item.paragraph) {\r\n          handlePagePress(item.title, item.paragraph);\r\n          addKeyword?.(item);\r\n        } else {\r\n          handlePagePress(item.title);\r\n          addKeyword?.({ type: '_KEYWORD', title: item.title });\r\n        }\r\n      },\r\n    }).panHandlers;\r\n  }, []);\r\n\r\n  return (\r\n    <FlatList\r\n      data={filteredPages}\r\n      keyExtractor={(item: any) => JSON.stringify([item.title, item.name, item.paragraph])}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity style={styles.resultItem} {...pagePressHandlers(item)}>\r\n          <Text style={[commonStyles.text, styles.resultText]}>\r\n            {item.type === '_NOTELINK' ? item.name : item.title}\r\n          </Text>\r\n          {item.type === '_NOTELINK' && (\r\n            <Text style={[commonStyles.text, styles.resultText, { fontSize: 12 }]}>\r\n              {titleFormat(item)}\r\n            </Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SearchBar: React.FC<{\r\n  handlePress?: (title: string) => void;\r\n  useRandom?: boolean;\r\n}> = ({ handlePress, useRandom = true }) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const { lang } = useLangContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput | null>();\r\n  const { data: keywords = [] } = useKeywords();\r\n  const addKeyword = useAddKeyowrd();\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages: SearchContent[] =\r\n    searchText.length > 0\r\n      ? getFilteredPages(pages, searchText).slice(0, 10)\r\n      : keywords.slice(0, 10);\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim());\r\n      addKeyword.mutate({ type: '_KEYWORD', title: searchText.trim() });\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, paragraph?: string) => {\r\n    if (handlePress) {\r\n      handlePress(title);\r\n    } else {\r\n      navigation.push('NotePage', { title, paragraph });\r\n    }\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(\r\n    () =>\r\n      PanResponder.create({\r\n        onPanResponderStart: handleSearch,\r\n      }).panHandlers,\r\n    [searchText]\r\n  );\r\n\r\n  useEffect(() => {\r\n    _searchText = searchText;\r\n  }, [searchText]);\r\n\r\n  useFocusEffect(() => {\r\n    if (searchText !== _searchText) {\r\n      setSearchText(_searchText);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={(ref) => {\r\n            inputRef.current = ref;\r\n          }}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder={lang('Search')}\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={() => setShowResults(true)}\r\n          onBlur={() => setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={'search'} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton />}\r\n      </View>\r\n\r\n      {showResults && (\r\n        <View\r\n          style={[\r\n            styles.resultsContainer,\r\n            theme === 'dark' ? styles.darkResults : styles.lightResults,\r\n          ]}\r\n        >\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList\r\n              filteredPages={filteredPages}\r\n              handlePagePress={handlePagePress}\r\n              addKeyword={addKeyword.mutate}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity style={styles.resultItem} {...searchHandlers}>\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import { CommonButton, Text, useLangContext, useModalsContext, View } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nexport default function AlertModal({\r\n  type,\r\n  callbacks,\r\n}: {\r\n  type: string;\r\n  callbacks: (() => void)[];\r\n}) {\r\n  const { lang } = useLangContext();\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(AlertModal, null);\r\n  };\r\n  const messages = {\r\n    UNSAVED: {\r\n      message: 'Changes that you made may not be saved.',\r\n      buttons: [\r\n        {\r\n          title: 'save',\r\n          onPress: () => {\r\n            callbacks[0]();\r\n            back();\r\n          },\r\n        },\r\n        {\r\n          title: 'do not save',\r\n          onPress: () => {\r\n            callbacks[1]();\r\n            back();\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  } as Record<string, { message: string; buttons: { title: string; onPress: () => void }[] }>;\r\n\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ padding: 16 }}>\r\n        <Text>{lang(messages[type].message)}</Text>\r\n        <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n          {messages[type].buttons.map((button, i) => (\r\n            <CommonButton\r\n              key={i}\r\n              style={{ marginRight: 10 }}\r\n              title={lang(button.title)}\r\n              onPress={button.onPress}\r\n            />\r\n          ))}\r\n          <CommonButton title={lang('cancel')} onPress={() => back()} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import {\r\n  Calendar,\r\n  useLangContext,\r\n  useModalsContext,\r\n  View,\r\n  Text,\r\n  CommonButton,\r\n} from '@blacktokki/core';\r\nimport { CalendarProps } from '@blacktokki/core/build/typescript/components/Calendar';\r\nimport dayjs from 'dayjs';\r\nimport React, { Suspense, useState } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\nexport type MarkedDateRange = { dateStart: string; dateEnd: string };\r\n\r\nconst DIRECT_PICK = true;\r\n\r\nconst getMarkedDays = (dateString: string, markedDateStrings: MarkedDateRange[]) => {\r\n  const disableDays: string[] = [];\r\n  const date = dayjs(dateString);\r\n  let startDate = date.clone().startOf('month').add(-1, 'month');\r\n  const endDate = date.clone().endOf('month').add(1, 'month');\r\n  const markedDate = markedDateStrings.map((v) => ({\r\n    startDate: dayjs(v.dateStart),\r\n    endDate: dayjs(v.dateEnd),\r\n  }));\r\n  const markedDays: string[] = [];\r\n  // const today = dayjs().startOf('day');\r\n  while (startDate <= endDate) {\r\n    // if (startDate < today) {\r\n    //   disableDays.push(startDate.format('YYYY-MM-DD'));\r\n    // }\r\n    if (markedDate.find((v) => !v.startDate.isAfter(startDate) && !v.endDate.isBefore(startDate))) {\r\n      markedDays.push(startDate.format('YYYY-MM-DD'));\r\n    }\r\n    startDate = startDate.add(1, 'day');\r\n  }\r\n  return {\r\n    ...disableDays.reduce((p, c) => {\r\n      p[c] = { disabled: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...markedDays.reduce((p, c) => {\r\n      p[c] = { marked: true, dotColor: 'red' };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n    ...(dateString ? [dateString] : []).reduce((p, c) => {\r\n      p[c] = { selected: true };\r\n      return p;\r\n    }, {} as Record<string, any>),\r\n  };\r\n};\r\n\r\nconst defaultDayjs = () => {\r\n  const m = dayjs();\r\n  const restMinute = parseInt(m.format('mm'), 10) % 5;\r\n  return m.add(5 - restMinute, 'minute');\r\n};\r\n\r\nexport default function DatePickerModal({\r\n  datetime,\r\n  markedDateStrings,\r\n  callback,\r\n}: {\r\n  datetime?: string;\r\n  markedDateStrings?: MarkedDateRange[];\r\n  callback: (datetime?: string) => void;\r\n}) {\r\n  const _dayjs = datetime ? dayjs(datetime) : defaultDayjs();\r\n  const { lang, locale } = useLangContext();\r\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\r\n  const [markedDates, setMarkedDates] = useState<CalendarProps['markedDates']>(\r\n    getMarkedDays(_dayjs.format('YYYY-MM-DD'), markedDateStrings || [])\r\n  );\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(DatePickerModal, null);\r\n  };\r\n  const onSave = (datetime?: string) => {\r\n    callback?.(datetime);\r\n    back();\r\n  };\r\n  return (\r\n    <View\r\n      style={{ flex: 1, margin: 0, justifyContent: 'flex-end', backgroundColor: 'transparent' }}\r\n    >\r\n      <View style={{ alignItems: 'center', minHeight: 450 }}>\r\n        <View style={{ flexDirection: 'row', width: '100%' }}>\r\n          <View style={{ flex: 1, flexDirection: 'row' }}>\r\n            <TouchableOpacity onPress={back}>\r\n              <Text>{lang('back')}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={{ fontSize: 20, textAlign: 'center' }}>{lang('Date')}</Text>\r\n          </View>\r\n          <View style={{ flex: 1 }} />\r\n        </View>\r\n        <View\r\n          style={{ marginBottom: 20, height: 1, width: '100%' }}\r\n          lightColor=\"#ddd\"\r\n          darkColor=\"rgba(255,255,255, 0.3)\"\r\n        />\r\n        <Suspense fallback={<></>}>\r\n          <Calendar\r\n            locale={locale}\r\n            style={undefined}\r\n            date={date}\r\n            setDate={DIRECT_PICK ? onSave : setDate}\r\n            disableAllTouchEventsForDisabledDays={true}\r\n            onMonthChange={(v) =>\r\n              setMarkedDates(getMarkedDays(v.dateString, markedDateStrings || []))\r\n            }\r\n            markedDates={markedDates}\r\n          />\r\n        </Suspense>\r\n        {!DIRECT_PICK && (\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <CommonButton title={lang('save')} onPress={() => onSave(date)} />\r\n            <CommonButton title={lang('cancel')} onPress={() => onSave(undefined)} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import AlertModal from './AlertModal';\r\nimport DatePickerModal from './DatePikcerModal';\r\n\r\nexport default [DatePickerModal, AlertModal];\r\n","import { useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport { titleFormat } from '../../components/SearchBar';\r\nimport { createCommonStyles } from '../../styles';\r\n\r\nexport const NoteListSection = ({\r\n  contents,\r\n  isLoading,\r\n  onPress,\r\n  emptyMessage,\r\n}: {\r\n  contents: {\r\n    title: string;\r\n    paragraph?: string;\r\n    subtitles?: string[];\r\n    id?: number;\r\n  }[];\r\n  isLoading: boolean;\r\n  onPress: (title: string, paragraph?: string, id?: number) => void;\r\n  emptyMessage: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : contents.length > 0 ? (\r\n        <FlatList\r\n          data={contents}\r\n          keyExtractor={(item) => JSON.stringify([item.title, item.paragraph, item.id])}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => onPress(item.title, item.paragraph, item.id)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n              {(item.subtitles || []).map((subtitle, index) => (\r\n                <Text key={index} style={[commonStyles.smallText]}>\r\n                  {subtitle}\r\n                </Text>\r\n              ))}\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text selectable={false} style={commonStyles.text}>\r\n            {lang(emptyMessage)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n","import { CommonButton } from '@blacktokki/core';\r\nimport { toRaw } from '@blacktokki/editor';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\n\r\nimport { Paragraph } from './HeaderSelectBar';\r\n\r\ntype DatePattern = {\r\n  pattern: string;\r\n  format?: (s: string, e: string) => string;\r\n  text: string;\r\n  dateStart: string;\r\n  dateEnd: string;\r\n  index: number;\r\n};\r\n\r\nfunction extractDates(input: string) {\r\n  const now = new Date();\r\n  const currentYear = now.getFullYear();\r\n  // 정규식 패턴들\r\n  const patterns: {\r\n    regex: RegExp;\r\n    parse: (match: RegExpExecArray) => DatePattern;\r\n  }[] = [\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\/(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        // YYYY-MM-DD/YYYY-MM-DD\r\n        pattern: 'YYYY-MM-DD',\r\n        format: (s, e) => `${s}/${e}`,\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[2],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b(\\d{4}-\\d{2}-\\d{2})\\b/g,\r\n      parse: (match) => ({\r\n        pattern: 'YYYY-MM-DD',\r\n        text: match[0],\r\n        dateStart: match[1],\r\n        dateEnd: match[1],\r\n        index: match.index,\r\n      }),\r\n    },\r\n    {\r\n      regex: /\\b\\d{4}-\\d{2}(?!-)\\b/g,\r\n      parse: (match) => {\r\n        const split = match[0].split('-');\r\n        const year = parseInt(split[0], 10);\r\n        const month = parseInt(split[1], 10);\r\n        const lastDay = new Date(year, month, 0).getDate();\r\n        return {\r\n          pattern: 'YYYY-MM',\r\n          text: match[0],\r\n          dateStart: `${year}-${String(month).padStart(2, '0')}-01`,\r\n          dateEnd: `${year}-${String(month).padStart(2, '0')}-${String(lastDay).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      regex: /\\b(?<!\\d)(\\d{2})\\/(\\d{2})(?!\\d)\\b/g,\r\n      parse: (match) => {\r\n        const mm = parseInt(match[1], 10);\r\n        const dd = parseInt(match[2], 10);\r\n        return {\r\n          pattern: 'MM/DD',\r\n          text: match[0],\r\n          dateStart: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          dateEnd: `${currentYear}-${String(mm).padStart(2, '0')}-${String(dd).padStart(2, '0')}`,\r\n          index: match.index,\r\n        };\r\n      },\r\n    },\r\n  ];\r\n\r\n  const results: DatePattern[] = [];\r\n\r\n  const usedRanges: [number, number][] = [];\r\n\r\n  for (const pattern of patterns) {\r\n    const regex = new RegExp(pattern.regex.source, 'g');\r\n    let match: RegExpExecArray | null;\r\n\r\n    while ((match = regex.exec(input)) !== null) {\r\n      const start = match.index;\r\n      const end = regex.lastIndex;\r\n      // 이미 처리된 범위에 속하면 skip\r\n      if (results.some((result) => start < result.index + result.text.length && end > result.index))\r\n        continue;\r\n      results.push(pattern.parse(match));\r\n      usedRanges.push([start, end]);\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\nexport function cleanAndMergeTDs(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // 1. <code> 태그 내부 비우기\r\n  const codeTags = doc.querySelectorAll('code');\r\n  codeTags.forEach((code) => {\r\n    code.textContent = '';\r\n  });\r\n\r\n  // 2. 각 <tr> 안의 <td> 병합\r\n  const trList = doc.querySelectorAll('tr');\r\n  trList.forEach((tr) => {\r\n    const tdList = tr.querySelectorAll('td');\r\n    if (tdList.length > 1) {\r\n      const mergedText = Array.from(tdList)\r\n        .map((td) => td.textContent?.trim() || '')\r\n        .join(' ');\r\n\r\n      // 첫 td에 병합된 텍스트 설정\r\n      const newTd = document.createElement('td');\r\n      newTd.textContent = mergedText;\r\n\r\n      // 기존 td 모두 제거 후 병합 td 삽입\r\n      tr.innerHTML = '';\r\n      tr.appendChild(newTd);\r\n    }\r\n  });\r\n\r\n  return doc.body.innerHTML;\r\n}\r\n\r\nexport const paragraphsToDatePatterns = (title: string, paragraphs: Paragraph[]) => {\r\n  return paragraphs\r\n    .map((paragraph) => {\r\n      const dateMatches = [\r\n        toRaw(paragraph.header),\r\n        ...toRaw(cleanAndMergeTDs(paragraph.description)).split('\\n'),\r\n      ].map((v2, i) => ({\r\n        path: paragraph.path,\r\n        isHeader: i === 0,\r\n        original: v2,\r\n        matches: extractDates(v2),\r\n      }));\r\n      return { title, paragraph: paragraph.title, dateMatches };\r\n    })\r\n    .filter((v) => v.dateMatches.filter((v2) => v2.matches.length > 0).length > 0);\r\n};\r\n\r\nexport const matchDateRange = (\r\n  dateMatches: { matches: DatePattern[]; original: string; path: string; isHeader: boolean }[],\r\n  dateNum: number\r\n) => {\r\n  return dateMatches.filter((dateMatch) =>\r\n    dateMatch.matches.find(\r\n      (match) =>\r\n        new Date(match.dateStart).getTime() <= dateNum &&\r\n        dateNum <= new Date(match.dateEnd).getTime()\r\n    )\r\n  );\r\n};\r\n\r\nexport const today = () => dayjs().format('YYYY-MM-DD');\r\n\r\nexport type TimerData = DatePattern & { original: string; replace: (a: string) => void };\r\n\r\nconst TimerTag = (props: {\r\n  data: TimerData;\r\n  buttons: (data: TimerData) => { title: string; onPress: () => void }[];\r\n  now: dayjs.Dayjs;\r\n  isExpand: boolean;\r\n  toggleExpand: () => void;\r\n}) => {\r\n  const start = dayjs(props.data.dateStart);\r\n  const end = dayjs(props.data.dateEnd).add(1, 'day');\r\n  const ratio = start.diff(props.now) / start.diff(end);\r\n  return (\r\n    <TouchableOpacity onPress={() => props.toggleExpand()}>\r\n      <View\r\n        style={{ backgroundColor: 'lightgray', borderRadius: 20, overflow: 'hidden', margin: 4 }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: 'darkgray',\r\n            position: 'absolute',\r\n            width: `${ratio * 100}%`,\r\n            height: '100%',\r\n          }}\r\n        />\r\n        {props.isExpand ? (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, maxWidth: 270 }}>\r\n            <View style={{ flexDirection: 'row', alignItems: 'stretch' }}>\r\n              <Text>⌚</Text>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n            <Text>{props.data.original}</Text>\r\n            <View style={{ width: '100%', alignItems: 'center' }}>\r\n              {props.buttons(props.data).map((v) => (\r\n                <CommonButton\r\n                  key={v.title}\r\n                  title={v.title}\r\n                  onPress={() => v.onPress()}\r\n                  style={{ width: '100%', backgroundColor: '#8888', margin: 4, maxWidth: 150 }}\r\n                />\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={{ paddingVertical: 4, paddingHorizontal: 4, flexDirection: 'row' }}>\r\n            <View style={{ paddingHorizontal: 4 }}>\r\n              <Text selectable={false}>{props.data.text}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\nexport default TimerTag;\r\n","import { toRaw } from '@blacktokki/editor';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Paragraph, parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { getNoteLinks } from '../components/SearchBar';\r\nimport { cleanAndMergeTDs } from '../components/TimerTag';\r\nimport { Content } from '../types';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nconst getReadabilityLevel = (() => {\r\n  function getKoreanRatio(text: string): number {\r\n    return (text.match(/[가-힣]/g) || []).length / text.length;\r\n  }\r\n\r\n  function countSyllables(word: string): number {\r\n    word = word.toLowerCase();\r\n    if (word.length <= 3) return 1;\r\n    const vowels = /[aeiouy]+/g;\r\n    const trailingE = /e\\b/;\r\n    const matches = word.match(vowels) || [];\r\n    let syllables = matches.length;\r\n    if (trailingE.test(word) && syllables > 1) syllables--;\r\n    return Math.max(syllables, 1);\r\n  }\r\n\r\n  function calculateFleschKincaid(text: string): number {\r\n    const sentenceCount = (text.match(/[.!?]+/g) || []).length || 1;\r\n    const wordList = text.trim().split(/\\s+/);\r\n    const wordCount = wordList.length;\r\n    const syllableCount = wordList.reduce((sum, word) => sum + countSyllables(word), 0);\r\n    return 0.39 * (wordCount / sentenceCount) + 11.8 * (syllableCount / wordCount) - 15.59;\r\n  }\r\n\r\n  function classifyFleschKincaid(score: number): number {\r\n    if (score < 3.0) return 1;\r\n    if (score < 6.0) return 2;\r\n    if (score < 9.0) return 3;\r\n    if (score < 12.0) return 4;\r\n    return 5;\r\n  }\r\n\r\n  function classifyKoreanReadability(text: string): number {\r\n    const sentences = text.split(/[.?!\\r\\n]/).filter((s) => s.trim().length > 0);\r\n    const words = text.trim().split(/\\s+/);\r\n    const wordCount = words.length;\r\n    const sentenceCount = sentences.length || 1;\r\n    const avgWordsPerSentence = wordCount / sentenceCount;\r\n\r\n    if (avgWordsPerSentence <= 7) return 1; // 매우 쉬움\r\n    if (avgWordsPerSentence <= 10) return 2;\r\n    if (avgWordsPerSentence <= 13) return 3;\r\n    if (avgWordsPerSentence <= 16) return 4;\r\n    return 5; // 매우 어려움\r\n  }\r\n\r\n  function _getReadabilityLevel(text: string) {\r\n    const koRatio = getKoreanRatio(text);\r\n    const enGrade = calculateFleschKincaid(text);\r\n    const enLevel = classifyFleschKincaid(enGrade);\r\n    const koLevel = classifyKoreanReadability(text);\r\n    return { koRatio, enLevel, koLevel, level: koLevel * koRatio + enLevel * (1 - koRatio) };\r\n  }\r\n  return _getReadabilityLevel;\r\n})();\r\n\r\nfunction findLists(html: string): { type: 'ul' | 'ol'; items: string[] }[] {\r\n  const results: { type: 'ul' | 'ol'; items: string[] }[] = [];\r\n\r\n  const listRegex = /<(ul|ol)[^>]*?>([\\s\\S]*?)<\\/\\1>/gi;\r\n  const liRegex = /<li[^>]*>([\\s\\S]*?)<\\/li>/gi;\r\n\r\n  let listMatch;\r\n  while ((listMatch = listRegex.exec(html)) !== null) {\r\n    const [, type, innerHTML] = listMatch;\r\n    const items: string[] = [];\r\n\r\n    let liMatch;\r\n    while ((liMatch = liRegex.exec(innerHTML)) !== null) {\r\n      const itemContent = liMatch[1].trim();\r\n      items.push(itemContent);\r\n    }\r\n\r\n    results.push({ type: type as 'ul' | 'ol', items });\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport const getSplitTitle = (title: string) => {\r\n  const splitTitle = title.split('/');\r\n  if (splitTitle.length < 2) {\r\n    return [title];\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length - 1).join('/'), splitTitle[splitTitle.length - 1]];\r\n};\r\n\r\nexport const paragraphDescription = (\r\n  paragraphs: Paragraph[],\r\n  paragraph: string,\r\n  rootTitle: boolean\r\n) => {\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path;\r\n  return path\r\n    ? paragraphs\r\n        .filter((v) => v.path.startsWith(path))\r\n        .map((v) => (rootTitle || v.path !== path ? v.header : '') + v.description)\r\n        .join('')\r\n    : '';\r\n};\r\n\r\nconst getData = async (pages: Content[]) => {\r\n  const records: Record<\r\n    string,\r\n    {\r\n      subtitles: string[];\r\n      paragraphs: Record<string, string[]>;\r\n    }\r\n  > = {};\r\n  const push = (title: string, paragraph: string | undefined, subtitle: string) => {\r\n    if (records[title] === undefined) {\r\n      records[title] = { subtitles: [], paragraphs: {} };\r\n    }\r\n    const record = records[title];\r\n    if (paragraph !== undefined) {\r\n      if (record.paragraphs[paragraph] === undefined) {\r\n        record.paragraphs[paragraph] = [];\r\n      }\r\n      record.paragraphs[paragraph].push(subtitle);\r\n    } else {\r\n      record.subtitles.push(subtitle);\r\n    }\r\n  };\r\n\r\n  pages.forEach((page) => {\r\n    //unknown note\r\n    getNoteLinks([page]).forEach((link) => {\r\n      const linkPage = pages.find((v) => v.title === link.title);\r\n      if (linkPage?.description) {\r\n        if (\r\n          link.paragraph === undefined ||\r\n          parseHtmlToParagraphs(linkPage.description).find((v2) => v2.title === link.paragraph)\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n      push(\r\n        link.title,\r\n        link.paragraph,\r\n        (link.paragraph === undefined ? 'Unknown note link' : 'Unknown paragraph link') +\r\n          `(${link.origin})`\r\n      );\r\n    });\r\n\r\n    //empty parent note\r\n    const splitTitle = getSplitTitle(page.title);\r\n    if (\r\n      page.description &&\r\n      splitTitle.length === 2 &&\r\n      pages.find((v) => v.title === splitTitle[0]) === undefined\r\n    ) {\r\n      push(splitTitle[0], undefined, `Empty parent note(${page.title})`);\r\n    }\r\n\r\n    // empty contents\r\n    const paragraphs = parseHtmlToParagraphs(page.description || '');\r\n    const lists = paragraphs\r\n      .map((v) => ({ ...v, lists: findLists(v.description) }))\r\n      .filter((v) => v.lists.length > 0);\r\n\r\n    paragraphs\r\n      .filter(\r\n        (v) => v.level !== 0 && paragraphDescription(paragraphs, v.title, false).trim() === ''\r\n      )\r\n      .forEach((v) => push(page.title, v.level === 0 ? undefined : v.title, 'Empty paragraph'));\r\n    lists\r\n      .filter(\r\n        (v) =>\r\n          v.lists.filter(\r\n            (v2) =>\r\n              v2.items.filter((v2) => v2.replaceAll('&nbsp;', '').trim().length === 0).length > 0\r\n          ).length > 0\r\n      )\r\n      .forEach((v2) => push(page.title, v2.level === 0 ? undefined : v2.title, 'Empty list'));\r\n\r\n    // duplicate contents\r\n    paragraphs\r\n      .filter((v) => v !== paragraphs.findLast((v2) => v2.path === v.path))\r\n      .forEach((v) => push(page.title, undefined, `Duplicate paragraphs(${v})`));\r\n    paragraphs\r\n      .map((v) => {\r\n        const sentences = cleanAndMergeTDs(v.description)\r\n          .split('\\n')\r\n          .map((v2) => toRaw(v2).trim())\r\n          .filter((v) => v.includes(' ') && v.length > 4);\r\n        return {\r\n          ...v,\r\n          duplicates: sentences.filter((v2, i) => i !== sentences.lastIndexOf(v2)),\r\n        };\r\n      })\r\n      .forEach((v) =>\r\n        v.duplicates.forEach((v2) =>\r\n          push(page.title, v.level === 0 ? undefined : v.title, `Duplicate contents(${v2})`)\r\n        )\r\n      );\r\n    // readability\r\n    const readability = page.description\r\n      ? getReadabilityLevel(\r\n          toRaw(\r\n            page.description\r\n              .replaceAll(/<code\\b[^>]*>[\\s\\S]*?<\\/code>/gi, '<code></code>')\r\n              .replaceAll(/<br\\s*[/]?>/gi, '\\r\\n')\r\n          )\r\n        )\r\n      : { level: 0 };\r\n    if (readability.level > 3.5) {\r\n      push(\r\n        page.title,\r\n        undefined,\r\n        `Too high readability score: ${readability.level.toFixed(4)} > 3.5`\r\n      );\r\n    }\r\n  });\r\n\r\n  return Object.entries(records).flatMap(([title, record]) => {\r\n    return [\r\n      ...(record.subtitles.length > 0 ? [{ title, subtitles: record.subtitles }] : []),\r\n      ...Object.entries(record.paragraphs).map(([paragraph, subtitles]) => ({\r\n        title,\r\n        paragraph,\r\n        subtitles,\r\n      })),\r\n    ];\r\n  });\r\n};\r\n\r\nexport default () => {\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const [data, setData] = useState<{ title: string; paragraph?: string; subtitles: string[] }[]>(\r\n    []\r\n  );\r\n  const timeoutRef = useRef<NodeJS.Timeout>();\r\n  useEffect(() => {\r\n    timeoutRef.current && clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = setTimeout(() => {\r\n      getData(pages).then(setData);\r\n      timeoutRef.current = undefined;\r\n    }, 500);\r\n  }, [pages]);\r\n  return { data, isLoading };\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nimport { parseHtmlToParagraphs } from '../components/HeaderSelectBar';\r\nimport { matchDateRange, paragraphsToDatePatterns, today } from '../components/TimerTag';\r\nimport { useNotePages } from './useNoteStorage';\r\n\r\nexport default (date?: string) => {\r\n  const dateNum = new Date(date || today()).getTime();\r\n\r\n  const { data: notes = [], isLoading } = useNotePages();\r\n  const preData = useMemo(\r\n    () =>\r\n      notes.flatMap((v) =>\r\n        paragraphsToDatePatterns(v.title, parseHtmlToParagraphs(v?.description || ''))\r\n      ),\r\n    [notes]\r\n  );\r\n  const data = preData\r\n    .map((v) => {\r\n      return {\r\n        ...v,\r\n        subtitles: matchDateRange(v.dateMatches, dateNum).map((dateMatch) => dateMatch.original),\r\n      };\r\n    })\r\n    .filter((v2) => v2.subtitles.length > 0);\r\n  return { data, isLoading, preData };\r\n};\r\n","import { useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport { navigate, push } from '@blacktokki/navigation';\r\nimport React, { useRef } from 'react';\r\nimport { List, TouchableRipple, Badge } from 'react-native-paper';\r\n\r\nimport {\r\n  useRecentPages,\r\n  useNotePages,\r\n  useDeleteRecentPage,\r\n  useLastPage,\r\n  useAddRecentPage,\r\n} from '../../../hooks/useNoteStorage';\r\nimport useProblem from '../../../hooks/useProblem';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape: boolean) => {\r\n  return isLandscape ? 5 : 8;\r\n};\r\n\r\nexport const TimeLineButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useTimeLine();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'calendar'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('TimeLine')}\r\n      onPress={() => navigate('TimeLine')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ProblemButton = () => {\r\n  const { lang } = useLangContext();\r\n  const { data } = useProblem();\r\n  return (\r\n    <List.Item\r\n      left={(_props) => <List.Icon {..._props} icon={'note-alert'} />}\r\n      right={(_props) => (\r\n        <View style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\r\n          {data.length > 0 && <Badge>{data.length}</Badge>}\r\n        </View>\r\n      )}\r\n      title={lang('Problems')}\r\n      onPress={() => push('Problem')}\r\n    />\r\n  );\r\n};\r\n\r\nexport const toRecentContents = (data: Content[]) =>\r\n  data\r\n    .filter((v) => v.description)\r\n    .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime());\r\n\r\nconst ContentGroupSection = (\r\n  props: { type: 'PAGE' | 'LAST' } | { type: 'NOTE'; noteCount: number }\r\n) => {\r\n  const { lang } = useLangContext();\r\n  const notes = useNotePages();\r\n  const pages = useRecentPages();\r\n  const { data: lastPage } = useLastPage();\r\n  const tabRef = useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage();\r\n  const deleteRecentPage = useDeleteRecentPage();\r\n  const data =\r\n    props.type === 'NOTE' ? (notes.data ? toRecentContents(notes.data) : []) : pages.data;\r\n  const lastPageExists = lastPage && data?.find((v) => v.id === lastPage.id) === undefined;\r\n  const window = useResizeContext();\r\n  const itemPadding = getItemPadding(window === 'landscape');\r\n  const noteOnPress = (title: string) => {\r\n    if (title === lastPage?.title) {\r\n      if (tabRef.current) {\r\n        clearTimeout(tabRef.current);\r\n        tabRef.current = undefined;\r\n        addRecentPage.mutate({ title });\r\n      } else {\r\n        tabRef.current = setTimeout(() => {\r\n          tabRef.current = undefined;\r\n        }, 500);\r\n      }\r\n    }\r\n    navigate('NotePage', { title });\r\n  };\r\n  const noteOnLongPress = (title: string) => {\r\n    if (tabRef.current) {\r\n      clearTimeout(tabRef.current);\r\n      tabRef.current = undefined;\r\n    }\r\n    if (pages.data?.find((v) => v.title === title) === undefined) {\r\n      addRecentPage.mutate({ title, direct: true });\r\n    } else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  };\r\n  return (\r\n    (props.type !== 'LAST' || lastPageExists) && (\r\n      <List.Section>\r\n        {data &&\r\n          (props.type === 'LAST' ? (\r\n            lastPageExists && (\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document'} />}\r\n                title={lastPage.title}\r\n                onPress={() => noteOnPress(lastPage.title)}\r\n                onLongPress={() => noteOnLongPress(lastPage.title)}\r\n                style={{ padding: itemPadding }}\r\n                titleStyle={{ fontStyle: 'italic' }}\r\n              />\r\n            )\r\n          ) : props.type === 'NOTE' ? (\r\n            <>\r\n              {data.slice(0, props.noteCount).map((v) => (\r\n                <List.Item\r\n                  key={v.title}\r\n                  left={(_props) => (\r\n                    <List.Icon\r\n                      {..._props}\r\n                      icon={\r\n                        pages.data?.find((v2) => v2.title === v.title) === undefined\r\n                          ? 'notebook'\r\n                          : 'notebook-edit'\r\n                      }\r\n                    />\r\n                  )}\r\n                  title={v.title}\r\n                  onPress={() => noteOnPress(v.title)}\r\n                  onLongPress={() => noteOnLongPress(v.title)}\r\n                  style={{ padding: itemPadding }}\r\n                />\r\n              ))}\r\n              <List.Item\r\n                left={(_props) => <List.Icon {..._props} icon={'notebook-multiple'} />}\r\n                title={lang('more...')}\r\n                onPress={() => push('RecentPages')}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            </>\r\n          ) : (\r\n            data.map((v) => (\r\n              <List.Item\r\n                key={v.title}\r\n                left={(_props) => <List.Icon {..._props} icon={'file-document-edit'} />}\r\n                right={(_props) => (\r\n                  <TouchableRipple\r\n                    style={{\r\n                      justifyContent: 'center',\r\n                      borderRadius: itemPadding,\r\n                      width: 40 + itemPadding * 2,\r\n                      height: 40 + itemPadding * 2,\r\n                      margin: -itemPadding,\r\n                    }}\r\n                    onPress={() => deleteRecentPage.mutate(v.title)}\r\n                  >\r\n                    <List.Icon style={{ left: itemPadding - 7 }} icon={'close'} />\r\n                  </TouchableRipple>\r\n                )}\r\n                title={v.title}\r\n                onPress={() => navigate('NotePage', { title: v.title })}\r\n                style={{ padding: itemPadding }}\r\n              />\r\n            ))\r\n          ))}\r\n      </List.Section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;\r\n","import { useColorScheme, useResizeContext, View, Text, useLangContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Card } from 'react-native-paper';\r\n\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset();\r\n\r\nexport const updatedFormat = (_updated: string) => {\r\n  const _date = new Date(_updated);\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset);\r\n  const updated = _date.toISOString().slice(0, 16);\r\n  const date = updated.slice(0, 10);\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  return date === today ? updated.slice(11) : date;\r\n};\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape: boolean) => (isLandscape ? 20 : 4);\r\nconst _cardMaxWidth = (isLandscape: boolean) => (isLandscape ? 250 : 190);\r\n\r\ntype Item = (Content & { descriptionComponent: JSX.Element }) | null;\r\n\r\nconst CardPage = React.memo(({ item, index }: { item: Item; index: number }) => {\r\n  const window = useResizeContext();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window === 'landscape' ? 2 : 0;\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null) {\r\n    return (\r\n      <View style={{ flexBasis: window === 'landscape' ? '33%' : '50%', maxWidth: cardMaxWidth }} />\r\n    );\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = () => navigation.push('NotePage', { title: item.title });\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexBasis: window === 'landscape' ? '33%' : '50%',\r\n        padding: _cardPadding(window === 'landscape'),\r\n        paddingRight: 0,\r\n        minWidth: cardMaxWidth,\r\n        maxWidth: cardMaxWidth,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Card\r\n        onPress={onPress}\r\n        style={[\r\n          commonStyles.card,\r\n          {\r\n            paddingTop: 8,\r\n            aspectRatio: 1 / Math.sqrt(2),\r\n            borderRadius: 6,\r\n            marginVertical: 10,\r\n            marginHorizontal: 8,\r\n            overflow: 'hidden',\r\n          },\r\n        ]}\r\n      >\r\n        <Card.Content style={{ padding: 0 }}>{mounted && item.descriptionComponent}</Card.Content>\r\n      </Card>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          marginTop: 10,\r\n          padding: 0,\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n          backgroundColor: 'transparent',\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 14 + fSize, overflow: 'hidden' }}>{item.title}</Text>\r\n        <Text style={{ fontSize: 12 + fSize, opacity: 0.4, textAlign: 'right' }}>\r\n          {updatedFormat(item.updated)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n});\r\n\r\nconst renderItem = ({ item, index }: { item: Item; index: number }) => (\r\n  <CardPage key={index} index={index} item={item} />\r\n);\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const cardMaxWidth = _cardMaxWidth(window === 'landscape');\r\n  const RenderHtml = useMemo(() => React.lazy(() => import('react-native-render-html')), []);\r\n  const contents = useMemo(\r\n    () => [\r\n      ...toRecentContents(recentPages).map((v) => ({\r\n        ...v,\r\n        descriptionComponent: (\r\n          <RenderHtml\r\n            source={{ html: removeAllAttributesFromHTML(v.description || '').slice(0, 300) || '' }}\r\n            renderersProps={{\r\n              a: { onPress: () => navigation.push('NotePage', { title: v.title }) },\r\n            }}\r\n            tagsStyles={{ body: { color: commonStyles.text.color } }}\r\n            contentWidth={cardMaxWidth}\r\n          />\r\n        ),\r\n      })),\r\n      null,\r\n      null,\r\n    ],\r\n    [recentPages]\r\n  );\r\n  const maxWidth = (cardMaxWidth + 5) * (window === 'landscape' ? 5 : 3);\r\n  return isLoading ? (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>로딩 중...</Text>\r\n    </View>\r\n  ) : contents.length > 2 ? (\r\n    <ScrollView\r\n      key={window}\r\n      contentContainerStyle={{\r\n        alignSelf: 'center',\r\n        backgroundColor: 'transparent',\r\n        flexBasis: '100%',\r\n        maxWidth,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        paddingRight: _cardPadding(window === 'landscape'),\r\n        justifyContent: window === 'landscape' ? undefined : 'center',\r\n      }}\r\n    >\r\n      <Suspense>{contents.map((item, index) => renderItem({ item, index }))}</Suspense>\r\n    </ScrollView>\r\n  ) : (\r\n    <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n      <Text style={commonStyles.text}>{lang('There are no recently modified notes.')}</Text>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.push('NoteViewer', { key: 'Usage' })}\r\n        style={commonStyles.button}\r\n      >\r\n        <Text style={commonStyles.buttonText}>{lang('Usage')}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n});\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>();\r\n  const _window = useResizeContext();\r\n  const title = route.params?.title;\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={recentPages\r\n          .filter((v) => title === undefined || title === v.title)\r\n          .sort((a, b) => new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n          .map((v, i) => ({\r\n            ...v,\r\n            subtitles: [`최근 수정: ${updatedFormat(v.updated as string)}`],\r\n            id: v.id || i,\r\n          }))}\r\n        isLoading={isLoading}\r\n        onPress={(title, _, id) =>\r\n          (title === undefined ? navigation.push : navigation.navigate)('NotePage', {\r\n            title,\r\n            archiveId: id,\r\n          })\r\n        }\r\n        emptyMessage=\"There are no recently modified notes.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme, useLangContext, useModalsContext } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport {\r\n  RouteProp,\r\n  useFocusEffect,\r\n  useIsFocused,\r\n  useNavigation,\r\n  useRoute,\r\n} from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet } from 'react-native';\r\n\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport AlertModal from '../../modals/AlertModal';\r\nimport { previewUrl } from '../../services/notebook';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const isFocused = useIsFocused();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { lang } = useLangContext();\r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword: string) =>\r\n    pages\r\n      .filter((v) => v.title.startsWith(title + '/'))\r\n      .map((v) => ({\r\n        type: '_CHILDNOTE' as '_CHILDNOTE',\r\n        name: v.title.split(title + '/')[1],\r\n        title: v.title,\r\n      }))\r\n      .filter((v) => v.name.toLowerCase().startsWith(keyword.toLowerCase()));\r\n  const [content, setContent] = useState('');\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const { setModal } = useModalsContext();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error: any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        },\r\n      }\r\n    );\r\n  };\r\n  const handleBack = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (page?.description === content) {\r\n      handleBack();\r\n    } else {\r\n      setModal(AlertModal, { type: 'UNSAVED', callbacks: [handleSave, handleBack] });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && page?.description) {\r\n      setContent(page?.description);\r\n    }\r\n  }, [isLoading, page]);\r\n\r\n  useFocusEffect(() => {\r\n    const callback = (event: any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  });\r\n  return (\r\n    isFocused && (\r\n      <View style={commonStyles.container}>\r\n        <View style={commonStyles.header}>\r\n          <Text style={[commonStyles.title, { flex: 1 }]}>{title} - 편집</Text>\r\n        </View>\r\n        <Editor\r\n          active\r\n          value={content}\r\n          setValue={setContent}\r\n          theme={theme}\r\n          autoComplete={[\r\n            {\r\n              trigger: '[',\r\n              getMatchedChars: async (pattern) => {\r\n                const childrenPages = getChildrenPages(pattern);\r\n                return [\r\n                  { type: '_NOTELINK', name: pattern, title, paragraph: pattern },\r\n                  ...(childrenPages.length\r\n                    ? childrenPages\r\n                    : [{ type: '_CHILDNOTE', name: pattern, title: title + '/' + pattern }]),\r\n                  ...getFilteredPages(pages, pattern),\r\n                ].map((v) => {\r\n                  const text =\r\n                    v.type === '_NOTELINK'\r\n                      ? v.name + `(${titleFormat(v)})`\r\n                      : v.type === '_CHILDNOTE'\r\n                      ? v.name\r\n                      : v.title;\r\n                  const url = encodeURI(\r\n                    v.type === '_NOTELINK' && v.paragraph\r\n                      ? `?title=${v.title}&paragraph=${v.paragraph}`\r\n                      : `?title=${v.title}`\r\n                  );\r\n                  return {\r\n                    text,\r\n                    value: `<a href=${url}>${text}</a>`,\r\n                  };\r\n                });\r\n              },\r\n            },\r\n            {\r\n              trigger: 'http',\r\n              getMatchedChars: async (pattern) => {\r\n                const query = 'http' + pattern;\r\n                const url = new URL(query);\r\n                if (url.protocol !== 'http:' && url.protocol !== 'https:') {\r\n                  return [];\r\n                }\r\n                const preview = await previewUrl({ query });\r\n                if (!preview.title) {\r\n                  return [];\r\n                }\r\n                return [\r\n                  {\r\n                    text: preview.title,\r\n                    value: `<a href=${preview.url}>${preview.title}</a>`,\r\n                  },\r\n                  // {\r\n                  //   text:preview.title + '...',\r\n                  //   value:`<a href=${preview.url}>${preview.title}</a><p>${preview.description}...</p>`,\r\n                  // }\r\n                ];\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('cancel')}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[commonStyles.button, styles.saveButton]} onPress={handleSave}>\r\n            <Text style={commonStyles.buttonText}>{lang('save')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme, useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\n\r\nimport HeaderSelectBar, { parseHtmlToParagraphs } from '../../components/HeaderSelectBar';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, paragraph } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const path = paragraphs.find((v) => v.title === paragraph)?.path || '';\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToParagraphs(newPage?.description || '').filter(\r\n    (v) => title !== newTitle || path === v.path || !v.path.startsWith(path)\r\n  );\r\n  const [newPath, setNewPath] = useState('');\r\n  const [preview, setPreview] = useState<boolean>();\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage();\r\n  const moveMutation = useMovePage();\r\n  const { sourceDescription, targetDescription } = useMemo(() => {\r\n    const moveParagraph = paragraphs.filter((v) => v.path.startsWith(path));\r\n    const isSplit = newPage?.title === page?.title + '/' + moveParagraph[0]?.title;\r\n    const moveDescription = moveParagraph\r\n      .map((v, i) => (isSplit && i === 0 ? '' : v.header) + v.description)\r\n      .join('');\r\n    const sourceParagraph = paragraphs.filter((v) => !v.path.startsWith(path));\r\n    const sourceDescription = sourceParagraph.map((v) => v.header + v.description).join('');\r\n    const targetParagraph = page?.title === newPage?.title ? sourceParagraph : newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex((v) => v.path.startsWith(newPath));\r\n    const targetDescription =\r\n      newPage?.id === undefined\r\n        ? moveDescription\r\n        : [\r\n            ...targetParagraph.slice(0, targetIndex + 1).map((v) => v.header + v.description),\r\n            ...moveParagraph.map(\r\n              (v, i) =>\r\n                ((v.path === path && v.description === '') || (isSplit && i === 0)\r\n                  ? ''\r\n                  : v.header) + v.description\r\n            ),\r\n            ...targetParagraph.slice(targetIndex + 1).map((v) => v.header + v.description),\r\n          ].join('');\r\n    return { sourceDescription, targetDescription };\r\n  }, [paragraphs, newParagraph, path, newPath]);\r\n\r\n  const handleMove = () => {\r\n    if (newPage?.id === undefined) {\r\n      moveMutation.mutate(\r\n        {\r\n          oldTitle: title,\r\n          newTitle: newTitle.trim(),\r\n          description: path === '' ? undefined : targetDescription,\r\n        },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert(\r\n              lang('error'),\r\n              error.message || lang('An error occurred while moving note.')\r\n            );\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      if (page?.title === newPage.title && path === newPath) {\r\n        handleCancel();\r\n      }\r\n      mutation.mutate(\r\n        { title: newPage.title, description: targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title) {\r\n              mutation.mutate({ title, description: sourceDescription });\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error: any) => {\r\n            Alert.alert(\r\n              lang('error'),\r\n              error.message || lang('An error occurred while moving note.')\r\n            );\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      navigation.navigate('NotePage', { title });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !page) {\r\n      handleCancel();\r\n    }\r\n    page && setNewTitle(page.title + (paragraph ? `/${paragraph}` : ''));\r\n  }, [page, isLoading]);\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setNewPath(paragraph ? '' : path);\r\n    }\r\n  }, [paragraph, isLoading]);\r\n  const paragraphItem = paragraphs.find((v) => v.path === path);\r\n  const newParagraphItem = newParagraph.find((v) => v.path === newPath);\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined;\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: _window === 'landscape' ? 'row' : 'column', zIndex: 1 }}>\r\n          <View style={{ zIndex: 1 }}>\r\n            <Text style={commonStyles.text}>\r\n              {lang(paragraph ? 'Current note title and paragraph:' : 'Current note title:')}\r\n            </Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>\r\n              {titleFormat({ title, paragraph })}\r\n            </Text>\r\n            <Text style={commonStyles.text}>{lang('New note title and paragraph:')}</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false} />\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar\r\n                path={newPath}\r\n                onPress={(item) => setNewPath(item.path)}\r\n                root={newPage?.title || ''}\r\n                data={newParagraph}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={commonStyles.text}> {lang('Preview:')}</Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                commonStyles.button,\r\n                styles.moveButton,\r\n                {\r\n                  flex: 0,\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  paddingTop: 24,\r\n                  paddingBottom: 16,\r\n                },\r\n              ]}\r\n              onPress={() => setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title, paragraph: paragraphItem?.title })}\r\n              </Text>\r\n              <Text style={[commonStyles.text, { marginBottom: 8, fontSize: 14 }]}> ➜ </Text>\r\n              <Text style={commonStyles.title}>\r\n                {titleFormat({ title: newTitle, paragraph: newParagraphItem?.title })}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {preview !== undefined && (\r\n              <View style={{ display: preview ? 'flex' : 'none' }}>\r\n                <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  onLink={(url) => onLink(url, navigation)}\r\n                  autoResize\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, styles.cancelButton]}\r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('move')}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[commonStyles.button, moveDisabled ? styles.cancelButton : styles.moveButton]}\r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>{lang('cancel')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: {\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useColorScheme } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport HeaderSelectBar, { Paragraph } from '../../components/HeaderSelectBar';\r\nimport { onLink, titleFormat } from '../../components/SearchBar';\r\nimport { getSplitTitle } from '../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\n\r\nexport const NotePageHeader = ({\r\n  title,\r\n  onPress,\r\n  paragraph,\r\n  updated,\r\n}: {\r\n  title: string;\r\n  onPress: (title: string, hasChild: boolean) => void;\r\n  pressable?: boolean;\r\n  paragraph?: string;\r\n  updated?: string;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const splitTitle = getSplitTitle(title);\r\n  const pressableTextColor = theme === 'dark' ? '#FFFFFF88' : '#00000088';\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      <TouchableOpacity onPress={() => onPress(splitTitle[0], splitTitle.length === 2)}>\r\n        <Text\r\n          style={[\r\n            commonStyles.title,\r\n            styles.title,\r\n            paragraph || splitTitle.length === 2 ? { color: pressableTextColor } : {},\r\n          ]}\r\n          numberOfLines={1}\r\n        >\r\n          {splitTitle[0]}\r\n        </Text>\r\n      </TouchableOpacity>\r\n      {splitTitle.length === 2 && (\r\n        <>\r\n          <Text style={[commonStyles.title, styles.title, { flex: 0 }]}>/</Text>\r\n          <TouchableOpacity onPress={() => onPress(title, false)}>\r\n            <Text\r\n              style={[\r\n                commonStyles.title,\r\n                styles.title,\r\n                paragraph ? { color: pressableTextColor } : {},\r\n              ]}\r\n              numberOfLines={1}\r\n            >\r\n              {splitTitle[1]}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </>\r\n      )}\r\n      {!!paragraph && (\r\n        <Text style={[commonStyles.title, styles.title, { marginLeft: 5 }]} numberOfLines={1}>\r\n          {titleFormat({ title: '', paragraph })}\r\n        </Text>\r\n      )}\r\n      {updated && <Text style={[commonStyles.text, styles.updated]}>{'(' + updated + ')'}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const NotePageSection = ({\r\n  active,\r\n  description,\r\n}: {\r\n  active: boolean;\r\n  description?: string;\r\n}) => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <View style={active && description ? [commonStyles.card, styles.card] : styles.inactiveCard}>\r\n      <EditorViewer\r\n        active\r\n        value={description || ''}\r\n        theme={theme}\r\n        onLink={(url) => onLink(url, navigation)}\r\n        autoResize\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const NoteBottomSection = ({\r\n  toc,\r\n  fullParagraph,\r\n  paragraph,\r\n  paragraphs,\r\n  root,\r\n  onPress,\r\n}: {\r\n  toc: boolean;\r\n  fullParagraph: boolean;\r\n  paragraph?: string;\r\n  paragraphs: Paragraph[];\r\n  root: string;\r\n  onPress: (paragraph: Paragraph) => void;\r\n}) => {\r\n  const idx = paragraphs.findIndex((v) => v.title === paragraph);\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const iconColor = getIconColor(theme);\r\n  const moveParagraphs = [\r\n    {\r\n      icon: 'arrow-left',\r\n      moveParagraph: paragraphs.findLast(\r\n        (v, i) => i < idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: false,\r\n    },\r\n    {\r\n      icon: 'arrow-right',\r\n      moveParagraph: paragraphs.find(\r\n        (v, i) => i > idx && (fullParagraph ? paragraphs[idx]?.level >= v.level : true)\r\n      ),\r\n      reverse: true,\r\n    },\r\n  ];\r\n  return toc ? (\r\n    <HeaderSelectBar data={paragraphs} path={paragraph || ''} root={root} onPress={onPress} />\r\n  ) : (\r\n    !!paragraph && (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'flex-end',\r\n        }}\r\n      >\r\n        {moveParagraphs.map(\r\n          ({ moveParagraph, icon, reverse }) =>\r\n            moveParagraph !== undefined && (\r\n              <TouchableOpacity\r\n                key={icon}\r\n                onPress={() => onPress(moveParagraph)}\r\n                style={[{ flexDirection: reverse ? 'row-reverse' : 'row', paddingVertical: 16 }]}\r\n              >\r\n                <Icon name={icon} size={16} color={iconColor} style={{ alignSelf: 'center' }} />\r\n                <Text style={[commonStyles.text, { fontWeight: 'bold', marginHorizontal: 16 }]}>\r\n                  {moveParagraph.level === 0 ? root : moveParagraph.title}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )\r\n        )}\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nexport const getIconColor = (theme: 'light' | 'dark') => (theme === 'dark' ? '#E4E4E4' : '#333333');\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  updated: { marginLeft: 5, fontStyle: 'italic' },\r\n  card: { padding: 0, marginBottom: 0 },\r\n  inactiveCard: { flex: 1, position: 'absolute' },\r\n});\r\n\r\nexport const pageStyles = StyleSheet.create({\r\n  container: { paddingRight: 12, scrollbarGutter: 'stable' },\r\n  contentContainer: { flexGrow: 1 },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, TextButton, useColorScheme, useLangContext, Text } from '@blacktokki/core';\r\nimport { ConfigSections } from '@blacktokki/navigation';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { TouchableOpacity, View } from 'react-native';\r\n\r\nimport { SearchList } from '../../../components/SearchBar';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { useCreateOrUpdatePage, useNotePages } from '../../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { Content, NavigationParamList } from '../../../types';\r\n\r\nconst exportMarkdowns = async (contents: Content[]) => {\r\n  const JSZip = (await import('jszip')).default;\r\n  const zip = new JSZip();\r\n  for (const content of contents.filter((v) => (v.description?.length || 0) > 0)) {\r\n    zip.file(content.title + '.md', content.description as string);\r\n  }\r\n  const blob = await zip.generateAsync({ type: 'blob' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = 'notebook.zip';\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  setTimeout(() => {\r\n    window.URL.revokeObjectURL(url);\r\n  }, 500);\r\n  a.remove();\r\n};\r\n\r\nconst importMarkdowns = async () => {\r\n  const files = await new Promise<File[]>((resolve, reject) => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = 'application/zip,.md,.markdown'; // 특정 타입만 허용하고 싶으면 'text/plain', 'image/*' 등으로 설정\r\n    input.style.display = 'none';\r\n    input.multiple = true;\r\n\r\n    input.onchange = () => {\r\n      if (input.files && input.files.length > 0) {\r\n        resolve(Array.from(input.files)); // File은 Blob의 하위 클래스\r\n      } else {\r\n        reject(new Error('파일이 선택되지 않았습니다.'));\r\n      }\r\n    };\r\n\r\n    input.click(); // 파일 선택창 열기\r\n  });\r\n  const contents: { title: string; description: string }[] = [];\r\n  const JSZip = (await import('jszip')).default;\r\n  for (const file of files) {\r\n    if (file.type === 'application/zip' || file.name.endsWith('.zip')) {\r\n      const zip = new JSZip();\r\n      const files = (await zip.loadAsync(file)).files;\r\n      for (const relativePath in files) {\r\n        const file = zip.files[relativePath];\r\n        if (!file.dir) {\r\n          contents.push({\r\n            title: relativePath.replace(/\\.[^/.]+$/, ''),\r\n            description: (await file.async('text')).toString(),\r\n          });\r\n        }\r\n      }\r\n    } else if (file.name.endsWith('.md') || file.name.endsWith('.markdown')) {\r\n      contents.push({ title: file.name.replace(/\\.[^/.]+$/, ''), description: await file.text() });\r\n    }\r\n  }\r\n  return contents;\r\n};\r\n\r\nconst ConfigButton = (props: { title: string; onPress?: () => void }) => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TouchableOpacity\r\n      style={[commonStyles.header, { marginBottom: 0 }]}\r\n      onPress={props.onPress}\r\n      disabled={!props.onPress}\r\n    >\r\n      <Text style={{ fontSize: 20, color, fontWeight: '600' }}>{props.title}</Text>\r\n      {props.onPress && <Text>{'>'}</Text>}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst OptionButton = (props: { title: string; onPress: () => void; active: boolean }) => {\r\n  const theme = useColorScheme();\r\n  const color = Colors[theme].text;\r\n  return (\r\n    <TextButton\r\n      title={props.title}\r\n      textStyle={{\r\n        fontSize: 16,\r\n        color,\r\n        textDecorationLine: props.active ? 'underline' : 'none',\r\n      }}\r\n      style={{ borderRadius: 20 }}\r\n      onPress={props.onPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  const { auth, dispatch } = useAuthContext();\r\n  const theme = useColorScheme();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { data: contents } = useNotePages();\r\n  const mutation = useCreateOrUpdatePage();\r\n  const [search, setSearch] = useState(false);\r\n  const { data: keywords = [] } = useKeywords();\r\n  const resetKeyword = useResetKeyowrd();\r\n  return (\r\n    <View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigButton title={lang('* Search Settings')} />\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <OptionButton\r\n            title={lang('Search History')}\r\n            onPress={() => setSearch(!search)}\r\n            active={search}\r\n          />\r\n          {search && !!keywords.length && (\r\n            <OptionButton\r\n              title={lang('Clear')}\r\n              onPress={() => resetKeyword.mutate()}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n        {search && (\r\n          <View style={[commonStyles.card, { padding: 0 }]}>\r\n            <SearchList\r\n              filteredPages={keywords}\r\n              handlePagePress={(title, paragraph) =>\r\n                navigation.push('NotePage', { title, paragraph })\r\n              }\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigButton title={lang('* Archive')} />\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <OptionButton\r\n            title={lang('Export')}\r\n            onPress={() => contents && exportMarkdowns(contents)}\r\n            active={false}\r\n          />\r\n          <OptionButton\r\n            title={lang('Import')}\r\n            onPress={() => importMarkdowns().then((v) => v.forEach((v2) => mutation.mutate(v2)))}\r\n            active={false}\r\n          />\r\n          {!auth.isLocal && (\r\n            <OptionButton\r\n              title={lang('Changelog')}\r\n              onPress={() => navigation.push('Archive', {})}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <ConfigButton\r\n          title={lang('* Usage')}\r\n          onPress={() => navigation.push('NoteViewer', { key: 'Usage' })}\r\n        />\r\n      </View>\r\n      <View style={commonStyles.card}>\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <ConfigButton title={lang('* Account Settings')} />\r\n          {!auth.isLocal && (\r\n            <Text numberOfLines={1} ellipsizeMode=\"tail\" style={{ marginLeft: 4 }}>\r\n              - {auth.user?.username}\r\n            </Text>\r\n          )}\r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {!!auth.user && (\r\n            <OptionButton\r\n              title={lang('My Account')}\r\n              onPress={() => auth.isLocal && dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={!auth.isLocal}\r\n            />\r\n          )}\r\n          <OptionButton\r\n            title={lang('Local Account')}\r\n            onPress={() => !auth.isLocal && dispatch({ type: 'LOGIN_LOCAL' })}\r\n            active={!!auth.isLocal}\r\n          />\r\n          {auth.user ? (\r\n            <OptionButton\r\n              title={lang('Sign out')}\r\n              onPress={() => dispatch({ type: 'LOGOUT_REQUEST' })}\r\n              active={false}\r\n            />\r\n          ) : (\r\n            <OptionButton\r\n              title={lang('Sign in')}\r\n              onPress={() => dispatch({ type: 'LOGOUT_LOCAL' })}\r\n              active={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useAuthContext } from '@blacktokki/account';\r\nimport { Colors, ContractFooter, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, TabViewOption } from '@blacktokki/navigation';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport React, { useMemo } from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport ContentGroupSection, { ProblemButton, TimeLineButton } from './ContentGroupSection';\r\nimport ExtraConfigSections from './ExtraConfigSections';\r\n\r\nconst NotesTabView = () => {\r\n  const theme = useColorScheme();\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <ScrollView style={{ flex: 1, backgroundColor: Colors[theme].background }}>\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Open Notes')}\r\n      </List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>\r\n        {lang('Event Notes')}\r\n      </List.Subheader>\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst RecentChangesTabView = () => {\r\n  return <RecentPagesSection />;\r\n};\r\n\r\nconst ConfigTabView = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  return (\r\n    <ScrollView\r\n      style={{ flex: 1 }}\r\n      contentContainerStyle={[\r\n        commonStyles.container,\r\n        { backgroundColor: Colors[theme].background },\r\n      ]}\r\n    >\r\n      <ExtraConfigSections />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default function HomeScreen({ navigation, route }: StackScreenProps<any, 'Home'>) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { auth } = useAuthContext();\r\n  const title = auth.isLocal ? 'Blacktokki Notebook - Local' : 'Blacktokki Notebook';\r\n  const tabViews: TabViewOption[] = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Discovery',\r\n        component: NotesTabView,\r\n        icon: <List.Icon icon={'compass'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n      {\r\n        title: 'All Notes',\r\n        component: RecentChangesTabView,\r\n        icon: <List.Icon icon={'notebook'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n      {\r\n        title: 'Config',\r\n        component: ConfigTabView,\r\n        icon: <List.Icon icon={'dots-horizontal'} />,\r\n        headerRight: () => <></>,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <HomeSection\r\n      tabViews={tabViews}\r\n      homeView={{ title, headerRight: () => <SearchBar /> }}\r\n      headerTitle={title}\r\n    >\r\n      <View style={[commonStyles.container, { width: '100%', justifyContent: 'space-between' }]}>\r\n        <ExtraConfigSections />\r\n        <ContractFooter\r\n          buttons={[\r\n            {\r\n              icon: <AntDesign name=\"github\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'https://github.com/blacktokki/blacktokki-notebook',\r\n              isWeb: true,\r\n            },\r\n            {\r\n              icon: <AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor} />,\r\n              url: 'mailto:ydh051541@naver.com',\r\n              isWeb: false,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n    </HomeSection>\r\n  );\r\n}\r\n","import dayjs from 'dayjs';\r\nimport { useEffect, useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { Paragraph } from '../../../components/HeaderSelectBar';\r\nimport TimerTag, {\r\n  matchDateRange,\r\n  paragraphsToDatePatterns,\r\n  TimerData,\r\n  today,\r\n} from '../../../components/TimerTag';\r\nimport { useCreateOrUpdatePage } from '../../../hooks/useNoteStorage';\r\n\r\nconst replaceDay = (data: TimerData, newDate: string) => {\r\n  return (\r\n    data.original.substring(0, data.index) +\r\n    newDate +\r\n    data.original.substring(data.index + data.text.length)\r\n  );\r\n};\r\n\r\nconst addDay = (data: TimerData, value: number, unit: 'day' | 'month', moved: boolean) => {\r\n  const s = moved ? dayjs(data.dateStart).add(value, unit).format(data.pattern) : data.dateStart;\r\n  const e = dayjs(data.dateEnd).add(value, unit).format(data.pattern);\r\n  return replaceDay(data, data.format ? data.format(s, e) : e);\r\n};\r\n\r\nconst buttons = (data: TimerData) => {\r\n  const format = data.format;\r\n  return [\r\n    ...(data.pattern.includes('DD')\r\n      ? [\r\n          { title: '+1d', onPress: () => data.replace(addDay(data, 1, 'day', true)) },\r\n          { title: '+2d', onPress: () => data.replace(addDay(data, 2, 'day', true)) },\r\n          { title: '+7d', onPress: () => data.replace(addDay(data, 7, 'day', true)) },\r\n        ]\r\n      : []),\r\n    { title: '+1M', onPress: () => data.replace(addDay(data, 1, 'month', true)) },\r\n    ...(format\r\n      ? [\r\n          {\r\n            title: '+Period',\r\n            onPress: () => {\r\n              const s = dayjs(data.dateStart);\r\n              const e = dayjs(data.dateEnd);\r\n              const diff = e.diff(s, 'day');\r\n              data.replace(\r\n                replaceDay(\r\n                  data,\r\n                  format(\r\n                    s.add(diff + 1, 'day').format(data.pattern),\r\n                    e.add(diff + 1, 'day').format(data.pattern)\r\n                  )\r\n                )\r\n              );\r\n            },\r\n          },\r\n          { title: '+0d/+1d', onPress: () => data.replace(addDay(data, 1, 'day', false)) },\r\n          { title: '+0d/+2d', onPress: () => data.replace(addDay(data, 2, 'day', false)) },\r\n          { title: '+0d/+7d', onPress: () => data.replace(addDay(data, 7, 'day', false)) },\r\n          { title: '+0d/+1M', onPress: () => data.replace(addDay(data, 1, 'month', false)) },\r\n        ]\r\n      : []),\r\n    { title: 'Delete', onPress: () => data.replace(replaceDay(data, '')) },\r\n  ];\r\n};\r\n\r\nexport default (props: { title: string; paragraphs: Paragraph[] }) => {\r\n  const dateNum = new Date(today()).getTime();\r\n  const createOrUpdatePage = useCreateOrUpdatePage();\r\n  const data = paragraphsToDatePatterns(props.title, props.paragraphs)\r\n    .flatMap((v) => matchDateRange(v.dateMatches, dateNum))\r\n    .flatMap((v) =>\r\n      v.matches.map((v2) => ({\r\n        ...v2,\r\n        original: v.original,\r\n        replace: (a: string) =>\r\n          createOrUpdatePage.mutate({\r\n            title: props.title,\r\n            description: props.paragraphs\r\n              .map(\r\n                (v3) =>\r\n                  (v3.path === v.path && v.isHeader\r\n                    ? v3.header.replace(v.original, a)\r\n                    : v3.header) +\r\n                  (v3.path === v.path && !v.isHeader\r\n                    ? v3.description.replace(v.original, a)\r\n                    : v3.description)\r\n              )\r\n              .join(''),\r\n          }),\r\n      }))\r\n    );\r\n\r\n  const [now, setNow] = useState(dayjs());\r\n  const [expand, setExpand] = useState<number>();\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setNow(dayjs());\r\n    }, 30000);\r\n    return () => clearTimeout(timeout);\r\n  }, [now]);\r\n  return (\r\n    <View style={{ height: 0 }}>\r\n      <View style={{ flexDirection: 'row', overflow: 'hidden' }}>\r\n        {data.map((v, i) => (\r\n          <TimerTag\r\n            key={i}\r\n            data={v}\r\n            buttons={buttons}\r\n            now={now}\r\n            isExpand={i === expand}\r\n            toggleExpand={() => setExpand(expand === i ? undefined : i)}\r\n          />\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { useColorScheme, useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { parseHtmlToParagraphs } from '../../../components/HeaderSelectBar';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { useNotePage, useSnapshotPages } from '../../../hooks/useNoteStorage';\r\nimport { paragraphDescription } from '../../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport {\r\n  getIconColor,\r\n  NoteBottomSection,\r\n  NotePageHeader,\r\n  NotePageSection,\r\n  pageStyles,\r\n} from '../NoteItemSections';\r\nimport TimerTagSection from './TimerTagSection';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, paragraph, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const { lang } = useLangContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullParagraph, toggleFullParagraph] = useState(false);\r\n\r\n  const { data: page, isFetching } = useNotePage(title);\r\n  const { data: archives } = useSnapshotPages();\r\n  const archive = archiveId\r\n    ? archives?.find((v) => v.id === archiveId && v.description !== page?.description)\r\n    : undefined;\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n\r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, paragraph });\r\n  };\r\n\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      archive\r\n        ? archive.description\r\n        : (paragraph\r\n            ? fullParagraph\r\n              ? paragraphDescription(paragraphs, paragraph, true)\r\n              : paragraphs.find((v) => v.title === paragraph)?.description\r\n            : page?.description\r\n          )?.trim()\r\n    );\r\n  }, [page, archive, paragraph, fullParagraph]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const iconColor = getIconColor(theme);\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, pageStyles.container]}\r\n          contentContainerStyle={pageStyles.contentContainer}\r\n        >\r\n          <View style={[commonStyles.header, { zIndex: 1 }]}>\r\n            <NotePageHeader\r\n              title={title}\r\n              paragraph={paragraph}\r\n              updated={archive?.updated}\r\n              onPress={(title, hasChild) =>\r\n                (hasChild ? navigation.push : navigation.navigate)('NotePage', { title })\r\n              }\r\n            />\r\n            <View style={pageStyles.actionButtons}>\r\n              <TimerTagSection title={page?.title || ''} paragraphs={paragraphs} />\r\n              {!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Archive', { title })}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon name=\"history\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullParagraph(!fullParagraph)}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon\r\n                      name={fullParagraph ? 'compress' : 'expand'}\r\n                      size={16}\r\n                      color={iconColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={pageStyles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={handleMovePage} style={pageStyles.actionButton}>\r\n                    <Icon name=\"exchange\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && !archive && !paragraph && (\r\n                <>\r\n                  <TouchableOpacity onPress={handleEdit} style={pageStyles.actionButton}>\r\n                    <Icon name=\"pencil\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <NotePageSection active={!toc} description={description} />\r\n            {isFetching || description === undefined ? (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n              </View>\r\n            ) : page?.description ? (\r\n              <NoteBottomSection\r\n                toc={toc}\r\n                fullParagraph={fullParagraph}\r\n                root={title}\r\n                paragraph={paragraph}\r\n                paragraphs={paragraphs}\r\n                onPress={(moveParagraph) =>\r\n                  navigation.navigate(\r\n                    'NotePage',\r\n                    moveParagraph.level === 0\r\n                      ? { title }\r\n                      : { title, paragraph: moveParagraph.title }\r\n                  )\r\n                }\r\n              />\r\n            ) : (\r\n              <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n                <Text style={commonStyles.text}>\r\n                  {lang('This note has no content yet. Press the ‘Edit’ button to add content.')}\r\n                </Text>\r\n                <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                  <Text style={commonStyles.buttonText}>{lang('edit')}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n","import { useColorScheme, useModalsContext, Text, useLangContext } from '@blacktokki/core';\r\nimport dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nimport { today } from '../../../components/TimerTag';\r\nimport DatePickerModal, { MarkedDateRange } from '../../../modals/DatePikcerModal';\r\nimport { createCommonStyles } from '../../../styles';\r\n\r\ntype DateHeaderSectionProps = {\r\n  date: string;\r\n  setDate: (date: string) => void;\r\n  markedDateRange: MarkedDateRange[];\r\n  monthly?: boolean;\r\n};\r\n\r\nexport default function DateHeaderSection({\r\n  date,\r\n  setDate,\r\n  monthly,\r\n  markedDateRange,\r\n}: DateHeaderSectionProps) {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { setModal } = useModalsContext();\r\n  const { lang } = useLangContext();\r\n  const moveDate = (value: number) =>\r\n    setDate(\r\n      dayjs(date)\r\n        .add(value, monthly ? 'month' : 'day')\r\n        .format('YYYY-MM-DD')\r\n    );\r\n\r\n  const themedStyles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: commonStyles.container.backgroundColor,\r\n      shadowColor: commonStyles.text.color,\r\n      borderColor: commonStyles.card.borderColor,\r\n    },\r\n    dateDisplay: {\r\n      color: commonStyles.text.color,\r\n    },\r\n    todayButton: {\r\n      backgroundColor: commonStyles.searchButton.backgroundColor,\r\n    },\r\n    navButton: {\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#efefef',\r\n    },\r\n  });\r\n  return (\r\n    <View style={[headerStyles.container, themedStyles.container]}>\r\n      <View style={commonStyles.flex} />\r\n      {/* Date Display */}\r\n      <View style={headerStyles.dateContainer}>\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            setModal(DatePickerModal, {\r\n              datetime: date,\r\n              markedDateStrings: markedDateRange,\r\n              callback: (datetime?: string) => setDate(datetime || date),\r\n            })\r\n          }\r\n        >\r\n          <Text style={[headerStyles.dateDisplay, themedStyles.dateDisplay]}>{date}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/* Navigation Bar */}\r\n      <View style={headerStyles.navContainer}>\r\n        {/* Previous Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(-1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-left\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n\r\n        {/* Today Button */}\r\n        <TouchableOpacity\r\n          onPress={() => setDate(today())}\r\n          style={[headerStyles.todayButton, themedStyles.todayButton]}\r\n          accessibilityLabel=\"Go to today\"\r\n        >\r\n          <Text style={headerStyles.todayButtonText}>{lang('Today')}</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Next Day Button */}\r\n        <TouchableOpacity\r\n          onPress={() => moveDate(1)}\r\n          style={[headerStyles.navButton, themedStyles.navButton]}\r\n        >\r\n          <Icon name=\"chevron-right\" size={16} color={commonStyles.text.color} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst BUTTON_SIZE = 30;\r\n\r\n// Base styles that don't change based on theme\r\nconst headerStyles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n    borderWidth: 1,\r\n  },\r\n  dateContainer: {\r\n    flex: 1,\r\n    minWidth: 130,\r\n    height: BUTTON_SIZE,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  dateDisplay: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  navContainer: {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  navButton: {\r\n    width: BUTTON_SIZE,\r\n    height: BUTTON_SIZE,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginHorizontal: 8,\r\n    borderRadius: 8,\r\n    padding: 8,\r\n  },\r\n  todayButton: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 6,\r\n  },\r\n  todayButtonText: {\r\n    fontSize: 14,\r\n    color: '#ffffff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { SearchBar } from '../../../components/SearchBar';\r\nimport { today } from '../../../components/TimerTag';\r\nimport useTimeLine from '../../../hooks/useTimeLine';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { NavigationParamList } from '../../../types';\r\nimport { NoteListSection } from '../NoteListSection';\r\nimport DateHeaderSection from './DateHeaderSection';\r\n\r\nexport const TimeLineScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const _window = useResizeContext();\r\n  const [date, setDate] = useState(today());\r\n  const { data, preData, isLoading } = useTimeLine(date);\r\n  const markedDateRange = preData.flatMap((v) => v.dateMatches.flatMap((v2) => v2.matches));\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <View style={[{ ...commonStyles.container, flex: undefined, paddingBottom: 0 }]}>\r\n        <DateHeaderSection date={date} setDate={setDate} markedDateRange={markedDateRange} />\r\n      </View>\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title, paragraph) => navigation.push('NotePage', { title, paragraph })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"There are no notes.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { Auth } from '@blacktokki/account';\r\n\r\nimport { ArchiveScreen } from './main/ArchiveScreen';\r\nimport { EditPageScreen } from './main/EditPageScreen';\r\nimport { MovePageScreen } from './main/MovePageScreen';\r\nimport { NoteViewerScreen } from './main/NoteViewerScreen';\r\nimport { ProblemsScreen } from './main/ProblemScreen';\r\nimport { RecentPagesScreen } from './main/RecentPageScreen';\r\nimport HomeScreen from './main/home/HomeScreen';\r\nimport { NotePageScreen } from './main/notepage/NotePageScreen';\r\nimport { TimeLineScreen } from './main/timeline/TimeLineScreen';\r\n\r\nconst title = (auth: Auth) =>\r\n  !auth.isLocal ? 'Blacktokki Notebook' : 'Blacktokki Notebook - Local';\r\nexport const main = {\r\n  Home: {\r\n    title,\r\n    component: HomeScreen,\r\n    path: 'home',\r\n  },\r\n  NotePage: {\r\n    title,\r\n    component: NotePageScreen,\r\n    path: 'page',\r\n  },\r\n  EditPage: {\r\n    title,\r\n    component: EditPageScreen,\r\n    path: 'edit',\r\n  },\r\n  MovePage: {\r\n    title,\r\n    component: MovePageScreen,\r\n    path: 'move',\r\n  },\r\n  RecentPages: {\r\n    title,\r\n    component: RecentPagesScreen,\r\n    path: 'recent',\r\n  },\r\n  Problem: {\r\n    title,\r\n    component: ProblemsScreen,\r\n    path: 'problem',\r\n  },\r\n  Archive: {\r\n    title,\r\n    component: ArchiveScreen,\r\n    path: 'archive',\r\n  },\r\n  TimeLine: {\r\n    title,\r\n    component: TimeLineScreen,\r\n    path: 'timeline',\r\n  },\r\n  NoteViewer: {\r\n    title,\r\n    component: NoteViewerScreen,\r\n    path: 'viewer',\r\n  },\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window = useResizeContext();\r\n  return (\r\n    <>\r\n      {window === 'portrait' && <SearchBar />}\r\n      <RecentPagesSection />\r\n    </>\r\n  );\r\n};\r\n","import { useResizeContext } from '@blacktokki/core';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React from 'react';\r\n\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport useProblem from '../../hooks/useProblem';\r\nimport { NavigationParamList } from '../../types';\r\nimport { NoteListSection } from './NoteListSection';\r\n\r\nexport const ProblemsScreen: React.FC = () => {\r\n  const _window = useResizeContext();\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data, isLoading } = useProblem();\r\n\r\n  return (\r\n    <>\r\n      {_window === 'portrait' && <SearchBar />}\r\n      <NoteListSection\r\n        contents={data}\r\n        onPress={(title) => navigation.push('EditPage', { title })}\r\n        isLoading={isLoading}\r\n        emptyMessage=\"There are no notes needed to be written.\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { RouteProp, useNavigation, useRoute, useIsFocused } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, ScrollView, TouchableOpacity } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { parseHtmlToParagraphs } from '../../components/HeaderSelectBar';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useNoteViewers } from '../../hooks/useNoteStorage';\r\nimport { paragraphDescription } from '../../hooks/useProblem';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { NavigationParamList } from '../../types';\r\nimport {\r\n  getIconColor,\r\n  NoteBottomSection,\r\n  NotePageHeader,\r\n  NotePageSection,\r\n  pageStyles,\r\n} from './NoteItemSections';\r\n\r\ntype NoteViewerScreenRouteProp = RouteProp<NavigationParamList, 'NoteViewer'>;\r\n\r\nexport const NoteViewerScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NoteViewerScreenRouteProp>();\r\n  const { key, paragraph } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false);\r\n  const [fullParagraph, toggleFullParagraph] = useState(false);\r\n  const { data: viewers } = useNoteViewers();\r\n\r\n  const page = viewers?.find((v) => v.key === key);\r\n\r\n  const paragraphs = parseHtmlToParagraphs(page?.description || '');\r\n  const [description, setDescription] = useState<string>();\r\n  useEffect(() => {\r\n    setDescription(\r\n      paragraph\r\n        ? fullParagraph\r\n          ? paragraphDescription(paragraphs, paragraph, true)\r\n          : paragraphs.find((v) => v.title === paragraph)?.description\r\n        : page?.description?.trim()\r\n    );\r\n  }, [page, paragraph, fullParagraph]);\r\n  useEffect(() => {\r\n    toggleToc(false);\r\n  }, [route]);\r\n  const iconColor = getIconColor(theme);\r\n  return (\r\n    isFocused && (\r\n      <>\r\n        {_window === 'portrait' && <SearchBar />}\r\n        <ScrollView\r\n          //@ts-ignore\r\n          style={[commonStyles.container, pageStyles.container]}\r\n          contentContainerStyle={pageStyles.contentContainer}\r\n        >\r\n          <View style={[commonStyles.header, { zIndex: 1 }]}>\r\n            <NotePageHeader\r\n              title={key}\r\n              paragraph={paragraph}\r\n              pressable={false}\r\n              onPress={(key, hasChild) =>\r\n                (hasChild ? navigation.push : navigation.navigate)('NoteViewer', { key })\r\n              }\r\n            />\r\n            <View style={pageStyles.actionButtons}>\r\n              {!!paragraph && (\r\n                <>\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleFullParagraph(!fullParagraph)}\r\n                    style={pageStyles.actionButton}\r\n                  >\r\n                    <Icon\r\n                      name={fullParagraph ? 'compress' : 'expand'}\r\n                      size={16}\r\n                      color={iconColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n              {!!(paragraph || description) && (\r\n                <>\r\n                  <TouchableOpacity onPress={() => toggleToc(!toc)} style={pageStyles.actionButton}>\r\n                    <Icon name=\"list\" size={16} color={iconColor} />\r\n                  </TouchableOpacity>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={commonStyles.flex}>\r\n            <NotePageSection active={!toc} description={description} />\r\n            {\r\n              <NoteBottomSection\r\n                toc={toc}\r\n                fullParagraph={fullParagraph}\r\n                root={key}\r\n                paragraph={paragraph}\r\n                paragraphs={paragraphs}\r\n                onPress={(paragraph) =>\r\n                  navigation.navigate(\r\n                    'NoteViewer',\r\n                    paragraph.level === 0 ? { key } : { key, paragraph: paragraph.title }\r\n                  )\r\n                }\r\n              />\r\n            }\r\n          </View>\r\n        </ScrollView>\r\n      </>\r\n    )\r\n  );\r\n};\r\n","import { useLangContext, View } from '@blacktokki/core';\r\nimport { push } from '@blacktokki/navigation';\r\nimport React from 'react';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\n\r\nimport ContentGroupSection, {\r\n  ProblemButton,\r\n  TimeLineButton,\r\n} from '../screens/main/home/ContentGroupSection';\r\n\r\nexport default () => {\r\n  const { lang } = useLangContext();\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <List.Item\r\n        left={(_props) => <List.Icon {..._props} icon={'home'} />}\r\n        title={lang('Home')}\r\n        onPress={() => push('Home')}\r\n      />\r\n      <TimeLineButton />\r\n      <ProblemButton />\r\n      <ScrollView style={Platform.OS === 'web' ? ({ scrollbarWidth: 'thin' } as any) : {}}>\r\n        <List.Subheader style={{}} selectable={false}>\r\n          {lang('Open Notes')}\r\n        </List.Subheader>\r\n        <ContentGroupSection type={'LAST'} />\r\n        <ContentGroupSection type={'PAGE'} />\r\n        <List.Subheader style={{ flex: 1 }} selectable={false}>\r\n          {lang('Recent Changes')}\r\n        </List.Subheader>\r\n        {/* 최근 변경 */}\r\n        <ContentGroupSection type={'NOTE'} noteCount={10} />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n","import { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { login, Navigation, NavigationConfig } from '@blacktokki/navigation';\r\nimport React, { Suspense } from 'react';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport modals from '../modals';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\n\r\nconst HeaderRight = () => {\r\n  const windowType = useResizeContext();\r\n  return windowType === 'landscape' ? <SearchBar /> : undefined;\r\n};\r\n\r\nconst getConfig = async () => {\r\n  const Linking = await import('expo-linking');\r\n  return {\r\n    main,\r\n    login,\r\n    prefixes: [Linking.makeUrl('/')],\r\n    rootPath: 'blacktokki-notebook',\r\n    documentTitle: {\r\n      formatter: () => {\r\n        return 'blacktokki-notebook';\r\n      },\r\n    },\r\n    rootScreen: {\r\n      main: 'Home',\r\n      login: 'LoginScreen',\r\n    },\r\n    headerLeftIcon: <List.Icon icon=\"backburger\" style={{ left: -18, top: -14 }} />,\r\n    headerRight: <HeaderRight />,\r\n    modals,\r\n    drawer: <Drawer />,\r\n  } as NavigationConfig;\r\n};\r\n\r\nexport default () => {\r\n  const scheme = useColorScheme();\r\n  const preTheme = scheme === 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n  const theme: typeof preTheme = {\r\n    ...preTheme,\r\n    colors: { ...preTheme.colors, primary: Colors[scheme].text },\r\n  };\r\n  const NavigationLazy = React.lazy(() =>\r\n    getConfig().then((config) => ({ default: () => <Navigation config={config} /> }))\r\n  );\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <Suspense fallback={<></>}>\r\n        <NavigationLazy />\r\n      </Suspense>\r\n    </PaperProvider>\r\n  );\r\n};\r\n"],"names":["KEYWORDS_KEY","getKeywords","_ref","_asyncToGenerator","subkey","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","error","_x","apply","arguments","saveKeywords","_ref2","keywords","stringify","setItem","_x2","_x3","useKeywords","_auth$user","auth","useAuthContext","isLocal","user","id","useQuery","queryKey","queryFn","_queryFn","axios","axiosCreate","getContentList","get","data","parentId","types","parentIdParam","undefined","typeParam","join","value","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","previewUrl","_ref6","delete","_ref7","preview","query","_x7","openDB","_openDB","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","lastPage","RECENT_PAGES_KEY","getContents","isOnline","type","transaction","objectStore","getAll","saveNoteContents","contents","content","find","v","savedId","then","snapshot","_objectSpread","tx","store","contentItem","put","oncomplete","getRecentPages","saveRecentPages","titles","_x6","useNotePages","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","page","c","invalidateQueries","description","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","useCreateOrUpdatePage","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","skip","Date","toISOString","map","i","newPage","input","userId","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x8","useDeleteRecentPage","_mutationFn4","updatedRecentPages","filter","_title","_x11","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToParagraphs","html","doc","DOMParser","parseFromString","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","push","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","substring","textContent","trim","length","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","paragraph","onLink","navigation","noteLink","window","getNoteLinks","pages","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","noteLinks","startsWith","RandomButton","useNavigation","randomPages","Math","floor","random","paragraphs","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","lang","useLangContext","inputRef","useRef","_useKeywords$data","_auth$user2","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","AlertModal","callbacks","setModal","useModalsContext","back","messages","UNSAVED","message","buttons","margin","CommonButton","marginRight","getMarkedDays","dateString","markedDateStrings","date","dayjs","startDate","clone","startOf","add","endDate","endOf","markedDate","dateStart","dateEnd","markedDays","isAfter","isBefore","format","reduce","p","marked","dotColor","selected","DatePickerModal","datetime","callback","_dayjs","m","restMinute","defaultDayjs","_useLangContext","locale","markedDates","setMarkedDates","onSave","minHeight","textAlign","lightColor","darkColor","Suspense","fallback","_Fragment","Calendar","setDate","disableAllTouchEventsForDisabledDays","onMonthChange","NoteListSection","isLoading","emptyMessage","subtitles","subtitle","index","selectable","extractDates","currentYear","getFullYear","patterns","regex","match","pattern","s","split","year","month","lastDay","getDate","String","padStart","mm","dd","results","usedRanges","RegExp","source","_loop","start","end","lastIndex","some","exec","cleanAndMergeTDs","forEach","code","tr","tdList","mergedText","td","_td$textContent","newTd","document","createElement","innerHTML","appendChild","paragraphsToDatePatterns","dateMatches","toRaw","isHeader","original","matches","matchDateRange","dateNum","dateMatch","getTime","today","ratio","diff","now","toggleExpand","overflow","isExpand","getReadabilityLevel","calculateFleschKincaid","sentenceCount","wordList","wordCount","sum","word","syllables","test","max","countSyllables","score","koRatio","getKoreanRatio","enGrade","enLevel","koLevel","sentences","avgWordsPerSentence","classifyKoreanReadability","findLists","listMatch","listRegex","liRegex","_listMatch","_listMatch2","items","liMatch","itemContent","getSplitTitle","splitTitle","paragraphDescription","rootTitle","_paragraphs$find","getData","records","record","link","linkPage","lists","replaceAll","findLast","duplicates","lastIndexOf","readability","toFixed","Object","entries","setData","timeoutRef","clearTimeout","setTimeout","notes","preData","TimeLineButton","useTimeLine","List","_props","icon","alignSelf","Badge","navigate","ProblemButton","useProblem","toRecentContents","sort","b","_useNotePages2","_queryFn4","useRecentPages","tabRef","addRecentPage","_mutationFn3","direct","recentPages","_x10","useAddRecentPage","deleteRecentPage","lastPageExists","useResizeContext","itemPadding","noteOnPress","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","noteCount","_pages$data2","TouchableRipple","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","React","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","Content","descriptionComponent","opacity","RecentPagesSection","RenderHtml","renderersProps","tagsStyles","contentWidth","ScrollView","contentContainerStyle","flexWrap","key","cancelButton","saveButton","marginLeft","columns","moveButton","NotePageHeader","pressableTextColor","numberOfLines","NotePageSection","active","inactiveCard","EditorViewer","autoResize","NoteBottomSection","toc","fullParagraph","idx","findIndex","iconColor","getIconColor","moveParagraphs","moveParagraph","_paragraphs$idx","reverse","_paragraphs$idx2","pageStyles","scrollbarGutter","contentContainer","flexGrow","actionButtons","actionButton","exportMarkdowns","zip","JSZip","default","_v$description","file","blob","generateAsync","createObjectURL","download","click","revokeObjectURL","remove","importMarkdowns","files","accept","display","multiple","onchange","Error","endsWith","loadAsync","relativePath","dir","replace","async","toString","ConfigButton","Colors","OptionButton","TextButton","textStyle","textDecorationLine","_useAuthContext","dispatch","mutation","setSearch","resetKeyword","_auth$user3","_mutationFn2","_onSuccess2","useResetKeyowrd","ConfigSections","ellipsizeMode","username","NotesTabView","background","ContentGroupSection","RecentChangesTabView","ConfigTabView","ExtraConfigSections","replaceDay","newDate","addDay","unit","moved","createOrUpdatePage","v3","setNow","expand","setExpand","timeout","TimerTag","DateHeaderSection","monthly","markedDateRange","moveDate","themedStyles","dateDisplay","todayButton","navButton","headerStyles","dateContainer","navContainer","accessibilityLabel","todayButtonText","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","AntDesign","isWeb","NotePage","isFocused","useIsFocused","useRoute","_route$params","archiveId","_window","toggleToc","toggleFullParagraph","_useNotePage","archives","archive","handleEdit","_useState5","_useState6","setDescription","hasChild","TimerTagSection","ActivityIndicator","EditPage","setContent","handleSave","onError","Alert","alert","handleBack","canGoBack","goBack","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","_getMatchedChars","childrenPages","encodeURI","_getMatchedChars2","protocol","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","setPreview","moveMutation","_useNotePages5$data","oldTitle","_x9","useMovePage","_useMemo","_moveParagraph$","isSplit","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","RecentPages","Problem","_useProblem","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","TimeLine","_useTimeLine","NoteViewer","_useNoteViewers","_queryFn6","all","_ref8","fetch","process","toHtml","_x12","useNoteViewers","viewers","_page$description","pressable","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider"],"sourceRoot":""}