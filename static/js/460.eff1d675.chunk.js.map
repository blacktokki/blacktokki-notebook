{"version":3,"file":"static/js/460.eff1d675.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/components/SearchBar.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/RecentPageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/index.ts","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getNoteContents = async (): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList()).filter(v=>(v.type==='NOTE'|| v.type==='BOOKMARK'))\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      await (id?patchContent({id, updated:content}):postContent(content));\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: getNoteContents,\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const contents = await getNoteContents();\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        const contents = await getNoteContents();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        const contents = await getNoteContents();\r\n        return contents.find(v=>v.title === lastPage)\r\n      } \r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    \r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle }: { oldTitle: string, newTitle: string }) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      padding: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst RECENT_COUNT = 5\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'NOTE'}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() ):pages.data)\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return (\r\n    <List.Section>\r\n        {props.type==='PAGE' && lastPage && (data?.find(v=>v.id===lastPage.id) === undefined) && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n          />}\r\n        {data && (\r\n         props.type === 'NOTE'\r\n         ?<>{data.slice(0, RECENT_COUNT).map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n          title={v.title} \r\n          onPress={()=>noteOnPress(v.title)}\r\n          onLongPress={()=>noteOnLongPress(v.title)}\r\n          style={{padding:itemPadding }} \r\n        />)}\r\n        {((data?.length || 0) > RECENT_COUNT) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}  />}\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import React, { useEffect, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet } from 'react-native';\r\n//@ts-ignore\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\n\r\nlet _searchText = ''\r\n\r\nexport const SearchBar: React.FC<{renderExtra?:(input:string, isFind:boolean)=>React.ReactNode}> = ({renderExtra}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: pages = [] } = useNotePages();\r\n  \r\n  const filteredPages = searchText.length > 0\r\n    ? pages.filter(page => \r\n        page.title.toLowerCase().startsWith(searchText.toLowerCase())\r\n      ).slice(0, 5)\r\n    : [];\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      navigation.navigate('NotePage', { title: searchText.trim() });\r\n      setSearchText('');\r\n      setShowResults(false);\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string) => {\r\n    navigation.navigate('NotePage', { title });\r\n    setSearchText('');\r\n    setShowResults(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n            setShowResults(text.length > 0);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={renderExtra?\"search-plus\":\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <FlatList\r\n              data={filteredPages}\r\n              keyExtractor={(item) => item.title}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.resultItem}\r\n                  onPress={() => handlePagePress(item.title)}\r\n                >\r\n                  <Text style={[commonStyles.text, styles.resultText]}>{item.title}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={styles.separator} />}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              onPress={handleSearch}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n          {renderExtra?.(searchText, filteredPages.length > 0)}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#3498DB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 4,\r\n    marginHorizontal: 4,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 200,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  separator: {\r\n    height: 1,\r\n    backgroundColor: '#EEEEEE',\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FlatList, ScrollView, StyleSheet, TextInput, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\n\r\n\r\nconst OpenedEditorsTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst NoteTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'NOTE'}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Open Pages'), component:OpenedEditorsTabView, icon:<List.Icon icon={'file-document'}/>, headerRight:()=><></>},\r\n    {title: lang('Notes'), component:NoteTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%'}]}>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections/>\r\n      </View>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 16,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#3498DB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 48,\r\n    borderRadius: 4,\r\n    marginLeft: 8,\r\n  },\r\n  recentButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const mutation = useMovePage();\r\n  \r\n  const handleMove = () => {\r\n    if (!newTitle.trim()) {\r\n      Alert.alert('오류', '새 노트 제목을 입력하세요.');\r\n      return;\r\n    }\r\n    \r\n    if (newTitle.trim() === title) {\r\n      Alert.alert('오류', '현재 제목과 동일합니다.');\r\n      return;\r\n    }\r\n    \r\n    mutation.mutate(\r\n      { oldTitle: title, newTitle: newTitle.trim() },\r\n      {\r\n        onSuccess: (data) => {\r\n          navigation.reset({\r\n            index: 1,\r\n            routes: [\r\n              { name: 'Home' },\r\n              { name: 'NotePage', params: { title: data.newTitle } },\r\n            ],\r\n          });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n  }, [page, isLoading])\r\n\r\n  return (\r\n    <View style={commonStyles.container}>      \r\n      <View style={commonStyles.card}>\r\n        <Text style={commonStyles.text}>현재 노트 제목:</Text>\r\n        <Text style={[commonStyles.title, { marginTop: 8, marginBottom: 16 }]}>{title}</Text>\r\n        \r\n        <Text style={commonStyles.text}>새 노트 제목:</Text>\r\n        <TextInput\r\n          style={[commonStyles.input, { marginTop: 8 }]}\r\n          value={newTitle}\r\n          onChangeText={setNewTitle}\r\n          placeholder=\"새 노트 제목을 입력하세요\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n        />\r\n        \r\n        <Text style={[commonStyles.smallText, { marginBottom: 16 }]}>\r\n          문서를 이동하면 기존 제목의 문서는 새 제목으로 변경됩니다.\r\n        </Text>\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={!newTitle.trim() || newTitle.trim() === title}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n//@ts-ignore\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages, useRecentPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  \r\n  const handlePagePress = (title: string) => {\r\n    navigation.navigate('NotePage', { title });\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={commonStyles.container}>      \r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : recentPages.length > 0 ? (\r\n        <FlatList\r\n          data={recentPages.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() )}\r\n          keyExtractor={(item) => item.title}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => handlePagePress(item.title)}\r\n            >\r\n              <Text style={commonStyles.title}>{item.title}</Text>\r\n              <Text style={commonStyles.smallText}>\r\n                최근 수정: {updatedFormat(item.updated)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>\r\n            최근 수정한 노트가 없습니다.\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n//@ts-ignore\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { EditorViewer, toMarkdown } from '@blacktokki/editor';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title });\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>\r\n          {title}\r\n        </Text>\r\n        <View style={styles.actionButtons}>\r\n          <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n            <Icon name=\"exchange\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n            <Icon name=\"pencil\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      \r\n      <View style={commonStyles.flex}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={page?.description?[commonStyles.card, {flex:1, padding:0}]:{flex:0}}>\r\n            <EditorViewer\r\n              active\r\n              value={page?.description || ''}\r\n              theme={theme}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {page?.description ? undefined : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n\r\n  };\r\n  ","import React from 'react';\r\nimport ContentGroupSection from '../screens/main/home/ContentGroupSection';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <View style={{flex:1}}>\r\n            <View style={{minHeight:'35%', maxHeight:'65%', flexShrink:1, flexGrow:0.1}}>\r\n                <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n                <ScrollView>\r\n                    <ContentGroupSection type={'PAGE'} />\r\n                </ScrollView>\r\n            </View>\r\n            <View style={{minHeight:'35%', maxHeight:'65%', flexShrink:0.1, flexGrow:1}}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>{/* 최근 변경 */}\r\n                </View>\r\n                <ScrollView >\r\n                    <ContentGroupSection type={'NOTE'} />\r\n                </ScrollView>\r\n            </View>\r\n        </View>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <SearchBar/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","type","parentIdParam","undefined","typeParam","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getNoteContents","saveNoteContents","contents","content","find","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","_x","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","useNotePage","title","queryClient","useQueryClient","_queryFn","page","c","invalidateQueries","useLastPage","_queryFn3","useDeleteRecentPage","useMutation","mutationFn","_mutationFn4","updatedRecentPages","_title","_x7","onSuccess","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","padding","card","borderRadius","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","input","separator","smallText","header","flexDirection","justifyContent","row","centerContent","styles","buttonContainer","cancelButton","marginRight","saveButton","marginLeft","props","_notes$data","lang","useLangContext","notes","pages","_queryFn2","recentTitles","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","concat","_toConsumableArray","_x6","useAddRecentPage","deleteRecentPage","sort","a","b","Date","getTime","window","useResizeContext","itemPadding","noteOnPress","current","clearTimeout","mutate","setTimeout","navigate","noteOnLongPress","_pages$data","_jsxs","List","children","_jsx","left","_props","_objectSpread","icon","onPress","onLongPress","style","titleStyle","fontStyle","_Fragment","slice","_pages$data2","v2","right","TouchableRipple","margin","_searchText","SearchBar","renderExtra","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","showResults","setShowResults","navigation","useNavigation","useColorScheme","commonStyles","_useNotePages$data","filteredPages","toLowerCase","startsWith","handleSearch","trim","useEffect","useFocusEffect","View","searchContainer","TextInput","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","TouchableOpacity","searchButton","disabled","Icon","name","size","resultsContainer","darkResults","lightResults","FlatList","keyExtractor","item","renderItem","resultItem","Text","resultText","ItemSeparatorComponent","position","maxWidth","zIndex","paddingVertical","marginHorizontal","top","maxHeight","OpenedEditorsTabView","ScrollView","Colors","background","ContentGroupSection","NoteTabView","ConfigTabView","ConfigSections","recentButton","backButton","moveButton","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","pageTitle","actionButtons","actionButton","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","path","NotePage","useRoute","params","_useNotePage","isLoading","handleEdit","numberOfLines","ActivityIndicator","EditorViewer","active","autoResize","EditPage","setContent","mutation","auth","useAuthContext","_mutationFn","updatedContents","_auth$user","newPage","userId","user","order","option","useCreateOrUpdatePage","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","_mutationFn2","oldTitle","Error","some","useMovePage","handleCancel","marginTop","reset","routes","RecentPages","_useNotePages","minHeight","flexShrink","flexGrow","selectable","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","then","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}