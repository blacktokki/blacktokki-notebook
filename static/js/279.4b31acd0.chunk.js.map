{"version":3,"file":"static/js/279.4b31acd0.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/hooks/useKeywordStorage.ts","src/components/SearchBar.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/main/NoteListSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/EmptyPageScreen.tsx","src/screens/main/EmptyContentScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, types?: Content['type'][])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = types !== undefined?`&types=${types.join(',')}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getContents = async (type:\"NOTE\"|\"SNAPSHOT\"): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList(undefined,[type]))\r\n  }\r\n  if(type===\"SNAPSHOT\"){\r\n    return []\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      const savedId = await (id?(patchContent({id, updated:content}).then(()=>id)):postContent(content));\r\n      const snapshot:Content|PostContent = {...content, type:\"SNAPSHOT\", id:undefined, parentId:savedId}\r\n      await postContent(snapshot)\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: async() => await getContents(\"NOTE\"),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  return useQuery({\r\n    queryKey: ['snapshotContents'],\r\n    queryFn: async () => await getContents(\"SNAPSHOT\"),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  const { data:contents=[], isFetching } = useNotePages()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n    enabled:!isFetching\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    const { data:contents=[], isFetching } = useNotePages()\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n      enabled:!isFetching\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    const { data:contents=[], isFetching } = useNotePages()\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        return contents.find(v=>v.title === lastPage)\r\n      },\r\n      enabled:!isFetching\r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    const { data:contents=[] } = useNotePages()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: async (data) => {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { data:contents=[] } = useNotePages()\r\n\r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import { TouchableOpacity, View, FlatList, StyleSheet } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { createCommonStyles } from \"../styles\";\r\nimport { Text, useColorScheme } from \"@blacktokki/core\";\r\n\r\nexport interface NodeData {\r\n    path: string;\r\n    title: string;\r\n    level: number;\r\n    header: string;\r\n    description: string;\r\n  }\r\n  \r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n  \r\n    const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n  \r\n    const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n    const headerStack: { level: number; title: string }[] = [];\r\n  \r\n    let current: NodeData | null = null;\r\n    let cursor = doc.body.firstChild;\r\n  \r\n    const flushCurrent = () => {\r\n      if (current) {\r\n        result.push(current);\r\n        current = null;\r\n      }\r\n    };\r\n  \r\n    while (cursor) {\r\n      if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n        const el = cursor as HTMLElement;\r\n        if (headings.includes(el.tagName)) {\r\n          flushCurrent();\r\n  \r\n          const level = parseInt(el.tagName.substring(1));\r\n          const title = el.textContent?.trim() || \"\";\r\n  \r\n          // 헤더 스택 업데이트\r\n          while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n            headerStack.pop();\r\n          }\r\n          headerStack.push({ level, title });\r\n  \r\n          const path = headerStack.map(h => h.title).join(\" > \");\r\n  \r\n          current = {\r\n            path,\r\n            title,\r\n            level,\r\n            header: el.outerHTML,\r\n            description: \"\",\r\n          };\r\n        } else if (current) {\r\n          current.description += el.outerHTML;\r\n        } else {\r\n          // 헤더 밖의 내용 처리\r\n          result[0].description += el.outerHTML;\r\n        }\r\n      } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n        current.description += cursor.textContent || \"\";\r\n      }\r\n  \r\n      cursor = cursor.nextSibling;\r\n    }\r\n  \r\n    flushCurrent();\r\n    return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props:{root:string, path:string, onPress:(item:NodeData)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.onPress(item)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?[commonStyles.title, {marginBottom:5, marginTop:3}]:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n})","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords';\r\n\r\nexport type KeywordContent = {\r\n  type: \"_NOTELINK\",\r\n  name: string, \r\n  title: string,\r\n  section?: string\r\n} | {\r\n  type:  \"_KEYWORD\",\r\n  title: string\r\n}\r\n\r\nconst getKeywords = async (): Promise<KeywordContent[]> => {\r\ntry {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n} catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n}\r\n};\r\n    \r\nconst saveKeywords = async (keywords: KeywordContent[]): Promise<void> => {\r\ntry {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY, jsonValue);\r\n} catch (e) {\r\n    console.error('Error saving keywords', e);\r\n}\r\n};\r\n\r\nexport const useKeywords = () => {\r\n    return useQuery({\r\n        queryKey: ['keywords'],\r\n        queryFn: async () => {\r\n        return getKeywords()\r\n        },\r\n    });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (keyword:KeywordContent) => {\r\n      const keywords = await getKeywords();\r\n      const newKeywords = [...new Set([JSON.stringify(keyword), ...keywords.map(v=>JSON.stringify(v))])].map(v=>JSON.parse(v))\r\n      await saveKeywords(newKeywords)\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords([])\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { parseHtmlToSections } from './HeaderSelectBar';\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\n\r\nlet _searchText = ''\r\n\r\ntype SearchContent = Content | KeywordContent\r\n\r\nfunction extractHtmlLinksWithQuery(text:string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map(a => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nexport function urlToNoteLink(url:string){\r\n  const newLocation = new URL(url);\r\n  if (location.origin  === newLocation.origin){\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get(\"title\")\r\n    const section = params.get(\"section\") || undefined\r\n    if (title){\r\n      return {title, section}\r\n    }\r\n  }\r\n}\r\n\r\nexport function getNoteLinks(pages:Content[]){\r\n  return pages.flatMap(v=>extractHtmlLinksWithQuery(v.description || '').map((v2)=>{\r\n    const noteLink = urlToNoteLink(v2.url);\r\n    if(noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/){\r\n      return {type: \"_NOTELINK\" as \"_NOTELINK\", name:v2.text, ...noteLink, origin:v.title}\r\n    }\r\n  }).filter(v=>v !==undefined))\r\n}\r\n\r\nexport const getFilteredPages = (pages:Content[], searchText:string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase()\r\n  const noteLinks = getNoteLinks(pages)\r\n  return [\r\n    ...pages.filter(page =>page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter(v=>v.name.toLowerCase().startsWith(lowerCaseSearch))\r\n  ]\r\n}\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter(v=>v.description);\r\n  return randomPages && <TouchableOpacity\r\n    style={commonStyles.searchButton}\r\n    onPress={()=>{\r\n      const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n      const sections = parseHtmlToSections(page.description || '')\r\n      navigation.navigate('NotePage', { title:page.title, section: sections[Math.floor(Math.random() * sections.length)].title });\r\n    }}\r\n>\r\n  <Icon name={\"random\"} size={18} color=\"#FFFFFF\" />\r\n</TouchableOpacity>\r\n}\r\n\r\nexport const titleFormat = (item:{title:string, section?:string}) => `${item.title}${item.section?(\" ▶ \"+item.section):\"\"}`\r\n\r\nexport const SearchList = ({filteredPages, handlePagePress, addKeyword}:{filteredPages:SearchContent[], handlePagePress:(title:string, section?:string)=>void, addKeyword?:(keyword:KeywordContent)=>void})=>{\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item:SearchContent)=>{\r\n    return PanResponder.create({\r\n      onPanResponderStart:() => {\r\n        if (item.type === \"_NOTELINK\" && item.section){\r\n          handlePagePress(item.title, item.section)\r\n          addKeyword?.(item)\r\n        }\r\n        else {\r\n          handlePagePress(item.title)\r\n          addKeyword?.({type:\"_KEYWORD\", title:item.title})\r\n        }\r\n      }\r\n    }).panHandlers\r\n  }, [])\r\n\r\n  return <FlatList\r\n  data={filteredPages}\r\n  keyExtractor={(item:any) => JSON.stringify([item.title, item.name, item.section])}\r\n  renderItem={({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.resultItem}\r\n      {...pagePressHandlers(item)}\r\n    >\r\n      <Text style={[commonStyles.text, styles.resultText]}>{item.type===\"_NOTELINK\"?item.name:item.title}</Text>\r\n      {item.type ===\"_NOTELINK\" && <Text style={[commonStyles.text, styles.resultText, {fontSize:12}]}>{titleFormat(item)}</Text>}\r\n    </TouchableOpacity>\r\n  )}\r\n  ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n/>\r\n}\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void, useRandom?:boolean;}> = ({handlePress, useRandom=true}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput|null>()\r\n  const { data:keywords = []} = useKeywords()\r\n  const addKeyword = useAddKeyowrd()\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages:SearchContent[] = searchText.length > 0\r\n    ? getFilteredPages(pages, searchText).slice(0, 10)\r\n    : keywords.slice(0, 10)\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n      addKeyword.mutate({type:\"_KEYWORD\", title:searchText.trim()})\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?:string) => {\r\n    handlePress?handlePress(title):navigation.navigate('NotePage', { title, section });\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(()=>PanResponder.create({\r\n      onPanResponderStart: handleSearch,\r\n    }).panHandlers\r\n  ,[searchText])\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={ref=>{inputRef.current = ref}}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={()=>setShowResults(true)}\r\n          onBlur={()=>setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton/>}\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList filteredPages={filteredPages} handlePagePress={handlePagePress} addKeyword={addKeyword.mutate}/> \r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              {...searchHandlers}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword:string) => pages\r\n    .filter(v=>v.title.startsWith(title + '/'))\r\n    .map(v=>({type:'_CHILDNOTE' as '_CHILDNOTE', name:v.title.split(title + '/')[1], title:v.title}))\r\n    .filter(v=>v.name.toLowerCase().startsWith(keyword.toLowerCase()))\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    if (page?.description === content){\r\n      navigation.navigate('NotePage', { title });\r\n      return;\r\n    }\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n        autoComplete={[{\r\n          trigger: '[',\r\n          getMatchedChars: (pattern) => {\r\n            const childrenPages = getChildrenPages(pattern)\r\n            return [{type:\"_NOTELINK\", name:pattern, title, section:pattern}, ...(childrenPages.length?childrenPages:[{type:\"_CHILDNOTE\", name:pattern, title: title + \"/\" + pattern}]), ...getFilteredPages(pages, pattern)].map(v=>{\r\n              const text = v.type === '_NOTELINK' ? (v.name + `(${titleFormat(v)})`): v.type==='_CHILDNOTE'?v.name:v.title;\r\n              const url = encodeURI(v.type === '_NOTELINK' && v.section ? `?title=${v.title}&section=${v.section}`:`?title=${v.title}`);\r\n              return {\r\n                text,\r\n                value:`<a href=${url}>${text}</a>`,\r\n              }})\r\n          }\r\n        }]}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nexport const EmptyPageButton = () => {\r\n  const { lang } = useLangContext()\r\n  return <List.Item left={_props=><List.Icon {..._props} icon={\"note-remove\"} />} title={lang(\"Empty Note\")} onPress={()=>navigate('EmptyPages')} />\r\n}\r\n\r\nexport const EmptyContentButton = () => {\r\n  const { lang } = useLangContext()\r\n  return <List.Item left={_props=><List.Icon {..._props} icon={\"note-edit\"} />} title={lang(\"Empty Content\")} onPress={()=>navigate('EmptyContents')} />\r\n}\r\n\r\nexport const toRecentContents = (data:Content[]) => data.filter(v=>v.description).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'LAST'} | {type:'NOTE', noteCount:number}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?toRecentContents(notes.data):[]:pages.data)\r\n  const lastPageExists = lastPage && (data?.find(v=>v.id===lastPage.id) === undefined);\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return ((props.type !== 'LAST' || lastPageExists) && <List.Section>\r\n        {data && (\r\n         props.type === 'LAST'\r\n         ?(lastPageExists && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n         />)\r\n         :props.type === 'NOTE'\r\n         ?<>{data.slice(0, props.noteCount).map(v=><List.Item \r\n            key={v.id} \r\n            left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n            title={v.title} \r\n            onPress={()=>noteOnPress(v.title)}\r\n            onLongPress={()=>noteOnLongPress(v.title)}\r\n            style={{padding:itemPadding }} \r\n          />)}\r\n          <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}/>\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView, FlatList, FlatListProps } from 'react-native';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext, View, Text } from '@blacktokki/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { Card } from 'react-native-paper';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\nimport RenderHtml from 'react-native-render-html';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nexport const updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape:boolean) => isLandscape?20:4\r\nconst _cardMaxWidth = (isLandscape:boolean) => isLandscape?250:190\r\n\r\nconst CardPage = React.memo(({item, index}: {item:Content|null, index:number})=>{\r\n  const window  = useResizeContext()\r\n  const cardMaxWidth = _cardMaxWidth(window===\"landscape\")\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window==='landscape'?2:0\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted){\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null){\r\n    return <View style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = ()=>navigation.navigate('NotePage', {title:item.title})\r\n  return <TouchableOpacity style={{flexBasis:window==='landscape'?'33%':'50%', padding:_cardPadding(window===\"landscape\"), paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n      <Card onPress={onPress} style={[commonStyles.card, {paddingTop:8, aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}]}>\r\n        <Card.Content style={{padding:0}}>\r\n          {mounted &&<RenderHtml source={{html:item.description || ''}} renderersProps={{ a : {onPress}}} tagsStyles={{body: {color:commonStyles.text.color}}} contentWidth={cardMaxWidth}/>}\r\n        </Card.Content>\r\n      </Card>\r\n      <View style={{flexDirection:'row', marginTop:10, padding:0, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n        <Text style={{fontSize:14+fSize, overflow:'hidden'}}>{item.title}</Text>\r\n        <Text style={{fontSize:12+fSize, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n      </View>\r\n  </TouchableOpacity>\r\n\r\n})\r\n\r\nconst renderItem = ({item, index}:{item:Content|null, index:number})=><CardPage key={index} index={index} item={item}/>\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n    const theme = useColorScheme();\r\n    const commonStyles = createCommonStyles(theme);\r\n    const window = useResizeContext();\r\n    const { data: recentPages = [], isLoading } = useNotePages();\r\n    const contents = useMemo(()=>[...toRecentContents(recentPages).map(v=>({...v, description:removeAllAttributesFromHTML(v.description || '').slice(0, 300)})), null, null], [recentPages])\r\n    const maxWidth = (_cardMaxWidth(window===\"landscape\") + 5)  * (window==='landscape'?5:3)\r\n    return isLoading ? (\r\n      <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n        <Text style={commonStyles.text}>로딩 중...</Text>\r\n      </View>\r\n    ) : contents.length > 2 ? (\r\n      <ScrollView\r\n        key={window}\r\n        contentContainerStyle={{alignSelf:'center', backgroundColor:'transparent', flexBasis:'100%', maxWidth, flexWrap:'wrap', flexDirection:'row', paddingRight:_cardPadding(window==='landscape'), justifyContent:window==='landscape'?undefined:'center'}}>\r\n          {contents.map((item, index)=>renderItem({item, index}))}\r\n      </ScrollView>\r\n    ) : (\r\n      <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n        <Text style={commonStyles.text}>\r\n          최근 수정한 노트가 없습니다.\r\n        </Text>\r\n      </View>\r\n    );\r\n})","import React, { useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, ContractFooter, Text, TextButton, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections, navigate } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection, { EmptyContentButton, EmptyPageButton } from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar, SearchList } from '../../../components/SearchBar';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\n\r\nconst NotesTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>{lang(\"Problems\")}</List.Subheader>\r\n      <EmptyPageButton/>\r\n      <EmptyContentButton/>\r\n    </ScrollView>\r\n}\r\n\r\nconst RecentChangesTabView = ()=>{\r\n  return <RecentPagesSection/>\r\n}\r\n\r\nconst CommonConfigButton = (props:{title:string, onPress?:()=>void})=>{\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  return <TouchableOpacity style={[commonStyles.header, {marginBottom:0}]} onPress={props.onPress} disabled={!props.onPress}>\r\n    <Text style={{ fontSize: 20, color, fontWeight: '600' }}>{props.title}</Text>\r\n    {props.onPress && <Text>{\">\"}</Text>}\r\n  </TouchableOpacity>\r\n}\r\n\r\nconst ConfigCommonView = () => {\r\n  const { lang } = useLangContext()\r\n  const { dispatch } = useAuthContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  const [search, setSearch] = useState(false)\r\n  const { data:keywords = []} = useKeywords()\r\n  const resetKeyword = useResetKeyowrd()\r\n  return <View>\r\n    <View style={commonStyles.card}>\r\n      <ConfigSections/>\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Search Settings')}/>\r\n      <View style={{flexDirection:'row'}}>\r\n        <TextButton\r\n          title={\"Search History\"}\r\n          textStyle={{\r\n            fontSize: 16,\r\n            color,\r\n            textDecorationLine: search ? 'underline' : 'none',\r\n          }}\r\n          style={{ borderRadius: 20 }}\r\n          onPress={() => setSearch(!search)}\r\n        />\r\n        {search && keywords.length &&<TextButton\r\n          title={\"Clear\"}\r\n          textStyle={{\r\n            fontSize: 16,\r\n            color,\r\n          }}\r\n          style={{ borderRadius: 20 }}\r\n          onPress={() => resetKeyword.mutate()}\r\n        />}\r\n      </View>\r\n      {search && <View style={[commonStyles.card, {padding:0}]}>\r\n        <SearchList filteredPages={keywords} handlePagePress={(title, section)=>navigate('NotePage', { title, section })}/>\r\n      </View>}\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Archive')} onPress={()=>navigate('Archive', {})}/>\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Logout')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n    </View>\r\n  </View>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  return <ScrollView style={{flex:1}} contentContainerStyle={[commonStyles.container, {backgroundColor:Colors[theme].background}]}>\r\n    <ConfigCommonView/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Discovery'), component:NotesTabView, icon:<List.Icon icon={'compass'}/>, headerRight:()=><></>},\r\n    {title: lang('All Notes'), component:RecentChangesTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%', justifyContent:'space-between'}]}>\r\n      <ConfigCommonView/>\r\n      <ContractFooter buttons={[\r\n        {icon:<AntDesign name=\"github\" size={24} color={Colors[theme].iconColor}/>, url:'https://github.com/blacktokki/blacktokki-notebook', isWeb:true},\r\n        {icon:<AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor}/>, url:'mailto:ydh051541@naver.com', isWeb:false}\r\n      ]}/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const path = paragraph.find(v=>v.title === section)?.path || ''\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const [preview, setPreview] = useState<boolean>()\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const moveDescription = moveParagraph.map(v=>v.header + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map(v=>(v.path===path && v.description===''?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title + (section?`/${section}`:\"\"));\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    if (!isLoading){\r\n      setNewPath(section?'':path)\r\n    }\r\n  }, [section, isLoading])\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:window==='landscape'?'row':'column', zIndex:1}}>\r\n          <View style={{zIndex:1}}>\r\n            <Text style={commonStyles.text}>{section?\"현재 노트 제목 및 문단:\":\"현재 노트 제목:\"}</Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>{titleFormat({title, section})}</Text>\r\n            <Text style={commonStyles.text}>새 노트 제목 및 문단:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false}/>\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar path={newPath} onPress={(item)=>setNewPath(item.path)} root={newPage?.title || ''} data={newParagraph}/>\r\n            </View>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[commonStyles.button, styles.moveButton, {flex:0, flexDirection:'row', alignItems:'center', paddingTop:24, paddingBottom:16}]} \r\n              onPress={()=>setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat({title, section:paragraphItem?.title})}</Text>\r\n              <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ➜  </Text>\r\n              <Text style={commonStyles.title}>{titleFormat({title:newTitle, section:newParagraphItem?.title})}</Text>   \r\n            </TouchableOpacity>\r\n              {preview!==undefined && <View style={{display:preview?'flex':'none'}}>\r\n              <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  autoResize\r\n                />\r\n              </View>}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: { \r\n    marginTop: 8, \r\n    marginBottom: 16 \r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar, titleFormat, urlToNoteLink } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const sectionDescription = (paragraph:NodeData[], section:string, rootTitle:boolean) => {\r\n  const path = paragraph.find(v=>v.title===section)?.path\r\n  return path?paragraph.filter(v=>v.path.startsWith(path)).map(v=>((rootTitle || v.path!==path)?v.header:\"\") + v.description).join(\"\"):\"\"\r\n}\r\n\r\nexport const getSplitTitle = (title:string) => {\r\n  const splitTitle = title.split(\"/\")\r\n  if (splitTitle.length<2) {\r\n    return [title]\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length -1).join(\"/\"), splitTitle[splitTitle.length -1]]\r\n}\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false)\r\n  \r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data:archives } = useSnapshotPages()\r\n  const archive = archiveId?archives?.find(v=>v.id===archiveId &&v.description !== page?.description):undefined\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description||'');\r\n  const idx = paragraph.findIndex(v=>v.title===section)\r\n  const prevSections = [\r\n    {icon: 'arrow-up', section: paragraph.findLast((v, i)=>i < idx)},\r\n    {icon: 'arrow-down', section: paragraph.find((v, i)=>i > idx && paragraph[idx]?.level >= v.level)}\r\n  ]\r\n  const nextSections = [\r\n    {icon: 'arrow-right', section: paragraph.find((v, i)=>i > idx && paragraph[idx]?.level < v.level)},\r\n  ]\r\n  const [description, setDescription] = useState<string>()\r\n  useEffect(()=>{\r\n    if(description === undefined) {\r\n      setDescription(archive?archive.description:section?sectionDescription(paragraph, section, true) :page?.description)\r\n    }\r\n    else {\r\n      return () => setDescription(undefined);\r\n    }\r\n  }, [page, archive, section, description])\r\n\r\n  useEffect(()=>{\r\n    toggleToc(false)\r\n  }, [route])\r\n  const splitTitle = getSplitTitle(title)\r\n  const iconColor = theme === 'dark' ? '#E4E4E4' : '#333333'\r\n  return (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <ScrollView style={[\r\n      commonStyles.container, \r\n      //@ts-ignore\r\n      {paddingRight:12, scrollbarGutter: 'stable'}]}>\r\n      <View style={commonStyles.header}>\r\n        <View style={{flexDirection:'row'}}>\r\n          <TouchableOpacity onPress={()=>navigation.navigate('NotePage', { title:splitTitle[0] })}>\r\n            <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>{splitTitle[0]}</Text>\r\n          </TouchableOpacity>\r\n          {splitTitle.length === 2 && <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>{\"/\"+splitTitle[1]}</Text>}\r\n          {section && <Text style={[commonStyles.title, styles.pageTitle, {marginLeft:5}]} numberOfLines={1}>{titleFormat({title:\"\", section})}</Text>}\r\n          {archive && <Text style={[commonStyles.text, {marginLeft:5, fontStyle:'italic'}]}>{\"(\" + archive.updated + \")\"}</Text>}\r\n        </View>\r\n        <View style={styles.actionButtons}>\r\n          {!section && <>\r\n            <TouchableOpacity onPress={()=>navigation.navigate(\"Archive\", { title })} style={styles.actionButton}>\r\n              <Icon name=\"history\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!description && !archive && <>\r\n            <TouchableOpacity onPress={()=>toggleToc(!toc)} style={styles.actionButton}>\r\n              <Icon name=\"list\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n              <Icon name=\"exchange\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!description && !archive && !section && <>\r\n            <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n              <Icon name=\"pencil\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n          </>}\r\n        </View>\r\n      </View>\r\n      <View style={commonStyles.flex}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={!toc && description?[commonStyles.card, {flex:1, padding:0, marginBottom:0}]:{flex:1, position:'absolute'}}>\r\n            <EditorViewer\r\n              active\r\n              value={description || ''}\r\n              theme={theme}\r\n              onLink={(url)=>{\r\n                const noteLink = urlToNoteLink(url);\r\n                if(noteLink){\r\n                  navigation.navigate(\"NotePage\", noteLink)\r\n                }\r\n                else{\r\n                  window.open(url, '_blank');\r\n                }\r\n              }}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {toc? <HeaderSelectBar data={paragraph} path={section || ''} root={title} onPress={(item)=>navigation.navigate('NotePage', {title, section:item.title})}/>\r\n          :page?.description ? (section && <View style={{flexDirection:'row', justifyContent:'space-between'}}>\r\n            <View>\r\n              {prevSections.map(({section:prevSection, icon})=>prevSection!==undefined && <TouchableOpacity key={icon} onPress={()=>navigation.navigate('NotePage', prevSection.level===0?{title}:{title, section:prevSection.title})} style={[{flexDirection: 'row', paddingTop:8}]}>\r\n                <Icon name={icon} size={16} color={iconColor} style={{alignSelf:'center', marginRight:8}} />\r\n                <Text style={[commonStyles.text, {fontWeight:'bold'}]}>{prevSection.level===0?title:prevSection.title}</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n            <View>\r\n              {nextSections.map(({section:nextSection, icon})=> nextSection!==undefined && <TouchableOpacity key={icon} onPress={()=>navigation.navigate('NotePage', {title, section:nextSection.title})} style={[{flexDirection: 'row', paddingTop:8}]}>\r\n                <Text  style={[commonStyles.text, {fontWeight:'bold'}]}>{nextSection.title}</Text>\r\n                <Icon name={icon} size={16} color={iconColor} style={{alignSelf:'center', marginLeft:8}} />\r\n              </TouchableOpacity>)}\r\n          </View>\r\n          </View>) : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar, titleFormat } from '../../components/SearchBar';\r\n\r\nexport const NoteListSection = ({contents, isLoading, onPress, emptyMessage}:{contents:{title:string, section?:string, subtitle?:string, id?:number}[], isLoading:boolean, onPress:(title:string, section?:string, id?:number)=>void, emptyMessage:string}) => {\r\n    const theme = useColorScheme();\r\n    const commonStyles = createCommonStyles(theme);\r\n    const window = useResizeContext();\r\n    return (<>\r\n        {window === 'portrait' && <SearchBar/>}\r\n        <View style={commonStyles.container}>      \r\n          {isLoading ? (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>로딩 중...</Text>\r\n            </View>\r\n          ) : contents.length > 0 ? (\r\n            <FlatList\r\n              data={contents}\r\n              keyExtractor={(item) => JSON.stringify([item.title, item.section, item.id])}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={commonStyles.card}\r\n                  onPress={() => onPress(item.title, item.section, item.id)}\r\n                >\r\n                  <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n                  {item.subtitle!==undefined && <Text style={commonStyles.smallText}>\r\n                    {item.subtitle}\r\n                  </Text>}\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n            />\r\n          ) : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                {emptyMessage}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </>);\r\n}","import React from 'react';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { NavigationParamList } from '../../types';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>()\r\n  const { title } = route.params\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return <NoteListSection \r\n    contents={recentPages.filter(v=>title===undefined || title===v.title).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime()).map(v=>({...v, subtitle:`최근 수정: ${updatedFormat(v.updated as string)}`}))} \r\n    isLoading={isLoading}\r\n    onPress={(title, _, id)=>navigation.navigate('NotePage', { title, archiveId:id })}\r\n    emptyMessage='최근 수정한 노트가 없습니다.'/>\r\n};\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\nimport { EmptyPagesScreen } from \"./main/EmptyPageScreen\";\r\nimport { EmptyContentsScreen } from \"./main/EmptyContentScreen\";\r\nimport { ArchiveScreen } from \"./main/ArchiveScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n    EmptyPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:EmptyPagesScreen,\r\n      path:'need',\r\n    },\r\n    EmptyContents:{\r\n      title:'Blacktokki Notebook',\r\n      component:EmptyContentsScreen,\r\n      path:'empty',\r\n    },\r\n    Archive:{\r\n      title:'Blacktokki Notebook',\r\n      component:ArchiveScreen,\r\n      path:'archive',\r\n    },\r\n  };\r\n  ","import React from 'react';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useResizeContext } from '@blacktokki/core';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window  = useResizeContext()\r\n  return <>\r\n    {window === 'portrait' && <SearchBar/>}\r\n    <RecentPagesSection/>\r\n  </>\r\n};\r\n","import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { getNoteLinks } from '../../components/SearchBar';\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { getSplitTitle } from './NotePageScreen';\r\n\r\nexport const EmptyPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const unknownData = getNoteLinks(pages).filter((v)=>{\r\n    const page = pages.find(v2=>v2.title===v.title)\r\n    if (page?.description){\r\n      if (v.section === undefined || parseHtmlToSections(page.description).find(v2=>v2.title === v.section)){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }).map(v=>({...v, subtitle:(v.section===undefined?'Unknown note link':'Unknown section link') + `(${v.origin})`}))\r\n  const emptyParentData = pages.map(v=>{\r\n    const splitTitle = getSplitTitle(v.title)\r\n    if (v.description && splitTitle.length === 2 && pages.find(v=>v.title===splitTitle[0]) === undefined){\r\n      return { title:splitTitle[0], subtitle: `Empty parent note(${v.title})`}\r\n    }\r\n    return undefined\r\n  }).filter(v=>v!==undefined)\r\n  return <NoteListSection\r\n    contents={[...unknownData, ...emptyParentData]}\r\n    onPress={(title)=>navigation.navigate('EditPage', { title })}\r\n    isLoading={isLoading}\r\n    emptyMessage='작성이 필요한 노트가 없습니다.'/>\r\n};\r\n","import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { sectionDescription } from './NotePageScreen';\r\n\r\nfunction findEmptyLists(html: string): string[] {\r\n  const regex = /<(ol|ul)\\b[^>]*>([\\s\\n\\r]*)<\\/\\1>/gi;\r\n  const matches: string[] = [];\r\n  let match;\r\n\r\n  while ((match = regex.exec(html)) !== null) {\r\n    matches.push(match[0]); // 전체 태그를 반환\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\nexport const EmptyContentsScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const data = pages.flatMap(v=>{\r\n    const paragraph = parseHtmlToSections(v.description || '')\r\n    const emptyParagraph = paragraph.filter(v2=>v2.level!==0 && sectionDescription(paragraph, v2.title, false).trim() === \"\")\r\n    const emptyList = paragraph.filter(v2=>findEmptyLists(v2.description).length > 0)\r\n    return [\r\n      ...emptyParagraph.map(v2=>({title:v.title, section:v2.level===0?undefined:v2.title, subtitle:'Empty section'})),\r\n      ...emptyList.map(v2=>({title:v.title, section:v2.level===0?undefined:v2.title, subtitle:'Empty list'}))\r\n    ]\r\n  })\r\n  return <NoteListSection \r\n    contents={data}\r\n    onPress={(title)=>navigation.navigate('EditPage', { title })}\r\n    isLoading={isLoading}\r\n    emptyMessage='작성이 필요한 내용이 없습니다.'/>\r\n};\r\n","import React from 'react';\r\nimport ContentGroupSection, { EmptyContentButton, EmptyPageButton } from '../screens/main/home/ContentGroupSection';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <EmptyPageButton/>\r\n        <EmptyContentButton/>\r\n        <ScrollView style={Platform.OS==='web'?{scrollbarWidth: 'thin'} as any:{}}>\r\n            <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n            <ContentGroupSection type={'LAST'} />\r\n            <ContentGroupSection type={'PAGE'} />\r\n            <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Recent Changes\")}</List.Subheader>{/* 최근 변경 */}\r\n            <ContentGroupSection type={'NOTE'} noteCount={10}/>\r\n        </ScrollView>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst HeaderRight = ()=>{\r\n    const windowType = useResizeContext();\r\n    return windowType==='landscape'?<SearchBar/>:undefined\r\n}\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <HeaderRight/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","types","parentIdParam","undefined","typeParam","join","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getContents","type","_x","saveNoteContents","contents","content","find","savedId","then","snapshot","_objectSpread","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","_queryFn","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","page","c","invalidateQueries","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","useCreateOrUpdatePage","auth","useAuthContext","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x6","useDeleteRecentPage","_mutationFn4","updatedRecentPages","_title","_x9","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","textContent","trim","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","KEYWORDS_KEY","getKeywords","saveKeywords","keywords","useKeywords","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","section","getNoteLinks","pages","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","noteLink","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","noteLinks","startsWith","RandomButton","navigation","useNavigation","randomPages","Math","floor","random","sections","navigate","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useKeywords$data","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","cancelButton","marginRight","saveButton","marginLeft","EmptyPageButton","lang","useLangContext","List","_props","icon","EmptyContentButton","toRecentContents","sort","b","Date","getTime","notes","_useNotePages2","_queryFn4","useRecentPages","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x8","useAddRecentPage","deleteRecentPage","lastPageExists","window","useResizeContext","itemPadding","noteOnPress","clearTimeout","setTimeout","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","_Fragment","noteCount","_pages$data2","TouchableRipple","margin","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","innerHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","overflow","Content","RenderHtml","source","renderersProps","tagsStyles","contentWidth","opacity","textAlign","RecentPagesSection","isLoading","ScrollView","contentContainerStyle","alignSelf","flexWrap","NotesTabView","Colors","background","selectable","ContentGroupSection","RecentChangesTabView","CommonConfigButton","ConfigCommonView","dispatch","setSearch","resetKeyword","_mutationFn2","_onSuccess2","useResetKeyowrd","ConfigSections","TextButton","textStyle","textDecorationLine","ConfigTabView","columns","moveButton","sectionDescription","paragraph","rootTitle","_paragraph$find","getSplitTitle","splitTitle","split","pageTitle","actionButtons","actionButton","NoteListSection","emptyMessage","subtitle","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","buttons","AntDesign","iconColor","isWeb","NotePage","useRoute","_route$params","archiveId","_window","toc","toggleToc","_useNotePage","archives","archive","handleEdit","idx","findIndex","prevSections","findLast","_paragraph$idx","nextSections","_paragraph$idx2","setDescription","scrollbarGutter","numberOfLines","ActivityIndicator","EditorViewer","active","onLink","open","autoResize","prevSection","nextSection","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","pattern","childrenPages","encodeURI","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","_useState5","_useState6","setPreview","moveMutation","_useNotePages5$data","oldTitle","Error","some","_x7","useMovePage","_useMemo","moveParagraph","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","display","RecentPages","EmptyPages","unknownData","emptyParentData","EmptyContents","emptyParagraph","emptyList","regex","matches","findEmptyLists","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}