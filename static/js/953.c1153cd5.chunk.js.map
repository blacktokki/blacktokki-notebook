{"version":3,"file":"static/js/953.c1153cd5.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/RecentPageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/index.ts","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getNoteContents = async (): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList()).filter(v=>(v.type==='NOTE'|| v.type==='BOOKMARK'))\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      await (id?patchContent({id, updated:content}):postContent(content));\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: getNoteContents,\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const contents = await getNoteContents();\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        const contents = await getNoteContents();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        const contents = await getNoteContents();\r\n        return contents.find(v=>v.title === lastPage)\r\n      } \r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    \r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'} | {type:'NOTE', noteCount:number}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?.filter(v=>v.description).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() ):pages.data)\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return (\r\n    <List.Section>\r\n        {props.type==='PAGE' && lastPage && (data?.find(v=>v.id===lastPage.id) === undefined) && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n          />}\r\n        {data && (\r\n         props.type === 'NOTE'\r\n         ?<>{data.slice(0, props.noteCount).map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n          title={v.title} \r\n          onPress={()=>noteOnPress(v.title)}\r\n          onLongPress={()=>noteOnLongPress(v.title)}\r\n          style={{padding:itemPadding }} \r\n        />)}\r\n        {((data?.length || 0) > props.noteCount) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}  />}\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import { TouchableOpacity, View, FlatList, StyleSheet } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { createCommonStyles } from \"../styles\";\r\nimport { Text, useColorScheme } from \"@blacktokki/core\";\r\n\r\nexport interface NodeData {\r\n    path: string;\r\n    title: string;\r\n    level: number;\r\n    header: string;\r\n    description: string;\r\n  }\r\n  \r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n  \r\n    const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n  \r\n    const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n    const headerStack: { level: number; title: string }[] = [];\r\n  \r\n    let current: NodeData | null = null;\r\n    let cursor = doc.body.firstChild;\r\n  \r\n    const flushCurrent = () => {\r\n      if (current) {\r\n        result.push(current);\r\n        current = null;\r\n      }\r\n    };\r\n  \r\n    while (cursor) {\r\n      if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n        const el = cursor as HTMLElement;\r\n        if (headings.includes(el.tagName)) {\r\n          flushCurrent();\r\n  \r\n          const level = parseInt(el.tagName.substring(1));\r\n          const title = el.textContent?.trim() || \"\";\r\n  \r\n          // 헤더 스택 업데이트\r\n          while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n            headerStack.pop();\r\n          }\r\n          headerStack.push({ level, title });\r\n  \r\n          const path = headerStack.map(h => h.title).join(\" > \");\r\n  \r\n          current = {\r\n            path,\r\n            title,\r\n            level,\r\n            header: el.outerHTML,\r\n            description: \"\",\r\n          };\r\n        } else if (current) {\r\n          current.description += el.outerHTML;\r\n        } else {\r\n          // 헤더 밖의 내용 처리\r\n          result[0].description += el.outerHTML;\r\n        }\r\n      } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n        current.description += cursor.textContent || \"\";\r\n      }\r\n  \r\n      cursor = cursor.nextSibling;\r\n    }\r\n  \r\n    flushCurrent();\r\n    return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props:{root:string, path:string, onPress:(item:NodeData)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.onPress(item)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?[commonStyles.title, {marginBottom:5, marginTop:3}]:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n})","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useLastPage, useNotePages, useRecentPages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { NodeData, parseHtmlToSections } from './HeaderSelectBar';\r\n\r\nlet _searchText = ''\r\n\r\ntype ContentAndSection = Content & {\r\n  section?: NodeData\r\n}\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void,renderExtra?:(input:string, isFind:boolean)=>React.ReactNode}> = ({handlePress, renderExtra}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const route = useRoute<any>()\r\n  const currentTitle = route.params?.title\r\n\r\n  const { data: pages = [] } = useNotePages();\r\n  const { data:lastPage } = useLastPage();\r\n  const { data:recentPages = [] } = useRecentPages()\r\n  const defaultPages = ([...(lastPage?[lastPage ]:[]), ...recentPages ]);\r\n  const lowerCaseSearch = searchText.toLowerCase()\r\n  const filteredPages:ContentAndSection[] = searchText.length > 0\r\n    ? [...pages.filter(page => \r\n        page.title.toLowerCase().startsWith(lowerCaseSearch)\r\n      ), ...pages.flatMap(v=>parseHtmlToSections(v.description || '').filter(v2=>v2.title.toLowerCase().startsWith(lowerCaseSearch)).map(v2=>({...v, section:v2})))].slice(0, 10)\r\n    : [...defaultPages, ...pages.filter(v=>defaultPages.find(v2=>v2.title===v.title)===undefined)].filter(v=>v.title !== currentTitle).slice(0, 10)\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?:string) => {\r\n    handlePress?handlePress(title):navigation.navigate('NotePage', { title, section });\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useRef(PanResponder.create({\r\n    onPanResponderStart: handleSearch,\r\n  })).current.panHandlers\r\n\r\n  const pagePressHandlers = useCallback((item:ContentAndSection)=>{\r\n    return PanResponder.create({\r\n      onPanResponderStart:() => handlePagePress(item.title, item.section?.title)\r\n    }).panHandlers\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={()=>setShowResults(true)}\r\n          onBlur={()=>setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={renderExtra?\"search-plus\":\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <FlatList\r\n              data={filteredPages}\r\n              keyExtractor={(item) => JSON.stringify([item.title, item.section?.title])}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.resultItem}\r\n                  {...pagePressHandlers(item)}\r\n                >\r\n                  <Text style={[commonStyles.text, styles.resultText]}>{item.section?item.section.title:item.title}</Text>\r\n                  {item.section && <Text style={[commonStyles.text, styles.resultText, {fontSize:12}]}>{item.title}</Text>}\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              {...searchHandlers}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n          {renderExtra?.(searchText, filteredPages.length > 0)}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FlatList, ScrollView, StyleSheet, TextInput, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\n\r\n\r\nconst OpenedEditorsTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'PAGE'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst NoteTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'NOTE'} noteCount={15}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Open Pages'), component:OpenedEditorsTabView, icon:<List.Icon icon={'file-document'}/>, headerRight:()=><></>},\r\n    {title: lang('Notes'), component:NoteTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%'}]}>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections/>\r\n      </View>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 16,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#3498DB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 48,\r\n    borderRadius: 4,\r\n    marginLeft: 8,\r\n  },\r\n  recentButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const [path,setPath] = useState('')\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const [preview, setPreview] = useState<boolean>()\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const moveDescription = moveParagraph.map(v=>v.header + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map(v=>(v.path===path && v.description===''?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title);\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    if (!isLoading){\r\n      const _path = paragraph.find(v=>v.title === section)?.path || ''\r\n      setPath(_path)\r\n      setNewPath(_path)\r\n    }\r\n  }, [section, isLoading])\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:window==='landscape'?'row':'column', zIndex:1}}>\r\n          <View style={{zIndex:1}}>\r\n            <Text style={commonStyles.text}>현재 노트 제목:</Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>{title}</Text>\r\n            <Text style={commonStyles.text}>현재 노트 문단:</Text>\r\n            { section!==undefined?\r\n              <Text style={[commonStyles.title, styles.columns]}>{section}</Text>:\r\n              <View style={styles.columns}>\r\n                <HeaderSelectBar path={path} onPress={(item)=>setPath(item.path)} root={page?.title || ''} data={paragraph}/>\r\n              </View>}\r\n            <Text style={commonStyles.text}>새 노트 제목:</Text>\r\n            <SearchBar handlePress={setNewTitle}/>\r\n            <Text style={commonStyles.text}>새 노트 문단:</Text>\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar path={newPath} onPress={(item)=>setNewPath(item.path)} root={newPage?.title || ''} data={newParagraph}/>\r\n            </View>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[commonStyles.button, styles.moveButton, {flex:0, flexDirection:'row', alignItems:'center', paddingTop:24, paddingBottom:16}]} \r\n              onPress={()=>setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>{title}{paragraphItem?.level!==0?( \"/\"+paragraphItem?.title):\"\"}</Text>\r\n              <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ▶  </Text>\r\n              <Text style={commonStyles.title}>{newTitle}{newParagraphItem?.level!==0?( \"/\"+(newParagraphItem?.title || \"?\")):\"\"}</Text>   \r\n            </TouchableOpacity>\r\n              {preview!==undefined && <View style={{display:preview?'flex':'none'}}>\r\n              <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  autoResize\r\n                />\r\n              </View>}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: { \r\n    marginTop: 8, \r\n    marginBottom: 16 \r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages, useRecentPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar } from '../../components/SearchBar';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  \r\n  const handlePagePress = (title: string) => {\r\n    navigation.navigate('NotePage', { title });\r\n  };\r\n  \r\n\r\n  return (<>\r\n    {window === 'portrait' && <SearchBar/>}\r\n    <View style={commonStyles.container}>      \r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : recentPages.length > 0 ? (\r\n        <FlatList\r\n          data={recentPages.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() )}\r\n          keyExtractor={(item) => item.title}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => handlePagePress(item.title)}\r\n            >\r\n              <Text style={commonStyles.title}>{item.title}</Text>\r\n              <Text style={commonStyles.smallText}>\r\n                최근 수정: {updatedFormat(item.updated)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>\r\n            최근 수정한 노트가 없습니다.\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nconst sectionDescription = (paragraph:NodeData[], section:string) => {\r\n  const path = paragraph.find(v=>v.title===section)?.path\r\n  return path?paragraph.filter(v=>v.path.startsWith(path)).map(v=>v.header + v.description).join(\"\"):\"\"\r\n}\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false)\r\n  \r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description||'');\r\n  const description = section?sectionDescription(paragraph, section) :page?.description\r\n\r\n  useEffect(()=>{\r\n    toggleToc(false)\r\n  }, [route])\r\n\r\n  return (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <ScrollView style={[\r\n      commonStyles.container, \r\n      //@ts-ignore\r\n      {paddingRight:12, scrollbarGutter: 'stable'}]}>\r\n      <View style={commonStyles.header}>\r\n        <TouchableOpacity onPress={()=>navigation.navigate('NotePage', { title })}>\r\n          <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>\r\n            {title}{section?\" ▶ \"+section:\"\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.actionButtons}>\r\n          <TouchableOpacity onPress={()=>toggleToc(!toc)} style={styles.actionButton}>\r\n            <Icon name=\"list\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n            <Icon name=\"exchange\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          {section\r\n          ?undefined\r\n          :<>\r\n            <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n              <Icon name=\"pencil\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n          </>}\r\n        </View>\r\n      </View>\r\n      <View style={commonStyles.flex}>\r\n        {toc? <HeaderSelectBar data={paragraph} path={section || ''} root={title} onPress={(item)=>navigation.navigate('NotePage', {title, section:item.title})}/>\r\n        : isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={description?[commonStyles.card, {flex:1, padding:0}]:{flex:0}}>\r\n            <EditorViewer\r\n              active\r\n              value={description || ''}\r\n              theme={theme}\r\n              onLink={(url)=>{\r\n                const newLocation = new URL(url);\r\n                console.log(url, newLocation, '@');\r\n                if (location.origin + location.pathname === newLocation.origin + newLocation.pathname){\r\n                  const title = (new URLSearchParams(newLocation.search)).get(\"title\")\r\n                  title && navigation.navigate(\"NotePage\", {title})\r\n                }\r\n                else{\r\n                  // Swindow.open(url, '_blank');\r\n                }\r\n              }}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {page?.description ? undefined : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n\r\n  };\r\n  ","import React from 'react';\r\nimport ContentGroupSection from '../screens/main/home/ContentGroupSection';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <View style={{flex:1}}>\r\n            <View style={{minHeight:'35%', maxHeight:'65%', flexShrink:1, flexGrow:0.1}}>\r\n                <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n                <ScrollView>\r\n                    <ContentGroupSection type={'PAGE'} />\r\n                </ScrollView>\r\n            </View>\r\n            <View style={{minHeight:'35%', maxHeight:'65%', flexShrink:0.1, flexGrow:1}}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>{/* 최근 변경 */}\r\n                </View>\r\n                <ScrollView >\r\n                    <ContentGroupSection type={'NOTE'} noteCount={5}/>\r\n                </ScrollView>\r\n            </View>\r\n        </View>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst HeaderRight = ()=>{\r\n    const windowType = useResizeContext();\r\n    return windowType==='landscape'?<SearchBar/>:undefined\r\n}\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <HeaderRight/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","type","parentIdParam","undefined","typeParam","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getNoteContents","saveNoteContents","contents","content","find","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","_x","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","useNotePage","title","queryClient","useQueryClient","_queryFn","page","c","invalidateQueries","useRecentPages","_queryFn2","recentTitles","useLastPage","_queryFn3","useCreateOrUpdatePage","auth","useAuthContext","useMutation","mutationFn","_mutationFn","updatedContents","_objectSpread","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","useDeleteRecentPage","_mutationFn4","updatedRecentPages","_title","_x7","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","styles","buttonContainer","cancelButton","marginRight","saveButton","marginLeft","props","_notes$data","lang","useLangContext","notes","pages","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x6","useAddRecentPage","deleteRecentPage","sort","a","b","Date","getTime","window","useResizeContext","itemPadding","noteOnPress","current","clearTimeout","mutate","setTimeout","navigate","noteOnLongPress","_pages$data","_jsxs","List","children","_jsx","left","_props","icon","onPress","onLongPress","style","titleStyle","fontStyle","_Fragment","slice","noteCount","_pages$data2","v2","right","TouchableRipple","margin","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","cursor","body","firstChild","flushCurrent","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","textContent","trim","pop","h","join","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","useColorScheme","commonStyles","View","resultsContainer","darkResults","lightResults","FlatList","keyExtractor","item","renderItem","TouchableOpacity","resultItem","Icon","name","size","Text","marginTop","resultText","root","ItemSeparatorComponent","backButton","_searchText","SearchBar","_route$params","handlePress","renderExtra","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","showResults","setShowResults","navigation","useNavigation","currentTitle","useRoute","params","_useNotePages$data","_useRecentPages$data","defaultPages","lowerCaseSearch","toLowerCase","filteredPages","startsWith","flatMap","section","handleSearch","handlePagePress","searchHandlers","useRef","PanResponder","onPanResponderStart","panHandlers","pagePressHandlers","useCallback","_item$section","useEffect","useFocusEffect","searchContainer","TextInput","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","_item$section2","position","maxWidth","zIndex","top","maxHeight","OpenedEditorsTabView","ScrollView","Colors","background","ContentGroupSection","NoteTabView","ConfigTabView","ConfigSections","recentButton","columns","moveButton","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","pageTitle","actionButtons","actionButton","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","NotePage","_window","toc","toggleToc","_useNotePage","isLoading","handleEdit","paragraph","_paragraph$find","sectionDescription","paddingRight","scrollbarGutter","numberOfLines","ActivityIndicator","EditorViewer","active","onLink","url","newLocation","URL","log","location","origin","pathname","URLSearchParams","search","autoResize","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","setPath","newParagraph","_useState5","_useState6","newPath","setNewPath","_useState7","_useState8","setPreview","moveMutation","_mutationFn2","oldTitle","Error","some","useMovePage","_useMemo","useMemo","moveParagraph","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","_path","paragraphItem","newParagraphItem","moveDisabled","paddingTop","paddingBottom","display","RecentPages","_useNotePages","minHeight","flexShrink","flexGrow","selectable","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","then","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}