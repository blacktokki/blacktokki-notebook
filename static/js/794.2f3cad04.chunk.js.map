{"version":3,"file":"static/js/794.2f3cad04.chunk.js","mappings":"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,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC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AE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,eAAe,CAAC,KAAK,WAAW,CAAC,EAAE,WAAW,CAAC,EA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","sources":["../../node_modules/mdurl/lib/decode.mjs","../../node_modules/mdurl/lib/encode.mjs","../../node_modules/mdurl/lib/format.mjs","../../node_modules/mdurl/lib/parse.mjs","../../node_modules/uc.micro/categories/P/regex.mjs","../../node_modules/uc.micro/categories/S/regex.mjs","../../node_modules/uc.micro/properties/Any/regex.mjs","../../node_modules/uc.micro/categories/Cc/regex.mjs","../../node_modules/uc.micro/categories/Cf/regex.mjs","../../node_modules/uc.micro/categories/Z/regex.mjs","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/encode-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts","../../node_modules/markdown-it/lib/common/utils.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs","../../node_modules/markdown-it/lib/renderer.mjs","../../node_modules/markdown-it/lib/ruler.mjs","../../node_modules/markdown-it/lib/token.mjs","../../node_modules/markdown-it/lib/rules_core/state_core.mjs","../../node_modules/markdown-it/lib/rules_core/normalize.mjs","../../node_modules/markdown-it/lib/rules_core/linkify.mjs","../../node_modules/markdown-it/lib/rules_core/replacements.mjs","../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs","../../node_modules/markdown-it/lib/parser_core.mjs","../../node_modules/markdown-it/lib/rules_core/block.mjs","../../node_modules/markdown-it/lib/rules_core/inline.mjs","../../node_modules/markdown-it/lib/rules_core/text_join.mjs","../../node_modules/markdown-it/lib/rules_block/state_block.mjs","../../node_modules/markdown-it/lib/rules_block/table.mjs","../../node_modules/markdown-it/lib/rules_block/list.mjs","../../node_modules/markdown-it/lib/common/html_blocks.mjs","../../node_modules/markdown-it/lib/common/html_re.mjs","../../node_modules/markdown-it/lib/rules_block/html_block.mjs","../../node_modules/markdown-it/lib/parser_block.mjs","../../node_modules/markdown-it/lib/rules_block/code.mjs","../../node_modules/markdown-it/lib/rules_block/fence.mjs","../../node_modules/markdown-it/lib/rules_block/blockquote.mjs","../../node_modules/markdown-it/lib/rules_block/hr.mjs","../../node_modules/markdown-it/lib/rules_block/reference.mjs","../../node_modules/markdown-it/lib/rules_block/heading.mjs","../../node_modules/markdown-it/lib/rules_block/lheading.mjs","../../node_modules/markdown-it/lib/rules_block/paragraph.mjs","../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/text.mjs","../../node_modules/markdown-it/lib/rules_inline/linkify.mjs","../../node_modules/markdown-it/lib/rules_inline/escape.mjs","../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs","../../node_modules/markdown-it/lib/rules_inline/autolink.mjs","../../node_modules/markdown-it/lib/rules_inline/entity.mjs","../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","../../node_modules/markdown-it/lib/parser_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/newline.mjs","../../node_modules/markdown-it/lib/rules_inline/backticks.mjs","../../node_modules/markdown-it/lib/rules_inline/link.mjs","../../node_modules/markdown-it/lib/rules_inline/image.mjs","../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","../../node_modules/linkify-it/index.mjs","../../node_modules/linkify-it/lib/re.mjs","../../node_modules/punycode.js/punycode.es6.js","../../node_modules/markdown-it/lib/index.mjs","../../node_modules/markdown-it/lib/presets/default.mjs","../../node_modules/markdown-it/lib/presets/zero.mjs","../../node_modules/markdown-it/lib/presets/commonmark.mjs","../../node_modules/turndown/lib/turndown.browser.es.js","../../node_modules/turndown-plugin-gfm/lib/turndown-plugin-gfm.es.js","../../node_modules/@blacktokki/editor/build/module/lib/markdown.ts"],"sourcesContent":["/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/",null,null,null,null,null,null,null,"// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    if (href) href = href.replace(/([()])/g, '\\\\$1');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title.replace(/\"/g, '\\\\\"') + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (root.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n","var highlightRegExp = /highlight-(?:text|source)-([a-z0-9]+)/;\n\nfunction highlightedCodeBlock (turndownService) {\n  turndownService.addRule('highlightedCodeBlock', {\n    filter: function (node) {\n      var firstChild = node.firstChild;\n      return (\n        node.nodeName === 'DIV' &&\n        highlightRegExp.test(node.className) &&\n        firstChild &&\n        firstChild.nodeName === 'PRE'\n      )\n    },\n    replacement: function (content, node, options) {\n      var className = node.className || '';\n      var language = (className.match(highlightRegExp) || [null, ''])[1];\n\n      return (\n        '\\n\\n' + options.fence + language + '\\n' +\n        node.firstChild.textContent +\n        '\\n' + options.fence + '\\n\\n'\n      )\n    }\n  });\n}\n\nfunction strikethrough (turndownService) {\n  turndownService.addRule('strikethrough', {\n    filter: ['del', 's', 'strike'],\n    replacement: function (content) {\n      return '~' + content + '~'\n    }\n  });\n}\n\nvar indexOf = Array.prototype.indexOf;\nvar every = Array.prototype.every;\nvar rules = {};\n\nrules.tableCell = {\n  filter: ['th', 'td'],\n  replacement: function (content, node) {\n    return cell(content, node)\n  }\n};\n\nrules.tableRow = {\n  filter: 'tr',\n  replacement: function (content, node) {\n    var borderCells = '';\n    var alignMap = { left: ':--', right: '--:', center: ':-:' };\n\n    if (isHeadingRow(node)) {\n      for (var i = 0; i < node.childNodes.length; i++) {\n        var border = '---';\n        var align = (\n          node.childNodes[i].getAttribute('align') || ''\n        ).toLowerCase();\n\n        if (align) border = alignMap[align] || border;\n\n        borderCells += cell(border, node.childNodes[i]);\n      }\n    }\n    return '\\n' + content + (borderCells ? '\\n' + borderCells : '')\n  }\n};\n\nrules.table = {\n  // Only convert tables with a heading row.\n  // Tables with no heading row are kept using `keep` (see below).\n  filter: function (node) {\n    return node.nodeName === 'TABLE' && isHeadingRow(node.rows[0])\n  },\n\n  replacement: function (content) {\n    // Ensure there are no blank lines\n    content = content.replace('\\n\\n', '\\n');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.tableSection = {\n  filter: ['thead', 'tbody', 'tfoot'],\n  replacement: function (content) {\n    return content\n  }\n};\n\n// A tr is a heading row if:\n// - the parent is a THEAD\n// - or if its the first child of the TABLE or the first TBODY (possibly\n//   following a blank THEAD)\n// - and every cell is a TH\nfunction isHeadingRow (tr) {\n  var parentNode = tr.parentNode;\n  return (\n    parentNode.nodeName === 'THEAD' ||\n    (\n      parentNode.firstChild === tr &&\n      (parentNode.nodeName === 'TABLE' || isFirstTbody(parentNode)) &&\n      every.call(tr.childNodes, function (n) { return n.nodeName === 'TH' })\n    )\n  )\n}\n\nfunction isFirstTbody (element) {\n  var previousSibling = element.previousSibling;\n  return (\n    element.nodeName === 'TBODY' && (\n      !previousSibling ||\n      (\n        previousSibling.nodeName === 'THEAD' &&\n        /^\\s*$/i.test(previousSibling.textContent)\n      )\n    )\n  )\n}\n\nfunction cell (content, node) {\n  var index = indexOf.call(node.parentNode.childNodes, node);\n  var prefix = ' ';\n  if (index === 0) prefix = '| ';\n  return prefix + content + ' |'\n}\n\nfunction tables (turndownService) {\n  turndownService.keep(function (node) {\n    return node.nodeName === 'TABLE' && !isHeadingRow(node.rows[0])\n  });\n  for (var key in rules) turndownService.addRule(key, rules[key]);\n}\n\nfunction taskListItems (turndownService) {\n  turndownService.addRule('taskListItems', {\n    filter: function (node) {\n      return node.type === 'checkbox' && node.parentNode.nodeName === 'LI'\n    },\n    replacement: function (content, node) {\n      return (node.checked ? '[x]' : '[ ]') + ' '\n    }\n  });\n}\n\nfunction gfm (turndownService) {\n  turndownService.use([\n    highlightedCodeBlock,\n    strikethrough,\n    tables,\n    taskListItems\n  ]);\n}\n\nexport { gfm, highlightedCodeBlock, strikethrough, tables, taskListItems };\n","import markdownIt from 'markdown-it';\r\nimport TurndownService from 'turndown';\r\n//@ts-ignore\r\nimport { tables } from 'turndown-plugin-gfm';\r\n\r\nconst markdownToHtml = markdownIt();\r\n\r\nmarkdownToHtml.renderer.rules.fence = (tokens, idx, options, env, self) => {\r\n  const token = tokens[idx];\r\n  const code = token.content;\r\n  let language = token.info || '';\r\n  if (language === 'html') {\r\n    language = 'markup';\r\n  }\r\n  let escapeCode: string = markdownToHtml.utils.escapeHtml(code);\r\n  if (escapeCode.endsWith('\\n')) {\r\n    escapeCode = escapeCode.slice(0, escapeCode.length - 1);\r\n  }\r\n  // Create custom HTML for code blocks\r\n  return `<pre class=\"language-${language}\"><code>${escapeCode}</code></pre>`;\r\n};\r\n\r\nconst renderStrong: typeof markdownToHtml.renderer.rules.strong_open = (\r\n  tokens,\r\n  idx,\r\n  opts,\r\n  _,\r\n  slf\r\n) => {\r\n  const token = tokens[idx];\r\n  if (token.markup === '__') {\r\n    token.tag = 'u';\r\n  }\r\n  if (token.markup === '**') {\r\n    token.tag = 'strong';\r\n  }\r\n  return slf.renderToken(tokens, idx, opts);\r\n};\r\n\r\nmarkdownToHtml.renderer.rules.strong_open = renderStrong;\r\nmarkdownToHtml.renderer.rules.strong_close = renderStrong;\r\n\r\nconst HtmlToMarkdown = new TurndownService({\r\n  preformattedCode: true,\r\n  codeBlockStyle: 'fenced',\r\n  headingStyle: 'atx',\r\n});\r\n\r\nHtmlToMarkdown.addRule('codeBlock', {\r\n  filter(node, options) {\r\n    // Determine if this node should be treated as a code block\r\n    // For example, looking for <pre><code> combinations\r\n    return (\r\n      node.nodeName === 'PRE' && node.firstChild !== null && node.firstChild.nodeName === 'CODE'\r\n    );\r\n  },\r\n  replacement(content, node, options) {\r\n    // Get the language if specified (often in a class attribute)\r\n    const language = (node as HTMLElement).getAttribute('class') || '';\r\n    const languageMatch = language.match(/language-(\\S+)/);\r\n    let languageSpec = languageMatch ? languageMatch[1] : '';\r\n    if (languageSpec === 'markup') {\r\n      languageSpec = 'html';\r\n    }\r\n    if (languageSpec === 'none') {\r\n      languageSpec = '';\r\n    }\r\n    // Get the code content and trim whitespace\r\n    const code = (node.firstChild as HTMLElement).textContent || '';\r\n    // Format as a code block with your preferred style\r\n    // This example uses GitHub-style code fences with language specification\r\n    return '\\n\\n```' + languageSpec + '\\n' + code + '\\n```\\n\\n';\r\n  },\r\n});\r\nHtmlToMarkdown.addRule('underline', {\r\n  filter: ['u'],\r\n  replacement(content) {\r\n    const trailingNewline = content.endsWith('\\n') ? '  \\n' : '';\r\n    return '__' + content.trim() + '__' + trailingNewline;\r\n  },\r\n});\r\nHtmlToMarkdown.addRule('strikethrough', {\r\n  filter: ['del', 's'],\r\n  replacement(content) {\r\n    const trailingNewline = content.endsWith('\\n') ? '  \\n' : '';\r\n    return '~~' + content.trim() + '~~' + trailingNewline;\r\n  },\r\n});\r\n\r\nHtmlToMarkdown.use(tables);\r\n\r\n// A function that renders markdown to HTML\r\nexport const renderer = (markdownCode: string) => {\r\n  return markdownToHtml.render(markdownCode);\r\n};\r\n\r\n// A function that converts HTML back to Markdown\r\nexport const parser = (htmlCode: string) => {\r\n  return HtmlToMarkdown.turndown(htmlCode);\r\n};\r\n\r\nexport const toRaw = (text: string) => {\r\n  const doc = new DOMParser().parseFromString(text, 'text/html');\r\n  return doc.body.textContent || '';\r\n  // return text\r\n  //   .replaceAll(/\\n/g, '')\r\n  //   .replaceAll(/<hr\\s*[/]?>\\n/gi, '')\r\n  //   .replaceAll(/&nbsp;/gi, ' ')\r\n  //   .replaceAll(/<br\\s*[/]?>/gi, '\\r\\n')\r\n  //   .replaceAll(/<\\/?[^>]*>/gi, '');\r\n};\r\n"],"names":["decodeCache","decode","string","exclude","defaultChars","cache","i","ch","String","fromCharCode","push","length","charCodeAt","toString","toUpperCase","slice","getDecodeCache","replace","seq","result","l","b1","parseInt","b2","chr","b3","b4","componentChars","encodeCache","encode","keepEscaped","test","getEncodeCache","code","nextCode","encodeURIComponent","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","this","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","prototype","parse","slashesDenoteHost","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","u","isString","obj","Object","call","_class","_hasOwnProperty","hasOwnProperty","has","object","key","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","isValidEntityCode","c","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","unescapeMd","str","unescapeAll","escaped","entity","name","decoded","decodeHTML","replaceEntityPattern","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","isMdAsciiPunct","normalizeReference","lib","mdurl","parseLinkLabel","state","start","disableNested","level","found","marker","prevPos","max","posMax","oldPos","md","inline","skipToken","labelEnd","parseLinkDestination","ok","parseLinkTitle","prev_state","can_continue","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","info","highlighted","langName","langAttrs","arr","highlight","attrIndex","tmpAttrs","attrs","langPrefix","tmpToken","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","hidden","block","nesting","tag","needLf","nextToken","type","renderInline","len","render","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","Token","map","markup","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateCore","inlineMode","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","stack","thisLevel","OUTER","lastIndex","t","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","item","single","openQuote","closeQuote","quotes","_rules","tok","blockTokens","linkify","pretest","htmlLinkLevel","currentToken","links","nodes","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","schema","normalizeLinkText","token_o","token_t","token_c","blkIdx","typographer","curr","last","Core","ruler","process","State","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","line","lineMax","tight","ddIndent","listIndent","parentType","s","indent","offset","indent_found","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","end","keepLastLF","queue","lineIndent","lineStart","first","getLine","escapedSplit","isEscaped","current","substring","skipBulletListMarker","startLine","skipOrderedListMarker","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","pop","columnCount","oldParentType","terminatorRules","tableLines","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tdo","mem","params","haveEndMarker","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","lines","tokenize","cnt","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","Number","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","Math","markTightParagraphs","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","href","destEndPos","destEndLineNo","title","titleRes","label","references","html","tmp","token_i","ParserBlock","maxNesting","hasEmptyLines","prevLine","outTokens","StateInline","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","scanDelims","canSplitWord","count","left_flanking","right_flanking","can_open","can_close","isTerminatorChar","SCHEME_RE","ESCAPED","postProcess","loneMarkers","startDelim","endDelim","scanned","open","close","isStrong","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link","matchAtStart","pmax","ws","ch1","escapedStr","ch2","origStr","openerLength","matchStart","matchEnd","closerLength","res","ref","parseReference","labelStart","lc","isLetter","_rules2","ParserInline","ruler2","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","opts","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_xn","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","alias","slist","filter","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","mapDomain","domain","callback","parts","encoded","array","ucs2decode","output","counter","extra","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","inputLength","n","bias","basic","oldi","w","codePoint","baseMinusT","out","fromCodePoint","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","codePoints","config","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","renderer","utils","configure","presets","missed","use","plugin","args","apply","parseInline","repeat","character","blockElements","isBlock","node","is","voidElements","isVoid","meaningfulWhenBlankElements","tagNames","nodeName","getElementsByTagName","some","tagName","cleanAttribute","attribute","Rules","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","findRule","filterValue","remove","nextSibling","parentNode","removeChild","prev","isPre","firstChild","paragraph","lineBreak","br","heading","hLevel","charAt","headingStyle","blockquote","parent","lastElementChild","listItem","prefix","bulletListMarker","getAttribute","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","language","fenceChar","fenceSize","fenceInCodeRegex","horizontalRule","hr","inlineLink","linkStyle","referenceLink","reference","linkReferenceStyle","id","append","emphasis","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","delimiter","matches","keep","forNode","isBlank","root","window","_htmlParser","HTMLParser","Parser","DOMParser","canParse","parseFromString","e","canParseHTMLNatively","useActiveX","document","implementation","createHTMLDocument","ActiveXObject","shouldUseActiveX","doc","write","designMode","createHTMLParser","RootNode","getElementById","cloneNode","element","prevText","keepLeadingWs","nodeType","data","nextNode","collapseWhitespace","preformattedCode","isPreOrCode","Node","isCode","isMeaningfulWhenBlank","hasVoid","hasMeaningfulWhenBlank","flankingWhitespace","leading","trailing","edges","leadingAscii","leadingNonAscii","trailingNonAscii","trailingAscii","edgeWhitespace","isFlankedByWhitespace","side","sibling","regExp","isFlanked","nodeValue","escapes","TurndownService","defaults","outerHTML","destination","extend","childNodes","escape","replacementForNode","whitespace","s1","indexEnd","trimTrailingNewlines","s2","nls","turndown","canConvert","addRule","accumulator","every","isHeadingRow","tr","isFirstTbody","cell","tables","turndownService","rows","tableCell","tableRow","borderCells","alignMap","left","right","center","border","align","table","tableSection","markdownToHtml","markdownIt","escapeCode","endsWith","renderStrong","_","strong_open","strong_close","HtmlToMarkdown","languageMatch","languageSpec","trailingNewline","markdownCode","parser","htmlCode","toRaw","body"],"sourceRoot":""}