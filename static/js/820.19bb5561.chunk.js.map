{"version":3,"file":"static/js/820.19bb5561.chunk.js","mappings":"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","sources":["src/services/feedynote.ts","src/hooks/useContentList.ts","src/components/TimeLine.tsx","src/components/ContentList.tsx","src/hooks/usePreview.ts","src/screens/main/EditorScreen.tsx","src/components/ContentGroupList.tsx","src/screens/main/HomeScreen.tsx","src/screens/index.ts","src/hooks/useContent.ts","src/screens/main/ContentListScreen.tsx","src/navigation/index.tsx","src/navigation/Drawer.tsx","web/editor-config.js"],"sourcesContent":["import { Content, PostContent, PreviewRequest, ScrapPreview, FeedPreview } from '../types';\r\nimport axios from './axios';\r\n\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'], page?:number)=>{\r\n    const size = page !== undefined ? \"20\": \"256\"\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    const pageParam = page !== undefined?`&page=${page}`:''\r\n    return (await axios.get(`/api/v1/content?self=true&size=${size}${parentIdParam}${typeParam}${pageParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const pullFeed = async () =>{\r\n    await axios.get('/api/v1/feed/pull')\r\n}\r\n\r\nexport const previewScrap = async (preview: PreviewRequest) => {\r\n    const data = (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data\r\n    return {type:\"SCRAP\", ...data} as ScrapPreview\r\n}\r\n\r\nexport const previewFeed = async (preview: PreviewRequest) => {\r\n    const data =  (await axios.get(`/api/v1/feed/autocomplete?query=${preview.query}`)).data\r\n    return {type:\"FEED\", ...data} as FeedPreview\r\n}","import { QueryKey, useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { deleteContent, getContentList, patchContent, postContent, pullFeed } from \"../services/feedynote\";\r\nimport { Content } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useContentList(parentId?:number, type?: Content['type']){\r\n  const { data } = useQuery([\"ContentList\", parentId, type] , async()=> (parentId!==undefined || type!==undefined)?await getContentList(parentId, type):undefined)\r\n  return data\r\n}\r\n\r\nlet feedInterval:NodeJS.Timer\r\n\r\nexport function useContentMutation(){\r\n  const queryClient = useQueryClient()\r\n  const create = useMutation(postContent, {\r\n    onSuccess: ()=>{\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const update = useMutation(patchContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n      queryClient.invalidateQueries(\"Content\")\r\n    }\r\n  })\r\n  const _delete = useMutation(deleteContent, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"ContentList\")\r\n    }\r\n  })\r\n  const _pullFeed = useMutation(async (key:QueryKey)=>{\r\n    console.log('pulling feed: ' + key)\r\n    const querykey = [\"ContentList\", ...key]\r\n    await queryClient.setQueryData(querykey, undefined)\r\n    await pullFeed()\r\n    return querykey\r\n  }, {\r\n    onSuccess: (key)=>{\r\n      queryClient.invalidateQueries(key)\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    if(feedInterval===undefined){\r\n      _pullFeed.mutateAsync([])\r\n      feedInterval = setInterval(()=>_pullFeed.mutateAsync([]), 20 * 60 * 1000)\r\n    }\r\n  }, [])\r\n\r\n  return {create:create.mutateAsync, update:update.mutateAsync, delete:_delete.mutateAsync, pullFeed:_pullFeed.mutateAsync}\r\n}","import React from \"react\";\r\nimport { FlatList, TouchableOpacity, StyleSheet, I18nManager, Platform, Image } from \"react-native\";\r\nimport { View, Text } from '@blacktokki/core';\r\nimport { List } from \"react-native-paper\";\r\n\r\nconst EventTime = ({ time: { content, style: timeStyle } = {}, style }:any) => {\r\n  return (\r\n    <View style={[styles.timeContainer, style]}>\r\n      <Text style={[styles.time, timeStyle]}>{content}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst EventIcon = ({ icon: OriginalIcon = {}, iconStyle, lineStyle }:any) => {\r\n  // Determines whether we are trying to render a custom icon component, or use the default\r\n  const iconIsComponent = typeof OriginalIcon === \"function\";\r\n  let iconToBeRendered = iconIsComponent ? (\r\n    <OriginalIcon styles={[styles.icon, iconStyle]} />\r\n  ) : (<List.Icon\r\n      icon={OriginalIcon.content}\r\n      style={[\r\n        styles.icon,\r\n        OriginalIcon.style ? OriginalIcon.style : null\r\n      ]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <View style={[styles.iconContainer, iconStyle]}>\r\n      {iconToBeRendered}\r\n      <View style={[styles.verticalLine, lineStyle]} />\r\n    </View>\r\n  );\r\n};\r\n\r\n/*\r\nEvent component, is the component in which you can render whatever the event is about,\r\ne.g. Title, description, or even render a custom template by sending a render-prop with whatsoever\r\ncontent you need.\r\n*/\r\nconst Event = ({ children, style }:any) => {\r\n  return <View style={[styles.eventContainer, style]}>{children}</View>;\r\n};\r\n\r\n/*\r\nRow component, is the component that combines all the sub-components (EventIcon, Event, EventTime) and\r\ngets each 'event' as an argument of type object\r\n*/\r\nconst Row = ({\r\n  event = {},\r\n  eventStyle,\r\n  timeContainerStyle,\r\n  iconContainerStyle,\r\n  lineStyle,\r\n  contentContainerStyle\r\n}: any) => {\r\n  const {\r\n    title: OriginalTitle = {},\r\n    description: OriginalDescription = {},\r\n    imageUrl,\r\n    time,\r\n    icon,\r\n    pressAction\r\n  } = event;\r\n\r\n  // Determines whether or not the Row is clickable, and acts accordingly\r\n  const RowComp:React.ComponentType<any> = pressAction ? TouchableOpacity : View\r\n\r\n  // Determines whether the title is just a text and its style, or a render-prop function, and acts accrodingly\r\n  const titleIsComponent = OriginalTitle && typeof OriginalTitle === \"function\";\r\n  const title = titleIsComponent ? (\r\n    <OriginalTitle styles={styles.title} />\r\n  ) : (\r\n      <Text style={[styles.title, {fontSize:14}]}>\r\n        {OriginalTitle}\r\n      </Text>\r\n  );\r\n\r\n  // Determines whether the description is just a text and its style, or a render-prop function, and acts accrodingly\r\n  const descriptionIsComponent =\r\n    OriginalDescription && typeof OriginalDescription === \"function\";\r\n  const description = descriptionIsComponent ? (\r\n    <OriginalDescription styles={styles.description} />\r\n  ) : (\r\n    <View style={{flexDirection:'row'}}>\r\n      {imageUrl?<Image source={{uri:imageUrl}} resizeMode=\"cover\" style={{ width:'33%', maxWidth:150, minHeight:120, borderWidth:1}}/>:undefined}\r\n      <Text style={[styles.description, {fontSize:12}]}>\r\n        {OriginalDescription}\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <RowComp style={[styles.row, eventStyle]} onPress={pressAction}>\r\n      <EventTime time={time} style={timeContainerStyle} />\r\n      <EventIcon\r\n        icon={icon}\r\n        iconStyle={iconContainerStyle}\r\n        lineStyle={lineStyle}\r\n      />\r\n      <Event style={contentContainerStyle}>\r\n        {title}\r\n        {description}\r\n      </Event>\r\n    </RowComp>\r\n  );\r\n};\r\n\r\nexport default ({\r\n  data = [], // The actual event's array, array of objects, each object represents a single event\r\n  eventStyle = {}, // Each event's whole row's style\r\n  timeContainerStyle = {}, // The style object of the container that holds the time\r\n  iconContainerStyle = {}, // The style object of the container that holds the icon\r\n  lineStyle = {}, // The vertical line's style object\r\n  contentContainerStyle = {}, // The style object of the container that holds the content i.e. title and description\r\n  onEndReachedThreshold,\r\n  onEndReached,\r\n  TimelineFooter,\r\n  TimelineHeader,\r\n  ...rest\r\n}: any) => {\r\n  const events = (\r\n    <FlatList\r\n      data={data}\r\n      renderItem={({ item }) => (\r\n        <Row\r\n          event={item}\r\n          eventStyle={eventStyle}\r\n          timeContainerStyle={timeContainerStyle}\r\n          iconContainerStyle={iconContainerStyle}\r\n          lineStyle={lineStyle}\r\n          contentContainerStyle={contentContainerStyle}\r\n        />\r\n      )}\r\n      keyExtractor={(_, ndx) => ndx.toString()}\r\n      onEndReached={onEndReached}\r\n      onEndReachedThreshold={onEndReachedThreshold || 0}\r\n      ListFooterComponent={TimelineFooter}\r\n      ListHeaderComponent={TimelineHeader}\r\n      {...rest}\r\n    />\r\n  );\r\n\r\n  return <View style={styles.container}>{events}</View>;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      width: \"100%\"\r\n    },\r\n    row: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"flex-start\",\r\n      marginVertical: 5\r\n    },\r\n    timeContainer: {\r\n      flexBasis: \"15%\",\r\n      paddingTop:10,\r\n    },\r\n    time: {\r\n      fontSize: 12,\r\n      color: \"#aaa\",\r\n      fontStyle: \"italic\",\r\n      textAlign: 'center'\r\n    },\r\n    iconContainer: {\r\n      flexBasis: \"5%\",\r\n      alignItems: \"center\",\r\n      alignSelf: \"stretch\",\r\n      marginHorizontal: \"5%\"\r\n    },\r\n    verticalLine: {\r\n      flex: 1,\r\n      width: 1,\r\n      backgroundColor: \"#ededed\"\r\n    },\r\n    eventContainer: {\r\n      flexBasis: \"65%\",\r\n      flexGrow:1,\r\n      alignItems: \"flex-start\",\r\n      padding: 16,\r\n      borderRadius: 15,\r\n      shadowOffset: { width: I18nManager.isRTL ? 8 : -8, height: 0 },\r\n      shadowColor: \"#888\",\r\n      shadowOpacity: 0.2,\r\n      marginBottom: 10,\r\n      borderTopLeftRadius: 0,\r\n    },\r\n    icon: {\r\n      textAlign: \"center\",\r\n      width: 20,\r\n      height: 20,\r\n      backgroundColor: \"#6F98FA\",\r\n      paddingTop: Platform.OS === \"ios\" ? 2.5 : 5,\r\n      borderRadius: 10,\r\n      fontSize: 9,\r\n      overflow: \"hidden\",\r\n      borderWidth: 3,\r\n      borderColor: '#e0e9ff'\r\n    },\r\n    title: {\r\n      fontSize: 12,\r\n      fontWeight: \"bold\",\r\n      textAlign: \"left\",\r\n      marginBottom: 5,\r\n      lineHeight: 20\r\n    },\r\n    description: {\r\n      textAlign: \"left\",\r\n      fontSize: 11,\r\n      lineHeight: 18,\r\n      paddingBottom: 10,\r\n    }\r\n  });","import * as React from 'react';\r\nimport { Content } from '../types';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Colors, Text, useColorScheme, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\nimport { ScrollView, TouchableOpacity } from 'react-native';\r\nimport TimeLine from './TimeLine';\r\nimport { Card } from 'react-native-paper';\r\n\r\nconst regexForStripHTML = /<\\/?[^>]*>/gi;\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\nconst ContentList = ({ parentContent } : { parentContent:Content }) => {\r\n  const isTimeline = parentContent.type === 'TIMELINE'\r\n  const feedContentData = useContentList(undefined, isTimeline?\"FEEDCONTENT\":undefined)\r\n  const childrenData = useContentList(parentContent.id)\r\n  const childIds = childrenData? new Set(childrenData.map(v=>v.id)):undefined\r\n  const data = (isTimeline? feedContentData?.filter(v=>childIds?.has(v.parentId)) :(childrenData?[...childrenData]:undefined))?.reverse()\r\n\r\n  const window  = useResizeContext()\r\n  const theme = useColorScheme()\r\n  const cardPadding = window===\"landscape\"?20:0\r\n  const cardMaxWidth = window===\"landscape\"? 230:205\r\n  return data && (\r\n    parentContent.type!=='LIBRARY'?//<></>:\r\n    <TimeLine data={data.map(v=>({...v, time:{content:updatedFormat(v.updated)}, pressAction: ()=>navigate('EditorScreen', {id:v.id})}))}/>:\r\n    <ScrollView style={{backgroundColor:Colors[theme].background}} contentContainerStyle={{flexDirection:'row', justifyContent:'center'}}>\r\n      <View style={{flexBasis:'100%', maxWidth:1280, flexWrap:'wrap', flexDirection:'row', paddingRight:cardPadding}}>\r\n      {[...data]?.map((item, index)=>{\r\n          if (item === null){\r\n            return <View key={index} style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n          }\r\n          const content = item.description?.replaceAll(/\\n/g, \"\").replaceAll(/<hr\\s*[\\/]?>\\n/gi, '').replaceAll(/&nbsp;/gi, ' ').replaceAll(/<br\\s*[\\/]?>/gi, '\\r\\n').replaceAll(regexForStripHTML, '')\r\n          const onPress = ()=>navigate('EditorScreen', {id:item.id})\r\n          return <TouchableOpacity key={index} style={{flexBasis:window==='landscape'?'33%':'50%', padding:cardPadding, paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n              <Card onPress={onPress} style={{aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}}>\r\n                <Card.Content>\r\n                <Text style={{fontSize:16, opacity: 0.4}}>{content}</Text>\r\n                </Card.Content>\r\n              </Card>\r\n              <View style={{flexDirection:'row', marginTop:10, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n                <Text style={{fontSize:18}}>{item.title}</Text>\r\n                <Text style={{fontSize:14, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n                  \r\n              </View>\r\n          </TouchableOpacity>\r\n      })}\r\n      </View>\r\n      {window === 'landscape' && <View style={{flexBasis:'0%', flexGrow:1, maxWidth:240}}></View>}\r\n    </ScrollView>)\r\n};\r\n\r\nexport default ContentList;","import { useQuery } from \"react-query\";\r\nimport { previewFeed, previewScrap } from \"../services/feedynote\";\r\nimport { ScrapPreview, FeedPreview } from \"../types\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nlet _cache:Record<string, { title:string, description:string }> = {}\r\n\r\n\r\nexport const renderDescription = (preview:{title:string, url:string, description?:string, imageUrl?:string})=>{\r\n  return `<div class=\"scrap mceNonEditable\" style=\"border:1px solid #ddd; padding:10px; display:flex; align-items:center;\">\r\n  ${preview.imageUrl!==undefined?`<img src=\"${preview.imageUrl}\" alt=\"preview\" style=\"width:80px; height:80px; margin-right:10px;\">`:''}\r\n  <div style=\"word-break:break-word;\">\r\n    <strong>${preview.title}</strong><br>\r\n    <a href=\"${preview.url}\" target=\"_blank\">${preview.url}</a>\r\n    ${preview.description ? `<p>${preview.description}</p>`: \"\"}\r\n  </div>\r\n</div>`\r\n}\r\n\r\nconst callback = async(type:(ScrapPreview|FeedPreview)['type'], query:string)=> {\r\n  try {\r\n    new URL(query)\r\n  }\r\n  catch (_){\r\n    return undefined;\r\n  }\r\n  if (_cache[query]){\r\n    return _cache[query]\r\n  }\r\n  else{\r\n    const preview = type==='FEED'?await previewFeed({query}):await previewScrap({query})\r\n    if (preview && preview.title !==null){\r\n      const description =  renderDescription({...preview, url:query});\r\n        const _preview = {title:preview.title, description}\r\n        _cache[query] = _preview\r\n        return _preview;\r\n    }\r\n    else {\r\n      return undefined\r\n    }\r\n  }\r\n}\r\n\r\nexport default <T extends ScrapPreview|FeedPreview>(type:T['type'], query?:string)=>{\r\n  const [_query, setQuery] = useState<string>()\r\n  const { data } = useQuery([\"Preview\", type, _query] , async()=> _query?await callback(type, _query):undefined)\r\n\r\n  useEffect(()=>{\r\n    const timeout = setTimeout(()=>setQuery(query), 320)\r\n    return () => clearTimeout(timeout)\r\n  }, [query])\r\n  return data\r\n};;\r\n","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { Linking, ScrollView, View } from 'react-native';\r\nimport { Editor, EditorHtml } from '@blacktokki/editor';\r\nimport  { CommonButton, View as ThemedView, useColorScheme, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport useContent from '../../hooks/useContent';\r\nimport usePreview, { renderDescription } from '../../hooks/usePreview';\r\n\r\n\r\nconst Scrap = React.memo((props:{url:string, replacer:(template:string)=>void})=>{\r\n  const preview = usePreview('SCRAP', props.url)\r\n  return preview?.description && <View style={{height:155, flexDirection:'row'}}>\r\n    <EditorHtml content={preview.description}/>\r\n    <CommonButton title={'✨'} onPress={()=>props.replacer(preview.description)} style={{height:155, paddingTop:65}}/>\r\n  </View>\r\n})\r\n\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n  let str = description;\r\n  let index = 0;\r\n  let match;\r\n  let arr = []\r\n  while ((match = new RegExp(re).exec(str)) != null) {\r\n    arr.push({index, str:str.substring(0, match.index)})\r\n    const end = match.index + match[0].length\r\n    arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n    index += end;\r\n    str = str.substring(end)\r\n  }\r\n  arr.push({index, str})\r\n  return arr\r\n}\r\n\r\n\r\nconst _extractUrl = (description:string)=>{\r\n  const arr:{pos:number, url:string}[] = []\r\n  const re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n  _tmp(/(<a .*?href=\"(.*?)\".*?>(.*)<\\/a>|<img .*?src=\"(.*?)\".*?\\/>)/, description).forEach((v, i)=>{\r\n    if (i % 2 == 1){\r\n      return;\r\n    }\r\n    _tmp(re, v.str).forEach((v2, i2)=>{\r\n      if( i2 % 2 == 1){\r\n        arr.push({pos:v.index + v2.index, url:v2.str})\r\n      }\r\n    })\r\n  })\r\n  return arr\r\n}\r\n\r\nconst renderScrap = (setDescription:(d:string)=>void, description?:string) => {\r\n  if (description === undefined){\r\n    return undefined\r\n  }\r\n  return _extractUrl(description).map((v, k)=><Scrap key={k} url={v.url} replacer={(template)=>{\r\n    setDescription(description.substring(0, v.pos) + template + description.substring(v.pos + v.url.length))\r\n  }}/>)\r\n}\r\n\r\n\r\nexport default function EditorScreen({ navigation, route }: StackScreenProps<any, 'Editor'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId!==undefined?parseInt(route?.params?.parentId):0\r\n  } as { created:true, parentId:number } | { created:false, id:number }\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const content = useContent(params.created?undefined:params.id)\r\n  const list = useContentList(content?.parentId)\r\n\r\n  const contentMutation = useContentMutation()\r\n  const [input, setInput] = useState<string>()\r\n  const [description, setDescription] = useState<string>()\r\n  const [type, setType] = useState<Content['type']>()\r\n  const [editable, setEditable] = useState(false)\r\n  const onSave = ()=>{\r\n    if (!auth.user || (content?.input == input && content?.description == description) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    if (params.created){\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:params.parentId, type, order: (list?.length || 0) + 1, input:input || '', title:input || '', description}).then(v=>{\r\n            navigate(\"EditorScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, input:input || '', title:input || '', description}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'NOTE': lang('New Note')\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}\r\n  useLayoutEffect(()=>{\r\n    console.log(content?.id)\r\n    if(params.created){\r\n      const _type = 'NOTE'\r\n      setEditable(false)\r\n      setInput(defaultTitle[_type])\r\n      setDescription('')\r\n      setType(_type)\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setInput(content.input)\r\n      setDescription(content.description)\r\n      setType(content.type)\r\n    }\r\n  }, [content?.id])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else if (content){\r\n        navigation.setOptions({\r\n            title: content.title,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content.type === 'FEEDCONTENT'?\r\n                <CommonButton title={'🌐'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>Linking.openURL(content.input)}/>:\r\n                <>\r\n                  <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>\r\n                  <CommonButton title={'🗑️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>\r\n                </>}\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, editable]);\r\n\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n  }\r\n  const editableExact = (params.created || editable)\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\"}}>\r\n    {editableExact && input!==undefined && <TextInput mode='outlined' value={input} onChangeText={setInput} style={{borderRadius:20, margin:1}}/>}\r\n    {type === 'NOTE' && <Editor theme={theme} active={editableExact} value={description || ''} setValue={editableExact?setDescription:()=>{}}/>}\r\n    {editableExact && <>\r\n      {renderScrap(setDescription, description)}\r\n      <CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>\r\n    </>}\r\n    <ScrollView style={{flex:editableExact?0:1}} contentContainerStyle={{flexGrow:1}}>\r\n      <EditorHtml content={content?.type==='FEEDCONTENT'?renderDescription({...content, url:content.input}): description || ''} onPress={content?.type==='FEEDCONTENT'?undefined:onEdit}/>\r\n    </ScrollView>\r\n    </ThemedView>\r\n}\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Colors, Text, useColorScheme, useLangContext, useResizeContext, View } from '@blacktokki/core';\r\nimport useContentList from '../hooks/useContentList';\r\nimport { Content } from '../types';\r\nimport MaterialCommunityIcon from 'react-native-paper/src/components/MaterialCommunityIcon';\r\nimport { I18nManager } from 'react-native';\r\n\r\n\r\ntype ContentSubGroupProps = {\r\n  timeline: Content\r\n}\r\n\r\ntype ContentGroupListProps = {\r\n  type: 'LIBRARY' | 'TIMELINE'\r\n}\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nconst ContentSubGroupList = (props:ContentSubGroupProps) => {\r\n  const theme = useColorScheme()\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const window = useResizeContext()\r\n  const data = useContentList(expanded?props.timeline.id:undefined);\r\n  const handlePress = () => setExpanded(!expanded);\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const Left = ({isExpanded}:{isExpanded:boolean}) => {\r\n    return <MaterialCommunityIcon\r\n        name={isExpanded ? 'chevron-down' : 'chevron-right'}\r\n        color={Colors[theme].text}\r\n        size={24}\r\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\r\n      />\r\n  }\r\n  return <View>\r\n      <List.Accordion\r\n        title={props.timeline.title}\r\n        expanded={expanded && data!==undefined}\r\n        style={{padding:itemPadding}}\r\n        onPress={()=>navigate('ContentListScreen', {id:props.timeline.id})}\r\n        left={(_props)=><List.Icon {..._props} icon={expanded?'chevron-down' : 'chevron-right'} />}\r\n        right={()=>undefined}\r\n      >\r\n        {data && data.map(v=><List.Item key={v.id} left={(_props)=><List.Icon {..._props} icon={\"rss\"} />} title={v.title} onPress={()=>navigate('ContentListScreen', {id:v.id})} style={{padding:itemPadding}} />)}\r\n      </List.Accordion>\r\n      <TouchableRipple style={{position:'absolute', justifyContent:'center', paddingLeft: 8 + itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2 }} onPress={handlePress}>\r\n          <Left isExpanded={expanded}/>\r\n      </TouchableRipple>\r\n    </View>\r\n}\r\n\r\nconst ContentGroupList = ( props : ContentGroupListProps) => {\r\n  const data = useContentList(0, props.type);\r\n  const { lang } = useLangContext()\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  return (\r\n    <List.Section>\r\n      <View style={{flexDirection:'row'}}>\r\n        <List.Subheader style={{flex:1}} selectable={false}>{lang(props.type==='LIBRARY'?\"Libraries\":\"Timelines\")}</List.Subheader>\r\n        <TouchableRipple onPress={()=>navigate('ContentListScreen', {type:props.type})}><List.Icon icon='plus' style={{margin:itemPadding}}/></TouchableRipple>\r\n      </View>\r\n        {data && data.map(v=>props.type == 'TIMELINE'?\r\n            <ContentSubGroupList key={v.id} timeline={v}/>:\r\n            <List.Item key={v.id} left={(_props)=><List.Icon {..._props} icon={\"library\"} />} title={v.title} onPress={()=>navigate('ContentListScreen', {id:v.id})} style={{padding:itemPadding }} />\r\n        )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupList;","import React, {} from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation/build/typescript/screens/main/HomeScreen/HomeSection';\r\nimport ContentGroupList from '../../components/ContentGroupList';\r\nimport { List } from 'react-native-paper';\r\n\r\nconst ContentTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupList type={'TIMELINE'} />\r\n      <ContentGroupList type={'LIBRARY'} />\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const color = Colors[theme].text\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Contents'), component:ContentTabView, icon:<List.Icon icon={'table-of-contents'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  return <HomeSection tabViews={tabViews} title={lang('home')}>\r\n    <View style={{flexGrow:1, width:'80%', marginTop:72}}>\r\n      <Text style={{fontSize:32, color}}>feedynote</Text>\r\n      <View style={{backgroundColor:Colors.borderColor, height:1, width:'100%'}}/>\r\n      {/* <Text style={{fontSize:20, color:'gray'}}>Welcome! This is a messenger for teams.</Text>*/}\r\n      <View style={{height:24}}/>\r\n      <ConfigSections/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import ContentListScreen from \"./main/ContentListScreen\";\r\nimport EditorScreen from \"./main/EditorScreen\";\r\nimport HomeScreen from \"./main/HomeScreen\";\r\n\r\nexport const main = {\r\n    HomeScreen:{\r\n      title:'home',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    EditorScreen: {\r\n      path: 'editor',\r\n      title: 'editor',\r\n      component: EditorScreen\r\n    },\r\n    ContentListScreen: {\r\n      path: 'contents',\r\n      title: 'contents',\r\n      component: ContentListScreen\r\n    }\r\n  };\r\n  ","import { useQuery } from \"react-query\";\r\nimport { getContentOne } from \"../services/feedynote\";\r\n\r\nexport default function useContent(id?:number){\r\n  const { data } = useQuery([\"Content\", id] , async()=> (id?await getContentOne(id):undefined))\r\n  return data\r\n}","import { StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView,  View } from 'react-native';\r\nimport  { CommonButton, Text, View as ThemedView, useLangContext } from '@blacktokki/core'\r\n\r\nimport React, { useLayoutEffect,useState } from 'react';\r\nimport useContentList, { useContentMutation } from '../../hooks/useContentList';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport { navigate } from '@blacktokki/navigation';\r\nimport { Content } from '../../types';\r\nimport ContentList from '../../components/ContentList';\r\nimport usePreview from '../../hooks/usePreview';\r\n\r\nexport default function ContentListScreen({ navigation, route }: StackScreenProps<any, 'ContentList'>) {\r\n  const params = {\r\n    created: route?.params?.id === undefined,\r\n    id: parseInt(route?.params?.id),\r\n    parentId: route?.params?.parentId?parseInt(route.params.parentId):undefined,\r\n    type: route?.params?.type\r\n  } as { created:true, type:'LIBRARY'|'TIMELINE' } | {created:true, type: 'FEED', parentId?:number} | { created:false, id:number }\r\n  const { lang } = useLangContext()\r\n  const { auth } = useAuthContext()\r\n\r\n  const rootlist = useContentList(0);\r\n  const feedlist = useContentList(undefined, \"FEED\")\r\n  const list = rootlist!==undefined && feedlist!==undefined ? [...rootlist, ...feedlist]: undefined\r\n  const contentMutation = useContentMutation()\r\n  const content = params.created?undefined:list?.find(v=>v.id===params.id)\r\n  const [input, setInput] = useState<string>()\r\n  const [type, setType] = useState<Content['type']>()\r\n  const [editable, setEditable] = useState(false)\r\n  const preview = usePreview('FEED', params.created && params.type==='FEED'?input:undefined)\r\n  const back = ()=>{\r\n    if(navigation.canGoBack())\r\n        navigation.goBack()\r\n      else{\r\n        navigation.navigate('HomeScreen', {tab:1})\r\n      }\r\n  }\r\n  if (params.created && params.type === 'FEED' && params.parentId ===undefined){\r\n    back()\r\n  }\r\n  const onSave = ()=>{\r\n    if (!auth.user || (content?.input == input) || type===undefined){\r\n        setEditable(false)\r\n        return;\r\n    }\r\n    let promise\r\n    const title = preview?.title?preview.title:input || ''\r\n    if (params.created){\r\n        const typedList = list?.filter(v=>v.type == params.type)\r\n        promise = contentMutation.create({userId:auth.user.id, parentId:params.type==='FEED'?params.parentId as number:0, type, order: (typedList?.length || 0) + 1, input:input || '', title}).then(v=>{\r\n            navigate(\"ContentListScreen\", {id:v})\r\n        })\r\n    }\r\n    else if (content!==undefined){\r\n        promise = contentMutation.update({id: content.id, updated: {...content, type, input:input || '', title}})\r\n    }\r\n    promise?.then(()=>{\r\n        setEditable(false)\r\n    })\r\n  }\r\n\r\n  const defaultTitle = {\r\n    'LIBRARY': lang('New Library'),\r\n    'TIMELINE': lang('New Timelines'),\r\n    'FEED': \"https://\"\r\n  } as Record<Content['type'], string>\r\n\r\n  const onEdit = ()=>{setEditable(true)}\r\n  useLayoutEffect(()=>{\r\n    if(params.created){\r\n      setEditable(false)\r\n      setInput(defaultTitle[params.type])\r\n      setType(params.type)\r\n    }\r\n    else if (content){\r\n      setEditable(false)\r\n      setInput(content.input)\r\n      setType(type)\r\n    }\r\n  }, [content])\r\n\r\n  useLayoutEffect(() => {\r\n    if (params.created){\r\n      navigation.setOptions({\r\n        headerShown:false,\r\n      })\r\n    }\r\n    else if (content){\r\n        navigation.setOptions({\r\n            title: content.title,\r\n            headerRight: () => <View style={{flexDirection: 'row'}}>\r\n              {content.type==='LIBRARY' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('EditorScreen', {parentId:content.id})}/>}\r\n              {content.type==='TIMELINE' && <CommonButton title={'⊕'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>navigate('ContentListScreen', {type:\"FEED\", parentId:content.id})}/>}\r\n              {content.type!=='LIBRARY' && <CommonButton title={'🔄'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>contentMutation.pullFeed(content.type===\"TIMELINE\"?[undefined, 'FEEDCONTENT']:[content.id, undefined])}/>}\r\n              <CommonButton title={'✏️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={onEdit}/>\r\n              <CommonButton title={'🗑️'} style={{height:40, paddingTop:8, marginRight:10}} onPress={()=>contentMutation.delete(content.id).then(v=>back())}/>\r\n            </View>,\r\n            headerShown: !editable\r\n          });\r\n      }\r\n  }, [navigation, content, editable]);\r\n\r\n  const editableExact = (params.created || editable)\r\n\r\n  return <ThemedView style={{width:\"100%\", height:\"100%\", backgroundColor:'transparent'}}>\r\n    {editableExact?\r\n      <>\r\n        {input!==undefined && <TextInput mode='outlined' value={input} onChangeText={setInput} style={{borderRadius:20, margin:1}}/>}\r\n        {preview?.description &&<Text>{preview.description}</Text>}\r\n        {(type!=='FEED' || preview!==undefined) &&<CommonButton title={lang('save')} onPress={onSave} style={{height:65, paddingVertical:20}}/>}\r\n        <CommonButton title={lang('cancel')} onPress={params.created?back:()=>setEditable(false)} style={{height:65, paddingVertical:20}}/>\r\n      </>:\r\n      <ScrollView style={{flex:1}} contentContainerStyle={{flexGrow:1}}>\r\n        {content && <ContentList parentContent={content}/>}\r\n      </ScrollView>}\r\n    </ThemedView>\r\n}\r\n","import React from 'react';\r\nimport * as Linking from 'expo-linking';\r\nimport { login, Navigation } from \"@blacktokki/navigation\"\r\nimport { NavigationConfig } from '@blacktokki/navigation/build/typescript/types';\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme } from '@blacktokki/core';\r\nimport { Icon, List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\n\r\nconst config:NavigationConfig = {\r\n    main,\r\n    login,\r\n    prefixes: [ Linking.makeUrl('/') ],\r\n    rootPath: 'feedynote',\r\n    documentTitle: {\r\n        formatter: ()=>{\r\n            return 'feedynote'\r\n        }\r\n    },\r\n    rootScreen: {\r\n        main: 'HomeScreen',\r\n        login: 'LoginScreen'\r\n    },\r\n    headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n    headerRight: <></>,\r\n    modals: [],\r\n    drawer: <Drawer/>\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    return <PaperProvider theme={theme}>\r\n        <Navigation config={config}/>\r\n    </PaperProvider>\r\n}","import React from 'react';\r\nimport ContentGroupList from '../components/ContentGroupList';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <ScrollView style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('HomeScreen')} />\r\n        <ContentGroupList type={'TIMELINE'}/>\r\n        <ContentGroupList type={'LIBRARY'}/>\r\n    </ScrollView>\r\n}","editorConfig = {\r\n    plugins: 'image link charmap advlist lists paste hr noneditable', //autoresize textcolor imagetools,\r\n    toolbar: 'fontsizeselect | bold italic underline strikethrough | undo redo | alignleft aligncenter alignright | bullist numlist | hr link', // charmap removeformat\r\n    setup: (editor)=>{\r\n    }\r\n}\r\nif (typeof module !== 'undefined') {\r\n    module.exports = editorConfig\r\n}\r\n"],"names":["feedInterval","getContentOne","_ref","_asyncToGenerator","id","axios","get","data","_x","apply","arguments","getContentList","_ref2","parentId","type","page","size","undefined","parentIdParam","typeParam","pageParam","value","_x2","_x3","_x4","postContent","_ref3","post","_x5","patchContent","_ref5","_ref4","updated","patch","ids","_x6","deleteContent","_ref6","delete","_x7","pullFeed","_ref7","previewScrap","_ref8","preview","_objectSpread","query","_x8","previewFeed","_ref9","_x9","useContentList","useQuery","useContentMutation","queryClient","useQueryClient","create","useMutation","onSuccess","invalidateQueries","update","_delete","_pullFeed","key","console","log","querykey","concat","_toConsumableArray","setQueryData","useEffect","mutateAsync","setInterval","EventTime","_ref$time","time","content","timeStyle","style","_jsx","View","styles","timeContainer","children","Text","EventIcon","_ref2$icon","icon","OriginalIcon","iconStyle","lineStyle","iconToBeRendered","List","_jsxs","iconContainer","verticalLine","Event","eventContainer","Row","_ref4$event","event","eventStyle","timeContainerStyle","iconContainerStyle","contentContainerStyle","_event$title","title","OriginalTitle","_event$description","description","OriginalDescription","imageUrl","pressAction","RowComp","TouchableOpacity","fontSize","flexDirection","Image","source","uri","resizeMode","width","maxWidth","minHeight","borderWidth","row","onPress","_ref5$data","_ref5$eventStyle","_ref5$timeContainerSt","_ref5$iconContainerSt","_ref5$lineStyle","_ref5$contentContaine","onEndReachedThreshold","onEndReached","TimelineFooter","TimelineHeader","rest","_objectWithoutProperties","_excluded","events","FlatList","renderItem","item","keyExtractor","_","ndx","toString","ListFooterComponent","ListHeaderComponent","container","StyleSheet","flex","alignItems","marginVertical","flexBasis","paddingTop","color","fontStyle","textAlign","alignSelf","marginHorizontal","backgroundColor","flexGrow","padding","borderRadius","shadowOffset","I18nManager","isRTL","height","shadowColor","shadowOpacity","marginBottom","borderTopLeftRadius","Platform","OS","overflow","borderColor","fontWeight","lineHeight","paddingBottom","regexForStripHTML","updatedOffset","Date","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","slice","date","parentContent","isTimeline","feedContentData","childrenData","childIds","Set","map","v","filter","has","reverse","window","useResizeContext","theme","useColorScheme","cardPadding","cardMaxWidth","TimeLine","navigate","ScrollView","Colors","background","justifyContent","flexWrap","paddingRight","index","_item$description","replaceAll","minWidth","Card","aspectRatio","Math","sqrt","Content","opacity","marginTop","_cache","renderDescription","url","callback","URL","_preview","_useState","useState","_useState2","_slicedToArray","_query","setQuery","timeout","setTimeout","clearTimeout","Scrap","React","props","usePreview","EditorHtml","CommonButton","replacer","_tmp","re","match","str","arr","RegExp","exec","push","substring","end","length","renderScrap","setDescription","forEach","i","v2","i2","pos","_extractUrl","k","template","getItemPadding","isLandscape","ContentSubGroupList","_React$useState","_React$useState2","expanded","setExpanded","timeline","itemPadding","left","_props","right","TouchableRipple","position","paddingLeft","isExpanded","MaterialCommunityIcon","name","text","direction","getConstants","lang","useLangContext","selectable","margin","ContentTabView","ContentGroupList","ConfigTabView","ConfigSections","main","HomeScreen","component","navigation","route","tabViews","headerRight","_Fragment","HomeSection","path","EditorScreen","_route$params","_route$params2","_route$params3","_route$params4","params","created","parseInt","auth","useAuthContext","list","contentMutation","input","setInput","_useState3","_useState4","_useState5","_useState6","setType","_useState7","_useState8","editable","setEditable","defaultTitle","onEdit","useLayoutEffect","_type","setOptions","headerShown","marginRight","Linking","openURL","then","back","canGoBack","goBack","tab","editableExact","ThemedView","TextInput","mode","onChangeText","Editor","active","setValue","_promise","promise","user","userId","order","paddingVertical","ContentListScreen","rootlist","feedlist","find","typedList","ContentList","config","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","top","modals","drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","PaperProvider","Navigation","editorConfig","plugins","toolbar","setup","editor","module","exports"],"sourceRoot":""}