{"version":3,"file":"static/js/573.a0ceab38.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/components/HeaderSelectBar.tsx","src/components/SearchBar.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/RecentPageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/modals/DatePickerModal.tsx","src/screens/main/DateHeaderSection.tsx","src/screens/main/TimeLineScreen.tsx","src/screens/index.ts","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, type?: Content['type'])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = type !== undefined?`&type=${type}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`) ).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nconst _tmp = (re:RegExp, description :string)=>{\r\n    let str = description;\r\n    let index = 0;\r\n    let match;\r\n    let arr = []\r\n    while ((match = new RegExp(re).exec(str)) != null) {\r\n      arr.push({index, str:str.substring(0, match.index)})\r\n      const end = match.index + match[0].length\r\n      arr.push({index:index + match.index, str:str.substring(match.index, end)})\r\n      index += end;\r\n      str = str.substring(end)\r\n    }\r\n    arr.push({index, str})\r\n    return arr\r\n  }\r\n\r\nconst re = /https?:\\/\\/(?:www\\\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/gi\r\n\r\nconst toUrls = (str:string)=>{\r\n    return _tmp(re, str).filter((v, i)=>i % 2 == 1).map(v=>v.str)\r\n}\r\n\r\nexport const previewScrap = async (preview: {query:string}) => {\r\n    const data:Link[] = []\r\n    for (const query of toUrls(preview.query)){\r\n        data.push((await axios.get(`/api/v1/preview/autocomplete?query=${query}`)).data)\r\n    }\r\n    return data\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getNoteContents = async (): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList()).filter(v=>(v.type==='NOTE'|| v.type==='BOOKMARK'))\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      await (id?patchContent({id, updated:content}):postContent(content));\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: getNoteContents,\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const contents = await getNoteContents();\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '' };\r\n    },\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        const contents = await getNoteContents();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        const contents = await getNoteContents();\r\n        return contents.find(v=>v.title === lastPage)\r\n      } \r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: async (data) => {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    \r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const contents = await getNoteContents();\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nexport const TimeLineButton = () => {\r\n  const { lang } = useLangContext()\r\n  return <List.Item left={_props=><List.Icon {..._props} icon={\"clock\"} />} title={lang(\"TimeLine\")} onPress={()=>navigate('TimeLine')} />\r\n}\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'LAST'} | {type:'NOTE', noteCount:number}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?.filter(v=>v.description).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() ):pages.data)\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return (\r\n    <List.Section>\r\n        {data && (\r\n         props.type === 'LAST'\r\n         ?(lastPage && (data?.find(v=>v.id===lastPage.id) === undefined) && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n         />)\r\n         :props.type === 'NOTE'\r\n         ?<>{data.slice(0, props.noteCount).map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n          title={v.title} \r\n          onPress={()=>noteOnPress(v.title)}\r\n          onLongPress={()=>noteOnLongPress(v.title)}\r\n          style={{padding:itemPadding }} \r\n        />)}\r\n        {((data?.length || 0) > props.noteCount) && <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>navigate(\"RecentPages\")} style={{padding:itemPadding}}  />}\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import { TouchableOpacity, View, FlatList, StyleSheet } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { createCommonStyles } from \"../styles\";\r\nimport { Text, useColorScheme } from \"@blacktokki/core\";\r\n\r\nexport interface NodeData {\r\n    path: string;\r\n    title: string;\r\n    level: number;\r\n    header: string;\r\n    description: string;\r\n  }\r\n  \r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n  \r\n    const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n  \r\n    const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n    const headerStack: { level: number; title: string }[] = [];\r\n  \r\n    let current: NodeData | null = null;\r\n    let cursor = doc.body.firstChild;\r\n  \r\n    const flushCurrent = () => {\r\n      if (current) {\r\n        result.push(current);\r\n        current = null;\r\n      }\r\n    };\r\n  \r\n    while (cursor) {\r\n      if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n        const el = cursor as HTMLElement;\r\n        if (headings.includes(el.tagName)) {\r\n          flushCurrent();\r\n  \r\n          const level = parseInt(el.tagName.substring(1));\r\n          const title = el.textContent?.trim() || \"\";\r\n  \r\n          // 헤더 스택 업데이트\r\n          while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n            headerStack.pop();\r\n          }\r\n          const parentTitle = (headerStack.length>0?headerStack[headerStack.length -1].title:'')\r\n          headerStack.push({ level, title });\r\n  \r\n          const path = headerStack.map(h => h.title).join(\" > \");\r\n  \r\n          current = {\r\n            path,\r\n            title,\r\n            level,\r\n            header: el.outerHTML,\r\n            description: \"\",\r\n          };\r\n        } else if (current) {\r\n          current.description += el.outerHTML;\r\n        } else {\r\n          // 헤더 밖의 내용 처리\r\n          result[0].description += el.outerHTML;\r\n        }\r\n      } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n        current.description += cursor.textContent || \"\";\r\n      }\r\n  \r\n      cursor = cursor.nextSibling;\r\n    }\r\n  \r\n    flushCurrent();\r\n    return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props:{root:string, path:string, onPress:(item:NodeData)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.onPress(item)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?[commonStyles.title, {marginBottom:5, marginTop:3}]:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n})","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useLastPage, useNotePages, useRecentPages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { NodeData, parseHtmlToSections } from './HeaderSelectBar';\r\n\r\nlet _searchText = ''\r\n\r\ntype ContentAndSection = Content & {\r\n  section?: NodeData\r\n}\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void,renderExtra?:(input:string, isFind:boolean)=>React.ReactNode, useRandom?:boolean;}> = ({handlePress, renderExtra, useRandom=true}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const route = useRoute<any>()\r\n  const currentTitle = route.params?.title\r\n\r\n  const { data: pages = [] } = useNotePages();\r\n  const { data:lastPage } = useLastPage();\r\n  const { data:recentPages = [] } = useRecentPages()\r\n  const defaultPages = ([...(lastPage?[lastPage ]:[]), ...recentPages ]);\r\n  const randomPages = pages.filter(v=>v.description)\r\n  const lowerCaseSearch = searchText.toLowerCase()\r\n  const filteredPages:ContentAndSection[] = searchText.length > 0\r\n    ? [...pages.filter(page => \r\n        page.title.toLowerCase().startsWith(lowerCaseSearch)\r\n      ), ...pages.flatMap(v=>parseHtmlToSections(v.description || '').filter(v2=>v2.title.toLowerCase().startsWith(lowerCaseSearch)).map(v2=>({...v, section:v2})))].slice(0, 10)\r\n    : [...defaultPages, ...pages.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime()).filter(v=>defaultPages.find(v2=>v2.title===v.title)===undefined)].filter(v=>v.description && v.title !== currentTitle).slice(0, 10)\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?:string) => {\r\n    handlePress?handlePress(title):navigation.navigate('NotePage', { title, section });\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(()=>PanResponder.create({\r\n      onPanResponderStart: handleSearch,\r\n    }).panHandlers\r\n  ,[searchText])\r\n\r\n  const pagePressHandlers = useCallback((item:ContentAndSection)=>{\r\n    return PanResponder.create({\r\n      onPanResponderStart:() => handlePagePress(item.title, item.section?.title)\r\n    }).panHandlers\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={()=>setShowResults(true)}\r\n          onBlur={()=>setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={renderExtra?\"search-plus\":\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && randomPages && <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={()=>{\r\n            const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n            const sections = parseHtmlToSections(page.description || '')\r\n            handlePagePress(page.title, sections[Math.floor(Math.random() * sections.length)].title)\r\n          }}\r\n        >\r\n          <Icon name={\"random\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>}\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <FlatList\r\n              data={filteredPages}\r\n              keyExtractor={(item) => JSON.stringify([item.title, item.section?.title])}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.resultItem}\r\n                  {...pagePressHandlers(item)}\r\n                >\r\n                  <Text style={[commonStyles.text, styles.resultText]}>{item.section?item.section.title:item.title}</Text>\r\n                  {item.section && <Text style={[commonStyles.text, styles.resultText, {fontSize:12}]}>{item.title}</Text>}\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n            />\r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              {...searchHandlers}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n          {renderExtra?.(searchText, filteredPages.length > 0)}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { FlatList, ScrollView, StyleSheet, TextInput, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, Text, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection, { TimeLineButton } from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar } from '../../../components/SearchBar';\r\n\r\n\r\nconst OpenedEditorsTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <TimeLineButton/>\r\n    </ScrollView>\r\n}\r\n\r\nconst NoteTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <ContentGroupSection type={'NOTE'} noteCount={15}/>\r\n    </ScrollView>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n    <ConfigSections/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Open Pages'), component:OpenedEditorsTabView, icon:<List.Icon icon={'file-document'}/>, headerRight:()=><></>},\r\n    {title: lang('Notes'), component:NoteTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%'}]}>\r\n      <View style={commonStyles.card}>\r\n        <ConfigSections/>\r\n      </View>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 16,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#3498DB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 48,\r\n    borderRadius: 4,\r\n    marginLeft: 8,\r\n  },\r\n  recentButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const [path,setPath] = useState('')\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const [preview, setPreview] = useState<boolean>()\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const moveDescription = moveParagraph.map(v=>v.header + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map(v=>(v.path===path && v.description===''?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title);\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    if (!isLoading){\r\n      const _path = paragraph.find(v=>v.title === section)?.path || ''\r\n      setPath(_path)\r\n      setNewPath(_path)\r\n    }\r\n  }, [section, isLoading])\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:window==='landscape'?'row':'column', zIndex:1}}>\r\n          <View style={{zIndex:1}}>\r\n            <Text style={commonStyles.text}>현재 노트 제목:</Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>{title}</Text>\r\n            <Text style={commonStyles.text}>현재 노트 문단:</Text>\r\n            { section!==undefined?\r\n              <Text style={[commonStyles.title, styles.columns]}>{section}</Text>:\r\n              <View style={styles.columns}>\r\n                <HeaderSelectBar path={path} onPress={(item)=>setPath(item.path)} root={page?.title || ''} data={paragraph}/>\r\n              </View>}\r\n            <Text style={commonStyles.text}>새 노트 제목:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false}/>\r\n            <Text style={commonStyles.text}>새 노트 문단:</Text>\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar path={newPath} onPress={(item)=>setNewPath(item.path)} root={newPage?.title || ''} data={newParagraph}/>\r\n            </View>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[commonStyles.button, styles.moveButton, {flex:0, flexDirection:'row', alignItems:'center', paddingTop:24, paddingBottom:16}]} \r\n              onPress={()=>setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>{title}{paragraphItem?.level!==0?( \"/\"+paragraphItem?.title):\"\"}</Text>\r\n              <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ▶  </Text>\r\n              <Text style={commonStyles.title}>{newTitle}{newParagraphItem?.level!==0?( \"/\"+(newParagraphItem?.title || \"?\")):\"\"}</Text>   \r\n            </TouchableOpacity>\r\n              {preview!==undefined && <View style={{display:preview?'flex':'none'}}>\r\n              <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  autoResize\r\n                />\r\n              </View>}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: { \r\n    marginTop: 8, \r\n    marginBottom: 16 \r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages, useRecentPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar } from '../../components/SearchBar';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nconst updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const window = useResizeContext();\r\n\r\n  const { data: recentPages = [], isLoading } = useNotePages();\r\n  \r\n  const handlePagePress = (title: string) => {\r\n    navigation.navigate('NotePage', { title });\r\n  };\r\n  \r\n\r\n  return (<>\r\n    {window === 'portrait' && <SearchBar/>}\r\n    <View style={commonStyles.container}>      \r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : recentPages.length > 0 ? (\r\n        <FlatList\r\n          data={recentPages.sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime() )}\r\n          keyExtractor={(item) => item.title}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={commonStyles.card}\r\n              onPress={() => handlePagePress(item.title)}\r\n            >\r\n              <Text style={commonStyles.title}>{item.title}</Text>\r\n              <Text style={commonStyles.smallText}>\r\n                최근 수정: {updatedFormat(item.updated)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>\r\n            최근 수정한 노트가 없습니다.\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nconst sectionDescription = (paragraph:NodeData[], section:string) => {\r\n  const path = paragraph.find(v=>v.title===section)?.path\r\n  return path?paragraph.filter(v=>v.path.startsWith(path)).map(v=>v.header + v.description).join(\"\"):\"\"\r\n}\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false)\r\n  \r\n\r\n  const { data: page, isLoading } = useNotePage(title);\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description||'');\r\n  const description = section?sectionDescription(paragraph, section) :page?.description\r\n\r\n  useEffect(()=>{\r\n    toggleToc(false)\r\n  }, [route])\r\n\r\n  return (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <ScrollView style={[\r\n      commonStyles.container, \r\n      //@ts-ignore\r\n      {paddingRight:12, scrollbarGutter: 'stable'}]}>\r\n      <View style={commonStyles.header}>\r\n        <TouchableOpacity onPress={()=>navigation.navigate('NotePage', { title })}>\r\n          <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>\r\n            {title}{section?\" ▶ \"+section:\"\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        {page?.description && <View style={styles.actionButtons}>\r\n          <TouchableOpacity onPress={()=>toggleToc(!toc)} style={styles.actionButton}>\r\n            <Icon name=\"list\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n            <Icon name=\"exchange\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n          </TouchableOpacity>\r\n          {section\r\n          ?undefined\r\n          :<>\r\n            <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n              <Icon name=\"pencil\" size={16} color={theme === 'dark' ? '#E4E4E4' : '#333333'} />\r\n            </TouchableOpacity>\r\n          </>}\r\n        </View>}\r\n      </View>\r\n      <View style={commonStyles.flex}>\r\n        {isLoading ? (\r\n          <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n        ) : <>\r\n          <View style={!toc && description?[commonStyles.card, {flex:1, padding:0}]:{flex:1, position:'absolute'}}>\r\n            <EditorViewer\r\n              active\r\n              value={description || ''}\r\n              theme={theme}\r\n              onLink={(url)=>{\r\n                const newLocation = new URL(url);\r\n                if (location.origin + location.pathname === newLocation.origin + newLocation.pathname){\r\n                  const title = (new URLSearchParams(newLocation.search)).get(\"title\")\r\n                  title && navigation.navigate(\"NotePage\", {title})\r\n                }\r\n                else{\r\n                  window.open(url, '_blank');\r\n                }\r\n              }}\r\n              autoResize\r\n            /> \r\n          </View>\r\n          {toc? <HeaderSelectBar data={paragraph} path={section || ''} root={title} onPress={(item)=>navigation.navigate('NotePage', {title, section:item.title})}/>\r\n          :page?.description ? undefined : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n        </>}\r\n      </View>\r\n    </ScrollView>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","import dayjs from 'dayjs';\r\nimport React, { Suspense, useState } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\n// import useModalEffect from '../hooks/useModalEffect';\r\nimport { Calendar, useLangContext, useModalsContext, View, Text, CommonButton } from '@blacktokki/core';\r\n\r\nconst getDisableDays = (date: dayjs.Dayjs) => {\r\n  const result:string[] = [];\r\n  // let startDate = date.clone().startOf('month').add(-1, 'month');\r\n  // const endDate = date.clone().endOf('month').add(1, 'month');\r\n  // const today = dayjs().startOf('day');\r\n  // while (startDate <= endDate && startDate < today) {\r\n  //   result.push(startDate.format('YYYY-MM-DD'));\r\n  //   startDate = startDate.add(1, 'day');\r\n  // }\r\n  return result;\r\n};\r\n\r\nconst defaultDayjs = () => {\r\n  const m = dayjs();\r\n  const restMinute = parseInt(m.format('mm'), 10) % 5;\r\n  return m.add(5 - restMinute, 'minute');\r\n};\r\n\r\nexport default function DatePickerModal({\r\n  datetime,\r\n  callback,\r\n}: {\r\n  datetime?: string;\r\n  callback: (datetime?: string) => void;\r\n}) {\r\n  const _dayjs = datetime ? dayjs(datetime) : defaultDayjs();\r\n  const { lang, locale } = useLangContext();\r\n  const [date, setDate] = useState(_dayjs.format('YYYY-MM-DD'));\r\n  const [disableDays, setDisableDays] = useState<string[]>(getDisableDays(_dayjs));\r\n  const { setModal } = useModalsContext();\r\n  const back = () => {\r\n    setModal(DatePickerModal, null);\r\n  };\r\n  // useModalEffect(back, []);\r\n  return (<View style={{flex:1, margin:0, justifyContent:'flex-end', backgroundColor:'transparent'}}>\r\n    <View style={{alignItems:'center', minHeight:450}}>\r\n      <View style={{ flexDirection: 'row', width: '100%' }}>\r\n        <View style={{ flex: 1, flexDirection: 'row' }}>\r\n          <TouchableOpacity onPress={back}>\r\n            <Text>{lang(\"back\")}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <Text style={{ fontSize: 20, textAlign: 'center' }}>{lang('Date')}</Text>\r\n        </View>\r\n        <View style={{ flex: 1 }} />\r\n      </View>\r\n      <View\r\n        style={{ marginBottom: 20, height: 1, width: '100%' }}\r\n        lightColor=\"#ddd\"\r\n        darkColor=\"rgba(255,255,255, 0.3)\"\r\n      />\r\n        <Suspense fallback={<></>}>\r\n          <Calendar\r\n            locale={locale}\r\n            style={undefined}\r\n            setDate={setDate}\r\n            disableAllTouchEventsForDisabledDays={true}\r\n            onMonthChange={(v) => setDisableDays(getDisableDays(dayjs(v.dateString)))}\r\n            markedDates={{\r\n              ...disableDays.reduce((p, c) => {\r\n                p[c] = { disabled: true };\r\n                return p;\r\n              }, {} as Record<string, any>),\r\n              ...(date ? [date] : []).reduce((p, c) => {\r\n                p[c] = { selected: true };\r\n                return p;\r\n              }, {} as Record<string, any>),\r\n            }}\r\n          />\r\n        </Suspense>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        <CommonButton\r\n          title={lang('save')}\r\n          onPress={() => {\r\n            callback?.(date);\r\n            back();\r\n          }}\r\n        />\r\n        <CommonButton\r\n          title={lang('cancel')}\r\n          onPress={() => {\r\n            callback?.(undefined);\r\n            back();\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  </View>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { CommonButton, useModalsContext,Text, View, useColorScheme } from '@blacktokki/core';\r\nimport { TouchableOpacity} from 'react-native';\r\nimport DatePickerModal from '../../modals/DatePickerModal';\r\nimport { createCommonStyles } from '../../styles';\r\n\r\ntype DateHeaderSectionProps = {\r\n    date:string,\r\n    setDate:(date:string)=>void\r\n    monthly?:boolean\r\n}\r\n\r\nexport const today = () => dayjs().format('YYYY-MM-DD')\r\n\r\n\r\nexport default function DateHeaderSection({date, setDate, monthly}: DateHeaderSectionProps) {\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const { setModal } = useModalsContext()\r\n\r\n  return (\r\n    <View style={[commonStyles.card, {flexDirection:'row', justifyContent:'center'}]}>\r\n      <CommonButton title='<<' onPress={()=>setDate(dayjs(date).add(-1 ,monthly?'year':'month').format('YYYY-MM-DD'))} style={{paddingVertical:8, backgroundColor:'transparent'}}/>\r\n      <CommonButton title='<' onPress={()=>setDate(dayjs(date).add(-1 ,monthly?'month':'day').format('YYYY-MM-DD'))} style={{paddingVertical:8, backgroundColor:'transparent'}}/>\r\n      <View style={{flexDirection:'row',backgroundColor:'transparent'}}>\r\n        <TouchableOpacity style={[{flex:1, borderWidth:1, borderRadius:8, height:30, paddingHorizontal:10, paddingVertical:3,borderColor:'rgba(27,31,36,0.15)', minWidth:210, minHeight:37, paddingTop:0}]}\r\n          onPress={()=>setModal(DatePickerModal, {datetime:date, callback:(datetime?:string)=>setDate(datetime || date)})}\r\n        >\r\n          <Text style={{textAlign:'center', fontWeight:'700', fontSize:28}}>{(monthly && date)?date.substring(0,7):date}</Text>\r\n        </TouchableOpacity>\r\n        {/* {date !== today() && <CommonButton title='x' onPress={()=>setDate(today())}/>} */}\r\n      </View>\r\n      <CommonButton title='>' onPress={()=>setDate(dayjs(date).add(1 ,monthly?'month':'day').format('YYYY-MM-DD'))} style={{paddingVertical:8, backgroundColor:'transparent'}}/>\r\n      <CommonButton title='>>' onPress={()=>setDate(dayjs(date).add(1 ,monthly?'year':'month').format('YYYY-MM-DD'))} style={{paddingVertical:8, backgroundColor:'transparent'}}/>\r\n    </View>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages, useRecentPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport DateHeaderSection, { today } from './DateHeaderSection';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\n\r\nconst getMonthEnd = (year: number, month: number): string => {\r\n    const lastDay = new Date(year, month, 0).getDate();\r\n    return `${year}-${String(month).padStart(2, '0')}-${String(lastDay).padStart(2, '0')}`;\r\n  };\r\n\r\n  const addDays = (dateStr: string, days: number): string => {\r\n    const date = new Date(dateStr);\r\n    date.setDate(date.getDate() + days);\r\n    return date.toISOString().slice(0, 10);\r\n  };\r\n\r\nfunction extractDates(input: string) {\r\n    // 정규식 패턴들\r\n    const patterns: { regex: RegExp, parse: (match: RegExpExecArray) => {text:string, dateStart:string, dateEnd:string, nextText:string} }[] = [\r\n      // YYYY-MM-DD ~ YYYY-MM-DD (공백 허용)\r\n      {\r\n        regex: /^(\\d{4}-\\d{2}-\\d{2})\\s*~\\s*(\\d{4}-\\d{2}-\\d{2}).*$/,\r\n        parse: (match) => {\r\n        const a = dayjs(match[1])\r\n        const b = dayjs(match[2])\r\n        const diff = b.diff(a, 'day') + 1\r\n        return {\r\n          text: match[0].trim(),\r\n          dateStart: match[1],\r\n          dateEnd: match[2],\r\n          nextText: a.add(diff, 'day').format('YYYY-MM-DD') + \"~\" + b.add(diff, 'day').format('YYYY-MM-DD')\r\n        }}\r\n      },\r\n      // YYYY-MM-DD\r\n      {\r\n        regex: /^(\\d{4}-\\d{2}-\\d{2}).*$/,\r\n        parse: (match) => ({\r\n          text: match[0].trim(),\r\n          dateStart: match[1],\r\n          dateEnd: match[1],\r\n          nextText: dayjs(match[1]).add(1, 'day').format('YYYY-MM-DD')\r\n        })\r\n      },\r\n      // YYYY-MM\r\n      {\r\n        regex: /^(\\d{4})-(\\d{2}).*$/,\r\n        parse: (match) => {\r\n            const year = parseInt(match[1], 10);\r\n            const month = parseInt(match[2], 10);\r\n            const lastDay = new Date(year, month, 0).getDate();\r\n            const dateStart = `${year}-${String(month).padStart(2, '0')}-01`\r\n            return {\r\n            text: match[0].trim(),\r\n            dateStart,\r\n            dateEnd: `${year}-${String(month).padStart(2, '0')}-${String(lastDay).padStart(2, '0')}`,\r\n            nextText: dayjs(dateStart).add(1, 'month').format('YYYY-MM') \r\n        }}\r\n      },\r\n    ];\r\n  \r\n    for (const pattern of patterns) {\r\n      const match = pattern.regex.exec(input);\r\n      if (match) {\r\n        return pattern.parse(match);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nexport const TimeLineScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const _window = useResizeContext();\r\n  const [date, setDate] = useState(today())\r\n  const dateNum = new Date(date).getTime()\r\n\r\n  const { data: notes = [], isLoading } = useNotePages();\r\n  const data = notes.flatMap(v=>{\r\n    const preData = parseHtmlToSections(v.description || '').map(section=>{\r\n        const parentList = section.path.split(\" > \");\r\n        const parentPath = parentList.slice(0, parentList.length -1).join(\" > \")\r\n        const dateMatch = extractDates(section.title);\r\n        if(dateMatch){\r\n          const nextMatches:typeof dateMatch[] = []\r\n          for (let i=0, match=dateMatch;i<3;i++){\r\n            const _match = extractDates(match.nextText);\r\n            if (_match){\r\n              nextMatches.push(_match)\r\n              match = _match;\r\n            }\r\n          }\r\n          return {...v, section, parentPath, dateMatch, nextMatches}\r\n        }\r\n    }).filter(v2=>v2 !== undefined)\r\n    const past = preData.filter(v2=>new Date(v2.dateMatch.dateStart).getTime() <= dateNum && dateNum <= new Date(v2.dateMatch.dateEnd).getTime()).map(v2=>({...v2, current:undefined}))\r\n    const pastParents = new Set(past.map(v2=>v2.parentPath))\r\n    const current = preData.map(v2=>{\r\n      if (!pastParents.has(v2.parentPath)){\r\n        const current = v2.nextMatches.findIndex(nextMatch=>new Date(nextMatch.dateStart).getTime() <= dateNum && dateNum <= new Date(nextMatch.dateEnd).getTime())\r\n        if (current >=0)\r\n          return {...v2, current}\r\n      }\r\n    }).filter(v=>v !== undefined);\r\n    return [...past, ...current ]\r\n  })\r\n\r\n  const handlePagePress = (title: string, section: string) => {\r\n    navigation.navigate('NotePage', { title, section });\r\n  };\r\n  \r\n\r\n  return (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <View style={commonStyles.container}>\r\n      <DateHeaderSection date={date} setDate={setDate}/>\r\n      {isLoading ? (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text style={commonStyles.text}>로딩 중...</Text>\r\n        </View>\r\n      ) : data.length > 0 ? (\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={(item) => item.title}\r\n          renderItem={({ item }) => {\r\n            const parentList = item.parentPath.split(\" > \")\r\n            const parentSection = item.parentPath.length>0 && parentList.length>0?parentList[parentList.length -1]:item.title\r\n            const section = item.current ===undefined?item.section.title:item.nextMatches[item.current].text;\r\n            return <>\r\n            <View style={commonStyles.header}>\r\n              <TouchableOpacity onPress={()=>handlePagePress(item.title, parentSection)}>\r\n                <Text style={[commonStyles.title, styles.pageTitle]} numberOfLines={1}>\r\n                  {item.title}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              \r\n            </View>\r\n            <View style={commonStyles.card}>\r\n              <View style={commonStyles.header}>\r\n                <Text style={[commonStyles.title, styles.pageTitle, item.current ===undefined?{}:{fontStyle:'italic'}]}>{parentSection}</Text>\r\n                <Text selectable={false} style={commonStyles.smallText}>{section}</Text>\r\n              </View>\r\n              <EditorViewer\r\n                active\r\n                value={item.current ===undefined?item.section.description:''}\r\n                theme={theme}\r\n                onLink={(url)=>{\r\n                  const newLocation = new URL(url);\r\n                  if (location.origin + location.pathname === newLocation.origin + newLocation.pathname){\r\n                    const title = (new URLSearchParams(newLocation.search)).get(\"title\")\r\n                    title && navigation.navigate(\"NotePage\", {title})\r\n                  }\r\n                  else{\r\n                    window.open(url, '_blank');\r\n                  }\r\n                }}\r\n                autoResize\r\n              /> \r\n            </View>\r\n          </>}}\r\n          ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n        />\r\n      ) : (\r\n        <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n          <Text selectable={false} style={commonStyles.text}>\r\n            노트가 없습니다.\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n});","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\nimport { TimeLineScreen } from \"./main/TimeLineScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n    TimeLine:{\r\n      title:'Blacktokki Notebook',\r\n      component:TimeLineScreen,\r\n      path:'timeline',\r\n    },\r\n\r\n  };\r\n  ","import React from 'react';\r\nimport ContentGroupSection, { TimeLineButton } from '../screens/main/home/ContentGroupSection';\r\nimport { ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { navigate } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>navigate('Home')} />\r\n        <TimeLineButton/>\r\n        <ScrollView>\r\n            <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n            <ContentGroupSection type={'LAST'} />\r\n            <ContentGroupSection type={'PAGE'} />\r\n            <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Notes\")}</List.Subheader>{/* 최근 변경 */}\r\n            <ContentGroupSection type={'NOTE'} noteCount={10}/>\r\n        </ScrollView>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport DateTimePickerModal from '../modals/DatePickerModal';\r\n\r\nconst HeaderRight = ()=>{\r\n    const windowType = useResizeContext();\r\n    return windowType==='landscape'?<SearchBar/>:undefined\r\n}\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <HeaderRight/>,\r\n        modals: [DateTimePickerModal],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","type","parentIdParam","undefined","typeParam","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","re","_ref6","delete","toUrls","str","description","match","index","arr","RegExp","exec","push","substring","end","length","_tmp","filter","v","i","map","_ref7","preview","query","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getNoteContents","saveNoteContents","contents","content","find","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","_x","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","useNotePage","title","queryClient","useQueryClient","_queryFn","page","c","invalidateQueries","useRecentPages","_queryFn2","recentTitles","useLastPage","_queryFn3","useCreateOrUpdatePage","auth","useAuthContext","useMutation","mutationFn","_mutationFn","updatedContents","_objectSpread","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","useDeleteRecentPage","_mutationFn4","updatedRecentPages","_title","_x8","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","styles","buttonContainer","cancelButton","marginRight","saveButton","marginLeft","TimeLineButton","lang","useLangContext","_jsx","List","left","_props","icon","onPress","navigate","props","_notes$data","notes","pages","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x7","useAddRecentPage","deleteRecentPage","sort","a","b","Date","getTime","window","useResizeContext","itemPadding","noteOnPress","current","clearTimeout","mutate","setTimeout","noteOnLongPress","_pages$data","children","onLongPress","style","titleStyle","fontStyle","_jsxs","_Fragment","slice","noteCount","_pages$data2","v2","right","TouchableRipple","margin","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","cursor","body","firstChild","flushCurrent","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","textContent","trim","pop","h","join","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","useColorScheme","commonStyles","View","resultsContainer","darkResults","lightResults","FlatList","keyExtractor","item","renderItem","TouchableOpacity","resultItem","Icon","name","size","Text","marginTop","resultText","root","ItemSeparatorComponent","backButton","_searchText","SearchBar","_route$params","handlePress","renderExtra","_ref$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","showResults","setShowResults","navigation","useNavigation","currentTitle","useRoute","params","_useNotePages$data","_useRecentPages$data","defaultPages","randomPages","lowerCaseSearch","toLowerCase","filteredPages","startsWith","flatMap","section","handleSearch","handlePagePress","searchHandlers","useMemo","PanResponder","onPanResponderStart","panHandlers","pagePressHandlers","useCallback","_item$section","useEffect","useFocusEffect","searchContainer","TextInput","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","Math","floor","random","sections","_item$section2","position","maxWidth","zIndex","top","maxHeight","OpenedEditorsTabView","ScrollView","Colors","background","ContentGroupSection","NoteTabView","ConfigTabView","ConfigSections","recentButton","columns","moveButton","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","pageTitle","actionButtons","actionButton","DatePickerModal","datetime","callback","_dayjs","dayjs","m","restMinute","format","add","defaultDayjs","_useLangContext","locale","setDate","disableDays","setDisableDays","setModal","useModalsContext","back","minHeight","textAlign","lightColor","darkColor","Suspense","fallback","Calendar","disableAllTouchEventsForDisabledDays","onMonthChange","dateString","markedDates","reduce","p","selected","CommonButton","DateHeaderSection","monthly","minWidth","paddingTop","extractDates","patterns","regex","diff","dateStart","dateEnd","nextText","year","month","lastDay","getDate","String","padStart","pattern","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","NotePage","_window","toc","toggleToc","_useNotePage","isLoading","handleEdit","paragraph","_paragraph$find","sectionDescription","paddingRight","scrollbarGutter","numberOfLines","ActivityIndicator","EditorViewer","active","onLink","url","newLocation","URL","location","origin","pathname","URLSearchParams","search","open","autoResize","EditPage","setContent","mutation","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","setPath","newParagraph","_useState5","_useState6","newPath","setNewPath","_useState7","_useState8","setPreview","moveMutation","_mutationFn2","oldTitle","Error","some","_x6","useMovePage","_useMemo","moveParagraph","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","_path","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","display","RecentPages","_useNotePages","TimeLine","dateNum","preData","parentList","split","parentPath","dateMatch","nextMatches","_match","past","pastParents","Set","has","findIndex","nextMatch","parentSection","selectable","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","DateTimePickerModal","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","then","config","Navigation","PaperProvider"],"sourceRoot":""}