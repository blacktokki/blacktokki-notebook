{"version":3,"file":"static/js/279.57dc9acb.chunk.js","mappings":"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","sources":["src/services/notebook.ts","src/hooks/useNoteStorage.ts","src/styles.ts","src/components/HeaderSelectBar.tsx","src/hooks/useKeywordStorage.ts","src/components/SearchBar.tsx","src/screens/main/EditPageScreen.tsx","src/screens/main/home/ContentGroupSection.tsx","src/screens/main/RecentPageSection.tsx","src/screens/main/home/HomeScreen.tsx","src/screens/main/MovePageScreen.tsx","src/screens/main/NotePageScreen.tsx","src/screens/main/NoteListSection.tsx","src/screens/main/ArchiveScreen.tsx","src/screens/index.ts","src/screens/main/RecentPageScreen.tsx","src/screens/main/EmptyPageScreen.tsx","src/screens/main/EmptyContentScreen.tsx","src/navigation/Drawer.tsx","src/navigation/index.tsx"],"sourcesContent":["import { Content, PostContent, Link } from '../types';\r\nimport { axiosCreate } from '@blacktokki/account';\r\n\r\nconst axios = axiosCreate(\"notebook\")\r\n\r\nexport const getContentOne = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/content/${id}`)).data as Content\r\n}\r\n\r\nexport const getContentList = async (parentId?:number, types?: Content['type'][])=>{\r\n    const parentIdParam = parentId !== undefined?`&parentId=${parentId}`: ''\r\n    const typeParam = types !== undefined?`&types=${types.join(',')}` : ''\r\n    return (await axios.get(`/api/v1/content?self=true&size=256${parentIdParam}${typeParam}`)).data.value as Content[]\r\n}\r\n\r\nexport const postContent = async (postContent:PostContent)=>{\r\n    return ((await axios.post(`/api/v1/content`, postContent)).data as Content).id\r\n}\r\n\r\nexport const patchContent = async ({id, updated}:{id:number, updated:PostContent})=>{\r\n    await axios.patch(`/api/v1/content`,{ids: [id], updated})\r\n}\r\n\r\nexport const deleteContent = async (id: number) =>{\r\n    await axios.delete(`/api/v1/content/${id}`)\r\n}\r\n\r\nexport const previewUrl = async (preview: {query:string}) => {\r\n    return (await axios.get(`/api/v1/preview/autocomplete?query=${preview.query}`)).data as Link\r\n}\r\n\r\n","import { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Content, PostContent } from '../types';\r\nimport { deleteContent, getContentList, patchContent, postContent } from '../services/notebook';\r\nimport { useAuthContext } from '@blacktokki/account';\r\n\r\nconst PAGE_STORAGE_KEY = '@blacktokki:notebook:contents';\r\nconst RECENT_PAGES_KEY = '@blacktokki:notebook:recent_pages';\r\nconst ONLINE = true;\r\nlet lastPage:string|undefined\r\n\r\nconst getContents = async (type:\"NOTE\"|\"SNAPSHOT\"): Promise<Content[]> => {\r\n  if (ONLINE){\r\n    return (await getContentList(undefined,[type]))\r\n  }\r\n  if(type===\"SNAPSHOT\"){\r\n    return []\r\n  }\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(PAGE_STORAGE_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading page contents', e);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveNoteContents = async (contents: (Content|PostContent)[], id?:number): Promise<void> => {\r\n  if (ONLINE){\r\n    const content = contents.find(v=>id===(v as {id?:number}).id);\r\n    if (content){\r\n      const savedId = await (id?(patchContent({id, updated:content}).then(()=>id)):postContent(content));\r\n      const snapshot:Content|PostContent = {...content, type:\"SNAPSHOT\", id:undefined, parentId:savedId}\r\n      await postContent(snapshot)\r\n    }\r\n  }\r\n  try {\r\n    const jsonValue = JSON.stringify(contents);\r\n    await AsyncStorage.setItem(PAGE_STORAGE_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving page contents', e);\r\n  }\r\n};\r\n  \r\nconst getRecentPages = async (): Promise<string[]> => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(RECENT_PAGES_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n  } catch (e) {\r\n    console.error('Error loading recent pages', e);\r\n    return [];\r\n  }\r\n};\r\n  \r\nconst saveRecentPages = async (titles: string[]): Promise<void> => {\r\n  try {\r\n    const jsonValue = JSON.stringify(titles);\r\n    await AsyncStorage.setItem(RECENT_PAGES_KEY, jsonValue);\r\n  } catch (e) {\r\n    console.error('Error saving recent pages', e);\r\n  }\r\n};\r\n  \r\nexport const useNotePages = () => {\r\n  return useQuery({\r\n    queryKey: ['pageContents'],\r\n    queryFn: async() => await getContents(\"NOTE\"),\r\n  });\r\n};\r\n\r\nexport const useSnapshotPages = () => {\r\n  return useQuery({\r\n    queryKey: ['snapshotContents'],\r\n    queryFn: async () => await getContents(\"SNAPSHOT\"),\r\n  });\r\n};\r\n\r\nexport const useNotePage = (title: string) => {\r\n  const queryClient = useQueryClient()\r\n  const { data:contents=[], isFetching } = useNotePages()\r\n  return useQuery({\r\n    queryKey: ['pageContent', title],\r\n    queryFn: async () => {\r\n      const page = contents.find(c => c.title === title);\r\n      \r\n      // Add to recent pages\r\n      if (page) {\r\n        const recentPages = await getRecentPages();\r\n        if (recentPages.find(v=>v===title)===undefined){\r\n          lastPage = title;\r\n          await queryClient.invalidateQueries({ queryKey: ['lastPage'] });\r\n        }\r\n      }\r\n      return page || { title, description: '', id:undefined };\r\n    },\r\n    enabled:!isFetching\r\n  });\r\n};\r\n  \r\n  export const useRecentPages = () => {\r\n    const { data:contents=[], isFetching } = useNotePages()\r\n    return useQuery({\r\n      queryKey: ['recentPages'],\r\n      queryFn: async () => {\r\n        const recentTitles = await getRecentPages();\r\n        return recentTitles\r\n          .map(title => contents.find(c => c.title === title))\r\n          .filter(c => c !== undefined) as Content[];\r\n      },\r\n      enabled:!isFetching\r\n    });\r\n  };\r\n\r\n  export const useLastPage = () => {\r\n    const { data:contents=[], isFetching } = useNotePages()\r\n    return useQuery({\r\n      queryKey: ['lastPage'],\r\n      queryFn: async() => {\r\n        return contents.find(v=>v.title === lastPage)\r\n      },\r\n      enabled:!isFetching\r\n    });\r\n  }\r\n  \r\n  export const useCreateOrUpdatePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { auth } = useAuthContext()\r\n    const { data:contents=[] } = useNotePages()\r\n    return useMutation({\r\n      mutationFn: async ({ title, description }: {title:string, description:string}) => {\r\n        const page = contents.find(c => c.title === title);\r\n        \r\n        let updatedContents: (Content|PostContent)[];\r\n        if (page) {\r\n          updatedContents = contents.map((c, i) => \r\n            c.id === page.id ? { ...c, description } : c\r\n          );\r\n        } else {\r\n          const newPage:PostContent = { title, description, input:title, userId:auth.user?.id || 0, parentId:0, type:'NOTE', order:0, option: {} }\r\n          updatedContents = [...contents, newPage];\r\n        }\r\n        \r\n        await saveNoteContents(updatedContents, page?.id);\r\n        return { title, description };\r\n      },\r\n      onSuccess: async (data) => {\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        await queryClient.invalidateQueries({ queryKey: ['pageContent', data.title] });\r\n        await queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const useMovePage = () => {\r\n    const queryClient = useQueryClient();\r\n    const { data:contents=[] } = useNotePages()\r\n\r\n    return useMutation({\r\n      mutationFn: async ({ oldTitle, newTitle, description }: { oldTitle: string, newTitle: string, description?:string }) => {\r\n        const page = contents.find(c => c.title === oldTitle);\r\n        \r\n        if (!page) {\r\n          throw new Error('Page not found');\r\n        }\r\n        \r\n        if (contents.some(c => c.title === newTitle)) {\r\n          throw new Error('Page with new title already exists');\r\n        }\r\n        \r\n        const updatedContents = contents.map(c => \r\n          c.title === oldTitle ? { ...c, title: newTitle, description:description || page.description } : c\r\n        );\r\n        \r\n        await saveNoteContents(updatedContents, page.id);\r\n        \r\n        // Update recent pages\r\n        const recentPages = await getRecentPages();\r\n        const updatedRecentPages = recentPages.map(title => \r\n          title === oldTitle ? newTitle : title\r\n        );\r\n        await saveRecentPages(updatedRecentPages);\r\n        \r\n        return { oldTitle, newTitle };\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries({ queryKey: ['pageContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['snapshotContents'] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.oldTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['pageContent', data.newTitle] });\r\n        queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      },\r\n    });\r\n  };\r\n\r\nexport const useAddRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({title, direct}:{title:string, direct?:boolean}) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      if (recentPages.find(v=>v===title) === undefined || direct){\r\n        const updatedRecentPages = [title, ...recentPages]\r\n        await saveRecentPages(updatedRecentPages);\r\n      }\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useDeleteRecentPage = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (title:string) => {\r\n      \r\n      // Update recent pages\r\n      const recentPages = await getRecentPages();\r\n      const updatedRecentPages = recentPages.filter(_title => \r\n        title !== _title\r\n      );\r\n      lastPage = undefined\r\n      await saveRecentPages(updatedRecentPages);\r\n      \r\n      return { title };\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: ['recentPages'] });\r\n      queryClient.invalidateQueries({ queryKey: ['pageContent'] });\r\n      queryClient.invalidateQueries({ queryKey: ['lastPage']})\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport const createCommonStyles = (theme: 'light' | 'dark') => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: theme === 'dark' ? '#121212' : '#FFFFFF',\r\n      paddingHorizontal: 24,\r\n      paddingVertical: 16,\r\n    },\r\n    card: {\r\n      backgroundColor: theme === 'dark' ? '#1E1E1E' : '#FFFFFF',\r\n      borderRadius: 8,\r\n      padding: 16,\r\n      marginBottom: 16,\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      shadowColor: theme === 'dark' ? '#000000' : '#888888',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 4,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n      color: theme === 'dark' ? '#FFFFFF' : '#000000',\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      lineHeight: 24,\r\n    },\r\n    button: {\r\n      backgroundColor: theme === 'dark' ? '#2C73B5' : '#3498DB',\r\n      borderRadius: 4,\r\n      padding: 12,\r\n      alignItems: 'center',\r\n      marginVertical: 8,\r\n    },\r\n    buttonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: '500',\r\n      fontSize: 16,\r\n    },\r\n    searchButton: {\r\n      backgroundColor: '#3498DB',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 36,\r\n      height: 36,\r\n      borderRadius: 4,\r\n      marginHorizontal: 4,\r\n    },\r\n    resultSeparator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n    },\r\n    input: {\r\n      backgroundColor: theme === 'dark' ? '#222222' : '#FFFFFF',\r\n      borderWidth: 1,\r\n      borderColor: theme === 'dark' ? '#444444' : '#CCCCCC',\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      color: theme === 'dark' ? '#E4E4E4' : '#333333',\r\n      marginBottom: 16,\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: theme === 'dark' ? '#333333' : '#EEEEEE',\r\n      marginVertical: 12,\r\n    },\r\n    smallText: {\r\n      fontSize: 14,\r\n      color: theme === 'dark' ? '#BBBBBB' : '#777777',\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 16,\r\n    },\r\n    flex: {\r\n      flex: 1,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    centerContent: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n};","import { TouchableOpacity, View, FlatList, StyleSheet } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { createCommonStyles } from \"../styles\";\r\nimport { Text, useColorScheme } from \"@blacktokki/core\";\r\n\r\nexport interface NodeData {\r\n    path: string;\r\n    title: string;\r\n    level: number;\r\n    header: string;\r\n    description: string;\r\n  }\r\n  \r\nexport function parseHtmlToSections(html: string): NodeData[] {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n  \r\n    const result: NodeData[] = [{path:\"\", title:\"\", header:\"\", level:0, description:\"\"}];\r\n  \r\n    const headings: string[] = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"];\r\n    const headerStack: { level: number; title: string }[] = [];\r\n  \r\n    let current: NodeData | null = null;\r\n    let cursor = doc.body.firstChild;\r\n  \r\n    const flushCurrent = () => {\r\n      if (current) {\r\n        result.push(current);\r\n        current = null;\r\n      }\r\n    };\r\n  \r\n    while (cursor) {\r\n      if (cursor.nodeType === Node.ELEMENT_NODE) {\r\n        const el = cursor as HTMLElement;\r\n        if (headings.includes(el.tagName)) {\r\n          flushCurrent();\r\n  \r\n          const level = parseInt(el.tagName.substring(1));\r\n          const title = el.textContent?.trim() || \"\";\r\n  \r\n          // 헤더 스택 업데이트\r\n          while (headerStack.length > 0 && headerStack[headerStack.length - 1].level >= level) {\r\n            headerStack.pop();\r\n          }\r\n          headerStack.push({ level, title });\r\n  \r\n          const path = headerStack.map(h => h.title).join(\" > \");\r\n  \r\n          current = {\r\n            path,\r\n            title,\r\n            level,\r\n            header: el.outerHTML,\r\n            description: \"\",\r\n          };\r\n        } else if (current) {\r\n          current.description += el.outerHTML;\r\n        } else {\r\n          // 헤더 밖의 내용 처리\r\n          result[0].description += el.outerHTML;\r\n        }\r\n      } else if (cursor.nodeType === Node.TEXT_NODE && current) {\r\n        current.description += cursor.textContent || \"\";\r\n      }\r\n  \r\n      cursor = cursor.nextSibling;\r\n    }\r\n  \r\n    flushCurrent();\r\n    return result;\r\n}\r\n\r\nexport default function HeaderSelectBar(props:{root:string, path:string, onPress:(item:NodeData)=>void, data:NodeData[]}){\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const renderItem = (item:NodeData) => <TouchableOpacity\r\n    style={styles.resultItem}\r\n    onPress={() => props.onPress(item)}\r\n  >\r\n    {item.level===0 && <Icon name=\"file-text-o\" size={18} color=\"#FFFFFF\"/>}\r\n    <Text style={[props.path===item.path?[commonStyles.title, {marginBottom:5, marginTop:3}]:commonStyles.text, styles.resultText, {left:item.level * 10 + 10}]}>{item.level===0?props.root:item.title}</Text>\r\n  </TouchableOpacity>\r\n  return <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n    <FlatList\r\n      data={props.data}\r\n      keyExtractor={(item) => item.path}\r\n      renderItem={({ item }) => renderItem(item)}\r\n      ItemSeparatorComponent={() => <View style={commonStyles.resultSeparator} />}\r\n    />\r\n  </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  resultItem: {\r\n    padding: 10,\r\n    flexDirection:'row',\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resultsContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n})","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\n\r\nconst KEYWORDS_KEY = '@blacktokki:notebook:keywords';\r\n\r\nexport type KeywordContent = {\r\n  type: \"_NOTELINK\",\r\n  name: string, \r\n  title: string,\r\n  section?: string\r\n} | {\r\n  type:  \"_KEYWORD\",\r\n  title: string\r\n}\r\n\r\nconst getKeywords = async (): Promise<KeywordContent[]> => {\r\ntry {\r\n    const jsonValue = await AsyncStorage.getItem(KEYWORDS_KEY);\r\n    return jsonValue ? JSON.parse(jsonValue) : [];\r\n} catch (e) {\r\n    console.error('Error loading keywords', e);\r\n    return [];\r\n}\r\n};\r\n    \r\nconst saveKeywords = async (keywords: KeywordContent[]): Promise<void> => {\r\ntry {\r\n    const jsonValue = JSON.stringify(keywords);\r\n    await AsyncStorage.setItem(KEYWORDS_KEY, jsonValue);\r\n} catch (e) {\r\n    console.error('Error saving keywords', e);\r\n}\r\n};\r\n\r\nexport const useKeywords = () => {\r\n    return useQuery({\r\n        queryKey: ['keywords'],\r\n        queryFn: async () => {\r\n        return getKeywords()\r\n        },\r\n    });\r\n};\r\n\r\nexport const useAddKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (keyword:KeywordContent) => {\r\n      const keywords = await getKeywords();\r\n      const newKeywords = [...new Set([JSON.stringify(keyword), ...keywords.map(v=>JSON.stringify(v))])].map(v=>JSON.parse(v))\r\n      await saveKeywords(newKeywords)\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}\r\n\r\nexport const useResetKeyowrd = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async () => {\r\n      await saveKeywords([])\r\n    },\r\n    onSuccess: async() => {\r\n      await queryClient.invalidateQueries({ queryKey: ['keywords'] });\r\n    },\r\n  });\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet, PanResponder } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../types';\r\nimport { useNotePages } from '../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { parseHtmlToSections } from './HeaderSelectBar';\r\nimport { KeywordContent, useAddKeyowrd, useKeywords } from '../hooks/useKeywordStorage';\r\n\r\nlet _searchText = ''\r\n\r\ntype SearchContent = Content | KeywordContent\r\n\r\nfunction extractHtmlLinksWithQuery(text:string) {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/html');\r\n\r\n  // 모든 a 태그 선택\r\n  const links = doc.querySelectorAll('a');\r\n\r\n  // 이름과 주소 추출\r\n  const matches = Array.from(links).map(a => ({\r\n    text: a.textContent?.trim() || a.href,\r\n    url: a.href\r\n  }));\r\n\r\n  return matches;\r\n}\r\n\r\nfunction urlToNoteLink(url:string){\r\n  const newLocation = new URL(url);\r\n  if (location.origin  === newLocation.origin){\r\n    const params = new URLSearchParams(newLocation.search);\r\n    const title = params.get(\"title\")\r\n    const section = params.get(\"section\") || undefined\r\n    if (title){\r\n      return {title, section}\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLink(url:string, navigation:StackNavigationProp<NavigationParamList>){\r\n  const noteLink = urlToNoteLink(url);\r\n  if(noteLink){\r\n    navigation.push(\"NotePage\", noteLink)\r\n  }\r\n  else{\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nexport function getNoteLinks(pages:Content[]){\r\n  return pages.flatMap(v=>extractHtmlLinksWithQuery(v.description || '').map((v2)=>{\r\n    const noteLink = urlToNoteLink(v2.url);\r\n    if(noteLink && v2.text !== noteLink.title /*&& v2.text.startsWith(v.title)*/){\r\n      return {type: \"_NOTELINK\" as \"_NOTELINK\", name:v2.text, ...noteLink, origin:v.title}\r\n    }\r\n  }).filter(v=>v !==undefined))\r\n}\r\n\r\nexport const getFilteredPages = (pages:Content[], searchText:string) => {\r\n  const lowerCaseSearch = searchText.toLowerCase()\r\n  const noteLinks = getNoteLinks(pages)\r\n  return [\r\n    ...pages.filter(page =>page.title.toLowerCase().startsWith(lowerCaseSearch)),\r\n    ...noteLinks.filter(v=>v.name.toLowerCase().startsWith(lowerCaseSearch))\r\n  ]\r\n}\r\n\r\nexport const RandomButton = () => {\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [] } = useNotePages();\r\n  const randomPages = pages.filter(v=>v.description);\r\n  return randomPages && <TouchableOpacity\r\n    style={commonStyles.searchButton}\r\n    onPress={()=>{\r\n      const page = randomPages[Math.floor(Math.random() * randomPages.length)];\r\n      const sections = parseHtmlToSections(page.description || '')\r\n      navigation.push('NotePage', { title:page.title, section: sections[Math.floor(Math.random() * sections.length)].title });\r\n    }}\r\n>\r\n  <Icon name={\"random\"} size={18} color=\"#FFFFFF\" />\r\n</TouchableOpacity>\r\n}\r\n\r\nexport const titleFormat = (item:{title:string, section?:string}) => `${item.title}${item.section?(\" ▶ \"+item.section):\"\"}`\r\n\r\nexport const SearchList = ({filteredPages, handlePagePress, addKeyword}:{filteredPages:SearchContent[], handlePagePress:(title:string, section?:string)=>void, addKeyword?:(keyword:KeywordContent)=>void})=>{\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const pagePressHandlers = useCallback((item:SearchContent)=>{\r\n    return PanResponder.create({\r\n      onPanResponderStart:() => {\r\n        if (item.type === \"_NOTELINK\" && item.section){\r\n          handlePagePress(item.title, item.section)\r\n          addKeyword?.(item)\r\n        }\r\n        else {\r\n          handlePagePress(item.title)\r\n          addKeyword?.({type:\"_KEYWORD\", title:item.title})\r\n        }\r\n      }\r\n    }).panHandlers\r\n  }, [])\r\n\r\n  return <FlatList\r\n  data={filteredPages}\r\n  keyExtractor={(item:any) => JSON.stringify([item.title, item.name, item.section])}\r\n  renderItem={({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.resultItem}\r\n      {...pagePressHandlers(item)}\r\n    >\r\n      <Text style={[commonStyles.text, styles.resultText]}>{item.type===\"_NOTELINK\"?item.name:item.title}</Text>\r\n      {item.type ===\"_NOTELINK\" && <Text style={[commonStyles.text, styles.resultText, {fontSize:12}]}>{titleFormat(item)}</Text>}\r\n    </TouchableOpacity>\r\n  )}\r\n  ItemSeparatorComponent={() => <View style={[commonStyles.resultSeparator]} />}\r\n/>\r\n}\r\n\r\nexport const SearchBar: React.FC<{handlePress?:(title:string)=>void, useRandom?:boolean;}> = ({handlePress, useRandom=true}) => {\r\n  const [searchText, setSearchText] = useState(_searchText);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const inputRef = useRef<TextInput|null>()\r\n  const { data:keywords = []} = useKeywords()\r\n  const addKeyword = useAddKeyowrd()\r\n  const { data: pages = [] } = useNotePages();\r\n  const filteredPages:SearchContent[] = searchText.length > 0\r\n    ? getFilteredPages(pages, searchText).slice(0, 10)\r\n    : keywords.slice(0, 10)\r\n\r\n  const handleSearch = () => {\r\n    if (searchText.trim()) {\r\n      handlePagePress(searchText.trim())\r\n      addKeyword.mutate({type:\"_KEYWORD\", title:searchText.trim()})\r\n    }\r\n  };\r\n\r\n  const handlePagePress = (title: string, section?:string) => {\r\n    handlePress?handlePress(title):navigation.push('NotePage', { title, section });\r\n    setSearchText('');\r\n  };\r\n\r\n  const searchHandlers = useMemo(()=>PanResponder.create({\r\n      onPanResponderStart: handleSearch,\r\n    }).panHandlers\r\n  ,[searchText])\r\n\r\n  useEffect(()=>{\r\n    _searchText = searchText;\r\n  }, [searchText])\r\n\r\n  useFocusEffect(()=>{\r\n    if (searchText !== _searchText){\r\n      setSearchText(_searchText)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          ref={ref=>{inputRef.current = ref}}\r\n          style={[commonStyles.input, styles.searchInput]}\r\n          value={searchText}\r\n          onChangeText={(text) => {\r\n            setSearchText(text);\r\n          }}\r\n          placeholder=\"검색\"\r\n          placeholderTextColor={theme === 'dark' ? '#777777' : '#999999'}\r\n          onSubmitEditing={handleSearch}\r\n          onFocus={()=>setShowResults(true)}\r\n          onBlur={()=>setShowResults(false)}\r\n        />\r\n        <TouchableOpacity\r\n          style={commonStyles.searchButton}\r\n          onPress={handleSearch}\r\n          disabled={!searchText.trim()}\r\n        >\r\n          <Icon name={\"search\"} size={18} color=\"#FFFFFF\" />\r\n        </TouchableOpacity>\r\n        {useRandom && <RandomButton/>}\r\n      </View>\r\n      \r\n      {showResults && (\r\n        <View style={[styles.resultsContainer, theme === 'dark' ? styles.darkResults : styles.lightResults]}>\r\n          {filteredPages.length > 0 ? (\r\n            <SearchList filteredPages={filteredPages} handlePagePress={handlePagePress} addKeyword={addKeyword.mutate}/> \r\n          ) : searchText.trim() ? (\r\n            <TouchableOpacity\r\n              style={styles.resultItem}\r\n              {...searchHandlers}\r\n            >\r\n              <Text style={[commonStyles.text, styles.resultText]}>\r\n                \"{searchText}\" 새 노트 만들기\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: 960,\r\n    zIndex: 999,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 36,\r\n    marginBottom: 0,\r\n    paddingVertical: 4,\r\n    fontSize: 14,\r\n  },\r\n  resultsContainer: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 500,\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    zIndex: 999,\r\n    elevation: 5,\r\n  },\r\n  lightResults: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderColor: '#CCCCCC',\r\n  },\r\n  darkResults: {\r\n    backgroundColor: '#222222',\r\n    borderColor: '#444444',\r\n  },\r\n  resultItem: {\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    padding: 10,\r\n  },\r\n  resultText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Alert, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useIsFocused, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useCreateOrUpdatePage, useNotePages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme } from '@blacktokki/core';\r\nimport { Editor } from '@blacktokki/editor';\r\nimport { getFilteredPages, titleFormat } from '../../components/SearchBar';\r\nimport { previewUrl } from '../../services/notebook';\r\n\r\ntype EditPageScreenRouteProp = RouteProp<NavigationParamList, 'EditPage'>;\r\n\r\nexport const EditPageScreen: React.FC = () => {\r\n  const route = useRoute<EditPageScreenRouteProp>();\r\n  const isFocused = useIsFocused();\r\n  const { title } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  \r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const { data: pages = [] } = useNotePages();\r\n  const getChildrenPages = (keyword:string) => pages\r\n    .filter(v=>v.title.startsWith(title + '/'))\r\n    .map(v=>({type:'_CHILDNOTE' as '_CHILDNOTE', name:v.title.split(title + '/')[1], title:v.title}))\r\n    .filter(v=>v.name.toLowerCase().startsWith(keyword.toLowerCase()))\r\n  const [content, setContent] = useState('');\r\n  \r\n  const mutation = useCreateOrUpdatePage();\r\n  const handleSave = () => {\r\n    if (page?.description === content){\r\n      navigation.navigate('NotePage', { title });\r\n      return;\r\n    }\r\n    mutation.mutate(\r\n      { title, description: content },\r\n      {\r\n        onSuccess: () => {\r\n          navigation.navigate('NotePage', { title });\r\n        },\r\n        onError: (error:any) => {\r\n          Alert.alert('오류', error.message || '문서를 저장하는 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && page?.description){\r\n      setContent(page?.description)\r\n    }\r\n  }, [isLoading, page])\r\n  \r\n  useFocusEffect(()=>{\r\n    const callback = (event:any) => {\r\n      event.preventDefault();\r\n      event.returnValue = '';\r\n    };\r\n    window.addEventListener('beforeunload', callback);\r\n    return () => window.removeEventListener('beforeunload', callback);\r\n  })\r\n  return isFocused && (\r\n    <View style={commonStyles.container}>\r\n      <View style={commonStyles.header}>\r\n        <Text style={[commonStyles.title, { flex: 1 }]}>\r\n          {title} - 편집\r\n        </Text>\r\n      </View>\r\n      <Editor\r\n        active\r\n        value={content}\r\n        setValue={setContent}\r\n        theme={theme}\r\n        autoComplete={[{\r\n          trigger: '[',\r\n          getMatchedChars: async (pattern) => {\r\n            const childrenPages = getChildrenPages(pattern)\r\n            return [{type:\"_NOTELINK\", name:pattern, title, section:pattern}, ...(childrenPages.length?childrenPages:[{type:\"_CHILDNOTE\", name:pattern, title: title + \"/\" + pattern}]), ...getFilteredPages(pages, pattern)].map(v=>{\r\n              const text = v.type === '_NOTELINK' ? (v.name + `(${titleFormat(v)})`): v.type==='_CHILDNOTE'?v.name:v.title;\r\n              const url = encodeURI(v.type === '_NOTELINK' && v.section ? `?title=${v.title}&section=${v.section}`:`?title=${v.title}`);\r\n              return {\r\n                text,\r\n                value:`<a href=${url}>${text}</a>`,\r\n              }})\r\n          }\r\n        },\r\n        {\r\n          trigger: 'http',\r\n          getMatchedChars: async (pattern) => {\r\n            const query = 'http' + pattern;\r\n            const url = new URL(query);\r\n            if (url.protocol !== \"http:\" && url.protocol !== \"https:\"){\r\n              return [];\r\n            }\r\n            const preview = await previewUrl({query})\r\n            if (!preview.title){\r\n              return [];\r\n            }\r\n            return [{\r\n              text:preview.title,\r\n              value:`<a href=${preview.url}>${preview.title}</a>`,\r\n            },\r\n            // {\r\n            //   text:preview.title + '...',\r\n            //   value:`<a href=${preview.url}>${preview.title}</a><p>${preview.description}...</p>`,\r\n            // }\r\n          ]\r\n          }\r\n        }\r\n      ]}\r\n      />\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.cancelButton]} \r\n          onPress={handleCancel}\r\n        >\r\n          <Text style={commonStyles.buttonText}>취소</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[commonStyles.button, styles.saveButton]} \r\n          onPress={handleSave}\r\n        >\r\n          <Text style={commonStyles.buttonText}>저장</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { List, TouchableRipple } from 'react-native-paper';\r\nimport { navigate, push } from '@blacktokki/navigation';\r\n\r\nimport { useLangContext, useResizeContext } from '@blacktokki/core';\r\nimport { useRecentPages, useNotePages, useDeleteRecentPage, useLastPage, useAddRecentPage } from '../../../hooks/useNoteStorage';\r\nimport { Content } from '../../../types';\r\n\r\nconst getItemPadding = (isLandscape:boolean)=>{\r\n  return isLandscape?5:8\r\n}\r\n\r\nexport const EmptyPageButton = () => {\r\n  const { lang } = useLangContext()\r\n  return <List.Item left={_props=><List.Icon {..._props} icon={\"note-remove\"} />} title={lang(\"Empty Note\")} onPress={()=>push('EmptyPages')} />\r\n}\r\n\r\nexport const EmptyContentButton = () => {\r\n  const { lang } = useLangContext()\r\n  return <List.Item left={_props=><List.Icon {..._props} icon={\"note-edit\"} />} title={lang(\"Empty Content\")} onPress={()=>push('EmptyContents')} />\r\n}\r\n\r\nexport const toRecentContents = (data:Content[]) => data.filter(v=>v.description).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime())\r\n\r\nconst ContentGroupSection = ( props : {type:'PAGE'|'LAST'} | {type:'NOTE', noteCount:number}) => {\r\n  const { lang } = useLangContext()\r\n  const notes = useNotePages()\r\n  const pages = useRecentPages()\r\n  const { data:lastPage } = useLastPage()\r\n  const tabRef = React.useRef<NodeJS.Timeout>();\r\n  const addRecentPage = useAddRecentPage()\r\n  const deleteRecentPage = useDeleteRecentPage()\r\n  const data = (props.type === 'NOTE'? notes.data?toRecentContents(notes.data):[]:pages.data)\r\n  const lastPageExists = lastPage && (data?.find(v=>v.id===lastPage.id) === undefined);\r\n  const window = useResizeContext()\r\n  const itemPadding = getItemPadding(window==='landscape')\r\n  const noteOnPress = (title:string)=> {\r\n    if (title === lastPage?.title){\r\n      if (tabRef.current){\r\n        clearTimeout(tabRef.current)\r\n        tabRef.current = undefined\r\n        addRecentPage.mutate({title});\r\n      }\r\n      else {\r\n        tabRef.current = setTimeout(()=>{tabRef.current = undefined}, 500)\r\n      }\r\n    }\r\n    navigate('NotePage', {title})\r\n  }\r\n  const noteOnLongPress = (title:string) => {\r\n    if (tabRef.current){\r\n      clearTimeout(tabRef.current)\r\n      tabRef.current = undefined\r\n    }\r\n    if (pages.data?.find(v=>v.title===title) === undefined){\r\n      addRecentPage.mutate({title, direct:true});\r\n    }\r\n    else {\r\n      deleteRecentPage.mutate(title);\r\n    }\r\n  }\r\n  return ((props.type !== 'LAST' || lastPageExists) && <List.Section>\r\n        {data && (\r\n         props.type === 'LAST'\r\n         ?(lastPageExists && <List.Item \r\n            left={(_props)=><List.Icon {..._props} icon={\"file-document\"} />}\r\n            title={lastPage.title} \r\n            onPress={()=>noteOnPress(lastPage.title)}\r\n            onLongPress={()=>noteOnLongPress(lastPage.title)}\r\n            style={{padding:itemPadding }}\r\n            titleStyle={{fontStyle:'italic'}} \r\n         />)\r\n         :props.type === 'NOTE'\r\n         ?<>{data.slice(0, props.noteCount).map(v=><List.Item \r\n            key={v.id} \r\n            left={(_props)=><List.Icon {..._props} icon={pages.data?.find(v2=>v2.title===v.title)===undefined?\"notebook\":\"notebook-edit\"} />}\r\n            title={v.title} \r\n            onPress={()=>noteOnPress(v.title)}\r\n            onLongPress={()=>noteOnLongPress(v.title)}\r\n            style={{padding:itemPadding }} \r\n          />)}\r\n          <List.Item left={(_props)=><List.Icon {..._props} icon={\"notebook-multiple\"} />} title={lang(\"more...\")} onPress={()=>push(\"RecentPages\")} style={{padding:itemPadding}}/>\r\n        </>\r\n        :data.map(v=><List.Item \r\n          key={v.id} \r\n          left={(_props)=><List.Icon {..._props} icon={\"file-document-edit\"} />}\r\n          right={(_props)=><TouchableRipple style={{justifyContent:'center', borderRadius:itemPadding, width:40 + itemPadding * 2, height:40 + itemPadding*2, margin:-itemPadding }} onPress={()=>deleteRecentPage.mutate(v.title)}>\r\n              <List.Icon style={{left:itemPadding -7}} icon={\"close\"} />\r\n            </TouchableRipple>}\r\n          title={v.title} \r\n          onPress={()=>navigate('NotePage', {title:v.title})} \r\n          style={{padding:itemPadding }} \r\n        />)\r\n      )}\r\n    </List.Section>\r\n  );\r\n};\r\n\r\nexport default ContentGroupSection;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { TouchableOpacity, ScrollView, FlatList, FlatListProps } from 'react-native';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext, View, Text } from '@blacktokki/core';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Content, NavigationParamList } from '../../types';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { Card } from 'react-native-paper';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { toRecentContents } from './home/ContentGroupSection';\r\nimport RenderHtml from 'react-native-render-html';\r\n\r\nconst updatedOffset = new Date().getTimezoneOffset()\r\n\r\nexport const updatedFormat = (_updated:string) => {\r\n  const _date = new Date(_updated)\r\n  _date.setMinutes(_date.getMinutes() - updatedOffset)\r\n  const updated = _date.toISOString().slice(0, 16)\r\n    const date = updated.slice(0, 10)\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    return date==today?updated.slice(11):date;\r\n}\r\n\r\nfunction removeAttributesRecursively(element: Element) {\r\n  const attributes = Array.from(element.attributes); // 반복 중 변경 방지용 복사\r\n\r\n  for (const attr of attributes) {\r\n    if (attr.name === 'href') {\r\n      element.setAttribute('href', '');\r\n    } else {\r\n      element.removeAttribute(attr.name);\r\n    }\r\n  }\r\n\r\n  // 자식 요소들에 대해 재귀 호출\r\n  for (const child of element.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n}\r\n\r\nfunction removeAllAttributesFromHTML(html: string): string {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, 'text/html');\r\n\r\n  // body 하위 요소에 대해서만 처리\r\n  const body = doc.body;\r\n  for (const child of body.children as unknown as Element[]) {\r\n    removeAttributesRecursively(child);\r\n  }\r\n\r\n  return body.innerHTML;\r\n}\r\n\r\nconst _cardPadding = (isLandscape:boolean) => isLandscape?20:4\r\nconst _cardMaxWidth = (isLandscape:boolean) => isLandscape?250:190\r\n\r\nconst CardPage = React.memo(({item, index}: {item:Content|null, index:number})=>{\r\n  const window  = useResizeContext()\r\n  const cardMaxWidth = _cardMaxWidth(window===\"landscape\")\r\n  const theme = useColorScheme();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const fSize = window==='landscape'?2:0\r\n  const [mounted, setMounted] = useState(index < 10);\r\n\r\n  useEffect(() => {\r\n    if (!mounted){\r\n      const timer = setTimeout(() => setMounted(true), 50 * index - 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [item, index, mounted]);\r\n\r\n  if (item === null){\r\n    return <View style={{flexBasis:window==='landscape'?'33%':'50%', maxWidth:cardMaxWidth}}/>\r\n  }\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const onPress = ()=>navigation.push('NotePage', {title:item.title})\r\n  return <TouchableOpacity style={{flexBasis:window==='landscape'?'33%':'50%', padding:_cardPadding(window===\"landscape\"), paddingRight:0, minWidth:cardMaxWidth, maxWidth:cardMaxWidth}} onPress={onPress}>\r\n      <Card onPress={onPress} style={[commonStyles.card, {paddingTop:8, aspectRatio:1/Math.sqrt(2), borderRadius:6, marginVertical:10, marginHorizontal:8, overflow:'hidden'}]}>\r\n        <Card.Content style={{padding:0}}>\r\n          {mounted &&<RenderHtml source={{html:item.description || ''}} renderersProps={{ a : {onPress}}} tagsStyles={{body: {color:commonStyles.text.color}}} contentWidth={cardMaxWidth}/>}\r\n        </Card.Content>\r\n      </Card>\r\n      <View style={{flexDirection:'row', marginTop:10, padding:0, justifyContent:'space-between', alignItems:'center', width:'100%'}}>\r\n        <Text style={{fontSize:14+fSize, overflow:'hidden'}}>{item.title}</Text>\r\n        <Text style={{fontSize:12+fSize, opacity: 0.4, textAlign:'right'}}>{updatedFormat(item.updated)}</Text>\r\n      </View>\r\n  </TouchableOpacity>\r\n\r\n})\r\n\r\nconst renderItem = ({item, index}:{item:Content|null, index:number})=><CardPage key={index} index={index} item={item}/>\r\n\r\nexport const RecentPagesSection = React.memo(() => {\r\n    const theme = useColorScheme();\r\n    const commonStyles = createCommonStyles(theme);\r\n    const window = useResizeContext();\r\n    const { data: recentPages = [], isLoading } = useNotePages();\r\n    const contents = useMemo(()=>[...toRecentContents(recentPages).map(v=>({...v, description:removeAllAttributesFromHTML(v.description || '').slice(0, 300)})), null, null], [recentPages])\r\n    const maxWidth = (_cardMaxWidth(window===\"landscape\") + 5)  * (window==='landscape'?5:3)\r\n    return isLoading ? (\r\n      <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n        <Text style={commonStyles.text}>로딩 중...</Text>\r\n      </View>\r\n    ) : contents.length > 2 ? (\r\n      <ScrollView\r\n        key={window}\r\n        contentContainerStyle={{alignSelf:'center', backgroundColor:'transparent', flexBasis:'100%', maxWidth, flexWrap:'wrap', flexDirection:'row', paddingRight:_cardPadding(window==='landscape'), justifyContent:window==='landscape'?undefined:'center'}}>\r\n          {contents.map((item, index)=>renderItem({item, index}))}\r\n      </ScrollView>\r\n    ) : (\r\n      <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n        <Text style={commonStyles.text}>\r\n          최근 수정한 노트가 없습니다.\r\n        </Text>\r\n      </View>\r\n    );\r\n})","import React, { useState } from 'react';\r\nimport { StackNavigationProp, StackScreenProps } from '@react-navigation/stack';\r\nimport { ScrollView, TouchableOpacity, View} from 'react-native';\r\nimport { Colors, ContractFooter, Text, TextButton, useColorScheme, useLangContext } from '@blacktokki/core';\r\nimport { HomeSection, ConfigSections, navigate } from '@blacktokki/navigation';\r\nimport { TabViewOption } from '@blacktokki/navigation';\r\nimport ContentGroupSection, { EmptyContentButton, EmptyPageButton } from './ContentGroupSection';\r\nimport { List } from 'react-native-paper';\r\nimport { createCommonStyles } from '../../../styles';\r\nimport { SearchBar, SearchList } from '../../../components/SearchBar';\r\nimport { RecentPagesSection } from '../RecentPageSection';\r\nimport { useKeywords, useResetKeyowrd } from '../../../hooks/useKeywordStorage';\r\nimport { useAuthContext } from '@blacktokki/account';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport { NavigationParamList } from '../../../types';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\nconst NotesTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  const { lang } = useLangContext()\r\n  return <ScrollView style={{flex:1, backgroundColor:Colors[theme].background}}>\r\n      <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n      <ContentGroupSection type={'LAST'} />\r\n      <ContentGroupSection type={'PAGE'} />\r\n      <List.Subheader style={{}} selectable={false}>{lang(\"Problems\")}</List.Subheader>\r\n      <EmptyPageButton/>\r\n      <EmptyContentButton/>\r\n    </ScrollView>\r\n}\r\n\r\nconst RecentChangesTabView = ()=>{\r\n  return <RecentPagesSection/>\r\n}\r\n\r\nconst CommonConfigButton = (props:{title:string, onPress?:()=>void})=>{\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  return <TouchableOpacity style={[commonStyles.header, {marginBottom:0}]} onPress={props.onPress} disabled={!props.onPress}>\r\n    <Text style={{ fontSize: 20, color, fontWeight: '600' }}>{props.title}</Text>\r\n    {props.onPress && <Text>{\">\"}</Text>}\r\n  </TouchableOpacity>\r\n}\r\n\r\nconst ConfigCommonView = () => {\r\n  const { lang } = useLangContext()\r\n  const { dispatch } = useAuthContext()\r\n  const theme = useColorScheme()\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const color = Colors[theme].text;\r\n  const [search, setSearch] = useState(false)\r\n  const { data:keywords = []} = useKeywords()\r\n  const resetKeyword = useResetKeyowrd()\r\n  return <View>\r\n    <View style={commonStyles.card}>\r\n      <ConfigSections/>\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Search Settings')}/>\r\n      <View style={{flexDirection:'row'}}>\r\n        <TextButton\r\n          title={\"Search History\"}\r\n          textStyle={{\r\n            fontSize: 16,\r\n            color,\r\n            textDecorationLine: search ? 'underline' : 'none',\r\n          }}\r\n          style={{ borderRadius: 20 }}\r\n          onPress={() => setSearch(!search)}\r\n        />\r\n        {search && keywords.length &&<TextButton\r\n          title={\"Clear\"}\r\n          textStyle={{\r\n            fontSize: 16,\r\n            color,\r\n          }}\r\n          style={{ borderRadius: 20 }}\r\n          onPress={() => resetKeyword.mutate()}\r\n        />}\r\n      </View>\r\n      {search && <View style={[commonStyles.card, {padding:0}]}>\r\n        <SearchList filteredPages={keywords} handlePagePress={(title, section)=>navigation.push('NotePage', { title, section })}/>\r\n      </View>}\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Archive')} onPress={()=>navigation.push('Archive', {})}/>\r\n    </View>\r\n    <View style={commonStyles.card}>\r\n      <CommonConfigButton title={lang('* Logout')} onPress={()=>dispatch({type:\"LOGOUT_REQUEST\"})}/>\r\n    </View>\r\n  </View>\r\n}\r\n\r\nconst ConfigTabView = ()=>{\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  return <ScrollView style={{flex:1}} contentContainerStyle={[commonStyles.container, {backgroundColor:Colors[theme].background}]}>\r\n    <ConfigCommonView/>\r\n  </ScrollView>\r\n}\r\n\r\nexport default function HomeScreen({navigation, route}: StackScreenProps<any, 'Home'>) {\r\n  const { lang } = useLangContext()\r\n  const theme = useColorScheme()\r\n  const commonStyles = createCommonStyles(theme);\r\n  const title = lang('Blacktokki Notebook')\r\n  const tabViews:TabViewOption[] = [\r\n    {title: lang('Discovery'), component:NotesTabView, icon:<List.Icon icon={'compass'}/>, headerRight:()=><></>},\r\n    {title: lang('All Notes'), component:RecentChangesTabView, icon:<List.Icon icon={'notebook'}/>, headerRight:()=><></>},\r\n    {title: lang('Config'), component:ConfigTabView, icon:<List.Icon icon={'dots-horizontal'}/>, headerRight:()=><></>}\r\n  ]\r\n  \r\n  return <HomeSection tabViews={tabViews} homeView={{title, headerRight:() => <SearchBar/>}} headerTitle={title}>\r\n    <View style={[commonStyles.container, {width:'100%', justifyContent:'space-between'}]}>\r\n      <ConfigCommonView/>\r\n      <ContractFooter buttons={[\r\n        {icon:<AntDesign name=\"github\" size={24} color={Colors[theme].iconColor}/>, url:'https://github.com/blacktokki/blacktokki-notebook', isWeb:true},\r\n        {icon:<AntDesign name=\"mail\" size={24} color={Colors[theme].iconColor}/>, url:'mailto:ydh051541@naver.com', isWeb:false}\r\n      ]}/>\r\n    </View>\r\n  </HomeSection>\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useCreateOrUpdatePage, useMovePage, useNotePage } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\n\r\ntype MovePageScreenRouteProp = RouteProp<NavigationParamList, 'MovePage'>;\r\n\r\n\r\nexport const MovePageScreen: React.FC = () => {\r\n  const route = useRoute<MovePageScreenRouteProp>();\r\n  const { title, section } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext()\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { data: page, isLoading } = useNotePage(title);\r\n  const paragraph = parseHtmlToSections(page?.description|| '')\r\n  const path = paragraph.find(v=>v.title === section)?.path || ''\r\n  const { data: newPage } = useNotePage(newTitle);\r\n  const newParagraph = parseHtmlToSections(newPage?.description || '').filter(v=>title!==newTitle || path===v.path || !v.path.startsWith(path))\r\n  const [newPath,setNewPath] = useState('')\r\n  const [preview, setPreview] = useState<boolean>()\r\n  const commonStyles = createCommonStyles(theme);\r\n\r\n  const mutation = useCreateOrUpdatePage()\r\n  const moveMutation = useMovePage();\r\n  const {sourceDescription, targetDescription} = useMemo(()=>{\r\n    const moveParagraph = paragraph.filter(v=>v.path.startsWith(path))\r\n    const isSplit = newPage?.title === page?.title + '/' + moveParagraph[0]?.title\r\n    const moveDescription = moveParagraph.map((v, i)=>(isSplit && i===0 ? '':v.header) + v.description).join('');\r\n    const sourceParagraph = paragraph.filter(v=>!v.path.startsWith(path))\r\n    const sourceDescription = sourceParagraph.map(v=>v.header + v.description).join('')\r\n    const targetParagraph = page?.title === newPage?.title?sourceParagraph:newParagraph;\r\n    const targetIndex = targetParagraph.findLastIndex(v=>v.path.startsWith(newPath))\r\n    const targetDescription = newPage?.id === undefined?moveDescription:[\r\n      ...targetParagraph.slice(0, targetIndex+1).map(v=>v.header + v.description),\r\n      ...moveParagraph.map((v, i)=>((v.path===path && v.description==='' || isSplit && i === 0)?'':v.header) + v.description),\r\n      ...targetParagraph.slice(targetIndex+1).map(v=>v.header + v.description)].join('')\r\n      return {sourceDescription, targetDescription}\r\n  }, [paragraph, newParagraph, path, newPath])\r\n  \r\n  const handleMove = () => {\r\n    if (newPage?.id === undefined){\r\n      moveMutation.mutate(\r\n        { oldTitle: title, newTitle: newTitle.trim(), description:path===''?undefined:targetDescription },\r\n        {\r\n          onSuccess: (data) => {\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.newTitle } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      if (page?.title === newPage.title && path === newPath){\r\n        handleCancel()\r\n      }\r\n      mutation.mutate(\r\n        { title:newPage.title, description:targetDescription,  },\r\n        {\r\n          onSuccess: (data) => {\r\n            if (page?.title !== newPage.title){\r\n              mutation.mutate(\r\n                { title, description:sourceDescription }\r\n              )\r\n            }\r\n            navigation.navigate({ name: 'NotePage', params: { title: data.title } });\r\n          },\r\n          onError: (error:any) => {\r\n            Alert.alert('오류', error.message || '노트 이동 중 오류가 발생했습니다.');\r\n          }\r\n        },\r\n      )\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    navigation.canGoBack() ? navigation.goBack() : navigation.navigate('NotePage', { title });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isLoading && !page){\r\n      handleCancel()\r\n    }\r\n    page && setNewTitle(page.title + (section?`/${section}`:\"\"));\r\n  }, [page, isLoading])\r\n  useEffect(()=>{\r\n    if (!isLoading){\r\n      setNewPath(section?'':path)\r\n    }\r\n  }, [section, isLoading])\r\n  const paragraphItem = paragraph.find(v=>v.path===path)\r\n  const newParagraphItem = newParagraph.find(v=>v.path===newPath)\r\n  const moveDisabled = !newTitle.trim() || newParagraphItem === undefined\r\n  return (\r\n    <ScrollView style={commonStyles.container}>\r\n      <View style={commonStyles.card}>\r\n        <View style={{flexDirection:_window==='landscape'?'row':'column', zIndex:1}}>\r\n          <View style={{zIndex:1}}>\r\n            <Text style={commonStyles.text}>{section?\"현재 노트 제목 및 문단:\":\"현재 노트 제목:\"}</Text>\r\n            <Text style={[commonStyles.title, styles.columns]}>{titleFormat({title, section})}</Text>\r\n            <Text style={commonStyles.text}>새 노트 제목 및 문단:</Text>\r\n            <SearchBar handlePress={setNewTitle} useRandom={false}/>\r\n            <View style={styles.columns}>\r\n              <HeaderSelectBar path={newPath} onPress={(item)=>setNewPath(item.path)} root={newPage?.title || ''} data={newParagraph}/>\r\n            </View>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <Text style={commonStyles.text}> 미리보기:</Text>\r\n            <TouchableOpacity\r\n              style={[commonStyles.button, styles.moveButton, {flex:0, flexDirection:'row', alignItems:'center', paddingTop:24, paddingBottom:16}]} \r\n              onPress={()=>setPreview(!preview)}\r\n            >\r\n              <Text style={commonStyles.title}>{titleFormat({title, section:paragraphItem?.title})}</Text>\r\n              <Text style={[commonStyles.text, {marginBottom:8,  fontSize:14}]}>  ➜  </Text>\r\n              <Text style={commonStyles.title}>{titleFormat({title:newTitle, section:newParagraphItem?.title})}</Text>   \r\n            </TouchableOpacity>\r\n              {preview!==undefined && <View style={{display:preview?'flex':'none'}}>\r\n              <EditorViewer\r\n                  active\r\n                  value={targetDescription}\r\n                  theme={theme}\r\n                  onLink={(url)=>onLink(url, navigation)}\r\n                  autoResize\r\n                />\r\n              </View>}\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, styles.cancelButton]} \r\n            onPress={handleCancel}\r\n          >\r\n            <Text style={commonStyles.buttonText}>취소</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[commonStyles.button, moveDisabled?styles.cancelButton:styles.moveButton]} \r\n            onPress={handleMove}\r\n            disabled={moveDisabled}\r\n          >\r\n            <Text style={commonStyles.buttonText}>이동</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  columns: { \r\n    marginTop: 8, \r\n    marginBottom: 16 \r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n    backgroundColor: '#95A5A6',\r\n  },\r\n  moveButton: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { RouteProp, useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePage, useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { EditorViewer } from '@blacktokki/editor';\r\nimport { onLink, SearchBar, titleFormat } from '../../components/SearchBar';\r\nimport HeaderSelectBar, { NodeData, parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { useIsFocused } from '@react-navigation/native';\r\n\r\ntype NotePageScreenRouteProp = RouteProp<NavigationParamList, 'NotePage'>;\r\n\r\nexport const sectionDescription = (paragraph:NodeData[], section:string, rootTitle:boolean) => {\r\n  const path = paragraph.find(v=>v.title===section)?.path\r\n  return path?paragraph.filter(v=>v.path.startsWith(path)).map(v=>((rootTitle || v.path!==path)?v.header:\"\") + v.description).join(\"\"):\"\"\r\n}\r\n\r\nexport const getSplitTitle = (title:string) => {\r\n  const splitTitle = title.split(\"/\")\r\n  if (splitTitle.length<2) {\r\n    return [title]\r\n  }\r\n  return [splitTitle.slice(0, splitTitle.length -1).join(\"/\"), splitTitle[splitTitle.length -1]]\r\n}\r\n\r\nexport const NotePageScreen: React.FC = () => {\r\n  const isFocused = useIsFocused();\r\n  const route = useRoute<NotePageScreenRouteProp>();\r\n  const { title, section, archiveId } = route.params;\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const theme = useColorScheme();\r\n  const _window = useResizeContext();\r\n  const commonStyles = createCommonStyles(theme);\r\n  const [toc, toggleToc] = useState(false)\r\n  const [fullSection, toggleFullSection] = useState(false)\r\n  \r\n\r\n  const { data: page, isFetching } = useNotePage(title);\r\n  const { data:archives } = useSnapshotPages()\r\n  const archive = archiveId?archives?.find(v=>v.id===archiveId &&v.description !== page?.description):undefined\r\n\r\n  const handleEdit = () => {\r\n    navigation.navigate('EditPage', { title });\r\n  };\r\n  \r\n  const handleMovePage = () => {\r\n    navigation.navigate('MovePage', { title, section });\r\n  };\r\n\r\n  const paragraph = parseHtmlToSections(page?.description||'');\r\n  const idx = paragraph.findIndex(v=>v.title===section)\r\n  const moveSections = [\r\n    {icon: 'arrow-left', moveSection: paragraph.findLast((v, i)=>i < idx && (fullSection?paragraph[idx]?.level >= v.level:true)), reverse:false},\r\n    {icon: 'arrow-right', moveSection: paragraph.find((v, i)=>i > idx && (fullSection?paragraph[idx]?.level >= v.level:true)), reverse:true}\r\n  ]\r\n  const [description, setDescription] = useState<string>()\r\n  useEffect(()=>{\r\n    setDescription(archive?archive.description:(section?(fullSection?sectionDescription(paragraph, section, true):paragraph.find(v=>v.title===section)?.description):page?.description)?.trim())\r\n  }, [page, archive, section, fullSection])\r\n  useEffect(()=>{\r\n    toggleToc(false)\r\n  }, [route])\r\n  const splitTitle = getSplitTitle(title)\r\n  const iconColor = theme === 'dark' ? '#E4E4E4' : '#333333'\r\n  const pressableTextColor = theme === 'dark' ? '#FFFFFF88' : '#00000088'\r\n  return isFocused && (<>\r\n    {_window === 'portrait' && <SearchBar/>}\r\n    <ScrollView \r\n      //@ts-ignore\r\n      style={[commonStyles.container, {paddingRight:12, scrollbarGutter: 'stable'}]}\r\n      contentContainerStyle={{flexGrow:1}}\r\n    >\r\n      <View style={commonStyles.header}>\r\n        <View style={{flexDirection:'row'}}>\r\n          <TouchableOpacity onPress={()=>(splitTitle.length === 2?navigation.push:navigation.navigate)('NotePage', { title:splitTitle[0] })} >\r\n            <Text style={[commonStyles.title, styles.pageTitle, section || splitTitle.length === 2 ? {color: pressableTextColor}: {}]} numberOfLines={1}>{splitTitle[0]}</Text>\r\n          </TouchableOpacity>\r\n           {splitTitle.length === 2 && <>\r\n            <Text style={[commonStyles.title, styles.pageTitle, {flex:0}]}>/</Text>\r\n            <TouchableOpacity onPress={()=>navigation.navigate('NotePage', { title })}> \r\n              <Text style={[commonStyles.title, styles.pageTitle, section?{color: pressableTextColor}:{}]} numberOfLines={1}>{splitTitle[1]}</Text>\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!section && <Text style={[commonStyles.title, styles.pageTitle, {marginLeft:5}]} numberOfLines={1}>{titleFormat({title:\"\", section})}</Text>}\r\n          {archive && <Text style={[commonStyles.text, {marginLeft:5, fontStyle:'italic'}]}>{\"(\" + archive.updated + \")\"}</Text>}\r\n        </View>\r\n        <View style={styles.actionButtons}>\r\n          {!section && <>\r\n            <TouchableOpacity onPress={()=>navigation.navigate('Archive', { title })} style={styles.actionButton}>\r\n              <Icon name=\"history\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!section && <>\r\n            <TouchableOpacity onPress={()=>toggleFullSection(!fullSection)} style={styles.actionButton}>\r\n              <Icon name={fullSection?\"compress\":\"expand\"} size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!(section || description) && !archive && <>\r\n            <TouchableOpacity onPress={()=>toggleToc(!toc)} style={styles.actionButton}>\r\n              <Icon name=\"list\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={handleMovePage} style={styles.actionButton}>\r\n              <Icon name=\"exchange\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n          </>}\r\n          {!!(section || description) && !archive && !section && <>\r\n            <TouchableOpacity onPress={handleEdit} style={styles.actionButton}>\r\n              <Icon name=\"pencil\" size={16} color={iconColor} />\r\n            </TouchableOpacity>\r\n          </>}\r\n        </View>\r\n      </View>\r\n      <View style={commonStyles.flex}>\r\n          <View style={!toc && description?[commonStyles.card, {padding:0, marginBottom:0}]:{flex:1, position:'absolute'}}>\r\n            <EditorViewer\r\n              active\r\n              value={description || ''}\r\n              theme={theme}\r\n              onLink={(url)=>onLink(url, navigation)}\r\n              autoResize\r\n            />\r\n          </View>\r\n          {(isFetching || description===undefined) ? <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n            <ActivityIndicator size=\"large\" color=\"#3498DB\" />\r\n          </View>\r\n          :toc? <HeaderSelectBar data={paragraph} path={section || ''} root={title} onPress={(item)=>navigation.navigate('NotePage', {title, section:item.title})}/>\r\n          :page?.description ? (!!section && <View style={{flex:1, flexDirection:'row', justifyContent:'space-between', alignItems:'flex-end'}}>\r\n            {moveSections.map(({moveSection, icon, reverse})=>moveSection!==undefined && <TouchableOpacity \r\n                key={icon} \r\n                onPress={()=>navigation.navigate('NotePage', moveSection.level===0?{title}:{title, section:moveSection.title})} \r\n                style={[{flexDirection: reverse?'row-reverse':'row', paddingVertical:16}]}\r\n            >\r\n              <Icon name={icon} size={16} color={iconColor} style={{alignSelf:'center'}} />\r\n              <Text style={[commonStyles.text, {fontWeight:'bold', marginHorizontal:16}]}>{moveSection.level===0?title:moveSection.title}</Text>\r\n            </TouchableOpacity>)}\r\n            \r\n          </View>) : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                아직 내용이 없는 문서입니다. \r\n                '편집' 버튼을 눌러 내용을 추가해보세요.\r\n              </Text>\r\n              <TouchableOpacity onPress={handleEdit} style={commonStyles.button}>\r\n                <Text style={commonStyles.buttonText}>편집하기</Text>\r\n              </TouchableOpacity>\r\n            </View>)}\r\n      </View>\r\n    </ScrollView>\r\n  </>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  pageTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport { createCommonStyles } from '../../styles';\r\nimport { useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { SearchBar, titleFormat } from '../../components/SearchBar';\r\n\r\nexport const NoteListSection = ({contents, isLoading, onPress, emptyMessage}:{contents:{title:string, section?:string, subtitle?:string, id?:number}[], isLoading:boolean, onPress:(title:string, section?:string, id?:number)=>void, emptyMessage:string}) => {\r\n    const theme = useColorScheme();\r\n    const commonStyles = createCommonStyles(theme);\r\n    const window = useResizeContext();\r\n    return (<>\r\n        {window === 'portrait' && <SearchBar/>}\r\n        <View style={commonStyles.container}>      \r\n          {isLoading ? (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>로딩 중...</Text>\r\n            </View>\r\n          ) : contents.length > 0 ? (\r\n            <FlatList\r\n              data={contents}\r\n              keyExtractor={(item) => JSON.stringify([item.title, item.section, item.id])}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={commonStyles.card}\r\n                  onPress={() => onPress(item.title, item.section, item.id)}\r\n                >\r\n                  <Text style={commonStyles.title}>{titleFormat(item)}</Text>\r\n                  {item.subtitle!==undefined && <Text style={commonStyles.smallText}>\r\n                    {item.subtitle}\r\n                  </Text>}\r\n                </TouchableOpacity>\r\n              )}\r\n              ItemSeparatorComponent={() => <View style={{ height: 8 }} />}\r\n            />\r\n          ) : (\r\n            <View style={[commonStyles.card, commonStyles.centerContent]}>\r\n              <Text style={commonStyles.text}>\r\n                {emptyMessage}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </>);\r\n}","import React from 'react';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\r\nimport { useSnapshotPages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { NavigationParamList } from '../../types';\r\nimport { updatedFormat } from './RecentPageSection';\r\n\r\ntype ArchiveScreenRouteProp = RouteProp<NavigationParamList, 'Archive'>;\r\n\r\nexport const ArchiveScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const route = useRoute<ArchiveScreenRouteProp>()\r\n  const { title } = route.params\r\n  const { data: recentPages = [], isLoading } = useSnapshotPages();\r\n  return <NoteListSection \r\n    contents={recentPages.filter(v=>title===undefined || title===v.title).sort((a, b)=>new Date(b.updated).getTime() - new Date(a.updated).getTime()).map(v=>({...v, subtitle:`최근 수정: ${updatedFormat(v.updated as string)}`}))} \r\n    isLoading={isLoading}\r\n    onPress={(title, _, id)=>(title===undefined?navigation.push:navigation.navigate)('NotePage', { title, archiveId:id })}\r\n    emptyMessage='최근 수정한 노트가 없습니다.'/>\r\n};\r\n","// import HomeScreen from \"./main/home/HomeScreen\";\r\n\r\nimport { EditPageScreen } from \"./main/EditPageScreen\";\r\nimport HomeScreen from \"./main/home/HomeScreen\";\r\nimport { MovePageScreen } from \"./main/MovePageScreen\";\r\nimport { RecentPagesScreen } from \"./main/RecentPageScreen\";\r\nimport { NotePageScreen } from \"./main/NotePageScreen\";\r\nimport { EmptyPagesScreen } from \"./main/EmptyPageScreen\";\r\nimport { EmptyContentsScreen } from \"./main/EmptyContentScreen\";\r\nimport { ArchiveScreen } from \"./main/ArchiveScreen\";\r\n\r\nexport const main = {\r\n    Home:{\r\n      title:'Blacktokki Notebook',\r\n      component:HomeScreen,\r\n      path:'home',\r\n    },\r\n    NotePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:NotePageScreen,\r\n      path:'page',\r\n    },\r\n    EditPage:{\r\n      title:'Blacktokki Notebook',\r\n      component:EditPageScreen,\r\n      path:'edit',\r\n    },\r\n    MovePage:{\r\n      title:'Blacktokki Notebook',\r\n      component:MovePageScreen,\r\n      path:'move',\r\n    },\r\n    RecentPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:RecentPagesScreen,\r\n      path:'recent',\r\n    },\r\n    EmptyPages:{\r\n      title:'Blacktokki Notebook',\r\n      component:EmptyPagesScreen,\r\n      path:'need',\r\n    },\r\n    EmptyContents:{\r\n      title:'Blacktokki Notebook',\r\n      component:EmptyContentsScreen,\r\n      path:'empty',\r\n    },\r\n    Archive:{\r\n      title:'Blacktokki Notebook',\r\n      component:ArchiveScreen,\r\n      path:'archive',\r\n    },\r\n  };\r\n  ","import React from 'react';\r\nimport { RecentPagesSection } from './RecentPageSection';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useResizeContext } from '@blacktokki/core';\r\n\r\nexport const RecentPagesScreen: React.FC = () => {\r\n  const window  = useResizeContext()\r\n  return <>\r\n    {window === 'portrait' && <SearchBar/>}\r\n    <RecentPagesSection/>\r\n  </>\r\n};\r\n","import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { getNoteLinks } from '../../components/SearchBar';\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { getSplitTitle } from './NotePageScreen';\r\n\r\nexport const EmptyPagesScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const unknownData = getNoteLinks(pages).filter((v)=>{\r\n    const page = pages.find(v2=>v2.title===v.title)\r\n    if (page?.description){\r\n      if (v.section === undefined || parseHtmlToSections(page.description).find(v2=>v2.title === v.section)){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }).map(v=>({...v, subtitle:(v.section===undefined?'Unknown note link':'Unknown section link') + `(${v.origin})`}))\r\n  const emptyParentData = pages.map(v=>{\r\n    const splitTitle = getSplitTitle(v.title)\r\n    if (v.description && splitTitle.length === 2 && pages.find(v=>v.title===splitTitle[0]) === undefined){\r\n      return { title:splitTitle[0], subtitle: `Empty parent note(${v.title})`}\r\n    }\r\n    return undefined\r\n  }).filter(v=>v!==undefined)\r\n  return <NoteListSection\r\n    contents={[...unknownData, ...emptyParentData]}\r\n    onPress={(title)=>navigation.push('EditPage', { title })}\r\n    isLoading={isLoading}\r\n    emptyMessage='작성이 필요한 노트가 없습니다.'/>\r\n};\r\n","import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { NavigationParamList } from '../../types';\r\nimport { useNotePages } from '../../hooks/useNoteStorage';\r\nimport { NoteListSection } from './NoteListSection';\r\nimport { parseHtmlToSections } from '../../components/HeaderSelectBar';\r\nimport { sectionDescription } from './NotePageScreen';\r\n\r\nfunction findEmptyLists(html: string): string[] {\r\n  const regex = /<(ol|ul)\\b[^>]*>([\\s\\n\\r]*)<\\/\\1>/gi;\r\n  const matches: string[] = [];\r\n  let match;\r\n\r\n  while ((match = regex.exec(html)) !== null) {\r\n    matches.push(match[0]); // 전체 태그를 반환\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\nexport const EmptyContentsScreen: React.FC = () => {\r\n  const navigation = useNavigation<StackNavigationProp<NavigationParamList>>();\r\n  const { data: pages = [], isLoading } = useNotePages();\r\n  const data = pages.flatMap(v=>{\r\n    const paragraph = parseHtmlToSections(v.description || '')\r\n    const emptyParagraph = paragraph.filter(v2=>v2.level!==0 && sectionDescription(paragraph, v2.title, false).trim() === \"\")\r\n    const emptyList = paragraph.filter(v2=>findEmptyLists(v2.description).length > 0)\r\n    return [\r\n      ...emptyParagraph.map(v2=>({title:v.title, section:v2.level===0?undefined:v2.title, subtitle:'Empty section'})),\r\n      ...emptyList.map(v2=>({title:v.title, section:v2.level===0?undefined:v2.title, subtitle:'Empty list'}))\r\n    ]\r\n  })\r\n  return <NoteListSection \r\n    contents={data}\r\n    onPress={(title)=>navigation.push('EditPage', { title })}\r\n    isLoading={isLoading}\r\n    emptyMessage='작성이 필요한 내용이 없습니다.'/>\r\n};\r\n","import React from 'react';\r\nimport ContentGroupSection, { EmptyContentButton, EmptyPageButton } from '../screens/main/home/ContentGroupSection';\r\nimport { Platform, ScrollView } from 'react-native';\r\nimport { List } from 'react-native-paper';\r\nimport { useLangContext, View } from '@blacktokki/core';\r\nimport { push } from '@blacktokki/navigation';\r\n\r\nexport default ()=>{\r\n    const {lang} = useLangContext()\r\n    return <View style={{flex:1}}>\r\n        <List.Item left={_props=><List.Icon {..._props} icon={\"home\"} />} title={lang(\"Home\")} onPress={()=>push('Home')} />\r\n        <EmptyPageButton/>\r\n        <EmptyContentButton/>\r\n        <ScrollView style={Platform.OS==='web'?{scrollbarWidth: 'thin'} as any:{}}>\r\n            <List.Subheader style={{}} selectable={false}>{lang(\"Open Pages\")}</List.Subheader>\r\n            <ContentGroupSection type={'LAST'} />\r\n            <ContentGroupSection type={'PAGE'} />\r\n            <List.Subheader style={{flex:1}} selectable={false}>{lang(\"Recent Changes\")}</List.Subheader>{/* 최근 변경 */}\r\n            <ContentGroupSection type={'NOTE'} noteCount={10}/>\r\n        </ScrollView>\r\n    </View>\r\n}","import React, { Suspense } from 'react';\r\n// import * as Linking from 'expo-linking';\r\nimport { login, Navigation, NavigationConfig } from \"@blacktokki/navigation\"\r\nimport { main } from '../screens';\r\nimport Drawer from './Drawer';\r\nimport { Colors, useColorScheme, useResizeContext } from '@blacktokki/core';\r\nimport { List, MD2DarkTheme, MD2LightTheme, PaperProvider } from 'react-native-paper';\r\nimport { SearchBar } from '../components/SearchBar';\r\n\r\nconst HeaderRight = ()=>{\r\n    const windowType = useResizeContext();\r\n    return windowType==='landscape'?<SearchBar/>:undefined\r\n}\r\n\r\nconst getConfig = async (theme:'light'|'dark') => {\r\n    const Linking = await import('expo-linking')\r\n    return {\r\n        main,\r\n        login,\r\n        prefixes: [ Linking.makeUrl('/') ],\r\n        rootPath: 'blacktokki-notebook',\r\n        documentTitle: {\r\n            formatter: ()=>{\r\n                return 'blacktokki-notebook'\r\n            }\r\n        },\r\n        rootScreen: {\r\n            main: 'Home',\r\n            login: 'LoginScreen'\r\n        },\r\n        headerLeftIcon: <List.Icon icon='backburger' style={{left:-18, top: -14}} />,\r\n        headerRight: <HeaderRight/>,\r\n        modals: [],\r\n        drawer: <Drawer/>\r\n    } as NavigationConfig\r\n}\r\n\r\nexport default () => {\r\n    const scheme = useColorScheme()\r\n    const preTheme = scheme == 'dark' ? MD2DarkTheme : MD2LightTheme;\r\n    const theme:typeof preTheme = {...preTheme, colors:{...preTheme.colors, primary:Colors[scheme].text} }\r\n    const NavigationLazy = React.lazy(()=>getConfig(scheme).then(config=> ({\"default\":()=><Navigation config={config}/>})))\r\n    return <PaperProvider theme={theme}>\r\n            <Suspense fallback={<></>}>\r\n                <NavigationLazy/>\r\n            </Suspense>\r\n    </PaperProvider>\r\n}"],"names":["axios","axiosCreate","getContentList","_ref","_asyncToGenerator","id","get","data","_ref2","parentId","types","parentIdParam","undefined","typeParam","join","value","_x2","_x3","apply","arguments","postContent","_ref3","post","_x4","patchContent","_ref5","_ref4","updated","patch","ids","_x5","previewUrl","_ref6","delete","_ref7","preview","query","_x7","lastPage","PAGE_STORAGE_KEY","RECENT_PAGES_KEY","getContents","type","_x","saveNoteContents","contents","content","find","v","savedId","then","snapshot","_objectSpread","jsonValue","JSON","stringify","AsyncStorage","setItem","e","console","error","getRecentPages","getItem","parse","saveRecentPages","titles","useNotePages","useQuery","queryKey","queryFn","_queryFn","useSnapshotPages","_queryFn2","useNotePage","title","queryClient","useQueryClient","_useNotePages","_useNotePages$data","isFetching","_queryFn3","page","c","invalidateQueries","description","enabled","useLastPage","_useNotePages3","_useNotePages3$data","_queryFn5","useCreateOrUpdatePage","auth","useAuthContext","_useNotePages4$data","useMutation","mutationFn","_mutationFn","updatedContents","map","i","_auth$user","newPage","input","userId","user","order","option","concat","_toConsumableArray","onSuccess","_onSuccess","_x6","useDeleteRecentPage","_mutationFn4","updatedRecentPages","filter","_title","_x9","createCommonStyles","theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","paddingVertical","card","borderRadius","padding","marginBottom","borderWidth","borderColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color","text","lineHeight","button","alignItems","marginVertical","buttonText","searchButton","justifyContent","marginHorizontal","resultSeparator","separator","smallText","header","flexDirection","row","centerContent","parseHtmlToSections","html","doc","DOMParser","parseFromString","result","path","level","headings","headerStack","current","cursor","body","firstChild","flushCurrent","push","nodeType","Node","ELEMENT_NODE","el","includes","tagName","_el$textContent","parseInt","substring","textContent","trim","length","pop","h","outerHTML","TEXT_NODE","nextSibling","HeaderSelectBar","props","useColorScheme","commonStyles","_jsx","View","style","styles","resultsContainer","darkResults","lightResults","children","FlatList","keyExtractor","item","renderItem","_jsxs","TouchableOpacity","resultItem","onPress","Icon","name","size","Text","marginTop","resultText","left","root","ItemSeparatorComponent","backButton","buttonContainer","KEYWORDS_KEY","getKeywords","saveKeywords","keywords","useKeywords","_searchText","urlToNoteLink","url","newLocation","URL","location","origin","params","URLSearchParams","search","section","onLink","navigation","noteLink","window","open","getNoteLinks","pages","flatMap","links","querySelectorAll","Array","from","a","_a$textContent","href","extractHtmlLinksWithQuery","v2","getFilteredPages","searchText","lowerCaseSearch","toLowerCase","noteLinks","startsWith","RandomButton","useNavigation","randomPages","Math","floor","random","sections","titleFormat","SearchList","filteredPages","handlePagePress","addKeyword","pagePressHandlers","useCallback","PanResponder","onPanResponderStart","panHandlers","SearchBar","handlePress","_ref3$useRandom","useRandom","_useState","useState","_useState2","_slicedToArray","setSearchText","_useState3","_useState4","showResults","setShowResults","inputRef","useRef","_useKeywords$data","keyword","newKeywords","Set","useAddKeyowrd","_useNotePages2$data","slice","handleSearch","mutate","searchHandlers","useMemo","useEffect","useFocusEffect","searchContainer","TextInput","ref","searchInput","onChangeText","placeholder","placeholderTextColor","onSubmitEditing","onFocus","onBlur","disabled","position","maxWidth","zIndex","top","right","maxHeight","cancelButton","marginRight","saveButton","marginLeft","EmptyPageButton","lang","useLangContext","List","_props","icon","EmptyContentButton","toRecentContents","sort","b","Date","getTime","notes","_useNotePages2","_queryFn4","useRecentPages","tabRef","React","addRecentPage","_mutationFn3","direct","recentPages","_x8","useAddRecentPage","deleteRecentPage","lastPageExists","useResizeContext","itemPadding","noteOnPress","clearTimeout","setTimeout","navigate","noteOnLongPress","_pages$data","onLongPress","titleStyle","fontStyle","_Fragment","noteCount","_pages$data2","TouchableRipple","margin","updatedOffset","getTimezoneOffset","updatedFormat","_updated","_date","setMinutes","getMinutes","toISOString","date","removeAttributesRecursively","element","attributes","attr","setAttribute","removeAttribute","child","removeAllAttributesFromHTML","innerHTML","_cardPadding","isLandscape","_cardMaxWidth","CardPage","index","cardMaxWidth","fSize","mounted","setMounted","timer","flexBasis","paddingRight","minWidth","Card","paddingTop","aspectRatio","sqrt","overflow","Content","RenderHtml","source","renderersProps","tagsStyles","contentWidth","opacity","textAlign","RecentPagesSection","isLoading","ScrollView","contentContainerStyle","alignSelf","flexWrap","NotesTabView","Colors","background","selectable","ContentGroupSection","RecentChangesTabView","CommonConfigButton","ConfigCommonView","dispatch","setSearch","resetKeyword","_mutationFn2","_onSuccess2","useResetKeyowrd","ConfigSections","TextButton","textStyle","textDecorationLine","ConfigTabView","columns","moveButton","sectionDescription","paragraph","rootTitle","_paragraph$find","getSplitTitle","splitTitle","split","pageTitle","actionButtons","actionButton","NoteListSection","emptyMessage","subtitle","main","Home","component","route","tabViews","headerRight","HomeSection","homeView","headerTitle","ContractFooter","buttons","AntDesign","iconColor","isWeb","NotePage","isFocused","useIsFocused","useRoute","_route$params","archiveId","_window","toc","toggleToc","fullSection","toggleFullSection","_useNotePage","archives","archive","handleEdit","idx","findIndex","moveSections","moveSection","findLast","_paragraph$idx","reverse","_paragraph$idx2","_useState5","_useState6","setDescription","_paragraph$find2","pressableTextColor","scrollbarGutter","flexGrow","numberOfLines","EditorViewer","active","autoResize","ActivityIndicator","EditPage","setContent","mutation","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","Editor","setValue","autoComplete","trigger","getMatchedChars","_getMatchedChars","pattern","childrenPages","encodeURI","_getMatchedChars2","protocol","canGoBack","goBack","onError","Alert","alert","message","MovePage","newTitle","setNewTitle","newParagraph","newPath","setNewPath","setPreview","moveMutation","_useNotePages5$data","oldTitle","Error","some","useMovePage","_useMemo","_moveParagraph$","moveParagraph","isSplit","moveDescription","sourceParagraph","sourceDescription","targetParagraph","targetIndex","findLastIndex","targetDescription","handleCancel","paragraphItem","newParagraphItem","moveDisabled","paddingBottom","display","RecentPages","EmptyPages","unknownData","emptyParentData","EmptyContents","emptyParagraph","emptyList","match","regex","matches","exec","findEmptyLists","Archive","_useSnapshotPages","_useSnapshotPages$dat","_","Platform","OS","scrollbarWidth","HeaderRight","getConfig","Linking","login","prefixes","makeUrl","rootPath","documentTitle","formatter","rootScreen","headerLeftIcon","modals","drawer","Drawer","scheme","preTheme","MD2DarkTheme","MD2LightTheme","colors","primary","NavigationLazy","config","Navigation","PaperProvider","Suspense","fallback"],"sourceRoot":""}